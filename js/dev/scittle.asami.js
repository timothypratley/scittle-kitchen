(function(){
'use strict';
var cljs$cst$2364$from = new $APP.cljs.core.Symbol(null, "from", "from", -839142725, null), cljs$cst$2540$output_schema46003 = new $APP.cljs.core.Symbol(null, "output-schema46003", "output-schema46003", -245002208, null), cljs$cst$2323$EPVPattern = new $APP.cljs.core.Symbol(null, "EPVPattern", "EPVPattern", 1993407940, null), cljs$cst$2311$rpatterns = new $APP.cljs.core.Symbol(null, "rpatterns", "rpatterns", 788598861, null), cljs$cst$2557$output_schema46012 = new $APP.cljs.core.Symbol(null, "output-schema46012", 
"output-schema46012", 1240655225, null), cljs$cst$2527$output_schema46023 = new $APP.cljs.core.Symbol(null, "output-schema46023", "output-schema46023", -1295016265, null), cljs$cst$2514$output_schema46017 = new $APP.cljs.core.Symbol(null, "output-schema46017", "output-schema46017", 121894540, null), cljs$cst$2548$output_schema46031 = new $APP.cljs.core.Symbol(null, "output-schema46031", "output-schema46031", -891984951, null), cljs$cst$2544$output_schema46042 = new $APP.cljs.core.Symbol(null, "output-schema46042", 
"output-schema46042", -1101742044, null), cljs$cst$2395$Bindings = new $APP.cljs.core.Symbol(null, "Bindings", "Bindings", -1147893592, null), cljs$cst$2337$op_patterns = new $APP.cljs.core.Keyword(null, "op-patterns", "op-patterns", -512545349), cljs$cst$2541$input_schema46004 = new $APP.cljs.core.Symbol(null, "input-schema46004", "input-schema46004", -815571533, null), cljs$cst$2588$asami_DOT_core_SLASH_as_of = new $APP.cljs.core.Symbol("asami.core", "as-of", "asami.core/as-of", -1228353509, null), 
cljs$cst$2581$asami_DOT_core_SLASH_connect = new $APP.cljs.core.Symbol("asami.core", "connect", "asami.core/connect", -443274510, null), cljs$cst$2208$NOT = new $APP.cljs.core.Symbol(null, "NOT", "NOT", -48713814, null), cljs$cst$2363$Value = new $APP.cljs.core.Symbol(null, "Value", "Value", 2029092958, null), cljs$cst$2597$subgraph_entities = new $APP.cljs.core.Symbol(null, "subgraph-entities", "subgraph-entities", 1402041798, null), cljs$cst$2246$osp = new $APP.cljs.core.Symbol(null, "osp", "osp", 
983951402, null), cljs$cst$2534$since_t = new $APP.cljs.core.Symbol(null, "since-t", "since-t", -921150505, null), cljs$cst$2436$a_SLASH_rest = new $APP.cljs.core.Keyword("a", "rest", "a/rest", -1241696768), cljs$cst$2482$node_ref = new $APP.cljs.core.Symbol(null, "node-ref", "node-ref", 1117330748, null), cljs$cst$2302$s_SLASH_Num = new $APP.cljs.core.Symbol("s", "Num", "s/Num", -2044935073, null), cljs$cst$2593$subgraph_from_node = new $APP.cljs.core.Symbol(null, "subgraph-from-node", "subgraph-from-node", 
737475513, null), cljs$cst$2402$defaults = new $APP.cljs.core.Keyword(null, "defaults", "defaults", 976027214), cljs$cst$2265$class_QMARK_ = new $APP.cljs.core.Symbol(null, "class?", "class?", 2026366098, null), cljs$cst$2279$re_groups = new $APP.cljs.core.Symbol(null, "re-groups", "re-groups", -470918463, null), cljs$cst$2290$aset_long = new $APP.cljs.core.Symbol(null, "aset-long", "aset-long", 525099269, null), cljs$cst$2562$asami_DOT_core_SLASH_shutdown = new $APP.cljs.core.Symbol("asami.core", 
"shutdown", "asami.core/shutdown", 884858715, null), cljs$cst$2473$overflow = new $APP.cljs.core.Keyword(null, "overflow", "overflow", 2058931880), cljs$cst$2205$schema_DOT_core_SLASH_Any = new $APP.cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), cljs$cst$2579$asami_DOT_core_SLASH_now = new $APP.cljs.core.Symbol("asami.core", "now", "asami.core/now", -1314305718, null), cljs$cst$2261$clojure_version = new $APP.cljs.core.Symbol(null, "clojure-version", "clojure-version", 
-210044835, null), cljs$cst$2234$tconj = new $APP.cljs.core.Keyword(null, "tconj", "tconj", -1905001560), cljs$cst$2288$xml_seq = new $APP.cljs.core.Symbol(null, "xml-seq", "xml-seq", -161920261, null), cljs$cst$2394$leftb = new $APP.cljs.core.Symbol(null, "leftb", "leftb", -180763897, null), cljs$cst$2520$input_schema46062 = new $APP.cljs.core.Symbol(null, "input-schema46062", "input-schema46062", 1294448560, null), cljs$cst$2555$as_of = new $APP.cljs.core.Symbol(null, "as-of", "as-of", -201430855, 
null), cljs$cst$2448$ident = new $APP.cljs.core.Symbol(null, "ident", "ident", 1639789181, null), cljs$cst$2604$asami_DOT_analytics_SLASH_subgraphs = new $APP.cljs.core.Symbol("asami.analytics", "subgraphs", "asami.analytics/subgraphs", -1253013302, null), cljs$cst$2558$input_schema46013 = new $APP.cljs.core.Symbol(null, "input-schema46013", "input-schema46013", -1495286578, null), cljs$cst$2515$input_schema46018 = new $APP.cljs.core.Symbol(null, "input-schema46018", "input-schema46018", -496265788, 
null), cljs$cst$2528$input_schema46024 = new $APP.cljs.core.Symbol(null, "input-schema46024", "input-schema46024", -1676623093, null), cljs$cst$2550$input_schema46035 = new $APP.cljs.core.Symbol(null, "input-schema46035", "input-schema46035", -943853223, null), cljs$cst$2549$input_schema46032 = new $APP.cljs.core.Symbol(null, "input-schema46032", "input-schema46032", 1844367942, null), cljs$cst$2545$input_schema46043 = new $APP.cljs.core.Symbol(null, "input-schema46043", "input-schema46043", 470779796, 
null), cljs$cst$2299$cols = new $APP.cljs.core.Keyword(null, "cols", "cols", -1914801295), cljs$cst$2446$nested_QMARK_ = new $APP.cljs.core.Symbol(null, "nested?", "nested?", -1471690151, null), cljs$cst$2301$CountablePattern = new $APP.cljs.core.Symbol(null, "CountablePattern", "CountablePattern", 1488251790, null), cljs$cst$2537$now = new $APP.cljs.core.Symbol(null, "now", "now", -9994004, null), cljs$cst$2289$inst_ms_STAR_ = new $APP.cljs.core.Symbol(null, "inst-ms*", "inst-ms*", -1185945939, 
null), cljs$cst$2602$output_schema43606 = new $APP.cljs.core.Symbol(null, "output-schema43606", "output-schema43606", -768065277, null), cljs$cst$2487$gr_SLASH_GraphType = new $APP.cljs.core.Symbol("gr", "GraphType", "gr/GraphType", 1334424053, null), cljs$cst$2599$input_schema43590 = new $APP.cljs.core.Symbol(null, "input-schema43590", "input-schema43590", 650654074, null), cljs$cst$2536$as_of_time = new $APP.cljs.core.Symbol(null, "as-of-time", "as-of-time", 1396655253, null), cljs$cst$2392$left_join = 
new $APP.cljs.core.Keyword(null, "left-join", "left-join", -672831855), cljs$cst$2495$asami_DOT_core = new $APP.cljs.core.Symbol(null, "asami.core", "asami.core", -55734845, null), cljs$cst$2320$not_patterns = new $APP.cljs.core.Symbol(null, "not-patterns", "not-patterns", 1427996814, null), cljs$cst$2595$input_schema43576 = new $APP.cljs.core.Symbol(null, "input-schema43576", "input-schema43576", -650883860, null), cljs$cst$2219$GraphType = new $APP.cljs.core.Symbol(null, "GraphType", "GraphType", 
1334412574, null), cljs$cst$2305$to_bind = new $APP.cljs.core.Keyword(null, "to-bind", "to-bind", -2098264054), cljs$cst$2601$subgraphs = new $APP.cljs.core.Symbol(null, "subgraphs", "subgraphs", 2041879911, null), cljs$cst$2210$arg0 = new $APP.cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), cljs$cst$2328$arg1 = new $APP.cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), cljs$cst$2390$arg2 = new $APP.cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), cljs$cst$2405$arg3 = 
new $APP.cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), cljs$cst$2414$arg5 = new $APP.cljs.core.Symbol(null, "arg5", "arg5", -8262688, null), cljs$cst$2333$filter_patterns = new $APP.cljs.core.Keyword(null, "filter-patterns", "filter-patterns", -1388353466), cljs$cst$2419$partial_results = new $APP.cljs.core.Symbol(null, "partial-results", "partial-results", -2130477387, null), cljs$cst$2481$entities = new $APP.cljs.core.Symbol(null, "entities", "entities", -713468366, null), cljs$cst$2292$slurp = 
new $APP.cljs.core.Symbol(null, "slurp", "slurp", -1365985214, null), cljs$cst$2583$asami_DOT_core_SLASH_transact_async = new $APP.cljs.core.Symbol("asami.core", "transact-async", "asami.core/transact-async", 2076206856, null), cljs$cst$2477$EntityMap = new $APP.cljs.core.Symbol(null, "EntityMap", "EntityMap", 933011750, null), cljs$cst$2489$tmp1 = new $APP.cljs.core.Keyword(null, "tmp1", "tmp1", -1882695569), cljs$cst$2490$tmp2 = new $APP.cljs.core.Keyword(null, "tmp2", "tmp2", -2025697019), cljs$cst$2572$asami_DOT_core_SLASH_show_plan = 
new $APP.cljs.core.Symbol("asami.core", "show-plan", "asami.core/show-plan", -598092131, null), cljs$cst$2204$s_SLASH_Any = new $APP.cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), cljs$cst$2209$OPTIONAL = new $APP.cljs.core.Symbol(null, "OPTIONAL", "OPTIONAL", 718887176, null), cljs$cst$2421$outer_queries = new $APP.cljs.core.Keyword(null, "outer-queries", "outer-queries", -863323579), cljs$cst$2360$withs = new $APP.cljs.core.Symbol(null, "withs", "withs", 86966390, null), cljs$cst$2269$bytes_QMARK_ = 
new $APP.cljs.core.Symbol(null, "bytes?", "bytes?", -1745721485, null), cljs$cst$2404$planner = new $APP.cljs.core.Keyword(null, "planner", "planner", 2074736700), cljs$cst$2525$export_str = new $APP.cljs.core.Symbol(null, "export-str", "export-str", 832439643, null), cljs$cst$2440$a_SLASH_empty_list = new $APP.cljs.core.Keyword("a", "empty-list", "a/empty-list", -1865195864), cljs$cst$2504$input_limit = new $APP.cljs.core.Keyword(null, "input-limit", "input-limit", -828263559), cljs$cst$2391$filter_var = 
new $APP.cljs.core.Keyword(null, "filter-var", "filter-var", -1168905784), cljs$cst$2260$mix_collection_hash = new $APP.cljs.core.Symbol(null, "mix-collection-hash", "mix-collection-hash", 1960468083, null), cljs$cst$2183$a_SLASH_n = new $APP.cljs.core.Symbol("a", "n", "a/n", -2092305711, null), cljs$cst$2257$create_struct = new $APP.cljs.core.Symbol(null, "create-struct", "create-struct", 176069310, null), cljs$cst$2503$update_fn = new $APP.cljs.core.Keyword(null, "update-fn", "update-fn", 711087313), 
cljs$cst$2267$enumeration_seq = new $APP.cljs.core.Symbol(null, "enumeration-seq", "enumeration-seq", 90695106, null), cljs$cst$2186$tick = new $APP.cljs.core.Symbol(null, "tick", "tick", 804644551, null), cljs$cst$2306$prebound = new $APP.cljs.core.Symbol(null, "prebound", "prebound", 739261602, null), cljs$cst$2524$long_time = new $APP.cljs.core.Symbol(null, "long-time", "long-time", -794211402, null), cljs$cst$2463$DatabaseType = new $APP.cljs.core.Symbol(null, "DatabaseType", "DatabaseType", 
945284159, null), cljs$cst$2519$output_schema46061 = new $APP.cljs.core.Symbol(null, "output-schema46061", "output-schema46061", 1787001246, null), cljs$cst$2439$a_SLASH_type = new $APP.cljs.core.Keyword("a", "type", "a/type", 1174270189), cljs$cst$2603$input_schema43607 = new $APP.cljs.core.Symbol(null, "input-schema43607", "input-schema43607", 441612866, null), cljs$cst$2512$release = new $APP.cljs.core.Symbol(null, "release", "release", 106160146, null), cljs$cst$2458$connection = new $APP.cljs.core.Symbol(null, 
"connection", "connection", 1516932227, null), cljs$cst$2386$var_index = new $APP.cljs.core.Symbol(null, "var-index", "var-index", 569877430, null), cljs$cst$2377$a_SLASH_entity = new $APP.cljs.core.Keyword("a", "entity", "a/entity", -450970435), cljs$cst$2502$executor = new $APP.cljs.core.Keyword(null, "executor", "executor", 1197215162), cljs$cst$2554$input_schema45991 = new $APP.cljs.core.Symbol(null, "input-schema45991", "input-schema45991", 652854064, null), cljs$cst$2284$reader_conditional_QMARK_ = 
new $APP.cljs.core.Symbol(null, "reader-conditional?", "reader-conditional?", -620110987, null), cljs$cst$2317$general_patterns = new $APP.cljs.core.Symbol(null, "general-patterns", "general-patterns", 700116747, null), cljs$cst$2287$aset_short = new $APP.cljs.core.Symbol(null, "aset-short", "aset-short", 325953743, null), cljs$cst$2470$Triple = new $APP.cljs.core.Symbol(null, "Triple", "Triple", 1804984392, null), cljs$cst$2359$FindElement = new $APP.cljs.core.Symbol(null, "FindElement", "FindElement", 
462442976, null), cljs$cst$2198$_lastIndexOf = new $APP.cljs.core.Symbol(null, "-lastIndexOf", "-lastIndexOf", 802973950, null), cljs$cst$2241$tconj = new $APP.cljs.core.Symbol(null, "tconj", "tconj", -264470033, null), cljs$cst$2336$opt_patterns = new $APP.cljs.core.Keyword(null, "opt-patterns", "opt-patterns", -131902501), cljs$cst$2316$planned_patterns = new $APP.cljs.core.Symbol(null, "planned-patterns", "planned-patterns", -23645134, null), cljs$cst$2565$asami_DOT_core_SLASH_export_str = new $APP.cljs.core.Symbol("asami.core", 
"export-str", "asami.core/export-str", -189989447, null), cljs$cst$2298$valfn = new $APP.cljs.core.Symbol(null, "valfn", "valfn", -260159948, null), cljs$cst$2207$OR = new $APP.cljs.core.Symbol(null, "OR", "OR", 419915603, null), cljs$cst$2387$VarIndex = new $APP.cljs.core.Symbol(null, "VarIndex", "VarIndex", 842720906, null), cljs$cst$2358$selection = new $APP.cljs.core.Symbol(null, "selection", "selection", -1678437118, null), cljs$cst$2319$opt_patterns = new $APP.cljs.core.Symbol(null, "opt-patterns", 
"opt-patterns", 1508629026, null), cljs$cst$2468$UpdateData = new $APP.cljs.core.Symbol(null, "UpdateData", "UpdateData", 665546032, null), cljs$cst$2353$aggregate_vars = new $APP.cljs.core.Symbol(null, "aggregate-vars", "aggregate-vars", -156534120, null), cljs$cst$2351$s_SLASH_Bool = new $APP.cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), cljs$cst$2573$asami_DOT_core_SLASH_as_of_t = new $APP.cljs.core.Symbol("asami.core", "as-of-t", "asami.core/as-of-t", 1700072354, null), cljs$cst$2443$asami_DOT_entities_DOT_reader_SLASH_null = 
new $APP.cljs.core.Keyword("asami.entities.reader", "null", "asami.entities.reader/null", -345135870), cljs$cst$2312$binding_outs = new $APP.cljs.core.Symbol(null, "binding-outs", "binding-outs", -1713965235, null), cljs$cst$2533$import_data = new $APP.cljs.core.Symbol(null, "import-data", "import-data", -1541998821, null), cljs$cst$2423$empty_graph = new $APP.cljs.core.Symbol(null, "empty-graph", "empty-graph", -1761460918, null), cljs$cst$2220$_QMARK_s = new $APP.cljs.core.Symbol(null, "?s", "?s", 
456183954, null), cljs$cst$2510$_QMARK_t = new $APP.cljs.core.Symbol(null, "?t", "?t", 1786819229, null), cljs$cst$2222$_QMARK_o = new $APP.cljs.core.Symbol(null, "?o", "?o", -1814741084, null), cljs$cst$2245$_QMARK_v = new $APP.cljs.core.Symbol(null, "?v", "?v", -464183118, null), cljs$cst$2518$transact = new $APP.cljs.core.Symbol(null, "transact", "transact", 1372532857, null), cljs$cst$2566$asami_DOT_core_SLASH_Graphable = new $APP.cljs.core.Symbol("asami.core", "Graphable", "asami.core/Graphable", 
-942086156, null), cljs$cst$2256$bases = new $APP.cljs.core.Symbol(null, "bases", "bases", 603639107, null), cljs$cst$2460$s_SLASH_pred = new $APP.cljs.core.Symbol("s", "pred", "s/pred", -727014287, null), cljs$cst$2571$asami_DOT_core_SLASH_instant_QMARK_ = new $APP.cljs.core.Symbol("asami.core", "instant?", "asami.core/instant?", -1405340264, null), cljs$cst$2577$asami_DOT_core_SLASH_connections = new $APP.cljs.core.Symbol("asami.core", "connections", "asami.core/connections", 588457966, null), 
cljs$cst$2335$not_patterns = new $APP.cljs.core.Keyword(null, "not-patterns", "not-patterns", -212534713), cljs$cst$2578$asami_DOT_core_SLASH_as_of_time = new $APP.cljs.core.Symbol("asami.core", "as-of-time", "asami.core/as-of-time", -1797255881, null), cljs$cst$2368$Results = new $APP.cljs.core.Symbol(null, "Results", "Results", 288011815, null), cljs$cst$2252$iterator_seq = new $APP.cljs.core.Symbol(null, "iterator-seq", "iterator-seq", -1247626335, null), cljs$cst$2563$asami_DOT_core_SLASH_q = 
new $APP.cljs.core.Symbol("asami.core", "q", "asami.core/q", 1236209738, null), cljs$cst$2459$ConnectionType = new $APP.cljs.core.Symbol(null, "ConnectionType", "ConnectionType", 1230370840, null), cljs$cst$2369$pattern__GT_data = new $APP.cljs.core.Symbol(null, "pattern-\x3edata", "pattern-\x3edata", 1800380085, null), cljs$cst$2238$a_SLASH_contains = new $APP.cljs.core.Keyword("a", "contains", "a/contains", 676899907), cljs$cst$2426$_QMARK_entity = new $APP.cljs.core.Symbol(null, "?entity", "?entity", 
1390979834, null), cljs$cst$2556$delete_database = new $APP.cljs.core.Symbol(null, "delete-database", "delete-database", -1092767134, null), cljs$cst$2582$asami_DOT_core_SLASH_db = new $APP.cljs.core.Symbol("asami.core", "db", "asami.core/db", 1540219884, null), cljs$cst$2232$osp = new $APP.cljs.core.Keyword(null, "osp", "osp", -656580125), cljs$cst$2190$new_node = new $APP.cljs.core.Keyword(null, "new-node", "new-node", 1473396757), cljs$cst$2551$export_data = new $APP.cljs.core.Symbol(null, "export-data", 
"export-data", -1944522894, null), cljs$cst$2590$asami_DOT_analytics = new $APP.cljs.core.Symbol(null, "asami.analytics", "asami.analytics", 303061085, null), cljs$cst$2272$char_name_string = new $APP.cljs.core.Symbol(null, "char-name-string", "char-name-string", 705265105, null), cljs$cst$2462$database = new $APP.cljs.core.Symbol(null, "database", "database", -805348194, null), cljs$cst$2213$Pattern = new $APP.cljs.core.Symbol(null, "Pattern", "Pattern", 1866904892, null), cljs$cst$2522$shutdown = 
new $APP.cljs.core.Symbol(null, "shutdown", "shutdown", -236033851, null), cljs$cst$2516$raw_arglists = new $APP.cljs.core.Keyword(null, "raw-arglists", "raw-arglists", -1511012109), cljs$cst$2476$entity_ref = new $APP.cljs.core.Symbol(null, "entity-ref", "entity-ref", 1605871450, null), cljs$cst$2505$tx_info = new $APP.cljs.core.Symbol(null, "tx-info", "tx-info", 1715103042, null), cljs$cst$2399$InSpec = new $APP.cljs.core.Symbol(null, "InSpec", "InSpec", -1688995082, null), cljs$cst$2355$constraint = 
new $APP.cljs.core.Symbol(null, "constraint", "constraint", -929288345, null), cljs$cst$2373$Axiom = new $APP.cljs.core.Symbol(null, "Axiom", "Axiom", -1037566523, null), cljs$cst$2501$tx_triples = new $APP.cljs.core.Keyword(null, "tx-triples", "tx-triples", 1123039780), cljs$cst$2444$prop_vals = new $APP.cljs.core.Symbol(null, "prop-vals", "prop-vals", 549904867, null), cljs$cst$2531$as_of_t = new $APP.cljs.core.Symbol(null, "as-of-t", "as-of-t", 679625476, null), cljs$cst$2254$default_data_readers = 
new $APP.cljs.core.Symbol(null, "default-data-readers", "default-data-readers", 1738676398, null), cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema = new $APP.cljs.core.Symbol("schema.core", "-\x3eFnSchema", "schema.core/-\x3eFnSchema", 1369357569, null), cljs$cst$2461$instant_QMARK_ = new $APP.cljs.core.Symbol(null, "instant?", "instant?", -378700550, null), cljs$cst$2396$rightb = new $APP.cljs.core.Symbol(null, "rightb", "rightb", 2106629409, null), cljs$cst$2276$supers = new $APP.cljs.core.Symbol(null, 
"supers", "supers", -327459524, null), cljs$cst$2249$decimal_QMARK_ = new $APP.cljs.core.Symbol(null, "decimal?", "decimal?", 687666240, null), cljs$cst$2371$resolve_pattern_fn = new $APP.cljs.core.Symbol(null, "resolve-pattern-fn", "resolve-pattern-fn", -108854750, null), cljs$cst$2425$plan_QMARK_ = new $APP.cljs.core.Symbol(null, "plan?", "plan?", -1410092408, null), cljs$cst$2560$asami_DOT_core_SLASH_transact = new $APP.cljs.core.Symbol("asami.core", "transact", "asami.core/transact", -1829140005, 
null), cljs$cst$2497$Graphable = new $APP.cljs.core.Symbol(null, "Graphable", "Graphable", -1964429482, null), cljs$cst$2442$s_SLASH_one = new $APP.cljs.core.Symbol("s", "one", "s/one", -1719427222, null), cljs$cst$2185$lru = new $APP.cljs.core.Symbol(null, "lru", "lru", -315566379, null), cljs$cst$2543$transact_async = new $APP.cljs.core.Symbol(null, "transact-async", "transact-async", 647224494, null), cljs$cst$2535$connections = new $APP.cljs.core.Symbol(null, "connections", "connections", -423559360, 
null), cljs$cst$2592$asami_DOT_analytics_SLASH_entity_node_QMARK_ = new $APP.cljs.core.Symbol("asami.analytics", "entity-node?", "asami.analytics/entity-node?", -176313920, null), cljs$cst$2511$scittle_DOT_asami_SLASH_asami = new $APP.cljs.core.Keyword("scittle.asami", "asami", "scittle.asami/asami", 599967370), cljs$cst$2314$bound = new $APP.cljs.core.Keyword(null, "bound", "bound", 587617170), cljs$cst$2237$a_SLASH_first = new $APP.cljs.core.Keyword("a", "first", "a/first", -644103141), cljs$cst$2413$project_fn = 
new $APP.cljs.core.Symbol(null, "project-fn", "project-fn", -1755926837, null), cljs$cst$2307$s_SLASH_maybe = new $APP.cljs.core.Symbol("s", "maybe", "s/maybe", 1326133944, null), cljs$cst$2466$adjunct = new $APP.cljs.core.Keyword(null, "adjunct", "adjunct", 1627696494), cljs$cst$2596$asami_DOT_analytics_SLASH_subgraph_from_node = new $APP.cljs.core.Symbol("asami.analytics", "subgraph-from-node", "asami.analytics/subgraph-from-node", -154604090, null), cljs$cst$2327$single = new $APP.cljs.core.Keyword(null, 
"single", "single", 1551466437), cljs$cst$2552$create_database = new $APP.cljs.core.Symbol(null, "create-database", "create-database", 2134140909, null), cljs$cst$2484$existing_ids = new $APP.cljs.core.Symbol(null, "existing-ids", "existing-ids", 1918437366, null), cljs$cst$2240$spot = new $APP.cljs.core.Symbol(null, "spot", "spot", -66430620, null), cljs$cst$2242$IndexStructure = new $APP.cljs.core.Symbol(null, "IndexStructure", "IndexStructure", 1248006462, null), cljs$cst$2474$vlist = new $APP.cljs.core.Symbol(null, 
"vlist", "vlist", -1980916976, null), cljs$cst$2435$KeyValue = new $APP.cljs.core.Symbol(null, "KeyValue", "KeyValue", 1218926608, null), cljs$cst$2506$TransactData = new $APP.cljs.core.Symbol(null, "TransactData", "TransactData", 1505524003, null), cljs$cst$2350$aggregating_QMARK_ = new $APP.cljs.core.Symbol(null, "aggregating?", "aggregating?", -553941163, null), cljs$cst$2472$generator_fn = new $APP.cljs.core.Symbol(null, "generator-fn", "generator-fn", -1842584113, null), cljs$cst$2291$char_escape_string = 
new $APP.cljs.core.Symbol(null, "char-escape-string", "char-escape-string", -914103624, null), cljs$cst$2332$epv_patterns = new $APP.cljs.core.Keyword(null, "epv-patterns", "epv-patterns", 1257997752), cljs$cst$2308$Var = new $APP.cljs.core.Symbol(null, "Var", "Var", -1833791616, null), cljs$cst$2407$plan = new $APP.cljs.core.Keyword(null, "plan", "plan", 1118952668), cljs$cst$2197$cljs_DOT_core_SLASH__lastIndexOf = new $APP.cljs.core.Symbol("cljs.core", "-lastIndexOf", "cljs.core/-lastIndexOf", 
1997720411, null), cljs$cst$2215$spo = new $APP.cljs.core.Keyword(null, "spo", "spo", 734923469), cljs$cst$2471$retracts = new $APP.cljs.core.Symbol(null, "retracts", "retracts", 248093114, null), cljs$cst$2428$_QMARK_value = new $APP.cljs.core.Symbol(null, "?value", "?value", 393627875, null), cljs$cst$2494$StringOrConnection = new $APP.cljs.core.Symbol(null, "StringOrConnection", "StringOrConnection", 1802431865, null), cljs$cst$2561$asami_DOT_core_SLASH_entity = new $APP.cljs.core.Symbol("asami.core", 
"entity", "asami.core/entity", -2144028155, null), cljs$cst$2397$duplicate_names = new $APP.cljs.core.Keyword(null, "duplicate-names", "duplicate-names", -1813700288), cljs$cst$2538$instant = new $APP.cljs.core.Symbol(null, "instant", "instant", -1998937395, null), cljs$cst$2547$schema_DOT_core_SLASH_make_fn_schema = new $APP.cljs.core.Symbol("schema.core", "make-fn-schema", "schema.core/make-fn-schema", 152735578, null), cljs$cst$2321$evs = new $APP.cljs.core.Symbol(null, "evs", "evs", 1698435343, 
null), cljs$cst$2586$asami_DOT_core_SLASH_graph = new $APP.cljs.core.Symbol("asami.core", "graph", "asami.core/graph", 1133802718, null), cljs$cst$2334$eval_patterns = new $APP.cljs.core.Keyword(null, "eval-patterns", "eval-patterns", -1447934460), cljs$cst$2526$get_database_names = new $APP.cljs.core.Symbol(null, "get-database-names", "get-database-names", -652540375, null), cljs$cst$2568$asami_DOT_core_SLASH_StringOrConnection = new $APP.cljs.core.Symbol("asami.core", "StringOrConnection", "asami.core/StringOrConnection", 
-1464064997, null), cljs$cst$2235$this = new $APP.cljs.core.Keyword(null, "this", "this", -611633625), cljs$cst$2251$bigdec = new $APP.cljs.core.Symbol(null, "bigdec", "bigdec", -1634991813, null), cljs$cst$2280$re_matcher = new $APP.cljs.core.Symbol(null, "re-matcher", "re-matcher", 825809454, null), cljs$cst$2331$prebounds = new $APP.cljs.core.Keyword(null, "prebounds", "prebounds", 2081244175), cljs$cst$2376$triples = new $APP.cljs.core.Symbol(null, "triples", "triples", 1272333426, null), cljs$cst$2243$next_stmt_id = 
new $APP.cljs.core.Keyword(null, "next-stmt-id", "next-stmt-id", 1562324607), cljs$cst$2450$graph = new $APP.cljs.core.Keyword(null, "graph", "graph", 1558099509), cljs$cst$2293$kw = new $APP.cljs.core.Symbol(null, "kw", "kw", -1496127594, null), cljs$cst$2294$s_SLASH_cond_pre = new $APP.cljs.core.Symbol("s", "cond-pre", "s/cond-pre", -923707600, null), cljs$cst$2322$bound_vars = new $APP.cljs.core.Symbol(null, "bound-vars", "bound-vars", 1684649184, null), cljs$cst$2398$nm = new $APP.cljs.core.Symbol(null, 
"nm", "nm", -188384525, null), cljs$cst$2231$s_SLASH_Int = new $APP.cljs.core.Symbol("s", "Int", "s/Int", -2116888657, null), cljs$cst$2491$tmp = new $APP.cljs.core.Keyword(null, "tmp", "tmp", -831915104), cljs$cst$2212$zuko_DOT_schema = new $APP.cljs.core.Symbol(null, "zuko.schema", "zuko.schema", 1172955596, null), cljs$cst$2365$to = new $APP.cljs.core.Symbol(null, "to", "to", 1832630534, null), cljs$cst$2546$as_connection = new $APP.cljs.core.Symbol(null, "as-connection", "as-connection", 1544432096, 
null), cljs$cst$2370$offset_map = new $APP.cljs.core.Symbol(null, "offset-map", "offset-map", 320412977, null), cljs$cst$2559$asami_DOT_core_SLASH_release = new $APP.cljs.core.Symbol("asami.core", "release", "asami.core/release", -878954128, null), cljs$cst$2575$asami_DOT_core_SLASH_import_data = new $APP.cljs.core.Symbol("asami.core", "import-data", "asami.core/import-data", 1640254585, null), cljs$cst$2366$full_pattern = new $APP.cljs.core.Symbol(null, "full-pattern", "full-pattern", -310045701, 
null), cljs$cst$2324$count_map = new $APP.cljs.core.Symbol(null, "count-map", "count-map", 1028760226, null), cljs$cst$2255$construct_proxy = new $APP.cljs.core.Symbol(null, "construct-proxy", "construct-proxy", -1970413714, null), cljs$cst$2427$_QMARK_attribute = new $APP.cljs.core.Symbol(null, "?attribute", "?attribute", -816404733, null), cljs$cst$2277$update_proxy = new $APP.cljs.core.Symbol(null, "update-proxy", "update-proxy", -1521869506, null), cljs$cst$2211$zuko_DOT_schema_SLASH_Pattern = 
new $APP.cljs.core.Symbol("zuko.schema", "Pattern", "zuko.schema/Pattern", 1181965772, null), cljs$cst$2266$find_keyword = new $APP.cljs.core.Symbol(null, "find-keyword", "find-keyword", -425321896, null), cljs$cst$2600$asami_DOT_analytics_SLASH_subgraph_entities = new $APP.cljs.core.Symbol("asami.analytics", "subgraph-entities", "asami.analytics/subgraph-entities", -1932702821, null), cljs$cst$2584$asami_DOT_core_SLASH_as_connection = new $APP.cljs.core.Symbol("asami.core", "as-connection", "asami.core/as-connection", 
-2126978814, null), cljs$cst$2236$other = new $APP.cljs.core.Keyword(null, "other", "other", 995793544), cljs$cst$2456$gr = new $APP.cljs.core.Symbol(null, "gr", "gr", 273026423, null), cljs$cst$2438$a_SLASH_list = new $APP.cljs.core.Keyword("a", "list", "a/list", 765357524), cljs$cst$2499$url = new $APP.cljs.core.Keyword(null, "url", "url", 276297046), cljs$cst$2281$biginteger = new $APP.cljs.core.Symbol(null, "biginteger", "biginteger", 1355108809, null), cljs$cst$2480$top_level_ids = new $APP.cljs.core.Symbol(null, 
"top-level-ids", "top-level-ids", 1005867312, null), cljs$cst$2591$entity_node_QMARK_ = new $APP.cljs.core.Symbol(null, "entity-node?", "entity-node?", -1202088339, null), cljs$cst$2286$deliver = new $APP.cljs.core.Symbol(null, "deliver", "deliver", -837191161, null), cljs$cst$2361$wide_pattern = new $APP.cljs.core.Symbol(null, "wide-pattern", "wide-pattern", -6276584, null), cljs$cst$2248$aset_byte = new $APP.cljs.core.Symbol(null, "aset-byte", "aset-byte", -1287786320, null), cljs$cst$2479$id_map = 
new $APP.cljs.core.Symbol(null, "id-map", "id-map", -1708902557, null), cljs$cst$2188$threshold = new $APP.cljs.core.Keyword(null, "threshold", "threshold", 204221583), cljs$cst$2467$updates_BANG_ = new $APP.cljs.core.Symbol(null, "updates!", "updates!", -593931180, null), cljs$cst$2420$aggregate = new $APP.cljs.core.Keyword(null, "aggregate", "aggregate", 1511468442), cljs$cst$2424$inputs = new $APP.cljs.core.Symbol(null, "inputs", "inputs", -1788631911, null), cljs$cst$2250$rational_QMARK_ = new $APP.cljs.core.Symbol(null, 
"rational?", "rational?", 1428906045, null), cljs$cst$2270$aset_float = new $APP.cljs.core.Symbol(null, "aset-float", "aset-float", 1574721992, null), cljs$cst$2362$mapping = new $APP.cljs.core.Symbol(null, "mapping", "mapping", 398126097, null), cljs$cst$2585$asami_DOT_core_SLASH_export_data = new $APP.cljs.core.Symbol("asami.core", "export-data", "asami.core/export-data", -825678640, null), cljs$cst$2352$needed_vars = new $APP.cljs.core.Symbol(null, "needed-vars", "needed-vars", 860795962, null), 
cljs$cst$2233$spot = new $APP.cljs.core.Keyword(null, "spot", "spot", -1706962147), cljs$cst$2532$check_attachment = new $APP.cljs.core.Symbol(null, "check-attachment", "check-attachment", 1686725055, null), cljs$cst$2330$PatternOrBindings = new $APP.cljs.core.Symbol(null, "PatternOrBindings", "PatternOrBindings", 1535726648, null), cljs$cst$2570$asami_DOT_core_SLASH_TransactData = new $APP.cljs.core.Symbol("asami.core", "TransactData", "asami.core/TransactData", -1769294131, null), cljs$cst$2253$vector_of = 
new $APP.cljs.core.Symbol(null, "vector-of", "vector-of", 1810079021, null), cljs$cst$2567$asami_DOT_core_SLASH_get_database_names = new $APP.cljs.core.Symbol("asami.core", "get-database-names", "asami.core/get-database-names", 508198539, null), cljs$cst$2553$output_schema45990 = new $APP.cljs.core.Symbol(null, "output-schema45990", "output-schema45990", -49040401, null), cljs$cst$2433$NodeType = new $APP.cljs.core.Symbol(null, "NodeType", "NodeType", 925485229, null), cljs$cst$2580$asami_DOT_core_SLASH_instant = 
new $APP.cljs.core.Symbol("asami.core", "instant", "asami.core/instant", -1247154769, null), cljs$cst$2313$patterns = new $APP.cljs.core.Keyword(null, "patterns", "patterns", 1164082024), cljs$cst$2264$aset_char = new $APP.cljs.core.Symbol(null, "aset-char", "aset-char", 1080431406, null), cljs$cst$2304$EvalPattern = new $APP.cljs.core.Symbol(null, "EvalPattern", "EvalPattern", -601086849, null), cljs$cst$2564$asami_DOT_core_SLASH_long_time = new $APP.cljs.core.Symbol("asami.core", "long-time", "asami.core/long-time", 
-308935856, null), cljs$cst$2449$_QMARK_eid = new $APP.cljs.core.Symbol(null, "?eid", "?eid", 1087837141, null), cljs$cst$2282$aset_boolean = new $APP.cljs.core.Symbol(null, "aset-boolean", "aset-boolean", 369929964, null), cljs$cst$2192$resolve_pattern = new $APP.cljs.core.Keyword(null, "resolve-pattern", "resolve-pattern", 453242502), cljs$cst$2239$spo = new $APP.cljs.core.Symbol(null, "spo", "spo", -1919512300, null), cljs$cst$2206$AND = new $APP.cljs.core.Symbol(null, "AND", "AND", -1135002129, 
null), cljs$cst$2445$entity_id = new $APP.cljs.core.Symbol(null, "entity-id", "entity-id", -1168537676, null), cljs$cst$2356$constraint = new $APP.cljs.core.Keyword(null, "constraint", "constraint", 1725147424), cljs$cst$2315$binding_outs = new $APP.cljs.core.Keyword(null, "binding-outs", "binding-outs", 940470534), cljs$cst$2354$VarOrWild = new $APP.cljs.core.Symbol(null, "VarOrWild", "VarOrWild", 1854916603, null), cljs$cst$2388$arg = new $APP.cljs.core.Symbol(null, "arg", "arg", -106730310, null), 
cljs$cst$2296$s_SLASH_Symbol = new $APP.cljs.core.Symbol("s", "Symbol", "s/Symbol", 716453298, null), cljs$cst$2412$s_SLASH_Str = new $APP.cljs.core.Symbol("s", "Str", "s/Str", 907974338, null), cljs$cst$2309$eval_patterns = new $APP.cljs.core.Symbol(null, "eval-patterns", "eval-patterns", 192597067, null), cljs$cst$2199$tx = new $APP.cljs.core.Keyword(null, "tx", "tx", 466630418), cljs$cst$2574$asami_DOT_core_SLASH_check_attachment = new $APP.cljs.core.Symbol("asami.core", "check-attachment", "asami.core/check-attachment", 
-1447548899, null), cljs$cst$2303$patterns = new $APP.cljs.core.Symbol(null, "patterns", "patterns", -1490353745, null), cljs$cst$2587$asami_DOT_core_SLASH_create_database = new $APP.cljs.core.Symbol("asami.core", "create-database", "asami.core/create-database", 939900751, null), cljs$cst$2529$since = new $APP.cljs.core.Symbol(null, "since", "since", 1955911369, null), cljs$cst$2469$asserts = new $APP.cljs.core.Symbol(null, "asserts", "asserts", 2000079831, null), cljs$cst$2326$zero = new $APP.cljs.core.Keyword(null, 
"zero", "zero", -858964576), cljs$cst$2576$asami_DOT_core_SLASH_since_t = new $APP.cljs.core.Symbol("asami.core", "since-t", "asami.core/since-t", -160756567, null), cljs$cst$2247$next_stmt_id = new $APP.cljs.core.Symbol(null, "next-stmt-id", "next-stmt-id", -1092111162, null), cljs$cst$2217$trans = new $APP.cljs.core.Keyword(null, "trans", "trans", -1318503851), cljs$cst$2422$inner_queries = new $APP.cljs.core.Keyword(null, "inner-queries", "inner-queries", 469079653), cljs$cst$2485$top_ids = new $APP.cljs.core.Symbol(null, 
"top-ids", "top-ids", -432301340, null), cljs$cst$2530$show_plan = new $APP.cljs.core.Symbol(null, "show-plan", "show-plan", -1626662541, null), cljs$cst$2594$output_schema43575 = new $APP.cljs.core.Symbol(null, "output-schema43575", "output-schema43575", -997605803, null), cljs$cst$2598$output_schema43589 = new $APP.cljs.core.Symbol(null, "output-schema43589", "output-schema43589", -374272792, null), cljs$cst$2273$aset_double = new $APP.cljs.core.Symbol(null, "aset-double", "aset-double", 2099338604, 
null), cljs$cst$2406$query_plan = new $APP.cljs.core.Keyword(null, "query-plan", "query-plan", 810969779), cljs$cst$2437$a_SLASH_nil = new $APP.cljs.core.Keyword("a", "nil", "a/nil", 99600344), cljs$cst$2259$aset_int = new $APP.cljs.core.Symbol(null, "aset-int", "aset-int", 228650419, null), cljs$cst$2569$asami_DOT_core_SLASH_since = new $APP.cljs.core.Symbol("asami.core", "since", "asami.core/since", 1237716823, null), cljs$cst$2228$Index = new $APP.cljs.core.Symbol(null, "Index", "Index", -1213609614, 
null), cljs$cst$2496$author = new $APP.cljs.core.Keyword(null, "author", "author", 2111686192), cljs$cst$2300$pattern_counts = new $APP.cljs.core.Symbol(null, "pattern-counts", "pattern-counts", -458072420, null), cljs$cst$2416$grouping_vars = new $APP.cljs.core.Symbol(null, "grouping-vars", "grouping-vars", -967388675, null), cljs$cst$2447$exclusions = new $APP.cljs.core.Symbol(null, "exclusions", "exclusions", -1555706766, null), cljs$cst$2295$s_SLASH_Keyword = new $APP.cljs.core.Symbol("s", "Keyword", 
"s/Keyword", -850066400, null), cljs$cst$2263$bit_clear = new $APP.cljs.core.Symbol(null, "bit-clear", "bit-clear", -1194520583, null), cljs$cst$2384$part = new $APP.cljs.core.Symbol(null, "part", "part", 1718289265, null), cljs$cst$2434$pairs = new $APP.cljs.core.Symbol(null, "pairs", "pairs", -2039825990, null), cljs$cst$2191$node_label = new $APP.cljs.core.Keyword(null, "node-label", "node-label", -531552919), cljs$cst$2430$a_SLASH_owns = new $APP.cljs.core.Keyword("a", "owns", "a/owns", -504429383), 
cljs$cst$2589$asami_DOT_core_SLASH_delete_database = new $APP.cljs.core.Symbol("asami.core", "delete-database", "asami.core/delete-database", 2081213124, null), cljs$cst$2214$_QMARK_ = new $APP.cljs.core.Keyword(null, "?", "?", -1703165233), cljs$cst$2275$reader_conditional = new $APP.cljs.core.Symbol(null, "reader-conditional", "reader-conditional", -2018031487, null), cljs$cst$2367$data_vars = new $APP.cljs.core.Symbol(null, "data-vars", "data-vars", 965393874, null), cljs$cst$2318$filter_patterns = 
new $APP.cljs.core.Symbol(null, "filter-patterns", "filter-patterns", 252178061, null), cljs$cst$2431$prop = new $APP.cljs.core.Symbol(null, "prop", "prop", 1125363195, null), cljs$cst$2216$Predicate = new $APP.cljs.core.Symbol(null, "Predicate", "Predicate", -1236885682, null);
var asami = {storage:{}};
asami.storage.Connection = function() {
};
var asami$storage$Connection$open_QMARK_$dyn_42523 = function($this$$$) {
  var $m__5372__auto__$jscomp$166_m__5374__auto__$$ = asami.storage.open_QMARK_[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$166_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$166_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$166_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$166_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$166_m__5374__auto__$$ = asami.storage.open_QMARK_._;
  if ($m__5372__auto__$jscomp$166_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$166_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$166_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$166_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Connection.open?", $this$$$);
};
asami.storage.open_QMARK_ = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$open_QMARK_$arity$1 != null ? $this$$$.asami$storage$Connection$open_QMARK_$arity$1($this$$$) : asami$storage$Connection$open_QMARK_$dyn_42523($this$$$);
};
var asami$storage$Connection$get_name$dyn_42524 = function($this$$$) {
  var $m__5372__auto__$jscomp$167_m__5374__auto__$$ = asami.storage.get_name[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$167_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$167_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$167_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$167_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$167_m__5374__auto__$$ = asami.storage.get_name._;
  if ($m__5372__auto__$jscomp$167_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$167_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$167_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$167_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Connection.get-name", $this$$$);
};
asami.storage.get_name = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$get_name$arity$1 != null ? $this$$$.asami$storage$Connection$get_name$arity$1($this$$$) : asami$storage$Connection$get_name$dyn_42524($this$$$);
};
var asami$storage$Connection$get_url$dyn_42525 = function($this$$$) {
  var $m__5372__auto__$jscomp$168_m__5374__auto__$$ = asami.storage.get_url[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$168_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$168_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$168_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$168_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$168_m__5374__auto__$$ = asami.storage.get_url._;
  if ($m__5372__auto__$jscomp$168_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$168_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$168_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$168_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Connection.get-url", $this$$$);
};
asami.storage.get_url = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$get_url$arity$1 != null ? $this$$$.asami$storage$Connection$get_url$arity$1($this$$$) : asami$storage$Connection$get_url$dyn_42525($this$$$);
};
var asami$storage$Connection$next_tx$dyn_42526 = function($this$$$) {
  var $m__5372__auto__$jscomp$169_m__5374__auto__$$ = asami.storage.next_tx[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$169_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$169_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$169_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$169_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$169_m__5374__auto__$$ = asami.storage.next_tx._;
  if ($m__5372__auto__$jscomp$169_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$169_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$169_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$169_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Connection.next-tx", $this$$$);
};
asami.storage.next_tx = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$next_tx$arity$1 != null ? $this$$$.asami$storage$Connection$next_tx$arity$1($this$$$) : asami$storage$Connection$next_tx$dyn_42526($this$$$);
};
var asami$storage$Connection$get_lock$dyn_42527 = function($this$$$) {
  var $m__5372__auto__$jscomp$170_m__5374__auto__$$ = asami.storage.get_lock[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$170_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$170_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$170_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$170_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$170_m__5374__auto__$$ = asami.storage.get_lock._;
  if ($m__5372__auto__$jscomp$170_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$170_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$170_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$170_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Connection.get-lock", $this$$$);
};
asami.storage.get_lock = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$get_lock$arity$1 != null ? $this$$$.asami$storage$Connection$get_lock$arity$1($this$$$) : asami$storage$Connection$get_lock$dyn_42527($this$$$);
};
var asami$storage$Connection$db$dyn_42528 = function($this$$$) {
  var $m__5372__auto__$jscomp$171_m__5374__auto__$$ = asami.storage.db[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$171_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$171_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$171_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$171_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$171_m__5374__auto__$$ = asami.storage.db._;
  if ($m__5372__auto__$jscomp$171_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$171_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$171_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$171_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Connection.db", $this$$$);
};
asami.storage.db = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$db$arity$1 != null ? $this$$$.asami$storage$Connection$db$arity$1($this$$$) : asami$storage$Connection$db$dyn_42528($this$$$);
};
var asami$storage$Connection$delete_database$dyn_42529 = function($this$$$) {
  var $m__5372__auto__$jscomp$172_m__5374__auto__$$ = asami.storage.delete_database[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$172_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$172_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$172_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$172_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$172_m__5374__auto__$$ = asami.storage.delete_database._;
  if ($m__5372__auto__$jscomp$172_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$172_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$172_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$172_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Connection.delete-database", $this$$$);
};
asami.storage.delete_database = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$delete_database$arity$1 != null ? $this$$$.asami$storage$Connection$delete_database$arity$1($this$$$) : asami$storage$Connection$delete_database$dyn_42529($this$$$);
};
var asami$storage$Connection$release$dyn_42530 = function($this$$$) {
  var $m__5372__auto__$jscomp$173_m__5374__auto__$$ = asami.storage.release[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$173_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$173_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$173_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$173_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$173_m__5374__auto__$$ = asami.storage.release._;
  if ($m__5372__auto__$jscomp$173_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$173_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$173_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$173_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Connection.release", $this$$$);
};
asami.storage.release = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$release$arity$1 != null ? $this$$$.asami$storage$Connection$release$arity$1($this$$$) : asami$storage$Connection$release$dyn_42530($this$$$);
};
var asami$storage$Connection$transact_update$dyn_42531 = function($this$$$, $update_fn$$) {
  var $m__5372__auto__$jscomp$174_m__5374__auto__$$ = asami.storage.transact_update[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$174_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$174_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$174_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $update_fn$$) : $m__5372__auto__$jscomp$174_m__5374__auto__$$.call(null, $this$$$, $update_fn$$);
  }
  $m__5372__auto__$jscomp$174_m__5374__auto__$$ = asami.storage.transact_update._;
  if ($m__5372__auto__$jscomp$174_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$174_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$174_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $update_fn$$) : $m__5372__auto__$jscomp$174_m__5374__auto__$$.call(null, $this$$$, $update_fn$$);
  }
  throw $APP.cljs.core.missing_protocol("Connection.transact-update", $this$$$);
};
asami.storage.transact_update = function($this$$$, $update_fn$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$transact_update$arity$2 != null ? $this$$$.asami$storage$Connection$transact_update$arity$2($this$$$, $update_fn$$) : asami$storage$Connection$transact_update$dyn_42531($this$$$, $update_fn$$);
};
var asami$storage$Connection$transact_data$dyn_42532 = function() {
  var $G__42533$$ = null, $G__42533__3$$ = function($this$$$, $updates_BANG_$$, $generator_fn$$) {
    var $m__5372__auto__$jscomp$175_m__5374__auto__$$ = asami.storage.transact_data[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
    if ($m__5372__auto__$jscomp$175_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$175_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$175_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($this$$$, $updates_BANG_$$, $generator_fn$$) : $m__5372__auto__$jscomp$175_m__5374__auto__$$.call(null, $this$$$, $updates_BANG_$$, $generator_fn$$);
    }
    $m__5372__auto__$jscomp$175_m__5374__auto__$$ = asami.storage.transact_data._;
    if ($m__5372__auto__$jscomp$175_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$175_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$175_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($this$$$, $updates_BANG_$$, $generator_fn$$) : $m__5372__auto__$jscomp$175_m__5374__auto__$$.call(null, $this$$$, $updates_BANG_$$, $generator_fn$$);
    }
    throw $APP.cljs.core.missing_protocol("Connection.transact-data", $this$$$);
  }, $G__42533__4$$ = function($this$$$, $updates_BANG_$$, $asserts$$, $retracts$$) {
    var $m__5372__auto__$jscomp$176_m__5374__auto__$$ = asami.storage.transact_data[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
    if ($m__5372__auto__$jscomp$176_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$176_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$176_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $updates_BANG_$$, $asserts$$, $retracts$$) : $m__5372__auto__$jscomp$176_m__5374__auto__$$.call(null, $this$$$, $updates_BANG_$$, $asserts$$, $retracts$$);
    }
    $m__5372__auto__$jscomp$176_m__5374__auto__$$ = asami.storage.transact_data._;
    if ($m__5372__auto__$jscomp$176_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$176_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$176_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $updates_BANG_$$, $asserts$$, $retracts$$) : $m__5372__auto__$jscomp$176_m__5374__auto__$$.call(null, $this$$$, $updates_BANG_$$, $asserts$$, $retracts$$);
    }
    throw $APP.cljs.core.missing_protocol("Connection.transact-data", $this$$$);
  };
  $G__42533$$ = function($this$$$, $updates_BANG_$$, $asserts$$, $retracts$$) {
    switch(arguments.length) {
      case 3:
        return $G__42533__3$$.call(this, $this$$$, $updates_BANG_$$, $asserts$$);
      case 4:
        return $G__42533__4$$.call(this, $this$$$, $updates_BANG_$$, $asserts$$, $retracts$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__42533$$.cljs$core$IFn$_invoke$arity$3 = $G__42533__3$$;
  $G__42533$$.cljs$core$IFn$_invoke$arity$4 = $G__42533__4$$;
  return $G__42533$$;
}();
asami.storage.transact_data = function($var_args$$) {
  switch(arguments.length) {
    case 4:
      return asami.storage.transact_data.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 3:
      return asami.storage.transact_data.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
asami.storage.transact_data.cljs$core$IFn$_invoke$arity$4 = function($this$$$, $updates_BANG_$$, $asserts$$, $retracts$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$transact_data$arity$4 != null ? $this$$$.asami$storage$Connection$transact_data$arity$4($this$$$, $updates_BANG_$$, $asserts$$, $retracts$$) : asami$storage$Connection$transact_data$dyn_42532($this$$$, $updates_BANG_$$, $asserts$$, $retracts$$);
};
asami.storage.transact_data.cljs$core$IFn$_invoke$arity$3 = function($this$$$, $updates_BANG_$$, $generator_fn$$) {
  return $this$$$ != null && $this$$$.asami$storage$Connection$transact_data$arity$3 != null ? $this$$$.asami$storage$Connection$transact_data$arity$3($this$$$, $updates_BANG_$$, $generator_fn$$) : asami$storage$Connection$transact_data$dyn_42532($this$$$, $updates_BANG_$$, $generator_fn$$);
};
asami.storage.transact_data.cljs$lang$maxFixedArity = 4;
asami.storage.Database = function() {
};
var asami$storage$Database$as_of$dyn_42535 = function($this$$$, $t$$) {
  var $m__5372__auto__$jscomp$177_m__5374__auto__$$ = asami.storage.as_of[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$177_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$177_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$177_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $t$$) : $m__5372__auto__$jscomp$177_m__5374__auto__$$.call(null, $this$$$, $t$$);
  }
  $m__5372__auto__$jscomp$177_m__5374__auto__$$ = asami.storage.as_of._;
  if ($m__5372__auto__$jscomp$177_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$177_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$177_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $t$$) : $m__5372__auto__$jscomp$177_m__5374__auto__$$.call(null, $this$$$, $t$$);
  }
  throw $APP.cljs.core.missing_protocol("Database.as-of", $this$$$);
};
asami.storage.as_of = function($this$$$, $t$$) {
  return $this$$$ != null && $this$$$.asami$storage$Database$as_of$arity$2 != null ? $this$$$.asami$storage$Database$as_of$arity$2($this$$$, $t$$) : asami$storage$Database$as_of$dyn_42535($this$$$, $t$$);
};
var asami$storage$Database$as_of_t$dyn_42536 = function($this$$$) {
  var $m__5372__auto__$jscomp$178_m__5374__auto__$$ = asami.storage.as_of_t[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$178_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$178_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$178_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$178_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$178_m__5374__auto__$$ = asami.storage.as_of_t._;
  if ($m__5372__auto__$jscomp$178_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$178_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$178_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$178_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Database.as-of-t", $this$$$);
};
asami.storage.as_of_t = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Database$as_of_t$arity$1 != null ? $this$$$.asami$storage$Database$as_of_t$arity$1($this$$$) : asami$storage$Database$as_of_t$dyn_42536($this$$$);
};
var asami$storage$Database$as_of_time$dyn_42537 = function($this$$$) {
  var $m__5372__auto__$jscomp$179_m__5374__auto__$$ = asami.storage.as_of_time[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$179_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$179_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$179_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$179_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$179_m__5374__auto__$$ = asami.storage.as_of_time._;
  if ($m__5372__auto__$jscomp$179_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$179_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$179_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$179_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Database.as-of-time", $this$$$);
};
asami.storage.as_of_time = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Database$as_of_time$arity$1 != null ? $this$$$.asami$storage$Database$as_of_time$arity$1($this$$$) : asami$storage$Database$as_of_time$dyn_42537($this$$$);
};
var asami$storage$Database$since$dyn_42538 = function($this$$$, $t$$) {
  var $m__5372__auto__$jscomp$180_m__5374__auto__$$ = asami.storage.since[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$180_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$180_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$180_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $t$$) : $m__5372__auto__$jscomp$180_m__5374__auto__$$.call(null, $this$$$, $t$$);
  }
  $m__5372__auto__$jscomp$180_m__5374__auto__$$ = asami.storage.since._;
  if ($m__5372__auto__$jscomp$180_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$180_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$180_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $t$$) : $m__5372__auto__$jscomp$180_m__5374__auto__$$.call(null, $this$$$, $t$$);
  }
  throw $APP.cljs.core.missing_protocol("Database.since", $this$$$);
};
asami.storage.since = function($this$$$, $t$$) {
  return $this$$$ != null && $this$$$.asami$storage$Database$since$arity$2 != null ? $this$$$.asami$storage$Database$since$arity$2($this$$$, $t$$) : asami$storage$Database$since$dyn_42538($this$$$, $t$$);
};
var asami$storage$Database$since_t$dyn_42539 = function($this$$$) {
  var $m__5372__auto__$jscomp$181_m__5374__auto__$$ = asami.storage.since_t[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$181_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$181_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$181_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$181_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$181_m__5374__auto__$$ = asami.storage.since_t._;
  if ($m__5372__auto__$jscomp$181_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$181_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$181_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$181_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Database.since-t", $this$$$);
};
asami.storage.since_t = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Database$since_t$arity$1 != null ? $this$$$.asami$storage$Database$since_t$arity$1($this$$$) : asami$storage$Database$since_t$dyn_42539($this$$$);
};
var asami$storage$Database$graph$dyn_42540 = function($this$$$) {
  var $m__5372__auto__$jscomp$182_m__5374__auto__$$ = asami.storage.graph[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$182_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$182_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$182_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$182_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$182_m__5374__auto__$$ = asami.storage.graph._;
  if ($m__5372__auto__$jscomp$182_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$182_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$182_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$182_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Database.graph", $this$$$);
};
asami.storage.graph = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$storage$Database$graph$arity$1 != null ? $this$$$.asami$storage$Database$graph$arity$1($this$$$) : asami$storage$Database$graph$dyn_42540($this$$$);
};
var asami$storage$Database$entity$dyn_42541 = function($this$$$, $id$$, $nested_QMARK_$$) {
  var $m__5372__auto__$jscomp$183_m__5374__auto__$$ = asami.storage.entity[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$183_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$183_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$183_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($this$$$, $id$$, $nested_QMARK_$$) : $m__5372__auto__$jscomp$183_m__5374__auto__$$.call(null, $this$$$, $id$$, $nested_QMARK_$$);
  }
  $m__5372__auto__$jscomp$183_m__5374__auto__$$ = asami.storage.entity._;
  if ($m__5372__auto__$jscomp$183_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$183_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$183_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($this$$$, $id$$, $nested_QMARK_$$) : $m__5372__auto__$jscomp$183_m__5374__auto__$$.call(null, $this$$$, $id$$, $nested_QMARK_$$);
  }
  throw $APP.cljs.core.missing_protocol("Database.entity", $this$$$);
};
asami.storage.entity = function($this$$$, $id$$, $nested_QMARK_$$) {
  return $this$$$ != null && $this$$$.asami$storage$Database$entity$arity$3 != null ? $this$$$.asami$storage$Database$entity$arity$3($this$$$, $id$$, $nested_QMARK_$$) : asami$storage$Database$entity$dyn_42541($this$$$, $id$$, $nested_QMARK_$$);
};
asami.storage.UpdateData = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(function($p1__42518_SHARP_$$) {
  return $p1__42518_SHARP_$$ instanceof $APP.cljs.core.Volatile && $APP.cljs.core.vector_QMARK_($APP.cljs.core.deref($p1__42518_SHARP_$$)) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $APP.cljs.core.count($APP.cljs.core.deref($p1__42518_SHARP_$$)));
});
asami.storage.DatabaseType = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(function($p1__42519_SHARP_$$) {
  return $p1__42519_SHARP_$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $p1__42519_SHARP_$$.asami$storage$Database$ ? !0 : $p1__42519_SHARP_$$.cljs$lang$protocol_mask$partition$ ? !1 : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Database, $p1__42519_SHARP_$$) : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Database, $p1__42519_SHARP_$$);
});
asami.storage.ConnectionType = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(function($p1__42521_SHARP_$$) {
  return $p1__42521_SHARP_$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $p1__42521_SHARP_$$.asami$storage$Connection$ ? !0 : $p1__42521_SHARP_$$.cljs$lang$protocol_mask$partition$ ? !1 : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Connection, $p1__42521_SHARP_$$) : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Connection, $p1__42521_SHARP_$$);
});
asami.graph = {};
asami.graph._STAR_default_tx_id_STAR_ = 0;
asami.graph.Graph = function() {
};
var asami$graph$Graph$new_graph$dyn_42594 = function($this$$$) {
  var $m__5372__auto__$jscomp$184_m__5374__auto__$$ = asami.graph.new_graph[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$184_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$184_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$184_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$184_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$184_m__5374__auto__$$ = asami.graph.new_graph._;
  if ($m__5372__auto__$jscomp$184_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$184_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$184_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$184_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("Graph.new-graph", $this$$$);
};
asami.graph.new_graph = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$graph$Graph$new_graph$arity$1 != null ? $this$$$.asami$graph$Graph$new_graph$arity$1($this$$$) : asami$graph$Graph$new_graph$dyn_42594($this$$$);
};
var asami$graph$Graph$graph_add$dyn_42595 = function() {
  var $G__42596$$ = null, $G__42596__4$$ = function($this$$$, $subj$$, $pred$$, $obj$$) {
    var $m__5372__auto__$jscomp$185_m__5374__auto__$$ = asami.graph.graph_add[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
    if ($m__5372__auto__$jscomp$185_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$185_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$185_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : $m__5372__auto__$jscomp$185_m__5374__auto__$$.call(null, $this$$$, $subj$$, $pred$$, $obj$$);
    }
    $m__5372__auto__$jscomp$185_m__5374__auto__$$ = asami.graph.graph_add._;
    if ($m__5372__auto__$jscomp$185_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$185_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$185_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : $m__5372__auto__$jscomp$185_m__5374__auto__$$.call(null, $this$$$, $subj$$, $pred$$, $obj$$);
    }
    throw $APP.cljs.core.missing_protocol("Graph.graph-add", $this$$$);
  }, $G__42596__5$$ = function($this$$$, $subj$$, $pred$$, $obj$$, $tx$$) {
    var $m__5372__auto__$jscomp$186_m__5374__auto__$$ = asami.graph.graph_add[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
    if ($m__5372__auto__$jscomp$186_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$186_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$5 ? $m__5372__auto__$jscomp$186_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$5($this$$$, $subj$$, $pred$$, $obj$$, $tx$$) : $m__5372__auto__$jscomp$186_m__5374__auto__$$.call(null, $this$$$, $subj$$, $pred$$, $obj$$, $tx$$);
    }
    $m__5372__auto__$jscomp$186_m__5374__auto__$$ = asami.graph.graph_add._;
    if ($m__5372__auto__$jscomp$186_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$186_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$5 ? $m__5372__auto__$jscomp$186_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$5($this$$$, $subj$$, $pred$$, $obj$$, $tx$$) : $m__5372__auto__$jscomp$186_m__5374__auto__$$.call(null, $this$$$, $subj$$, $pred$$, $obj$$, $tx$$);
    }
    throw $APP.cljs.core.missing_protocol("Graph.graph-add", $this$$$);
  };
  $G__42596$$ = function($this$$$, $subj$$, $pred$$, $obj$$, $tx$$) {
    switch(arguments.length) {
      case 4:
        return $G__42596__4$$.call(this, $this$$$, $subj$$, $pred$$, $obj$$);
      case 5:
        return $G__42596__5$$.call(this, $this$$$, $subj$$, $pred$$, $obj$$, $tx$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__42596$$.cljs$core$IFn$_invoke$arity$4 = $G__42596__4$$;
  $G__42596$$.cljs$core$IFn$_invoke$arity$5 = $G__42596__5$$;
  return $G__42596$$;
}();
asami.graph.graph_add = function($var_args$$) {
  switch(arguments.length) {
    case 4:
      return asami.graph.graph_add.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return asami.graph.graph_add.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
asami.graph.graph_add.cljs$core$IFn$_invoke$arity$4 = function($this$$$, $subj$$, $pred$$, $obj$$) {
  return $this$$$ != null && $this$$$.asami$graph$Graph$graph_add$arity$4 != null ? $this$$$.asami$graph$Graph$graph_add$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : asami$graph$Graph$graph_add$dyn_42595($this$$$, $subj$$, $pred$$, $obj$$);
};
asami.graph.graph_add.cljs$core$IFn$_invoke$arity$5 = function($this$$$, $subj$$, $pred$$, $obj$$, $tx$$) {
  return $this$$$ != null && $this$$$.asami$graph$Graph$graph_add$arity$5 != null ? $this$$$.asami$graph$Graph$graph_add$arity$5($this$$$, $subj$$, $pred$$, $obj$$, $tx$$) : asami$graph$Graph$graph_add$dyn_42595($this$$$, $subj$$, $pred$$, $obj$$, $tx$$);
};
asami.graph.graph_add.cljs$lang$maxFixedArity = 5;
var asami$graph$Graph$graph_delete$dyn_42598 = function($this$$$, $subj$$, $pred$$, $obj$$) {
  var $m__5372__auto__$jscomp$187_m__5374__auto__$$ = asami.graph.graph_delete[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$187_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$187_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$187_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : $m__5372__auto__$jscomp$187_m__5374__auto__$$.call(null, $this$$$, $subj$$, $pred$$, $obj$$);
  }
  $m__5372__auto__$jscomp$187_m__5374__auto__$$ = asami.graph.graph_delete._;
  if ($m__5372__auto__$jscomp$187_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$187_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$187_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : $m__5372__auto__$jscomp$187_m__5374__auto__$$.call(null, $this$$$, $subj$$, $pred$$, $obj$$);
  }
  throw $APP.cljs.core.missing_protocol("Graph.graph-delete", $this$$$);
};
asami.graph.graph_delete = function($this$$$, $subj$$, $pred$$, $obj$$) {
  return $this$$$ != null && $this$$$.asami$graph$Graph$graph_delete$arity$4 != null ? $this$$$.asami$graph$Graph$graph_delete$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : asami$graph$Graph$graph_delete$dyn_42598($this$$$, $subj$$, $pred$$, $obj$$);
};
var asami$graph$Graph$graph_transact$dyn_42599 = function() {
  var $G__42600$$ = null, $G__42600__4$$ = function($this$$$, $tx_id$$, $assertions$$, $retractions$$) {
    var $m__5372__auto__$jscomp$188_m__5374__auto__$$ = asami.graph.graph_transact[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
    if ($m__5372__auto__$jscomp$188_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$188_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$188_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $tx_id$$, $assertions$$, $retractions$$) : $m__5372__auto__$jscomp$188_m__5374__auto__$$.call(null, $this$$$, $tx_id$$, $assertions$$, $retractions$$);
    }
    $m__5372__auto__$jscomp$188_m__5374__auto__$$ = asami.graph.graph_transact._;
    if ($m__5372__auto__$jscomp$188_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$188_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$188_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $tx_id$$, $assertions$$, $retractions$$) : $m__5372__auto__$jscomp$188_m__5374__auto__$$.call(null, $this$$$, $tx_id$$, $assertions$$, $retractions$$);
    }
    throw $APP.cljs.core.missing_protocol("Graph.graph-transact", $this$$$);
  }, $G__42600__5$$ = function($this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated$$) {
    var $m__5372__auto__$jscomp$189_m__5374__auto__$$ = asami.graph.graph_transact[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
    if ($m__5372__auto__$jscomp$189_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$189_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$5 ? $m__5372__auto__$jscomp$189_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$5($this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated$$) : $m__5372__auto__$jscomp$189_m__5374__auto__$$.call(null, $this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated$$);
    }
    $m__5372__auto__$jscomp$189_m__5374__auto__$$ = asami.graph.graph_transact._;
    if ($m__5372__auto__$jscomp$189_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$189_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$5 ? $m__5372__auto__$jscomp$189_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$5($this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated$$) : $m__5372__auto__$jscomp$189_m__5374__auto__$$.call(null, $this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated$$);
    }
    throw $APP.cljs.core.missing_protocol("Graph.graph-transact", $this$$$);
  };
  $G__42600$$ = function($this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated$$) {
    switch(arguments.length) {
      case 4:
        return $G__42600__4$$.call(this, $this$$$, $tx_id$$, $assertions$$, $retractions$$);
      case 5:
        return $G__42600__5$$.call(this, $this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__42600$$.cljs$core$IFn$_invoke$arity$4 = $G__42600__4$$;
  $G__42600$$.cljs$core$IFn$_invoke$arity$5 = $G__42600__5$$;
  return $G__42600$$;
}();
asami.graph.graph_transact = function($var_args$$) {
  switch(arguments.length) {
    case 4:
      return asami.graph.graph_transact.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return asami.graph.graph_transact.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
asami.graph.graph_transact.cljs$core$IFn$_invoke$arity$4 = function($this$$$, $tx_id$$, $assertions$$, $retractions$$) {
  return $this$$$ != null && $this$$$.asami$graph$Graph$graph_transact$arity$4 != null ? $this$$$.asami$graph$Graph$graph_transact$arity$4($this$$$, $tx_id$$, $assertions$$, $retractions$$) : asami$graph$Graph$graph_transact$dyn_42599($this$$$, $tx_id$$, $assertions$$, $retractions$$);
};
asami.graph.graph_transact.cljs$core$IFn$_invoke$arity$5 = function($this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated$$) {
  return $this$$$ != null && $this$$$.asami$graph$Graph$graph_transact$arity$5 != null ? $this$$$.asami$graph$Graph$graph_transact$arity$5($this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated$$) : asami$graph$Graph$graph_transact$dyn_42599($this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated$$);
};
asami.graph.graph_transact.cljs$lang$maxFixedArity = 5;
var asami$graph$Graph$graph_diff$dyn_42607 = function($this$$$, $other$$) {
  var $m__5372__auto__$jscomp$190_m__5374__auto__$$ = asami.graph.graph_diff[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$190_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$190_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$190_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $other$$) : $m__5372__auto__$jscomp$190_m__5374__auto__$$.call(null, $this$$$, $other$$);
  }
  $m__5372__auto__$jscomp$190_m__5374__auto__$$ = asami.graph.graph_diff._;
  if ($m__5372__auto__$jscomp$190_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$190_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$190_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $other$$) : $m__5372__auto__$jscomp$190_m__5374__auto__$$.call(null, $this$$$, $other$$);
  }
  throw $APP.cljs.core.missing_protocol("Graph.graph-diff", $this$$$);
};
asami.graph.graph_diff = function($this$$$, $other$$) {
  return $this$$$ != null && $this$$$.asami$graph$Graph$graph_diff$arity$2 != null ? $this$$$.asami$graph$Graph$graph_diff$arity$2($this$$$, $other$$) : asami$graph$Graph$graph_diff$dyn_42607($this$$$, $other$$);
};
var asami$graph$Graph$resolve_triple$dyn_42609 = function($this$$$, $subj$$, $pred$$, $obj$$) {
  var $m__5372__auto__$jscomp$191_m__5374__auto__$$ = asami.graph.resolve_triple[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$191_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$191_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$191_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : $m__5372__auto__$jscomp$191_m__5374__auto__$$.call(null, $this$$$, $subj$$, $pred$$, $obj$$);
  }
  $m__5372__auto__$jscomp$191_m__5374__auto__$$ = asami.graph.resolve_triple._;
  if ($m__5372__auto__$jscomp$191_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$191_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$191_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : $m__5372__auto__$jscomp$191_m__5374__auto__$$.call(null, $this$$$, $subj$$, $pred$$, $obj$$);
  }
  throw $APP.cljs.core.missing_protocol("Graph.resolve-triple", $this$$$);
};
asami.graph.resolve_triple = function($this$$$, $subj$$, $pred$$, $obj$$) {
  return $this$$$ != null && $this$$$.asami$graph$Graph$resolve_triple$arity$4 != null ? $this$$$.asami$graph$Graph$resolve_triple$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : asami$graph$Graph$resolve_triple$dyn_42609($this$$$, $subj$$, $pred$$, $obj$$);
};
var asami$graph$Graph$attribute_values$dyn_42612 = function($this$$$, $node$$) {
  var $m__5372__auto__$jscomp$192_m__5374__auto__$$ = asami.graph.attribute_values[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$192_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$192_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$192_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $node$$) : $m__5372__auto__$jscomp$192_m__5374__auto__$$.call(null, $this$$$, $node$$);
  }
  $m__5372__auto__$jscomp$192_m__5374__auto__$$ = asami.graph.attribute_values._;
  if ($m__5372__auto__$jscomp$192_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$192_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$192_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $node$$) : $m__5372__auto__$jscomp$192_m__5374__auto__$$.call(null, $this$$$, $node$$);
  }
  throw $APP.cljs.core.missing_protocol("Graph.attribute-values", $this$$$);
};
asami.graph.attribute_values = function($this$$$, $node$$) {
  return $this$$$ != null && $this$$$.asami$graph$Graph$attribute_values$arity$2 != null ? $this$$$.asami$graph$Graph$attribute_values$arity$2($this$$$, $node$$) : asami$graph$Graph$attribute_values$dyn_42612($this$$$, $node$$);
};
var asami$graph$Graph$count_triple$dyn_42614 = function($this$$$, $subj$$, $pred$$, $obj$$) {
  var $m__5372__auto__$jscomp$193_m__5374__auto__$$ = asami.graph.count_triple[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$193_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$193_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$193_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : $m__5372__auto__$jscomp$193_m__5374__auto__$$.call(null, $this$$$, $subj$$, $pred$$, $obj$$);
  }
  $m__5372__auto__$jscomp$193_m__5374__auto__$$ = asami.graph.count_triple._;
  if ($m__5372__auto__$jscomp$193_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$193_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$193_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : $m__5372__auto__$jscomp$193_m__5374__auto__$$.call(null, $this$$$, $subj$$, $pred$$, $obj$$);
  }
  throw $APP.cljs.core.missing_protocol("Graph.count-triple", $this$$$);
};
asami.graph.count_triple = function($this$$$, $subj$$, $pred$$, $obj$$) {
  return $this$$$ != null && $this$$$.asami$graph$Graph$count_triple$arity$4 != null ? $this$$$.asami$graph$Graph$count_triple$arity$4($this$$$, $subj$$, $pred$$, $obj$$) : asami$graph$Graph$count_triple$dyn_42614($this$$$, $subj$$, $pred$$, $obj$$);
};
asami.graph.GraphType = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(function($p1__42567_SHARP_$$) {
  return $p1__42567_SHARP_$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $p1__42567_SHARP_$$.asami$graph$Graph$ ? !0 : $p1__42567_SHARP_$$.cljs$lang$protocol_mask$partition$ ? !1 : $APP.cljs.core.native_satisfies_QMARK_(asami.graph.Graph, $p1__42567_SHARP_$$) : $APP.cljs.core.native_satisfies_QMARK_(asami.graph.Graph, $p1__42567_SHARP_$$);
});
asami.graph.resolve_pattern = function($graph$$, $o$$) {
  var $s$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 0, null), $p$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 1, null);
  $o$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 2, null);
  return asami.graph.resolve_triple($graph$$, $s$$, $p$$, $o$$);
};
asami.graph.count_pattern = function($graph$$, $o$$) {
  var $s$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 0, null), $p$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 1, null);
  $o$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 2, null);
  return asami.graph.count_triple($graph$$, $s$$, $p$$, $o$$);
};
asami.graph.IdCheck = function() {
};
var asami$graph$IdCheck$id_check$dyn_42616 = function($o$$, $checker$$) {
  var $m__5372__auto__$jscomp$194_m__5374__auto__$$ = asami.graph.id_check[$APP.goog.typeOf($o$$ == null ? null : $o$$)];
  if ($m__5372__auto__$jscomp$194_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$194_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$194_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($o$$, $checker$$) : $m__5372__auto__$jscomp$194_m__5374__auto__$$.call(null, $o$$, $checker$$);
  }
  $m__5372__auto__$jscomp$194_m__5374__auto__$$ = asami.graph.id_check._;
  if ($m__5372__auto__$jscomp$194_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$194_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$194_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($o$$, $checker$$) : $m__5372__auto__$jscomp$194_m__5374__auto__$$.call(null, $o$$, $checker$$);
  }
  throw $APP.cljs.core.missing_protocol("IdCheck.id-check", $o$$);
};
asami.graph.id_check = function($o$$, $checker$$) {
  return $o$$ != null && $o$$.asami$graph$IdCheck$id_check$arity$2 != null ? $o$$.asami$graph$IdCheck$id_check$arity$2($o$$, $checker$$) : asami$graph$IdCheck$id_check$dyn_42616($o$$, $checker$$);
};
asami.graph.IdCheck.object = !0;
asami.graph.id_check.object = function($_$$, $___$1$$) {
  return null;
};
asami.graph.InternalNode = function($id$$) {
  this.id = $id$$;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
asami.graph.InternalNode.prototype.toString = function() {
  return ["#a/n[", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.id), "]"].join("");
};
asami.graph.InternalNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($_$$, $o$$) {
  return $o$$ instanceof asami.graph.InternalNode && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.id, $o$$.id);
};
asami.graph.InternalNode.prototype.cljs$core$IHash$_hash$arity$1 = function($_$$) {
  return $APP.cljs.core.hash(this.id);
};
asami.graph.InternalNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this$$$, $writer$$, $_$$) {
  return $APP.cljs.core._write($writer$$, $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(this));
};
asami.graph.InternalNode.prototype.asami$graph$IdCheck$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.graph.InternalNode.prototype.asami$graph$IdCheck$id_check$arity$2 = function($_$$, $checker$$) {
  return $checker$$.cljs$core$IFn$_invoke$arity$1 ? $checker$$.cljs$core$IFn$_invoke$arity$1(this.id) : $checker$$.call(null, this.id);
};
asami.graph.InternalNode.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$1850$id, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$78$tag, $APP.cljs$cst$652$long], null))], null);
};
asami.graph.InternalNode.cljs$lang$type = !0;
asami.graph.InternalNode.cljs$lang$ctorStr = "asami.graph/InternalNode";
asami.graph.InternalNode.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "asami.graph/InternalNode");
};
asami.graph.__GT_InternalNode = function($id$$) {
  return new asami.graph.InternalNode($id$$);
};
asami.graph.NodeData = function() {
};
var asami$graph$NodeData$node_read$dyn_42620 = function($data$$) {
  var $m__5372__auto__$jscomp$195_m__5374__auto__$$ = asami.graph.node_read[$APP.goog.typeOf($data$$ == null ? null : $data$$)];
  if ($m__5372__auto__$jscomp$195_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$195_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$195_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($data$$) : $m__5372__auto__$jscomp$195_m__5374__auto__$$.call(null, $data$$);
  }
  $m__5372__auto__$jscomp$195_m__5374__auto__$$ = asami.graph.node_read._;
  if ($m__5372__auto__$jscomp$195_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$195_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$195_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($data$$) : $m__5372__auto__$jscomp$195_m__5374__auto__$$.call(null, $data$$);
  }
  throw $APP.cljs.core.missing_protocol("NodeData.node-read", $data$$);
};
asami.graph.node_read = function($data$$) {
  return $data$$ != null && $data$$.asami$graph$NodeData$node_read$arity$1 != null ? $data$$.asami$graph$NodeData$node_read$arity$1($data$$) : asami$graph$NodeData$node_read$dyn_42620($data$$);
};
asami.graph.NodeData.string = !0;
asami.graph.node_read.string = function($s$$) {
  return new asami.graph.InternalNode($APP.cljs.core.long$($s$$));
};
$APP.cljs.core.PersistentVector.prototype.asami$graph$NodeData$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.PersistentVector.prototype.asami$graph$NodeData$node_read$arity$1 = function($v$$) {
  return new asami.graph.InternalNode($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this, 0));
};
asami.graph.node_reader = new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2183$a_SLASH_n, asami.graph.node_read], null);
$APP.cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4($APP.cljs.reader._STAR_tag_table_STAR_, $APP.cljs.core.assoc, cljs$cst$2183$a_SLASH_n, asami.graph.node_read);
asami.graph.a_ns = "a";
asami.graph.node_prefix = "node-";
asami.graph.prefix_len = asami.graph.node_prefix.length;
asami.graph.new_node = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return asami.graph.new_node.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return asami.graph.new_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
asami.graph.new_node.cljs$core$IFn$_invoke$arity$0 = function() {
  return $APP.cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(asami.graph.a_ns, $APP.cljs.core.name($APP.cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(asami.graph.node_prefix)));
};
asami.graph.new_node.cljs$core$IFn$_invoke$arity$1 = function($id$$) {
  return new asami.graph.InternalNode($id$$);
};
asami.graph.new_node.cljs$lang$maxFixedArity = 1;
asami.graph.node_id = function($n$$) {
  return $APP.cljs.core.subs.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.name($n$$), asami.graph.prefix_len);
};
asami.graph.node_type_QMARK_ = function($n$$) {
  return $n$$ instanceof asami.graph.InternalNode || $n$$ instanceof $APP.cljs.core.Keyword && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(asami.graph.a_ns, $APP.cljs.core.namespace($n$$)) && $APP.clojure.string.starts_with_QMARK_($APP.cljs.core.name($n$$), asami.graph.node_prefix);
};
asami.graph.broad_node_type_QMARK_ = function($n$$) {
  return $n$$ instanceof asami.graph.InternalNode || $n$$ instanceof $APP.cljs.core.Keyword || $APP.cljs.core.uri_QMARK_($n$$) || $APP.cljs.core.uuid_QMARK_($n$$);
};
asami.graph.node_label = function($n$$) {
  return $APP.cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(asami.graph.a_ns, ["id-", asami.graph.node_id($n$$)].join(""));
};
asami.cache = {};
asami.cache.CacheProtocol = function() {
};
var asami$cache$CacheProtocol$lookup$dyn_42998 = function() {
  var $G__42999$$ = null, $G__42999__2$$ = function($cache$$, $e$$) {
    var $m__5372__auto__$jscomp$196_m__5374__auto__$$ = asami.cache.lookup[$APP.goog.typeOf($cache$$ == null ? null : $cache$$)];
    if ($m__5372__auto__$jscomp$196_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$196_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$196_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($cache$$, $e$$) : $m__5372__auto__$jscomp$196_m__5374__auto__$$.call(null, $cache$$, $e$$);
    }
    $m__5372__auto__$jscomp$196_m__5374__auto__$$ = asami.cache.lookup._;
    if ($m__5372__auto__$jscomp$196_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$196_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$196_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($cache$$, $e$$) : $m__5372__auto__$jscomp$196_m__5374__auto__$$.call(null, $cache$$, $e$$);
    }
    throw $APP.cljs.core.missing_protocol("CacheProtocol.lookup", $cache$$);
  }, $G__42999__3$$ = function($cache$$, $e$$, $not_found$$) {
    var $m__5372__auto__$jscomp$197_m__5374__auto__$$ = asami.cache.lookup[$APP.goog.typeOf($cache$$ == null ? null : $cache$$)];
    if ($m__5372__auto__$jscomp$197_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$197_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$197_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($cache$$, $e$$, $not_found$$) : $m__5372__auto__$jscomp$197_m__5374__auto__$$.call(null, $cache$$, $e$$, $not_found$$);
    }
    $m__5372__auto__$jscomp$197_m__5374__auto__$$ = asami.cache.lookup._;
    if ($m__5372__auto__$jscomp$197_m__5374__auto__$$ != null) {
      return $m__5372__auto__$jscomp$197_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$197_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($cache$$, $e$$, $not_found$$) : $m__5372__auto__$jscomp$197_m__5374__auto__$$.call(null, $cache$$, $e$$, $not_found$$);
    }
    throw $APP.cljs.core.missing_protocol("CacheProtocol.lookup", $cache$$);
  };
  $G__42999$$ = function($cache$$, $e$$, $not_found$$) {
    switch(arguments.length) {
      case 2:
        return $G__42999__2$$.call(this, $cache$$, $e$$);
      case 3:
        return $G__42999__3$$.call(this, $cache$$, $e$$, $not_found$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__42999$$.cljs$core$IFn$_invoke$arity$2 = $G__42999__2$$;
  $G__42999$$.cljs$core$IFn$_invoke$arity$3 = $G__42999__3$$;
  return $G__42999$$;
}();
asami.cache.lookup = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return asami.cache.lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return asami.cache.lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
asami.cache.lookup.cljs$core$IFn$_invoke$arity$2 = function($cache$$, $e$$) {
  return $cache$$ != null && $cache$$.asami$cache$CacheProtocol$lookup$arity$2 != null ? $cache$$.asami$cache$CacheProtocol$lookup$arity$2($cache$$, $e$$) : asami$cache$CacheProtocol$lookup$dyn_42998($cache$$, $e$$);
};
asami.cache.lookup.cljs$core$IFn$_invoke$arity$3 = function($cache$$, $e$$, $not_found$$) {
  return $cache$$ != null && $cache$$.asami$cache$CacheProtocol$lookup$arity$3 != null ? $cache$$.asami$cache$CacheProtocol$lookup$arity$3($cache$$, $e$$, $not_found$$) : asami$cache$CacheProtocol$lookup$dyn_42998($cache$$, $e$$, $not_found$$);
};
asami.cache.lookup.cljs$lang$maxFixedArity = 3;
var asami$cache$CacheProtocol$has_QMARK_$dyn_43001 = function($cache$$, $e$$) {
  var $m__5372__auto__$jscomp$198_m__5374__auto__$$ = asami.cache.has_QMARK_[$APP.goog.typeOf($cache$$ == null ? null : $cache$$)];
  if ($m__5372__auto__$jscomp$198_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$198_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$198_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($cache$$, $e$$) : $m__5372__auto__$jscomp$198_m__5374__auto__$$.call(null, $cache$$, $e$$);
  }
  $m__5372__auto__$jscomp$198_m__5374__auto__$$ = asami.cache.has_QMARK_._;
  if ($m__5372__auto__$jscomp$198_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$198_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$198_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($cache$$, $e$$) : $m__5372__auto__$jscomp$198_m__5374__auto__$$.call(null, $cache$$, $e$$);
  }
  throw $APP.cljs.core.missing_protocol("CacheProtocol.has?", $cache$$);
};
asami.cache.has_QMARK_ = function($cache$$, $e$$) {
  return $cache$$ != null && $cache$$.asami$cache$CacheProtocol$has_QMARK_$arity$2 != null ? $cache$$.asami$cache$CacheProtocol$has_QMARK_$arity$2($cache$$, $e$$) : asami$cache$CacheProtocol$has_QMARK_$dyn_43001($cache$$, $e$$);
};
var asami$cache$CacheProtocol$hit$dyn_43004 = function($cache$$, $e$$) {
  var $m__5372__auto__$jscomp$199_m__5374__auto__$$ = asami.cache.hit[$APP.goog.typeOf($cache$$ == null ? null : $cache$$)];
  if ($m__5372__auto__$jscomp$199_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$199_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$199_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($cache$$, $e$$) : $m__5372__auto__$jscomp$199_m__5374__auto__$$.call(null, $cache$$, $e$$);
  }
  $m__5372__auto__$jscomp$199_m__5374__auto__$$ = asami.cache.hit._;
  if ($m__5372__auto__$jscomp$199_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$199_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$199_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($cache$$, $e$$) : $m__5372__auto__$jscomp$199_m__5374__auto__$$.call(null, $cache$$, $e$$);
  }
  throw $APP.cljs.core.missing_protocol("CacheProtocol.hit", $cache$$);
};
asami.cache.hit = function($cache$$, $e$$) {
  return $cache$$ != null && $cache$$.asami$cache$CacheProtocol$hit$arity$2 != null ? $cache$$.asami$cache$CacheProtocol$hit$arity$2($cache$$, $e$$) : asami$cache$CacheProtocol$hit$dyn_43004($cache$$, $e$$);
};
var asami$cache$CacheProtocol$miss$dyn_43005 = function($cache$$, $e$$, $ret$$) {
  var $m__5372__auto__$jscomp$200_m__5374__auto__$$ = asami.cache.miss[$APP.goog.typeOf($cache$$ == null ? null : $cache$$)];
  if ($m__5372__auto__$jscomp$200_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$200_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$200_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($cache$$, $e$$, $ret$$) : $m__5372__auto__$jscomp$200_m__5374__auto__$$.call(null, $cache$$, $e$$, $ret$$);
  }
  $m__5372__auto__$jscomp$200_m__5374__auto__$$ = asami.cache.miss._;
  if ($m__5372__auto__$jscomp$200_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$200_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$200_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($cache$$, $e$$, $ret$$) : $m__5372__auto__$jscomp$200_m__5374__auto__$$.call(null, $cache$$, $e$$, $ret$$);
  }
  throw $APP.cljs.core.missing_protocol("CacheProtocol.miss", $cache$$);
};
asami.cache.miss = function($cache$$, $e$$, $ret$$) {
  return $cache$$ != null && $cache$$.asami$cache$CacheProtocol$miss$arity$3 != null ? $cache$$.asami$cache$CacheProtocol$miss$arity$3($cache$$, $e$$, $ret$$) : asami$cache$CacheProtocol$miss$dyn_43005($cache$$, $e$$, $ret$$);
};
var asami$cache$CacheProtocol$evict$dyn_43008 = function($cache$$, $e$$) {
  var $m__5372__auto__$jscomp$201_m__5374__auto__$$ = asami.cache.evict[$APP.goog.typeOf($cache$$ == null ? null : $cache$$)];
  if ($m__5372__auto__$jscomp$201_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$201_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$201_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($cache$$, $e$$) : $m__5372__auto__$jscomp$201_m__5374__auto__$$.call(null, $cache$$, $e$$);
  }
  $m__5372__auto__$jscomp$201_m__5374__auto__$$ = asami.cache.evict._;
  if ($m__5372__auto__$jscomp$201_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$201_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$201_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($cache$$, $e$$) : $m__5372__auto__$jscomp$201_m__5374__auto__$$.call(null, $cache$$, $e$$);
  }
  throw $APP.cljs.core.missing_protocol("CacheProtocol.evict", $cache$$);
};
asami.cache.evict = function($cache$$, $e$$) {
  return $cache$$ != null && $cache$$.asami$cache$CacheProtocol$evict$arity$2 != null ? $cache$$.asami$cache$CacheProtocol$evict$arity$2($cache$$, $e$$) : asami$cache$CacheProtocol$evict$dyn_43008($cache$$, $e$$);
};
var asami$cache$CacheProtocol$seed$dyn_43012 = function($cache$$, $base$$) {
  var $m__5372__auto__$jscomp$202_m__5374__auto__$$ = asami.cache.seed[$APP.goog.typeOf($cache$$ == null ? null : $cache$$)];
  if ($m__5372__auto__$jscomp$202_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$202_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$202_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($cache$$, $base$$) : $m__5372__auto__$jscomp$202_m__5374__auto__$$.call(null, $cache$$, $base$$);
  }
  $m__5372__auto__$jscomp$202_m__5374__auto__$$ = asami.cache.seed._;
  if ($m__5372__auto__$jscomp$202_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$202_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$202_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($cache$$, $base$$) : $m__5372__auto__$jscomp$202_m__5374__auto__$$.call(null, $cache$$, $base$$);
  }
  throw $APP.cljs.core.missing_protocol("CacheProtocol.seed", $cache$$);
};
asami.cache.seed = function($cache$$, $base$$) {
  return $cache$$ != null && $cache$$.asami$cache$CacheProtocol$seed$arity$2 != null ? $cache$$.asami$cache$CacheProtocol$seed$arity$2($cache$$, $base$$) : asami$cache$CacheProtocol$seed$dyn_43012($cache$$, $base$$);
};
asami.cache.build_leastness_queue = function($base$$, $limit$$, $start_at$$) {
  return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.tailrecursion.priority_map.priority_map(), $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.take.cljs$core$IFn$_invoke$arity$2($limit$$ - $APP.cljs.core.count($base$$), function() {
    return function $asami$cache$build_leastness_queue_$_iter__42962$$($s__42963$$) {
      return new $APP.cljs.core.LazySeq(null, function() {
        for (;;) {
          var $s__42963__$2_temp__5825__auto__$$ = $APP.cljs.core.seq($s__42963$$);
          if ($s__42963__$2_temp__5825__auto__$$) {
            if ($APP.cljs.core.chunked_seq_QMARK_($s__42963__$2_temp__5825__auto__$$)) {
              var $JSCompiler_inline_result$jscomp$743_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__42963__$2_temp__5825__auto__$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$743_c__5501__auto__$$), $b__42965_k$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
              a: {
                for (var $i__42964$$ = 0;;) {
                  if ($i__42964$$ < $size__5502__auto__$$) {
                    var $k$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$743_c__5501__auto__$$, $i__42964$$);
                    $APP.cljs.core.chunk_append($b__42965_k$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, $k$$], null));
                    $i__42964$$ += 1;
                  } else {
                    $JSCompiler_inline_result$jscomp$743_c__5501__auto__$$ = !0;
                    break a;
                  }
                }
                $JSCompiler_inline_result$jscomp$743_c__5501__auto__$$ = void 0;
              }
              return $JSCompiler_inline_result$jscomp$743_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__42965_k$$), $asami$cache$build_leastness_queue_$_iter__42962$$($APP.cljs.core.chunk_rest($s__42963__$2_temp__5825__auto__$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__42965_k$$), null);
            }
            $b__42965_k$$ = $APP.cljs.core.first($s__42963__$2_temp__5825__auto__$$);
            return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$b__42965_k$$, $b__42965_k$$], null), $asami$cache$build_leastness_queue_$_iter__42962$$($APP.cljs.core.rest($s__42963__$2_temp__5825__auto__$$)));
          }
          return null;
        }
      }, null, null);
    }($APP.cljs.core.range.cljs$core$IFn$_invoke$arity$2(-$limit$$, 0));
  }()), function() {
    return function $asami$cache$build_leastness_queue_$_iter__42970$$($s__42971$$) {
      return new $APP.cljs.core.LazySeq(null, function() {
        for (;;) {
          var $s__42971__$2_temp__5825__auto__$$ = $APP.cljs.core.seq($s__42971$$);
          if ($s__42971__$2_temp__5825__auto__$$) {
            if ($APP.cljs.core.chunked_seq_QMARK_($s__42971__$2_temp__5825__auto__$$)) {
              var $JSCompiler_inline_result$jscomp$744_c__5501__auto__$jscomp$36_k$$ = $APP.cljs.core.chunk_first($s__42971__$2_temp__5825__auto__$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$744_c__5501__auto__$jscomp$36_k$$), $b__42973_vec__42977$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
              a: {
                for (var $i__42972$$ = 0;;) {
                  if ($i__42972$$ < $size__5502__auto__$$) {
                    var $vec__42974$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$744_c__5501__auto__$jscomp$36_k$$, $i__42972$$), $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__42974$$, 0, null);
                    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__42974$$, 1, null);
                    $APP.cljs.core.chunk_append($b__42973_vec__42977$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, $start_at$$], null));
                    $i__42972$$ += 1;
                  } else {
                    $JSCompiler_inline_result$jscomp$744_c__5501__auto__$jscomp$36_k$$ = !0;
                    break a;
                  }
                }
                $JSCompiler_inline_result$jscomp$744_c__5501__auto__$jscomp$36_k$$ = void 0;
              }
              return $JSCompiler_inline_result$jscomp$744_c__5501__auto__$jscomp$36_k$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__42973_vec__42977$$), $asami$cache$build_leastness_queue_$_iter__42970$$($APP.cljs.core.chunk_rest($s__42971__$2_temp__5825__auto__$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__42973_vec__42977$$), null);
            }
            $b__42973_vec__42977$$ = $APP.cljs.core.first($s__42971__$2_temp__5825__auto__$$);
            $JSCompiler_inline_result$jscomp$744_c__5501__auto__$jscomp$36_k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($b__42973_vec__42977$$, 0, null);
            $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($b__42973_vec__42977$$, 1, null);
            return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$JSCompiler_inline_result$jscomp$744_c__5501__auto__$jscomp$36_k$$, $start_at$$], null), $asami$cache$build_leastness_queue_$_iter__42970$$($APP.cljs.core.rest($s__42971__$2_temp__5825__auto__$$)));
          }
          return null;
        }
      }, null, null);
    }($base$$);
  }()));
};
asami.cache.LRUCache = function($cache$$, $lru$$, $tick$$, $limit$$) {
  this.cache = $cache$$;
  this.lru = $lru$$;
  this.tick = $tick$$;
  this.limit = $limit$$;
  this.cljs$lang$protocol_mask$partition0$ = 10487558;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
asami.cache.LRUCache.prototype.toString = function() {
  return [$APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.cache), ", ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.lru), ", ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.tick), ", ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.limit)].join("");
};
asami.cache.LRUCache.prototype.cljs$core$ILookup$_lookup$arity$2 = function($this$$$, $key$$) {
  return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2(this.cache, $key$$);
};
asami.cache.LRUCache.prototype.cljs$core$ILookup$_lookup$arity$3 = function($this$$$, $key$$, $not_found$$) {
  $APP.cljs.core.println.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["ILookup has?"], 0));
  return $APP.cljs.core.truth_(this.asami$cache$CacheProtocol$has_QMARK_$arity$2(null, $key$$)) ? $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2(this.cache, $key$$) : $not_found$$;
};
asami.cache.LRUCache.prototype.cljs$core$IIterable$_iterator$arity$1 = function($_$$) {
  return $APP.cljs.core._iterator(this.cache);
};
asami.cache.LRUCache.prototype.cljs$core$ICounted$_count$arity$1 = function($this$$$) {
  return $APP.cljs.core.count(this.cache);
};
asami.cache.LRUCache.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this$$$, $other$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($other$$, this.cache);
};
asami.cache.LRUCache.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function($this$$$) {
  return this.asami$cache$CacheProtocol$seed$arity$2(null, $APP.cljs.core.empty(this.cache));
};
asami.cache.LRUCache.prototype.cljs$core$IMap$_dissoc$arity$2 = function($this$$$, $k$$) {
  return this.asami$cache$CacheProtocol$evict$arity$2(null, $k$$);
};
asami.cache.LRUCache.prototype.asami$cache$CacheProtocol$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.cache.LRUCache.prototype.asami$cache$CacheProtocol$lookup$arity$2 = function($this$$$, $key$$) {
  return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2(this.cache, $key$$);
};
asami.cache.LRUCache.prototype.asami$cache$CacheProtocol$lookup$arity$3 = function($this$$$, $key$$, $not_found$$) {
  return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3(this.cache, $key$$, $not_found$$);
};
asami.cache.LRUCache.prototype.asami$cache$CacheProtocol$has_QMARK_$arity$2 = function($_$$, $item$$) {
  $APP.cljs.core.println.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Cache protocol has?"], 0));
  return $APP.cljs.core.contains_QMARK_(this.cache, $item$$);
};
asami.cache.LRUCache.prototype.asami$cache$CacheProtocol$hit$arity$2 = function($_$$, $item$$) {
  $_$$ = this.tick + 1;
  return new asami.cache.LRUCache(this.cache, $APP.cljs.core.contains_QMARK_(this.cache, $item$$) ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.lru, $item$$, $_$$) : this.lru, $_$$, this.limit);
};
asami.cache.LRUCache.prototype.asami$cache$CacheProtocol$miss$arity$3 = function($_$jscomp$540_tick_PLUS_$$, $item$jscomp$61_l$$, $c$jscomp$232_result$$) {
  $_$jscomp$540_tick_PLUS_$$ = this.tick + 1;
  if ($APP.cljs.core.count(this.lru) >= this.limit) {
    var $k$$ = $APP.cljs.core.contains_QMARK_(this.lru, $item$jscomp$61_l$$) ? $item$jscomp$61_l$$ : $APP.cljs.core.first($APP.cljs.core.peek(this.lru));
    $c$jscomp$232_result$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.cache, $k$$), $item$jscomp$61_l$$, $c$jscomp$232_result$$);
    $item$jscomp$61_l$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.lru, $k$$), $item$jscomp$61_l$$, $_$jscomp$540_tick_PLUS_$$);
    return new asami.cache.LRUCache($c$jscomp$232_result$$, $item$jscomp$61_l$$, $_$jscomp$540_tick_PLUS_$$, this.limit);
  }
  return new asami.cache.LRUCache($APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.cache, $item$jscomp$61_l$$, $c$jscomp$232_result$$), $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.lru, $item$jscomp$61_l$$, $_$jscomp$540_tick_PLUS_$$), $_$jscomp$540_tick_PLUS_$$, this.limit);
};
asami.cache.LRUCache.prototype.asami$cache$CacheProtocol$evict$arity$2 = function($this$$$, $key$$) {
  return $APP.cljs.core.contains_QMARK_(this.cache, $key$$) ? new asami.cache.LRUCache($APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.cache, $key$$), $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.lru, $key$$), this.tick + 1, this.limit) : this;
};
asami.cache.LRUCache.prototype.asami$cache$CacheProtocol$seed$arity$2 = function($_$$, $base$$) {
  return new asami.cache.LRUCache($base$$, asami.cache.build_leastness_queue($base$$, this.limit, 0), 0, this.limit);
};
asami.cache.LRUCache.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($this$$$, $k$$, $v$$) {
  return this.asami$cache$CacheProtocol$miss$arity$3(null, $k$$, $v$$);
};
asami.cache.LRUCache.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($this$$$, $k$$) {
  $APP.cljs.core.println.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["IAssociative has?"], 0));
  return this.asami$cache$CacheProtocol$has_QMARK_$arity$2(null, $k$$);
};
asami.cache.LRUCache.prototype.cljs$core$ISeqable$_seq$arity$1 = function($_$$) {
  return $APP.cljs.core.seq(this.cache);
};
asami.cache.LRUCache.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2184$cache, cljs$cst$2185$lru, cljs$cst$2186$tick, $APP.cljs$cst$2187$limit], null);
};
asami.cache.LRUCache.cljs$lang$type = !0;
asami.cache.LRUCache.cljs$lang$ctorStr = "asami.cache/LRUCache";
asami.cache.LRUCache.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "asami.cache/LRUCache");
};
asami.cache.__GT_LRUCache = function($cache$$, $lru$$, $tick$$, $limit$$) {
  return new asami.cache.LRUCache($cache$$, $lru$$, $tick$$, $limit$$);
};
asami.cache.lru_cache_factory = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$199_argseq__5756__auto__$$ = [], $len__5749__auto___43016$$ = arguments.length, $i__5750__auto___43017$$ = 0;;) {
    if ($i__5750__auto___43017$$ < $len__5749__auto___43016$$) {
      $args__5755__auto__$jscomp$199_argseq__5756__auto__$$.push(arguments[$i__5750__auto___43017$$]), $i__5750__auto___43017$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$199_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$199_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$199_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return asami.cache.lru_cache_factory.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$199_argseq__5756__auto__$$);
};
asami.cache.lru_cache_factory.cljs$core$IFn$_invoke$arity$variadic = function($base$$, $map__42996__$1_p__42995_threshold$$) {
  $map__42996__$1_p__42995_threshold$$ = $APP.cljs.core.__destructure_map($map__42996__$1_p__42995_threshold$$);
  $map__42996__$1_p__42995_threshold$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($map__42996__$1_p__42995_threshold$$, cljs$cst$2188$threshold, 32);
  return (new asami.cache.LRUCache($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.tailrecursion.priority_map.priority_map(), 0, $map__42996__$1_p__42995_threshold$$)).asami$cache$CacheProtocol$seed$arity$2(null, $base$$);
};
asami.cache.lru_cache_factory.cljs$lang$maxFixedArity = 1;
asami.cache.lru_cache_factory.cljs$lang$applyTo = function($seq42993_seq42993__$1$$) {
  var $G__42994$$ = $APP.cljs.core.first($seq42993_seq42993__$1$$);
  $seq42993_seq42993__$1$$ = $APP.cljs.core.next($seq42993_seq42993__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__42994$$, $seq42993_seq42993__$1$$);
};
asami.internal = {};
asami.internal.TimeType = function() {
};
var asami$internal$TimeType$instant_QMARK_$dyn_43028 = function($this$$$) {
  var $m__5372__auto__$jscomp$203_m__5374__auto__$$ = asami.internal.instant_QMARK_[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$203_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$203_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$203_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$203_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$203_m__5374__auto__$$ = asami.internal.instant_QMARK_._;
  if ($m__5372__auto__$jscomp$203_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$203_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$203_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$203_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("TimeType.instant?", $this$$$);
};
asami.internal.instant_QMARK_ = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$internal$TimeType$instant_QMARK_$arity$1 != null ? $this$$$.asami$internal$TimeType$instant_QMARK_$arity$1($this$$$) : asami$internal$TimeType$instant_QMARK_$dyn_43028($this$$$);
};
var asami$internal$TimeType$long_time$dyn_43029 = function($this$$$) {
  var $m__5372__auto__$jscomp$204_m__5374__auto__$$ = asami.internal.long_time[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$204_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$204_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$204_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$204_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$204_m__5374__auto__$$ = asami.internal.long_time._;
  if ($m__5372__auto__$jscomp$204_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$204_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$204_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$204_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("TimeType.long-time", $this$$$);
};
asami.internal.long_time = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$internal$TimeType$long_time$arity$1 != null ? $this$$$.asami$internal$TimeType$long_time$arity$1($this$$$) : asami$internal$TimeType$long_time$dyn_43029($this$$$);
};
var asami$internal$TimeType$to_timestamp$dyn_43030 = function($this$$$) {
  var $m__5372__auto__$jscomp$205_m__5374__auto__$$ = asami.internal.to_timestamp[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$205_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$205_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$205_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$205_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$205_m__5374__auto__$$ = asami.internal.to_timestamp._;
  if ($m__5372__auto__$jscomp$205_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$205_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$205_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$205_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("TimeType.to-timestamp", $this$$$);
};
asami.internal.to_timestamp = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$internal$TimeType$to_timestamp$arity$1 != null ? $this$$$.asami$internal$TimeType$to_timestamp$arity$1($this$$$) : asami$internal$TimeType$to_timestamp$dyn_43030($this$$$);
};
Date.prototype.asami$internal$TimeType$ = $APP.cljs.core.PROTOCOL_SENTINEL;
Date.prototype.asami$internal$TimeType$instant_QMARK_$arity$1 = function($_$$) {
  return !0;
};
Date.prototype.asami$internal$TimeType$long_time$arity$1 = function($this$$$) {
  return this.getTime();
};
Date.prototype.asami$internal$TimeType$to_timestamp$arity$1 = function($this$$$) {
  return this;
};
asami.internal.TimeType._ = !0;
asami.internal.instant_QMARK_._ = function($_$$) {
  return !1;
};
asami.internal.long_time._ = function($this$$$) {
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unable to convert ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.type($this$$$)), " to a time"].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2189$object, $this$$$], null));
};
asami.internal.to_timestamp._ = function($this$$$) {
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unable to convert ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.type($this$$$)), " to a time"].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2189$object, $this$$$], null));
};
asami.internal.now = function() {
  return new Date();
};
asami.internal.instant = function($ms$$) {
  return new Date($ms$$);
};
asami.internal.project_args = new $APP.cljs.core.PersistentArrayMap(null, 2, [cljs$cst$2190$new_node, asami.graph.new_node, cljs$cst$2191$node_label, asami.graph.node_label], null);
asami.internal.project_ins_args = function($graph$$) {
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(asami.internal.project_args, cljs$cst$2192$resolve_pattern, $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2(asami.graph.resolve_pattern, $graph$$));
};
asami.internal.shallow_cache_1 = function($size$$, $f$$) {
  var $cache$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1(asami.cache.lru_cache_factory.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$2188$threshold, $size$$], 0)));
  return function($arg$$) {
    var $ret$jscomp$181_temp__5823__auto__$$ = asami.cache.lookup($APP.cljs.core.deref($cache$$), $arg$$);
    $APP.cljs.core.truth_($ret$jscomp$181_temp__5823__auto__$$) ? $APP.cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3($cache$$, asami.cache.hit, $arg$$) : ($ret$jscomp$181_temp__5823__auto__$$ = $f$$.cljs$core$IFn$_invoke$arity$1 ? $f$$.cljs$core$IFn$_invoke$arity$1($arg$$) : $f$$.call(null, $arg$$), $APP.cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4($cache$$, asami.cache.miss, $arg$$, $ret$jscomp$181_temp__5823__auto__$$));
    return $ret$jscomp$181_temp__5823__auto__$$;
  };
};
asami.datom = {};
asami.datom.Vectorizable = function() {
};
var asami$datom$Vectorizable$as_vec$dyn_43075 = function($o$$) {
  var $m__5372__auto__$jscomp$206_m__5374__auto__$$ = asami.datom.as_vec[$APP.goog.typeOf($o$$ == null ? null : $o$$)];
  if ($m__5372__auto__$jscomp$206_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$206_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$206_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($o$$) : $m__5372__auto__$jscomp$206_m__5374__auto__$$.call(null, $o$$);
  }
  $m__5372__auto__$jscomp$206_m__5374__auto__$$ = asami.datom.as_vec._;
  if ($m__5372__auto__$jscomp$206_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$206_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$206_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($o$$) : $m__5372__auto__$jscomp$206_m__5374__auto__$$.call(null, $o$$);
  }
  throw $APP.cljs.core.missing_protocol("Vectorizable.as-vec", $o$$);
};
asami.datom.as_vec = function($o$$) {
  return $o$$ != null && $o$$.asami$datom$Vectorizable$as_vec$arity$1 != null ? $o$$.asami$datom$Vectorizable$as_vec$arity$1($o$$) : asami$datom$Vectorizable$as_vec$dyn_43075($o$$);
};
asami.datom.Datom = function($e$$, $a$$, $v$$, $tx$$, $added$$) {
  this.e = $e$$;
  this.a = $a$$;
  this.v = $v$$;
  this.tx = $tx$$;
  this.added = $added$$;
  this.cljs$lang$protocol_mask$partition0$ = 8405786;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
asami.datom.Datom.prototype.toString = function() {
  return ["#datom ", $APP.cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [this.e, this.a, this.v, this.tx, $APP.cljs.core.truth_(this.added) ? $APP.cljs$cst$2193$db_SLASH_add : $APP.cljs$cst$2194$db_SLASH_retract], null)], 0))].join("");
};
asami.datom.Datom.prototype.equiv = function($other$$) {
  return $APP.cljs.core._equiv(this, $other$$);
};
asami.datom.Datom.prototype.indexOf = function() {
  var $G__43079$$ = null, $G__43079__1$$ = function($x$$) {
    var $G__43041$$ = this.asami$datom$Vectorizable$as_vec$arity$1(null), $fexpr__43040$$ = new $APP.cljs.core.Var(function() {
      return $APP.cljs.core._indexOf;
    }, $APP.cljs$cst$2195$cljs_DOT_core_SLASH__indexOf, $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$271$private, $APP.cljs$cst$176$ns, $APP.cljs$cst$272$name, $APP.cljs$cst$208$file, $APP.cljs$cst$218$end_column, $APP.cljs$cst$1377$top_fn, $APP.cljs$cst$216$column, $APP.cljs$cst$209$line, $APP.cljs$cst$217$end_line, $APP.cljs$cst$273$arglists, $APP.cljs$cst$256$doc, $APP.cljs$cst$171$test], [!0, $APP.cljs$cst$538$cljs_DOT_core, $APP.cljs$cst$2196$_indexOf, "cljs/core.cljs", 16, new $APP.cljs.core.PersistentArrayMap(null, 
    6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 3, $APP.cljs$cst$1379$max_fixed_arity, 3, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, 
    $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], 
    null), 1, 1572, 1572, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)), null, $APP.cljs.core.truth_($APP.cljs.core._indexOf) ? $APP.cljs.core._indexOf.cljs$lang$test : null]));
    return $fexpr__43040$$.cljs$core$IFn$_invoke$arity$3 ? $fexpr__43040$$.cljs$core$IFn$_invoke$arity$3($G__43041$$, $x$$, 0) : $fexpr__43040$$.call(null, $G__43041$$, $x$$, 0);
  }, $G__43079__2$$ = function($x$$, $start$$) {
    var $G__43045$$ = this.asami$datom$Vectorizable$as_vec$arity$1(null), $fexpr__43044$$ = new $APP.cljs.core.Var(function() {
      return $APP.cljs.core._indexOf;
    }, $APP.cljs$cst$2195$cljs_DOT_core_SLASH__indexOf, $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$271$private, $APP.cljs$cst$176$ns, $APP.cljs$cst$272$name, $APP.cljs$cst$208$file, $APP.cljs$cst$218$end_column, $APP.cljs$cst$1377$top_fn, $APP.cljs$cst$216$column, $APP.cljs$cst$209$line, $APP.cljs$cst$217$end_line, $APP.cljs$cst$273$arglists, $APP.cljs$cst$256$doc, $APP.cljs$cst$171$test], [!0, $APP.cljs$cst$538$cljs_DOT_core, $APP.cljs$cst$2196$_indexOf, "cljs/core.cljs", 16, new $APP.cljs.core.PersistentArrayMap(null, 
    6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 3, $APP.cljs$cst$1379$max_fixed_arity, 3, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, 
    $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], 
    null), 1, 1572, 1572, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)), null, $APP.cljs.core.truth_($APP.cljs.core._indexOf) ? $APP.cljs.core._indexOf.cljs$lang$test : null]));
    return $fexpr__43044$$.cljs$core$IFn$_invoke$arity$3 ? $fexpr__43044$$.cljs$core$IFn$_invoke$arity$3($G__43045$$, $x$$, $start$$) : $fexpr__43044$$.call(null, $G__43045$$, $x$$, $start$$);
  };
  $G__43079$$ = function($x$$, $start$$) {
    switch(arguments.length) {
      case 1:
        return $G__43079__1$$.call(this, $x$$);
      case 2:
        return $G__43079__2$$.call(this, $x$$, $start$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__43079$$.cljs$core$IFn$_invoke$arity$1 = $G__43079__1$$;
  $G__43079$$.cljs$core$IFn$_invoke$arity$2 = $G__43079__2$$;
  return $G__43079$$;
}();
asami.datom.Datom.prototype.lastIndexOf = function() {
  var $G__43092$$ = null, $G__43092__1$$ = function($x$$) {
    var $G__43049$$ = this.asami$datom$Vectorizable$as_vec$arity$1(null), $fexpr__43048$$ = new $APP.cljs.core.Var(function() {
      return $APP.cljs.core._lastIndexOf;
    }, cljs$cst$2197$cljs_DOT_core_SLASH__lastIndexOf, $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$271$private, $APP.cljs$cst$176$ns, $APP.cljs$cst$272$name, $APP.cljs$cst$208$file, $APP.cljs$cst$218$end_column, $APP.cljs$cst$1377$top_fn, $APP.cljs$cst$216$column, $APP.cljs$cst$209$line, $APP.cljs$cst$217$end_line, $APP.cljs$cst$273$arglists, $APP.cljs$cst$256$doc, $APP.cljs$cst$171$test], [!0, $APP.cljs$cst$538$cljs_DOT_core, cljs$cst$2198$_lastIndexOf, "cljs/core.cljs", 20, new $APP.cljs.core.PersistentArrayMap(null, 
    6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 3, $APP.cljs$cst$1379$max_fixed_arity, 3, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, 
    $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], 
    null), 1, 1589, 1589, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)), null, $APP.cljs.core.truth_($APP.cljs.core._lastIndexOf) ? $APP.cljs.core._lastIndexOf.cljs$lang$test : null]));
    return $fexpr__43048$$.cljs$core$IFn$_invoke$arity$3 ? $fexpr__43048$$.cljs$core$IFn$_invoke$arity$3($G__43049$$, $x$$, 5) : $fexpr__43048$$.call(null, $G__43049$$, $x$$, 5);
  }, $G__43092__2$$ = function($x$$, $start$$) {
    var $G__43053$$ = this.asami$datom$Vectorizable$as_vec$arity$1(null), $fexpr__43052$$ = new $APP.cljs.core.Var(function() {
      return $APP.cljs.core._lastIndexOf;
    }, cljs$cst$2197$cljs_DOT_core_SLASH__lastIndexOf, $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$271$private, $APP.cljs$cst$176$ns, $APP.cljs$cst$272$name, $APP.cljs$cst$208$file, $APP.cljs$cst$218$end_column, $APP.cljs$cst$1377$top_fn, $APP.cljs$cst$216$column, $APP.cljs$cst$209$line, $APP.cljs$cst$217$end_line, $APP.cljs$cst$273$arglists, $APP.cljs$cst$256$doc, $APP.cljs$cst$171$test], [!0, $APP.cljs$cst$538$cljs_DOT_core, cljs$cst$2198$_lastIndexOf, "cljs/core.cljs", 20, new $APP.cljs.core.PersistentArrayMap(null, 
    6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 3, $APP.cljs$cst$1379$max_fixed_arity, 3, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, 
    $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], 
    null), 1, 1589, 1589, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$114$coll, $APP.cljs$cst$1237$x, $APP.cljs$cst$58$start], null)), null, $APP.cljs.core.truth_($APP.cljs.core._lastIndexOf) ? $APP.cljs.core._lastIndexOf.cljs$lang$test : null]));
    return $fexpr__43052$$.cljs$core$IFn$_invoke$arity$3 ? $fexpr__43052$$.cljs$core$IFn$_invoke$arity$3($G__43053$$, $x$$, $start$$) : $fexpr__43052$$.call(null, $G__43053$$, $x$$, $start$$);
  };
  $G__43092$$ = function($x$$, $start$$) {
    switch(arguments.length) {
      case 1:
        return $G__43092__1$$.call(this, $x$$);
      case 2:
        return $G__43092__2$$.call(this, $x$$, $start$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__43092$$.cljs$core$IFn$_invoke$arity$1 = $G__43092__1$$;
  $G__43092$$.cljs$core$IFn$_invoke$arity$2 = $G__43092__2$$;
  return $G__43092$$;
}();
asami.datom.Datom.prototype.cljs$core$ILookup$_lookup$arity$2 = function($coll$$, $k$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k$$, null);
};
asami.datom.Datom.prototype.cljs$core$ILookup$_lookup$arity$3 = function($coll$$, $k$$, $not_found$$) {
  return $APP.cljs.core._lookup(this.asami$datom$Vectorizable$as_vec$arity$1(null), $k$$, $not_found$$);
};
asami.datom.Datom.prototype.cljs$core$APersistentVector$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.datom.Datom.prototype.asami$datom$Vectorizable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.datom.Datom.prototype.asami$datom$Vectorizable$as_vec$arity$1 = function($_$$) {
  return new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [this.e, this.a, this.v, this.tx, this.added], null);
};
asami.datom.Datom.prototype.cljs$core$IIndexed$_nth$arity$2 = function($coll$$, $n$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.asami$datom$Vectorizable$as_vec$arity$1(null), $n$$);
};
asami.datom.Datom.prototype.cljs$core$IIndexed$_nth$arity$3 = function($coll$$, $n$$, $not_found$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3(this.asami$datom$Vectorizable$as_vec$arity$1(null), $n$$, $not_found$$);
};
asami.datom.Datom.prototype.cljs$core$IVector$_assoc_n$arity$3 = function($coll$$, $n$$, $val$$) {
  return $APP.cljs.core._assoc_n(this.asami$datom$Vectorizable$as_vec$arity$1(null), $n$$, $val$$);
};
asami.datom.Datom.prototype.cljs$core$ICounted$_count$arity$1 = function($coll$$) {
  return 5;
};
asami.datom.Datom.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($_$$, $i$$) {
  if ($APP.cljs.core.integer_QMARK_($i$$)) {
    return 0 <= $i$$ && $i$$ < 5;
  }
  $_$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 5, [$APP.cljs$cst$1438$v, null, $APP.cljs$cst$1369$added, null, $APP.cljs$cst$1628$e, null, cljs$cst$2199$tx, null, $APP.cljs$cst$2200$a, null], null), null);
  return $_$$.cljs$core$IFn$_invoke$arity$1 ? $_$$.cljs$core$IFn$_invoke$arity$1($i$$) : $_$$.call(null, $i$$);
};
asami.datom.Datom.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($JSCompiler_temp_const$jscomp$750_this$$$, $JSCompiler_inline_result$jscomp$751_k$$, $v__$1$$) {
  $JSCompiler_temp_const$jscomp$750_this$$$ = $APP.cljs.core.apply;
  var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$750_this$$$.cljs$core$IFn$_invoke$arity$2, $JSCompiler_temp_const$jscomp$0$$ = asami.datom.__GT_Datom, $JSCompiler_temp_const$jscomp$1$$ = $APP.cljs.core.assoc, $JSCompiler_temp_const$jscomp$2$$ = $JSCompiler_temp_const$jscomp$1$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$3$$ = this.asami$datom$Vectorizable$as_vec$arity$1(null), $fexpr__43057$$ = new $APP.cljs.core.PersistentArrayMap(null, 5, [$APP.cljs$cst$1628$e, 
  0, $APP.cljs$cst$2200$a, 1, $APP.cljs$cst$1438$v, 2, cljs$cst$2199$tx, 3, $APP.cljs$cst$1369$added, 4], null);
  $JSCompiler_inline_result$jscomp$751_k$$ = $fexpr__43057$$.cljs$core$IFn$_invoke$arity$2 ? $fexpr__43057$$.cljs$core$IFn$_invoke$arity$2($JSCompiler_inline_result$jscomp$751_k$$, $JSCompiler_inline_result$jscomp$751_k$$) : $fexpr__43057$$.call(null, $JSCompiler_inline_result$jscomp$751_k$$, $JSCompiler_inline_result$jscomp$751_k$$);
  return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$750_this$$$, $JSCompiler_temp_const$jscomp$0$$, $JSCompiler_temp_const$jscomp$2$$.call($JSCompiler_temp_const$jscomp$1$$, $JSCompiler_temp_const$jscomp$3$$, $JSCompiler_inline_result$jscomp$751_k$$, $v__$1$$));
};
asami.datom.Datom.prototype.cljs$core$ISeqable$_seq$arity$1 = function($coll$$) {
  return $APP.cljs.core.seq(this.asami$datom$Vectorizable$as_vec$arity$1(null));
};
asami.datom.Datom.prototype.cljs$core$ICollection$_conj$arity$2 = function($coll$$, $o$$) {
  return $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2(this.asami$datom$Vectorizable$as_vec$arity$1(null), $o$$);
};
asami.datom.Datom.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1242$e, $APP.cljs$cst$1255$a, $APP.cljs$cst$57$v, $APP.cljs$cst$2201$tx, $APP.cljs$cst$2202$added], null);
};
asami.datom.Datom.cljs$lang$type = !0;
asami.datom.Datom.cljs$lang$ctorStr = "asami.datom/Datom";
asami.datom.Datom.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "asami.datom/Datom");
};
asami.datom.__GT_Datom = function($e$$, $a$$, $v$$, $tx$$, $added$$) {
  return new asami.datom.Datom($e$$, $a$$, $v$$, $tx$$, $added$$);
};
asami.datom.DatomType = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.instance_QMARK_, asami.datom.Datom));
asami.datom.datom_reader = function($added$$) {
  var $e$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($added$$, 0, null), $a$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($added$$, 1, null), $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($added$$, 2, null), $tx$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($added$$, 3, null);
  $added$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($added$$, 4, null);
  return asami.datom.__GT_Datom($e$$, $a$$, $v$$, $tx$$, $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($added$$, $APP.cljs$cst$2193$db_SLASH_add));
};
var zuko = {schema:{}};
zuko.schema.EntityPropertyElt = $APP.schema.core.Any;
zuko.schema.EntityPattern = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Symbol, "entity")], null);
zuko.schema.EntityPropertyPattern = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(zuko.schema.EntityPropertyElt, "entity"), $APP.schema.core.one(zuko.schema.EntityPropertyElt, "property"), $APP.schema.core.optional($APP.schema.core.Any, "value")], null);
zuko.schema.EPVPattern = $APP.schema.core.if$(function($p1__43035_SHARP_$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $APP.cljs.core.count($p1__43035_SHARP_$$));
}, zuko.schema.EntityPattern, zuko.schema.EntityPropertyPattern);
var output_schema43036_43093 = $APP.schema.core.Bool, input_schema43037_43094 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$2203$pattern, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$2204$s_SLASH_Any], null)], null)))], null), ret__35121__auto___43095 = zuko.schema.epv_pattern_QMARK_ = function($f$jscomp$530_pattern$$) {
  var $and__5023__auto__$$ = $APP.cljs.core.vector_QMARK_($f$jscomp$530_pattern$$);
  return $and__5023__auto__$$ ? ($f$jscomp$530_pattern$$ = $APP.cljs.core.first($f$jscomp$530_pattern$$), $APP.cljs.core.boolean$($f$jscomp$530_pattern$$) && !$APP.cljs.core.seq_QMARK_($f$jscomp$530_pattern$$)) : $and__5023__auto__$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(zuko.schema.epv_pattern_QMARK_), $APP.schema.core.__GT_FnSchema(output_schema43036_43093, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43037_43094], null)));
zuko.schema.var_marker_QMARK_ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, ["%", null, "?", null], null), null);
zuko.schema.Var = $APP.schema.core.constrained.cljs$core$IFn$_invoke$arity$2($APP.schema.core.Symbol, function($G__43060_p1__43058_SHARP_$$) {
  var $G__43059$jscomp$inline_4792_or__5025__auto__$$ = $APP.cljs.core.first($APP.cljs.core.name($G__43060_p1__43058_SHARP_$$));
  $G__43059$jscomp$inline_4792_or__5025__auto__$$ = zuko.schema.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1 ? zuko.schema.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1($G__43059$jscomp$inline_4792_or__5025__auto__$$) : zuko.schema.var_marker_QMARK_.call(null, $G__43059$jscomp$inline_4792_or__5025__auto__$$);
  if ($APP.cljs.core.truth_($G__43059$jscomp$inline_4792_or__5025__auto__$$)) {
    return $G__43059$jscomp$inline_4792_or__5025__auto__$$;
  }
  $G__43060_p1__43058_SHARP_$$ = $APP.cljs.core.first($APP.cljs.core.namespace($G__43060_p1__43058_SHARP_$$));
  return zuko.schema.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1 ? zuko.schema.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1($G__43060_p1__43058_SHARP_$$) : zuko.schema.var_marker_QMARK_.call(null, $G__43060_p1__43058_SHARP_$$);
});
var output_schema43062_43096 = $APP.schema.core.Bool, input_schema43063_43097 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1237$x, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___43098 = zuko.schema.vartest_QMARK_ = function($G__43067$jscomp$inline_9717_JSCompiler_inline_result$jscomp$9311_x$$) {
  var $JSCompiler_temp$jscomp$9308_JSCompiler_temp_const$$;
  if ($JSCompiler_temp$jscomp$9308_JSCompiler_temp_const$$ = $G__43067$jscomp$inline_9717_JSCompiler_inline_result$jscomp$9311_x$$ instanceof $APP.cljs.core.Symbol) {
    $JSCompiler_temp$jscomp$9308_JSCompiler_temp_const$$ = $APP.cljs.core;
    var $JSCompiler_temp_const$$ = $JSCompiler_temp$jscomp$9308_JSCompiler_temp_const$$.boolean$;
    var $G__43066$jscomp$inline_9716_or__5025__auto__$$ = $APP.cljs.core.first($APP.cljs.core.name($G__43067$jscomp$inline_9717_JSCompiler_inline_result$jscomp$9311_x$$));
    $G__43066$jscomp$inline_9716_or__5025__auto__$$ = zuko.schema.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1 ? zuko.schema.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1($G__43066$jscomp$inline_9716_or__5025__auto__$$) : zuko.schema.var_marker_QMARK_.call(null, $G__43066$jscomp$inline_9716_or__5025__auto__$$);
    $APP.cljs.core.truth_($G__43066$jscomp$inline_9716_or__5025__auto__$$) ? $G__43067$jscomp$inline_9717_JSCompiler_inline_result$jscomp$9311_x$$ = $G__43066$jscomp$inline_9716_or__5025__auto__$$ : ($G__43067$jscomp$inline_9717_JSCompiler_inline_result$jscomp$9311_x$$ = $APP.cljs.core.first($APP.cljs.core.namespace($G__43067$jscomp$inline_9717_JSCompiler_inline_result$jscomp$9311_x$$)), $G__43067$jscomp$inline_9717_JSCompiler_inline_result$jscomp$9311_x$$ = zuko.schema.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1 ? 
    zuko.schema.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1($G__43067$jscomp$inline_9717_JSCompiler_inline_result$jscomp$9311_x$$) : zuko.schema.var_marker_QMARK_.call(null, $G__43067$jscomp$inline_9717_JSCompiler_inline_result$jscomp$9311_x$$));
    $JSCompiler_temp$jscomp$9308_JSCompiler_temp_const$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp$jscomp$9308_JSCompiler_temp_const$$, $G__43067$jscomp$inline_9717_JSCompiler_inline_result$jscomp$9311_x$$);
  }
  return $JSCompiler_temp$jscomp$9308_JSCompiler_temp_const$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(zuko.schema.vartest_QMARK_), $APP.schema.core.__GT_FnSchema(output_schema43062_43096, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43063_43097], null)));
zuko.schema.vars = function($c$$) {
  return $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(zuko.schema.vartest_QMARK_, $c$$);
};
var output_schema43068_43099 = $APP.schema.core.Bool, input_schema43069_43100 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$2203$pattern, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$2204$s_SLASH_Any], null)], null)))], null), ret__35121__auto___43101 = zuko.schema.filter_pattern_QMARK_ = function($pattern$$) {
  return $APP.cljs.core.vector_QMARK_($pattern$$) && $APP.cljs.core.seq_QMARK_($APP.cljs.core.first($pattern$$)) && $APP.cljs.core.second($pattern$$) == null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(zuko.schema.filter_pattern_QMARK_), $APP.schema.core.__GT_FnSchema(output_schema43068_43099, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43069_43100], null)));
zuko.schema.eval_pattern_QMARK_ = function($p$jscomp$96_v$$) {
  var $and__5023__auto__$jscomp$168_and__5023__auto____$1$jscomp$38_e$$ = $APP.cljs.core.vector_QMARK_($p$jscomp$96_v$$);
  return $and__5023__auto__$jscomp$168_and__5023__auto____$1$jscomp$38_e$$ ? ($and__5023__auto__$jscomp$168_and__5023__auto____$1$jscomp$38_e$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $APP.cljs.core.count($p$jscomp$96_v$$))) ? ($and__5023__auto__$jscomp$168_and__5023__auto____$1$jscomp$38_e$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p$jscomp$96_v$$, 0, null), $p$jscomp$96_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p$jscomp$96_v$$, 1, null), zuko.schema.vartest_QMARK_($p$jscomp$96_v$$) && 
  $APP.cljs.core.sequential_QMARK_($and__5023__auto__$jscomp$168_and__5023__auto____$1$jscomp$38_e$$) && !$APP.cljs.core.vector_QMARK_($and__5023__auto__$jscomp$168_and__5023__auto____$1$jscomp$38_e$$)) : $and__5023__auto__$jscomp$168_and__5023__auto____$1$jscomp$38_e$$ : $and__5023__auto__$jscomp$168_and__5023__auto____$1$jscomp$38_e$$;
};
zuko.schema.operators = new $APP.cljs.core.PersistentVector(null, 8, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$408$and, cljs$cst$2206$AND, $APP.cljs$cst$403$or, cljs$cst$2207$OR, $APP.cljs$cst$946$not, cljs$cst$2208$NOT, $APP.cljs$cst$1502$optional, cljs$cst$2209$OPTIONAL], null);
var output_schema43080_43102 = $APP.schema.core.Bool, input_schema43081_43103 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), cljs$cst$2210$arg0)], null), ret__35121__auto___43104 = zuko.schema.op_pattern_QMARK_ = function($p__43084$$) {
  var $op$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__43084$$, 0, null);
  return $APP.cljs.core.seq_QMARK_($p__43084$$) && $APP.cljs.core.boolean$($APP.cljs.core.some($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._EQ_, $op$$), zuko.schema.operators));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(zuko.schema.op_pattern_QMARK_), $APP.schema.core.__GT_FnSchema(output_schema43080_43102, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43081_43103], null)));
zuko.schema.Operators = $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.schema.core.enum$, zuko.schema.operators);
zuko.schema.unnested_list_QMARK_ = function($p__43088$$) {
  var $fl$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__43088$$, 0, null);
  return $APP.cljs.core.vector_QMARK_($p__43088$$) && $APP.cljs.core.seq_QMARK_($fl$$) && $APP.cljs.core.not_any_QMARK_($APP.cljs.core.seq_QMARK_, $fl$$);
};
zuko.schema.FilterPattern = $APP.schema.core.constrained.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), "Predicate")], null), zuko.schema.unnested_list_QMARK_);
zuko.schema.EvalPattern = $APP.schema.core.constrained.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), "Expression"), $APP.schema.core.one(zuko.schema.Var, "Binding var")], null), zuko.schema.unnested_list_QMARK_);
zuko.schema.OpPattern = $APP.schema.core.constrained.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(zuko.schema.Operators, "operator"), $APP.schema.core.one($APP.schema.core.recursive(new $APP.cljs.core.Var(function() {
  return zuko.schema.Pattern;
}, cljs$cst$2211$zuko_DOT_schema_SLASH_Pattern, $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$176$ns, $APP.cljs$cst$272$name, $APP.cljs$cst$208$file, $APP.cljs$cst$218$end_column, $APP.cljs$cst$216$column, $APP.cljs$cst$209$line, $APP.cljs$cst$774$declared, $APP.cljs$cst$217$end_line, $APP.cljs$cst$273$arglists, $APP.cljs$cst$256$doc, $APP.cljs$cst$171$test], [cljs$cst$2212$zuko_DOT_schema, cljs$cst$2213$Pattern, "zuko/schema.cljc", 17, 1, 78, !0, 78, $APP.cljs.core.List.EMPTY, null, 
$APP.cljs.core.truth_(zuko.schema.Pattern) ? zuko.schema.Pattern.cljs$lang$test : null]))), "first pattern"), $APP.schema.core.recursive(new $APP.cljs.core.Var(function() {
  return zuko.schema.Pattern;
}, cljs$cst$2211$zuko_DOT_schema_SLASH_Pattern, $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$176$ns, $APP.cljs$cst$272$name, $APP.cljs$cst$208$file, $APP.cljs$cst$218$end_column, $APP.cljs$cst$216$column, $APP.cljs$cst$209$line, $APP.cljs$cst$774$declared, $APP.cljs$cst$217$end_line, $APP.cljs$cst$273$arglists, $APP.cljs$cst$256$doc, $APP.cljs$cst$171$test], [cljs$cst$2212$zuko_DOT_schema, cljs$cst$2213$Pattern, "zuko/schema.cljc", 17, 1, 78, !0, 78, $APP.cljs.core.List.EMPTY, null, 
$APP.cljs.core.truth_(zuko.schema.Pattern) ? zuko.schema.Pattern.cljs$lang$test : null])))], null), $APP.cljs.core.seq_QMARK_);
zuko.schema.Pattern = $APP.schema.core.if$($APP.cljs.core.seq_QMARK_, zuko.schema.OpPattern, $APP.schema.core.if$($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.seq_QMARK_, $APP.cljs.core.first), $APP.schema.core.if$($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.nil_QMARK_, $APP.cljs.core.second), zuko.schema.FilterPattern, zuko.schema.EvalPattern), zuko.schema.EPVPattern));
zuko.schema.Value = $APP.schema.core.Any;
zuko.schema.Results = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.Value], null)], null);
zuko.schema.EntityPropAxiomElt = $APP.schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.schema.core.Keyword, $APP.schema.core.Str, $APP.schema.core.Num], 0));
zuko.schema.EntityPropValAxiomElt = $APP.schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.complement($APP.cljs.core.symbol_QMARK_), $APP.schema.core.Any], 0));
zuko.schema.Triple = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, "entity"), $APP.schema.core.one($APP.schema.core.Any, "property"), $APP.schema.core.one($APP.schema.core.Any, "value")], null);
zuko.schema.Axiom = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(zuko.schema.EntityPropAxiomElt, "entity"), $APP.schema.core.one(zuko.schema.EntityPropAxiomElt, "property"), $APP.schema.core.one(zuko.schema.EntityPropValAxiomElt, "value")], null);
asami.common_index = {};
asami.common_index.subvseq = function($v$$, $a$$, $b$$) {
  return $APP.cljs.core.vector_QMARK_($v$$) ? $APP.cljs.core.subvec.cljs$core$IFn$_invoke$arity$3($v$$, $a$$, $b$$) : $APP.cljs.core.drop.cljs$core$IFn$_invoke$arity$2($a$$, $APP.cljs.core.take.cljs$core$IFn$_invoke$arity$2($b$$, $v$$));
};
asami.common_index.graph_transact = function($graph$$, $tx_id$$, $assertions$$, $retractions$$, $generated_data$$) {
  var $r$$ = $APP.cljs.core.deref($generated_data$$), $a$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($r$$, 0, null);
  $r$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($r$$, 1, null);
  var $asserts$$ = $APP.cljs.core.transient$($a$$), $retracts$$ = $APP.cljs.core.transient$($r$$);
  $a$$ = function() {
    var $gr__$1$$ = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc$$, $o$$) {
      var $s$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 0, null), $p$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 1, null);
      $o$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 2, null);
      var $ad$$ = asami.graph.graph_delete($acc$$, $s$$, $p$$, $o$$);
      $ad$$ !== $acc$$ && $APP.cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2($retracts$$, asami.datom.__GT_Datom($s$$, $p$$, $o$$, $tx_id$$, !1));
      return $ad$$;
    }, $graph$$, $retractions$$);
    return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc$$, $o$$) {
      var $s$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 0, null), $p$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 1, null);
      $o$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 2, null);
      var $aa$$ = asami.graph.graph_add($acc$$, $s$$, $p$$, $o$$, $tx_id$$);
      $aa$$ !== $acc$$ && $APP.cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2($asserts$$, asami.datom.__GT_Datom($s$$, $p$$, $o$$, $tx_id$$, !0));
      return $aa$$;
    }, $gr__$1$$, $assertions$$);
  }();
  $APP.cljs.core.vreset_BANG_($generated_data$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.persistent_BANG_($asserts$$), $APP.cljs.core.persistent_BANG_($retracts$$)], null));
  return $a$$;
};
asami.common_index.NestedIndex = function() {
};
var asami$common_index$NestedIndex$lowest_level_fn$dyn_43564 = function($this$$$) {
  var $m__5372__auto__$jscomp$207_m__5374__auto__$$ = asami.common_index.lowest_level_fn[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$207_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$207_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$207_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$207_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$207_m__5374__auto__$$ = asami.common_index.lowest_level_fn._;
  if ($m__5372__auto__$jscomp$207_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$207_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$207_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$207_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("NestedIndex.lowest-level-fn", $this$$$);
};
asami.common_index.lowest_level_fn = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$common_index$NestedIndex$lowest_level_fn$arity$1 != null ? $this$$$.asami$common_index$NestedIndex$lowest_level_fn$arity$1($this$$$) : asami$common_index$NestedIndex$lowest_level_fn$dyn_43564($this$$$);
};
var asami$common_index$NestedIndex$lowest_level_sets_fn$dyn_43565 = function($this$$$) {
  var $m__5372__auto__$jscomp$208_m__5374__auto__$$ = asami.common_index.lowest_level_sets_fn[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$208_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$208_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$208_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$208_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$208_m__5374__auto__$$ = asami.common_index.lowest_level_sets_fn._;
  if ($m__5372__auto__$jscomp$208_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$208_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$208_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$208_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("NestedIndex.lowest-level-sets-fn", $this$$$);
};
asami.common_index.lowest_level_sets_fn = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$common_index$NestedIndex$lowest_level_sets_fn$arity$1 != null ? $this$$$.asami$common_index$NestedIndex$lowest_level_sets_fn$arity$1($this$$$) : asami$common_index$NestedIndex$lowest_level_sets_fn$dyn_43565($this$$$);
};
var asami$common_index$NestedIndex$lowest_level_set_fn$dyn_43566 = function($this$$$) {
  var $m__5372__auto__$jscomp$209_m__5374__auto__$$ = asami.common_index.lowest_level_set_fn[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$209_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$209_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$209_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$209_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$209_m__5374__auto__$$ = asami.common_index.lowest_level_set_fn._;
  if ($m__5372__auto__$jscomp$209_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$209_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$209_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$209_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("NestedIndex.lowest-level-set-fn", $this$$$);
};
asami.common_index.lowest_level_set_fn = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$common_index$NestedIndex$lowest_level_set_fn$arity$1 != null ? $this$$$.asami$common_index$NestedIndex$lowest_level_set_fn$arity$1($this$$$) : asami$common_index$NestedIndex$lowest_level_set_fn$dyn_43566($this$$$);
};
var asami$common_index$NestedIndex$mid_level_map_fn$dyn_43567 = function($this$$$) {
  var $m__5372__auto__$jscomp$210_m__5374__auto__$$ = asami.common_index.mid_level_map_fn[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$210_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$210_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$210_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$210_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$210_m__5374__auto__$$ = asami.common_index.mid_level_map_fn._;
  if ($m__5372__auto__$jscomp$210_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$210_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$210_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$210_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("NestedIndex.mid-level-map-fn", $this$$$);
};
asami.common_index.mid_level_map_fn = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$common_index$NestedIndex$mid_level_map_fn$arity$1 != null ? $this$$$.asami$common_index$NestedIndex$mid_level_map_fn$arity$1($this$$$) : asami$common_index$NestedIndex$mid_level_map_fn$dyn_43567($this$$$);
};
asami.common_index._QMARK_ = cljs$cst$2214$_QMARK_;
asami.common_index.simplify = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$200_argseq__5756__auto__$$ = [], $len__5749__auto___43568$$ = arguments.length, $i__5750__auto___43569$$ = 0;;) {
    if ($i__5750__auto___43569$$ < $len__5749__auto___43568$$) {
      $args__5755__auto__$jscomp$200_argseq__5756__auto__$$.push(arguments[$i__5750__auto___43569$$]), $i__5750__auto___43569$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$200_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$200_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$200_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return asami.common_index.simplify.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$200_argseq__5756__auto__$$);
};
asami.common_index.simplify.cljs$core$IFn$_invoke$arity$variadic = function($g$$, $ks$$) {
  return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__43116_SHARP_$$) {
    return zuko.schema.vartest_QMARK_($p1__43116_SHARP_$$) ? asami.common_index._QMARK_ : $APP.cljs$cst$1438$v;
  }, $ks$$);
};
asami.common_index.simplify.cljs$lang$maxFixedArity = 1;
asami.common_index.simplify.cljs$lang$applyTo = function($seq43117_seq43117__$1$$) {
  var $G__43118$$ = $APP.cljs.core.first($seq43117_seq43117__$1$$);
  $seq43117_seq43117__$1$$ = $APP.cljs.core.next($seq43117_seq43117__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__43118$$, $seq43117_seq43117__$1$$);
};
asami.common_index.trans_simplify = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$201_argseq__5756__auto__$$ = [], $len__5749__auto___43571$$ = arguments.length, $i__5750__auto___43572$$ = 0;;) {
    if ($i__5750__auto___43572$$ < $len__5749__auto___43571$$) {
      $args__5755__auto__$jscomp$201_argseq__5756__auto__$$.push(arguments[$i__5750__auto___43572$$]), $i__5750__auto___43572$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$201_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$201_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$201_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return asami.common_index.trans_simplify.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$201_argseq__5756__auto__$$);
};
asami.common_index.trans_simplify.cljs$core$IFn$_invoke$arity$variadic = function($g$$, $tag$$, $ks$$) {
  return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__43119_SHARP_$$) {
    return zuko.schema.vartest_QMARK_($p1__43119_SHARP_$$) ? asami.common_index._QMARK_ : $APP.cljs$cst$1438$v;
  }, $ks$$);
};
asami.common_index.trans_simplify.cljs$lang$maxFixedArity = 2;
asami.common_index.trans_simplify.cljs$lang$applyTo = function($G__43122_seq43120$$) {
  var $G__43121$$ = $APP.cljs.core.first($G__43122_seq43120$$), $seq43120__$1_seq43120__$2$$ = $APP.cljs.core.next($G__43122_seq43120$$);
  $G__43122_seq43120$$ = $APP.cljs.core.first($seq43120__$1_seq43120__$2$$);
  $seq43120__$1_seq43120__$2$$ = $APP.cljs.core.next($seq43120__$1_seq43120__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__43121$$, $G__43122_seq43120$$, $seq43120__$1_seq43120__$2$$);
};
asami.common_index.count_embedded_index = function($edx$$) {
  return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._PLUS_, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count, $APP.cljs.core.vals($edx$$)));
};
asami.common_index.count_from_index = function() {
  var $method_table__5622__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $prefer_table__5623__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $method_cache__5624__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $cached_hierarchy__5625__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), 
  $JSCompiler_temp_const$jscomp$754_hierarchy__5626__auto__$$ = $APP.cljs.core.get, $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$754_hierarchy__5626__auto__$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.PersistentArrayMap.EMPTY;
  var $JSCompiler_inline_result$jscomp$755_fexpr__43123$$ = $APP.cljs.core.get_global_hierarchy;
  $JSCompiler_inline_result$jscomp$755_fexpr__43123$$ = $JSCompiler_inline_result$jscomp$755_fexpr__43123$$.cljs$core$IFn$_invoke$arity$0 ? $JSCompiler_inline_result$jscomp$755_fexpr__43123$$.cljs$core$IFn$_invoke$arity$0() : $JSCompiler_inline_result$jscomp$755_fexpr__43123$$.call(null);
  $JSCompiler_temp_const$jscomp$754_hierarchy__5626__auto__$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$754_hierarchy__5626__auto__$$, $JSCompiler_temp_const$jscomp$0$$, $APP.cljs$cst$204$hierarchy, $JSCompiler_inline_result$jscomp$755_fexpr__43123$$);
  return new $APP.cljs.core.MultiFn($APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("asami.common-index", "count-from-index"), asami.common_index.simplify, $APP.cljs$cst$205$default, $JSCompiler_temp_const$jscomp$754_hierarchy__5626__auto__$$, $method_table__5622__auto__$$, $prefer_table__5623__auto__$$, $method_cache__5624__auto__$$, $cached_hierarchy__5625__auto__$$);
}();
asami.common_index.count_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v], null), function($idx$$, $s$$, $p$$, $o$$) {
  $idx$$ = $APP.cljs.core.__destructure_map($idx$$);
  $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, cljs$cst$2215$spo);
  return $APP.cljs.core.truth_($APP.cljs.core.get_in.cljs$core$IFn$_invoke$arity$2($idx$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s$$, $p$$, $o$$], null))) ? 1 : 0;
});
asami.common_index.count_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v, asami.common_index._QMARK_], null), function($idx$$, $s$$, $p$$, $o$$) {
  $idx$$ = $APP.cljs.core.__destructure_map($idx$$);
  $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, cljs$cst$2215$spo);
  return $APP.cljs.core.count($APP.cljs.core.get_in.cljs$core$IFn$_invoke$arity$2($idx$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s$$, $p$$], null)));
});
asami.common_index.count_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, asami.common_index._QMARK_, $APP.cljs$cst$1438$v], null), function($idx$$, $s$$, $p$$, $o$$) {
  $idx$$ = $APP.cljs.core.__destructure_map($idx$$);
  $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $APP.cljs$cst$1584$pos);
  return $APP.cljs.core.count($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function($G__43131__$1_os$$) {
    $G__43131__$1_os$$ = $G__43131__$1_os$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43131__$1_os$$, $o$$);
    return $G__43131__$1_os$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43131__$1_os$$, $s$$);
  }, $APP.cljs.core.vals($idx$$)));
});
asami.common_index.count_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, asami.common_index._QMARK_, asami.common_index._QMARK_], null), function($idx$$, $s$$, $p$$, $o$$) {
  $idx$$ = $APP.cljs.core.__destructure_map($idx$$);
  $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, cljs$cst$2215$spo);
  return asami.common_index.count_embedded_index($idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($s$$) : $idx$$.call(null, $s$$));
});
asami.common_index.count_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, $APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v], null), function($idx$$, $s$$, $p$$, $o$$) {
  $idx$$ = $APP.cljs.core.__destructure_map($idx$$);
  $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $APP.cljs$cst$1584$pos);
  return $APP.cljs.core.count($APP.cljs.core.get_in.cljs$core$IFn$_invoke$arity$2($idx$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p$$, $o$$], null)));
});
asami.common_index.count_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, $APP.cljs$cst$1438$v, asami.common_index._QMARK_], null), function($idx$$, $s$$, $p$$, $o$$) {
  $idx$$ = $APP.cljs.core.__destructure_map($idx$$);
  $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $APP.cljs$cst$1584$pos);
  return asami.common_index.count_embedded_index($idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($p$$) : $idx$$.call(null, $p$$));
});
asami.common_index.count_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, asami.common_index._QMARK_, $APP.cljs$cst$1438$v], null), function($idx$$, $s$$, $p$$, $o$$) {
  $idx$$ = $APP.cljs.core.__destructure_map($idx$$);
  $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $APP.cljs$cst$1584$pos);
  return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._PLUS_, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count, $APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$2(function($p1__43142_SHARP_$$) {
    return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($p1__43142_SHARP_$$, $o$$);
  }, $APP.cljs.core.vals($idx$$))));
});
asami.common_index.count_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, asami.common_index._QMARK_, asami.common_index._QMARK_], null), function($idx$$, $s$$, $p$$, $o$$) {
  $idx$$ = $APP.cljs.core.__destructure_map($idx$$);
  $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, cljs$cst$2215$spo);
  return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._PLUS_, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(asami.common_index.count_embedded_index, $APP.cljs.core.vals($idx$$)));
});
asami.common_index.Predicate = $APP.schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.schema.core.Keyword, zuko.schema.Var, $APP.schema.core.Str], 0));
var output_schema43158_43579 = asami.common_index.Predicate, input_schema43159_43580 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.common_index.Predicate, $APP.cljs.core.with_meta($APP.cljs$cst$1244$pred, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2216$Predicate], null)))], null), ret__35121__auto___43581 = asami.common_index.plain = function($pred$$) {
  var $nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$ = $APP.cljs.core.name($pred$$);
  var $G__43166$jscomp$inline_9720_and__5023__auto__$$ = $APP.cljs.core.last($nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$);
  var $fexpr__43165$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, ["*", null, "+", null], null), null);
  $G__43166$jscomp$inline_9720_and__5023__auto__$$ = $fexpr__43165$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__43165$$.cljs$core$IFn$_invoke$arity$1($G__43166$jscomp$inline_9720_and__5023__auto__$$) : $fexpr__43165$$.call(null, $G__43166$jscomp$inline_9720_and__5023__auto__$$);
  $APP.cljs.core.truth_($G__43166$jscomp$inline_9720_and__5023__auto__$$) ? ($nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$ = $APP.cljs.core.subs.cljs$core$IFn$_invoke$arity$3($nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$, 0, $nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$.length - 1), $nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$ = $pred$$ instanceof $APP.cljs.core.Keyword ? $APP.cljs.core.keyword.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.namespace($pred$$), $nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$) : 
  $pred$$ instanceof $APP.cljs.core.Symbol ? $APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.namespace($pred$$), $nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$) : typeof $pred$$ === "string" ? $nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$ : null) : $nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$ = $G__43166$jscomp$inline_9720_and__5023__auto__$$;
  return $APP.cljs.core.truth_($nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$) ? $nm$jscomp$2_or__5025__auto__$jscomp$333_trunc_name$$ : $pred$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.common_index.plain), $APP.schema.core.__GT_FnSchema(output_schema43158_43579, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43159_43580], null)));
asami.common_index.second_last = function($s$$) {
  var $c$$ = $APP.cljs.core.count($s$$);
  return 1 < $c$$ ? $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($s$$, $c$$ - 2) : null;
};
asami.common_index.check_for_transitive = function($pred$$) {
  var $map__43167_trans_QMARK_$$ = $APP.cljs.core.meta($pred$$), $map__43167__$1_not_trans_QMARK_$$ = $APP.cljs.core.__destructure_map($map__43167_trans_QMARK_$$);
  $map__43167_trans_QMARK_$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43167__$1_not_trans_QMARK_$$, cljs$cst$2217$trans);
  $map__43167__$1_not_trans_QMARK_$$ = $APP.cljs.core.contains_QMARK_($map__43167__$1_not_trans_QMARK_$$, cljs$cst$2217$trans) && $APP.cljs.core.not($map__43167_trans_QMARK_$$);
  var $G__43169$jscomp$inline_4802_pname$$ = $APP.cljs.core.name($pred$$);
  var $and__5023__auto__$jscomp$inline_4801_fexpr__43168$$ = $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2("'", asami.common_index.second_last($G__43169$jscomp$inline_4802_pname$$));
  $and__5023__auto__$jscomp$inline_4801_fexpr__43168$$ ? ($G__43169$jscomp$inline_4802_pname$$ = $APP.cljs.core.last($G__43169$jscomp$inline_4802_pname$$), $and__5023__auto__$jscomp$inline_4801_fexpr__43168$$ = new $APP.cljs.core.PersistentArrayMap(null, 2, ["*", $APP.cljs$cst$2009$star, "+", $APP.cljs$cst$2008$plus], null), $G__43169$jscomp$inline_4802_pname$$ = $and__5023__auto__$jscomp$inline_4801_fexpr__43168$$.cljs$core$IFn$_invoke$arity$1 ? $and__5023__auto__$jscomp$inline_4801_fexpr__43168$$.cljs$core$IFn$_invoke$arity$1($G__43169$jscomp$inline_4802_pname$$) : 
  $and__5023__auto__$jscomp$inline_4801_fexpr__43168$$.call(null, $G__43169$jscomp$inline_4802_pname$$)) : $G__43169$jscomp$inline_4802_pname$$ = $and__5023__auto__$jscomp$inline_4801_fexpr__43168$$;
  return $map__43167__$1_not_trans_QMARK_$$ ? $APP.cljs.core.truth_($G__43169$jscomp$inline_4802_pname$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index.plain($pred$$), $G__43169$jscomp$inline_4802_pname$$], null) : null : $APP.cljs.core.truth_($G__43169$jscomp$inline_4802_pname$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index.plain($pred$$), $G__43169$jscomp$inline_4802_pname$$], 
  null) : $APP.cljs.core.truth_($map__43167_trans_QMARK_$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$pred$$, $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2009$star, null, $APP.cljs$cst$2008$plus, null], null), null), $map__43167_trans_QMARK_$$, $APP.cljs$cst$2009$star)], null) : $map__43167_trans_QMARK_$$;
};
asami.common_index.zero_step = function($tag$$, $zero$$, $result$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2009$star, $tag$$) ? $APP.cljs.core.cons($zero$$, $result$$) : $result$$;
};
asami.common_index.get_transitive_from_index = function() {
  var $method_table__5622__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $prefer_table__5623__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $method_cache__5624__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $cached_hierarchy__5625__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), 
  $JSCompiler_temp_const$jscomp$758_hierarchy__5626__auto__$$ = $APP.cljs.core.get, $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$758_hierarchy__5626__auto__$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.PersistentArrayMap.EMPTY;
  var $JSCompiler_inline_result$jscomp$759_fexpr__43170$$ = $APP.cljs.core.get_global_hierarchy;
  $JSCompiler_inline_result$jscomp$759_fexpr__43170$$ = $JSCompiler_inline_result$jscomp$759_fexpr__43170$$.cljs$core$IFn$_invoke$arity$0 ? $JSCompiler_inline_result$jscomp$759_fexpr__43170$$.cljs$core$IFn$_invoke$arity$0() : $JSCompiler_inline_result$jscomp$759_fexpr__43170$$.call(null);
  $JSCompiler_temp_const$jscomp$758_hierarchy__5626__auto__$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$758_hierarchy__5626__auto__$$, $JSCompiler_temp_const$jscomp$0$$, $APP.cljs$cst$204$hierarchy, $JSCompiler_inline_result$jscomp$759_fexpr__43170$$);
  return new $APP.cljs.core.MultiFn($APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("asami.common-index", "get-transitive-from-index"), asami.common_index.trans_simplify, $APP.cljs$cst$205$default, $JSCompiler_temp_const$jscomp$758_hierarchy__5626__auto__$$, $method_table__5622__auto__$$, $prefer_table__5623__auto__$$, $method_cache__5624__auto__$$, $cached_hierarchy__5625__auto__$$);
}();
asami.common_index.get_transitive_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v], null), function($p__43171$$, $step$jscomp$35_tag$$, $s$$, $next_nodes_nodes$jscomp$43_p$$, $o$$) {
  var $map__43172__$1$$ = $APP.cljs.core.__destructure_map($p__43171$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43172__$1$$, cljs$cst$2215$spo), $get_objects$$ = asami.common_index.lowest_level_fn($map__43172__$1$$), $not_solution_QMARK_$$ = function($nodes$$) {
    var $or__5025__auto__$$ = $APP.cljs.core.second($nodes$$);
    return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2($o$$, $APP.cljs.core.first($nodes$$));
  }, $edges_from$$ = function($n$$) {
    var $edge_idx$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($s$$) : $idx$$.call(null, $s$$);
    return function $asami$common_index$edges_from_$_iter__43243$$($s__43244$$) {
      return new $APP.cljs.core.LazySeq(null, function() {
        for (var $s__43244__$1$$ = $s__43244$$;;) {
          var $fs__5500__auto__$jscomp$6_iterys__5499__auto__$jscomp$6_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43244__$1$$);
          if ($fs__5500__auto__$jscomp$6_iterys__5499__auto__$jscomp$6_temp__5825__auto__$$) {
            var $xs__6385__auto__$$ = $fs__5500__auto__$jscomp$6_iterys__5499__auto__$jscomp$6_temp__5825__auto__$$, $p__$1$$ = $APP.cljs.core.first($xs__6385__auto__$$);
            $fs__5500__auto__$jscomp$6_iterys__5499__auto__$jscomp$6_temp__5825__auto__$$ = function($s__43244__$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edge_idx$$, $get_objects$$, $map__43172$$, $map__43172__$1$$, $graph$$, $idx$$) {
              return function $asami$common_index$edges_from_$_iter__43243_$_iter__43245$$($s__43246$$) {
                return new $APP.cljs.core.LazySeq(null, function($s__43244__$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edge_idx$$, $get_objects$$, $map__43172$$, $map__43172__$1$$, $graph$$, $idx$$) {
                  return function() {
                    for (;;) {
                      var $s__43246__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43246$$);
                      if ($s__43246__$2_temp__5825__auto____$1$$) {
                        if ($APP.cljs.core.chunked_seq_QMARK_($s__43246__$2_temp__5825__auto____$1$$)) {
                          var $JSCompiler_inline_result$jscomp$760_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43246__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$760_c__5501__auto__$$), $b__43248_o__$1$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                          a: {
                            for (var $i__43247$$ = 0;;) {
                              if ($i__43247$$ < $size__5502__auto__$$) {
                                var $o__$1$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$760_c__5501__auto__$$, $i__43247$$);
                                $APP.cljs.core.chunk_append($b__43248_o__$1$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p__$1$$, $o__$1$$], null));
                                $i__43247$$ += 1;
                              } else {
                                $JSCompiler_inline_result$jscomp$760_c__5501__auto__$$ = !0;
                                break a;
                              }
                            }
                            $JSCompiler_inline_result$jscomp$760_c__5501__auto__$$ = void 0;
                          }
                          return $JSCompiler_inline_result$jscomp$760_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43248_o__$1$$), $asami$common_index$edges_from_$_iter__43243_$_iter__43245$$($APP.cljs.core.chunk_rest($s__43246__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43248_o__$1$$), null);
                        }
                        $b__43248_o__$1$$ = $APP.cljs.core.first($s__43246__$2_temp__5825__auto____$1$$);
                        return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p__$1$$, $b__43248_o__$1$$], null), $asami$common_index$edges_from_$_iter__43243_$_iter__43245$$($APP.cljs.core.rest($s__43246__$2_temp__5825__auto____$1$$)));
                      }
                      return null;
                    }
                  };
                }($s__43244__$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edge_idx$$, $get_objects$$, $map__43172$$, $map__43172__$1$$, $graph$$, $idx$$), null, null);
              };
            }($s__43244__$1$$, $p__$1$$, $xs__6385__auto__$$, $fs__5500__auto__$jscomp$6_iterys__5499__auto__$jscomp$6_temp__5825__auto__$$, $edge_idx$$, $get_objects$$, $p__43171$$, $map__43172__$1$$, $map__43172__$1$$, $idx$$);
            if ($fs__5500__auto__$jscomp$6_iterys__5499__auto__$jscomp$6_temp__5825__auto__$$ = $APP.cljs.core.seq($fs__5500__auto__$jscomp$6_iterys__5499__auto__$jscomp$6_temp__5825__auto__$$(function() {
              var $G__43249$$ = $edge_idx$$.cljs$core$IFn$_invoke$arity$1 ? $edge_idx$$.cljs$core$IFn$_invoke$arity$1($p__$1$$) : $edge_idx$$.call(null, $p__$1$$);
              return $get_objects$$.cljs$core$IFn$_invoke$arity$1 ? $get_objects$$.cljs$core$IFn$_invoke$arity$1($G__43249$$) : $get_objects$$.call(null, $G__43249$$);
            }()))) {
              return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$6_iterys__5499__auto__$jscomp$6_temp__5825__auto__$$, $asami$common_index$edges_from_$_iter__43243$$($APP.cljs.core.rest($s__43244__$1$$)));
            }
            $s__43244__$1$$ = $APP.cljs.core.rest($s__43244__$1$$);
          } else {
            return null;
          }
        }
      }, null, null);
    }($APP.cljs.core.keys($edge_idx$$));
  };
  $step$jscomp$35_tag$$ = function($G__43253__$1_nodes$$, $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$) {
    var $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$ = $APP.cljs.core.seq($G__43253__$1_nodes$$);
    $APP.cljs.core.first($G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$);
    $APP.cljs.core.next($G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$);
    $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$ = $APP.cljs.core.PersistentVector.EMPTY;
    for (var $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$ = $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$;;) {
      $G__43253__$1_nodes$$ = $APP.cljs.core.seq($G__43253__$1_nodes$$);
      var $G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$ = $APP.cljs.core.first($G__43253__$1_nodes$$);
      $G__43253__$1_nodes$$ = $APP.cljs.core.next($G__43253__$1_nodes$$);
      $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$ = $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$;
      var $G__43596$jscomp$inline_9742_G__43599$jscomp$inline_9745_edge_result__$2$$ = $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$;
      a: {
        $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$ = $edges_from$$($G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$);
        $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$ = $APP.cljs.core.seq($G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$);
        $G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$ = $APP.cljs.core.first($edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$);
        $APP.cljs.core.next($edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$);
        $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$, 0, null);
        $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$, 1, null);
        $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$ = $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$;
        for ($G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$ = $G__43596$jscomp$inline_9742_G__43599$jscomp$inline_9745_edge_result__$2$$;;) {
          $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$ = $APP.cljs.core.seq($G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$);
          $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$ = $APP.cljs.core.first($G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$);
          $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$ = $APP.cljs.core.next($G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$);
          var $JSCompiler_temp_const$jscomp$inline_9739_vec__43310$$ = $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$;
          $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$inline_9739_vec__43310$$, 0, null);
          $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$inline_9739_vec__43310$$, 1, null);
          $G__43596$jscomp$inline_9742_G__43599$jscomp$inline_9745_edge_result__$2$$ = $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$;
          $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$ = $G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$;
          if ($APP.cljs.core.truth_($JSCompiler_temp_const$jscomp$inline_9739_vec__43310$$)) {
            if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($o$$, $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$)) {
              $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$ = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$], 
              null), null], null);
              break a;
            }
            $G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$ = $APP.cljs.core;
            $JSCompiler_temp_const$jscomp$inline_9739_vec__43310$$ = $G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$.truth_;
            var $JSCompiler_inline_result$jscomp$inline_9740_or__5025__auto__$$ = $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$.cljs$core$IFn$_invoke$arity$1 ? $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$.cljs$core$IFn$_invoke$arity$1($G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$) : 
            $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$.call(null, $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$);
            $JSCompiler_inline_result$jscomp$inline_9740_or__5025__auto__$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$inline_9740_or__5025__auto__$$) ? $JSCompiler_inline_result$jscomp$inline_9740_or__5025__auto__$$ : !($G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$ instanceof $APP.cljs.core.Keyword);
            $JSCompiler_temp_const$jscomp$inline_9739_vec__43310$$.call($G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$, $JSCompiler_inline_result$jscomp$inline_9740_or__5025__auto__$$) ? ($G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$ = $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$, 
            $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$ = $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$, $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$ = $G__43596$jscomp$inline_9742_G__43599$jscomp$inline_9745_edge_result__$2$$) : 
            ($G__43596$jscomp$inline_9742_G__43599$jscomp$inline_9745_edge_result__$2$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($G__43596$jscomp$inline_9742_G__43599$jscomp$inline_9745_edge_result__$2$$, $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$), $G__43597$jscomp$inline_9743_G__43600$jscomp$inline_9746_JSCompiler_temp_const$jscomp$inline_9738_first__43290_first__43303$jscomp$inline_9726_seen_QMARK___$1$$ = 
            $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$, $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$), $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$ = $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$, 
            $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$ = $G__43596$jscomp$inline_9742_G__43599$jscomp$inline_9745_edge_result__$2$$);
          } else {
            $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$ = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__43596$jscomp$inline_9742_G__43599$jscomp$inline_9745_edge_result__$2$$, $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$], null);
            break a;
          }
        }
        $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$ = void 0;
      }
      $G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$, 0, null);
      $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$, 1, null);
      if ($APP.cljs.core.truth_($not_solution_QMARK_$$($G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$))) {
        $edge_result__$1$jscomp$inline_9728_seen_QMARK___$2$jscomp$inline_9737_seen__$1$jscomp$1_seq__43302$$ = $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$;
      } else {
        return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__43300$jscomp$inline_9724_G__43300__$1$jscomp$inline_9727_G__43602_first__43309$jscomp$inline_9731_next_result_o_SINGLEQUOTE___$1$jscomp$inline_9734_result__$1$$, $G__43598$jscomp$inline_9744_G__43603_already_seen_next_seen$jscomp$1_redges__$1$jscomp$inline_9735_result__$2$jscomp$1_seq__43308$jscomp$inline_9730_seq__43308__$1$$], null);
      }
    }
  };
  $next_nodes_nodes$jscomp$43_p$$ = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s$$], null);
  for (var $G__43605_next_seen_seen$$ = $APP.cljs.core.PersistentHashSet.EMPTY;;) {
    if ($G__43605_next_seen_seen$$ = $step$jscomp$35_tag$$($next_nodes_nodes$jscomp$43_p$$, $G__43605_next_seen_seen$$), $next_nodes_nodes$jscomp$43_p$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43605_next_seen_seen$$, 0, null), $G__43605_next_seen_seen$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43605_next_seen_seen$$, 1, null), !$APP.cljs.core.truth_($not_solution_QMARK_$$($next_nodes_nodes$jscomp$43_p$$))) {
      return $APP.cljs.core.seq($next_nodes_nodes$jscomp$43_p$$) ? new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY], null) : $APP.cljs.core.PersistentVector.EMPTY;
    }
  }
});
asami.common_index.counter = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
asami.common_index._STAR_stream_from = function($selector$$, $all_knowns$$, $initial_node$$) {
  return function $asami$common_index$_STAR_stream_from_$_stream_from$$($knowns_knowns_SINGLEQUOTE_$$, $next_nodes$jscomp$1_next_nodes_SINGLEQUOTE__node$$) {
    $next_nodes$jscomp$1_next_nodes_SINGLEQUOTE__node$$ = $selector$$.cljs$core$IFn$_invoke$arity$1 ? $selector$$.cljs$core$IFn$_invoke$arity$1($next_nodes$jscomp$1_next_nodes_SINGLEQUOTE__node$$) : $selector$$.call(null, $next_nodes$jscomp$1_next_nodes_SINGLEQUOTE__node$$);
    $next_nodes$jscomp$1_next_nodes_SINGLEQUOTE__node$$ = $APP.clojure.set.difference.cljs$core$IFn$_invoke$arity$2($next_nodes$jscomp$1_next_nodes_SINGLEQUOTE__node$$, $knowns_knowns_SINGLEQUOTE_$$);
    $knowns_knowns_SINGLEQUOTE_$$ = $APP.clojure.set.union.cljs$core$IFn$_invoke$arity$2($knowns_knowns_SINGLEQUOTE_$$, $next_nodes$jscomp$1_next_nodes_SINGLEQUOTE__node$$);
    return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($asami$common_index$_STAR_stream_from_$_stream_from$$, $knowns_knowns_SINGLEQUOTE_$$, $next_nodes$jscomp$1_next_nodes_SINGLEQUOTE__node$$);
  }($all_knowns$$, $initial_node$$);
};
asami.common_index.downstream_from = function($idx$$, $get_object_sets_fn$$, $all_knowns$$, $node$$) {
  return asami.common_index._STAR_stream_from(function($G__43320$jscomp$inline_4813_JSCompiler_inline_result$$) {
    var $JSCompiler_temp_const$$ = $APP.cljs.core.apply, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$2, $JSCompiler_temp_const$jscomp$1$$ = $APP.clojure.set.union;
    $G__43320$jscomp$inline_4813_JSCompiler_inline_result$$ = $APP.cljs.core.vals($idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($G__43320$jscomp$inline_4813_JSCompiler_inline_result$$) : $idx$$.call(null, $G__43320$jscomp$inline_4813_JSCompiler_inline_result$$));
    $G__43320$jscomp$inline_4813_JSCompiler_inline_result$$ = $get_object_sets_fn$$.cljs$core$IFn$_invoke$arity$1 ? $get_object_sets_fn$$.cljs$core$IFn$_invoke$arity$1($G__43320$jscomp$inline_4813_JSCompiler_inline_result$$) : $get_object_sets_fn$$.call(null, $G__43320$jscomp$inline_4813_JSCompiler_inline_result$$);
    return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_temp_const$jscomp$1$$, $G__43320$jscomp$inline_4813_JSCompiler_inline_result$$);
  }, $all_knowns$$, $node$$);
};
asami.common_index.upstream_from = function($pos$$, $all_knowns$$, $node$$) {
  return asami.common_index._STAR_stream_from(function($o$$) {
    return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentHashSet.EMPTY, $APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$1(function($p1__43321_SHARP_$$) {
      return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($p1__43321_SHARP_$$, $o$$);
    }), $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.keys)), $APP.cljs.core.vals($pos$$));
  }, $all_knowns$$, $node$$);
};
asami.common_index.get_transitive_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, asami.common_index._QMARK_, asami.common_index._QMARK_], null), function($p__43322$$, $tag$$, $s$$, $p$$, $o$$) {
  var $map__43323__$1$$ = $APP.cljs.core.__destructure_map($p__43322$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43323__$1$$, cljs$cst$2215$spo), $object_sets_fn$$ = asami.common_index.lowest_level_sets_fn($map__43323__$1$$), $object_set_fn$$ = asami.common_index.lowest_level_set_fn($map__43323__$1$$), $s_idx$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($s$$) : $idx$$.call(null, $s$$), $starred$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2009$star, 
  $tag$$);
  return function $asami$common_index$iter__43324$$($s__43325$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43325__$1$$ = $s__43325$$;;) {
        var $fs__5500__auto__$jscomp$7_iterys__5499__auto__$jscomp$7_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43325__$1$$);
        if ($fs__5500__auto__$jscomp$7_iterys__5499__auto__$jscomp$7_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $fs__5500__auto__$jscomp$7_iterys__5499__auto__$jscomp$7_temp__5825__auto__$$, $pred$$ = $APP.cljs.core.first($xs__6385__auto__$$);
          $fs__5500__auto__$jscomp$7_iterys__5499__auto__$jscomp$7_temp__5825__auto__$$ = function($s__43325__$1$$, $pred$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $object_sets_fn$$, $object_set_fn$$, $s_idx$$, $starred$$, $map__43323$$, $map__43323__$1$$, $graph$$, $idx$$) {
            return function $asami$common_index$iter__43324_$_iter__43326$$($s__43327$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43325__$1$$, $pred$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $object_sets_fn$$, $object_set_fn$$, $s_idx$$, $starred$$, $map__43323$$, $map__43323__$1$$, $graph$$, $idx$$) {
                return function() {
                  for (;;) {
                    var $s__43327__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43327$$);
                    if ($s__43327__$2_temp__5825__auto____$1$$) {
                      if ($APP.cljs.core.chunked_seq_QMARK_($s__43327__$2_temp__5825__auto____$1$$)) {
                        var $JSCompiler_inline_result$jscomp$768_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43327__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$768_c__5501__auto__$$), $b__43329_obj$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                        a: {
                          for (var $i__43328$$ = 0;;) {
                            if ($i__43328$$ < $size__5502__auto__$$) {
                              var $obj$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$768_c__5501__auto__$$, $i__43328$$);
                              $APP.cljs.core.chunk_append($b__43329_obj$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$pred$$, $obj$$], null));
                              $i__43328$$ += 1;
                            } else {
                              $JSCompiler_inline_result$jscomp$768_c__5501__auto__$$ = !0;
                              break a;
                            }
                          }
                          $JSCompiler_inline_result$jscomp$768_c__5501__auto__$$ = void 0;
                        }
                        return $JSCompiler_inline_result$jscomp$768_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43329_obj$$), $asami$common_index$iter__43324_$_iter__43326$$($APP.cljs.core.chunk_rest($s__43327__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43329_obj$$), null);
                      }
                      $b__43329_obj$$ = $APP.cljs.core.first($s__43327__$2_temp__5825__auto____$1$$);
                      return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$pred$$, $b__43329_obj$$], null), $asami$common_index$iter__43324_$_iter__43326$$($APP.cljs.core.rest($s__43327__$2_temp__5825__auto____$1$$)));
                    }
                    return null;
                  }
                };
              }($s__43325__$1$$, $pred$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $object_sets_fn$$, $object_set_fn$$, $s_idx$$, $starred$$, $map__43323$$, $map__43323__$1$$, $graph$$, $idx$$), null, null);
            };
          }($s__43325__$1$$, $pred$$, $xs__6385__auto__$$, $fs__5500__auto__$jscomp$7_iterys__5499__auto__$jscomp$7_temp__5825__auto__$$, $object_sets_fn$$, $object_set_fn$$, $s_idx$$, $starred$$, $p__43322$$, $map__43323__$1$$, $map__43323__$1$$, $idx$$);
          if ($fs__5500__auto__$jscomp$7_iterys__5499__auto__$jscomp$7_temp__5825__auto__$$ = $APP.cljs.core.seq($fs__5500__auto__$jscomp$7_iterys__5499__auto__$jscomp$7_temp__5825__auto__$$(function() {
            var $objs$$ = function() {
              var $G__43330$$ = $s_idx$$.cljs$core$IFn$_invoke$arity$1 ? $s_idx$$.cljs$core$IFn$_invoke$arity$1($pred$$) : $s_idx$$.call(null, $pred$$);
              return $object_set_fn$$.cljs$core$IFn$_invoke$arity$1 ? $object_set_fn$$.cljs$core$IFn$_invoke$arity$1($G__43330$$) : $object_set_fn$$.call(null, $G__43330$$);
            }(), $down_from$$ = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$3(asami.common_index.downstream_from, $idx$$, $object_sets_fn$$), $APP.cljs.core.PersistentHashSet.EMPTY, $objs$$);
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($objs$$, function() {
              var $and__5023__auto__$$ = $APP.cljs.core.seq($down_from$$);
              return $and__5023__auto__$$ ? $starred$$ ? $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($down_from$$, $s$$) : $down_from$$ : $and__5023__auto__$$;
            }());
          }()))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$7_iterys__5499__auto__$jscomp$7_temp__5825__auto__$$, $asami$common_index$iter__43324$$($APP.cljs.core.rest($s__43325__$1$$)));
          }
          $s__43325__$1$$ = $APP.cljs.core.rest($s__43325__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($APP.cljs.core.keys($s_idx$$));
});
asami.common_index.get_transitive_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, asami.common_index._QMARK_, $APP.cljs$cst$1438$v], null), function($p__43331$$, $tag$$, $s$$, $p$$, $o$$) {
  var $map__43332__$1$$ = $APP.cljs.core.__destructure_map($p__43331$$), $pos$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43332__$1$$, $APP.cljs$cst$1584$pos), $get_subjects$$ = asami.common_index.lowest_level_fn($map__43332__$1$$), $starred$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2009$star, $tag$$);
  return function $asami$common_index$iter__43333$$($s__43334$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43334__$1$$ = $s__43334$$;;) {
        var $fs__5500__auto__$jscomp$8_iterys__5499__auto__$jscomp$8_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43334__$1$$);
        if ($fs__5500__auto__$jscomp$8_iterys__5499__auto__$jscomp$8_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $fs__5500__auto__$jscomp$8_iterys__5499__auto__$jscomp$8_temp__5825__auto__$$, $pred$$ = $APP.cljs.core.first($xs__6385__auto__$$);
          $fs__5500__auto__$jscomp$8_iterys__5499__auto__$jscomp$8_temp__5825__auto__$$ = function($s__43334__$1$$, $pred$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $get_subjects$$, $starred$$, $map__43332$$, $map__43332__$1$$, $graph$$, $pos$$) {
            return function $asami$common_index$iter__43333_$_iter__43335$$($s__43336$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43334__$1$$, $pred$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $get_subjects$$, $starred$$, $map__43332$$, $map__43332__$1$$, $graph$$, $pos$$) {
                return function() {
                  for (;;) {
                    var $s__43336__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43336$$);
                    if ($s__43336__$2_temp__5825__auto____$1$$) {
                      if ($APP.cljs.core.chunked_seq_QMARK_($s__43336__$2_temp__5825__auto____$1$$)) {
                        var $JSCompiler_inline_result$jscomp$769_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43336__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$769_c__5501__auto__$$), $b__43338_subj$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                        a: {
                          for (var $i__43337$$ = 0;;) {
                            if ($i__43337$$ < $size__5502__auto__$$) {
                              var $subj$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$769_c__5501__auto__$$, $i__43337$$);
                              $APP.cljs.core.chunk_append($b__43338_subj$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$subj$$, $pred$$], null));
                              $i__43337$$ += 1;
                            } else {
                              $JSCompiler_inline_result$jscomp$769_c__5501__auto__$$ = !0;
                              break a;
                            }
                          }
                          $JSCompiler_inline_result$jscomp$769_c__5501__auto__$$ = void 0;
                        }
                        return $JSCompiler_inline_result$jscomp$769_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43338_subj$$), $asami$common_index$iter__43333_$_iter__43335$$($APP.cljs.core.chunk_rest($s__43336__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43338_subj$$), null);
                      }
                      $b__43338_subj$$ = $APP.cljs.core.first($s__43336__$2_temp__5825__auto____$1$$);
                      return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$b__43338_subj$$, $pred$$], null), $asami$common_index$iter__43333_$_iter__43335$$($APP.cljs.core.rest($s__43336__$2_temp__5825__auto____$1$$)));
                    }
                    return null;
                  }
                };
              }($s__43334__$1$$, $pred$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $get_subjects$$, $starred$$, $map__43332$$, $map__43332__$1$$, $graph$$, $pos$$), null, null);
            };
          }($s__43334__$1$$, $pred$$, $xs__6385__auto__$$, $fs__5500__auto__$jscomp$8_iterys__5499__auto__$jscomp$8_temp__5825__auto__$$, $get_subjects$$, $starred$$, $p__43331$$, $map__43332__$1$$, $map__43332__$1$$, $pos$$);
          if ($fs__5500__auto__$jscomp$8_iterys__5499__auto__$jscomp$8_temp__5825__auto__$$ = $APP.cljs.core.seq($fs__5500__auto__$jscomp$8_iterys__5499__auto__$jscomp$8_temp__5825__auto__$$(function() {
            var $subjs$$ = function() {
              var $G__43339$$ = $APP.cljs.core.get_in.cljs$core$IFn$_invoke$arity$2($pos$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$pred$$, $o$$], null));
              return $get_subjects$$.cljs$core$IFn$_invoke$arity$1 ? $get_subjects$$.cljs$core$IFn$_invoke$arity$1($G__43339$$) : $get_subjects$$.call(null, $G__43339$$);
            }(), $up_from$$ = function() {
              var $and__5023__auto__$$ = $APP.cljs.core.seq($subjs$$);
              return $and__5023__auto__$$ ? $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2(asami.common_index.upstream_from, $pos$$), $APP.cljs.core.PersistentHashSet.EMPTY, $subjs$$) : $and__5023__auto__$$;
            }();
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($subjs$$, function() {
              var $and__5023__auto__$$ = $APP.cljs.core.seq($up_from$$);
              return $and__5023__auto__$$ ? $starred$$ ? $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($up_from$$, $o$$) : $up_from$$ : $and__5023__auto__$$;
            }());
          }()))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$8_iterys__5499__auto__$jscomp$8_temp__5825__auto__$$, $asami$common_index$iter__43333$$($APP.cljs.core.rest($s__43334__$1$$)));
          }
          $s__43334__$1$$ = $APP.cljs.core.rest($s__43334__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($APP.cljs.core.keys($pos$$));
});
asami.common_index.get_path_between = function($idx$jscomp$85_path$jscomp$65_step$$, $edges_from$$, $node_QMARK_$$, $next_paths_paths$jscomp$1_tag$$, $G__43645_next_seen$jscomp$2_s$jscomp$385_seen$$, $o$$) {
  var $not_solution_QMARK_$$ = function($path_nodes$$) {
    var $and__5023__auto__$jscomp$175_or__5025__auto__$$ = $APP.cljs.core.seq($path_nodes$$);
    return $and__5023__auto__$jscomp$175_or__5025__auto__$$ ? ($and__5023__auto__$jscomp$175_or__5025__auto__$$ = $APP.cljs.core.second($path_nodes$$), $APP.cljs.core.truth_($and__5023__auto__$jscomp$175_or__5025__auto__$$) ? $and__5023__auto__$jscomp$175_or__5025__auto__$$ : $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2($o$$, $APP.cljs.core.second($APP.cljs.core.first($path_nodes$$)))) : $and__5023__auto__$jscomp$175_or__5025__auto__$$;
  };
  $idx$jscomp$85_path$jscomp$65_step$$ = function($G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$, $rpathnodes__$1_seen$$) {
    var $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$ = $APP.cljs.core.seq($G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$), $G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$ = $APP.cljs.core.first($G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$);
    $APP.cljs.core.next($G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$);
    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$, 0, null);
    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$, 1, null);
    $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$ = $APP.cljs.core.PersistentVector.EMPTY;
    for ($G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$ = $rpathnodes__$1_seen$$;;) {
      $rpathnodes__$1_seen$$ = $APP.cljs.core.seq($G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$);
      $G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$ = $APP.cljs.core.first($rpathnodes__$1_seen$$);
      $rpathnodes__$1_seen$$ = $APP.cljs.core.next($rpathnodes__$1_seen$$);
      var $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$ = $G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$;
      $G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$, 0, null);
      var $G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$, 1, null);
      if ($APP.cljs.core.truth_($G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$)) {
        a: {
          $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$ = $edges_from$$.cljs$core$IFn$_invoke$arity$1 ? $edges_from$$.cljs$core$IFn$_invoke$arity$1($G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$) : $edges_from$$.call(null, $G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$);
          $G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$ = $APP.cljs.core.seq($G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$);
          var $G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$ = $APP.cljs.core.first($G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$);
          $APP.cljs.core.next($G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$);
          $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$, 0, null);
          $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$, 1, null);
          $G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$ = $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$;
          $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$ = $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$;
          for (var $JSCompiler_temp_const$jscomp$inline_9764_seen_QMARK___$1$$ = $G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$;;) {
            $G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$ = $APP.cljs.core.seq($G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$);
            $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$ = $APP.cljs.core.first($G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$);
            $G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$ = $APP.cljs.core.next($G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$);
            var $JSCompiler_temp_const$jscomp$inline_9765_vec__43487$$ = $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$;
            $G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$inline_9765_vec__43487$$, 0, null);
            $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$inline_9765_vec__43487$$, 1, null);
            $G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$ = $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$;
            $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$ = $JSCompiler_temp_const$jscomp$inline_9764_seen_QMARK___$1$$;
            if ($APP.cljs.core.truth_($JSCompiler_temp_const$jscomp$inline_9765_vec__43487$$)) {
              $JSCompiler_temp_const$jscomp$inline_9764_seen_QMARK___$1$$ = $APP.cljs.core;
              $JSCompiler_temp_const$jscomp$inline_9765_vec__43487$$ = $JSCompiler_temp_const$jscomp$inline_9764_seen_QMARK___$1$$.truth_;
              var $JSCompiler_inline_result$jscomp$inline_9766_or__5025__auto__$$ = $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$.cljs$core$IFn$_invoke$arity$1 ? $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$.cljs$core$IFn$_invoke$arity$1($G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$) : $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$.call(null, 
              $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$);
              $JSCompiler_inline_result$jscomp$inline_9766_or__5025__auto__$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$inline_9766_or__5025__auto__$$) ? $JSCompiler_inline_result$jscomp$inline_9766_or__5025__auto__$$ : $APP.cljs.core.not($node_QMARK_$$.cljs$core$IFn$_invoke$arity$1 ? $node_QMARK_$$.cljs$core$IFn$_invoke$arity$1($G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$) : 
              $node_QMARK_$$.call(null, $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$));
              if ($JSCompiler_temp_const$jscomp$inline_9765_vec__43487$$.call($JSCompiler_temp_const$jscomp$inline_9764_seen_QMARK___$1$$, $JSCompiler_inline_result$jscomp$inline_9766_or__5025__auto__$$)) {
                $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$ = $G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$, $G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$ = $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$, $G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$ = 
                $G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$, $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$ = $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$, $JSCompiler_temp_const$jscomp$inline_9764_seen_QMARK___$1$$ = 
                $G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$;
              } else {
                $G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$ = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$, $G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$), 
                $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$], null);
                if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($o$$, $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$)) {
                  $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$ = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$], 
                  null), $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$], null);
                  break a;
                }
                $G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$, $G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$);
                $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$, $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$);
                $G__43477__$1$jscomp$inline_9752_new_path_node$jscomp$inline_9770_node__$1$jscomp$66_p_SINGLEQUOTE___$1$jscomp$inline_9759_seq__43479$$ = $G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$;
                $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$ = $G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$;
                $JSCompiler_temp_const$jscomp$inline_9764_seen_QMARK___$1$$ = $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$;
              }
            } else {
              $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$ = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__43637$jscomp$inline_9769_G__43639$jscomp$inline_9772_edge_result__$2$jscomp$inline_9762_first__43480$$, $G__43477$jscomp$inline_9749_edge_result__$1$jscomp$inline_9753_seen_QMARK___$2$$], null);
              break a;
            }
          }
          $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$ = void 0;
        }
        $G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$, 0, null);
        $G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$, 1, null);
        if ($APP.cljs.core.truth_($not_solution_QMARK_$$($G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$))) {
          $G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$ = $G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$;
          $G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$ = $rpathnodes__$1_seen$$;
          continue;
        } else {
          return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__43421__$1_first__43464_next_result$jscomp$1_path__$1$jscomp$4_path_nodes$$, $G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$], null);
        }
      } else {
        return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__43636$jscomp$inline_9768_G__43640$jscomp$inline_9773_G__43642_first__43486$jscomp$inline_9756_o_SINGLEQUOTE___$1$jscomp$inline_9760_result__$1$jscomp$6_result__$2$$, $G__43638$jscomp$inline_9771_G__43643_first__43424_next_seen$jscomp$3_redges__$1$jscomp$inline_9761_seen_STAR___$1_seen_STAR___$2_seq__43485$jscomp$inline_9755_seq__43485__$1$$], null);
      }
      break;
    }
  };
  if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($G__43645_next_seen$jscomp$2_s$jscomp$385_seen$$, $o$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($next_paths_paths$jscomp$1_tag$$, $APP.cljs$cst$2009$star)) {
    return new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY], null)], null);
  }
  $next_paths_paths$jscomp$1_tag$$ = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY, $G__43645_next_seen$jscomp$2_s$jscomp$385_seen$$], null)], null);
  for ($G__43645_next_seen$jscomp$2_s$jscomp$385_seen$$ = $APP.cljs.core.PersistentHashSet.EMPTY;;) {
    if ($G__43645_next_seen$jscomp$2_s$jscomp$385_seen$$ = $idx$jscomp$85_path$jscomp$65_step$$($next_paths_paths$jscomp$1_tag$$, $G__43645_next_seen$jscomp$2_s$jscomp$385_seen$$), $next_paths_paths$jscomp$1_tag$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43645_next_seen$jscomp$2_s$jscomp$385_seen$$, 0, null), $G__43645_next_seen$jscomp$2_s$jscomp$385_seen$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__43645_next_seen$jscomp$2_s$jscomp$385_seen$$, 1, null), !$APP.cljs.core.truth_($not_solution_QMARK_$$($next_paths_paths$jscomp$1_tag$$))) {
      return $idx$jscomp$85_path$jscomp$65_step$$ = $APP.cljs.core.ffirst($next_paths_paths$jscomp$1_tag$$), $APP.cljs.core.seq($idx$jscomp$85_path$jscomp$65_step$$) ? new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.ffirst($next_paths_paths$jscomp$1_tag$$)], null)], null) : $APP.cljs.core.PersistentVector.EMPTY;
    }
  }
};
asami.common_index.get_transitive_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, asami.common_index._QMARK_, $APP.cljs$cst$1438$v], null), function($idx$$, $tag$$, $s$$, $p$$, $o$$) {
  var $map__43497__$1$$ = $APP.cljs.core.__destructure_map($idx$$);
  $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43497__$1$$, cljs$cst$2215$spo);
  asami.common_index.lowest_level_fn($map__43497__$1$$);
  return asami.common_index.get_path_between($idx$$, function($n$$) {
    return asami.graph.attribute_values($map__43497__$1$$, $n$$);
  }, asami.graph.broad_node_type_QMARK_, $tag$$, $s$$, $o$$);
});
asami.common_index.sinto = $APP.cljs.core.fnil.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.into, $APP.cljs.core.PersistentHashSet.EMPTY);
asami.common_index.sconj = $APP.cljs.core.fnil.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.conj, $APP.cljs.core.PersistentHashSet.EMPTY);
asami.common_index.step_by_predicate = function($first__43520_os__$1_resolution$$) {
  var $G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$ = $APP.cljs.core.keys($first__43520_os__$1_resolution$$), $G__43649_result__$1$jscomp$7_result__$2$$ = $APP.cljs.core.seq($G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$);
  $APP.cljs.core.first($G__43649_result__$1$jscomp$7_result__$2$$);
  $APP.cljs.core.next($G__43649_result__$1$jscomp$7_result__$2$$);
  for ($G__43649_result__$1$jscomp$7_result__$2$$ = $first__43520_os__$1_resolution$$;;) {
    $G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$ = $APP.cljs.core.seq($G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$);
    $first__43520_os__$1_resolution$$ = $APP.cljs.core.first($G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$);
    var $G__43524$jscomp$inline_9776_G__43647$jscomp$inline_9788_next_result$jscomp$inline_9786_o_result__$1$jscomp$inline_9779_o_result__$2$$ = $APP.cljs.core.next($G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$);
    $G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$ = $first__43520_os__$1_resolution$$;
    $first__43520_os__$1_resolution$$ = $G__43524$jscomp$inline_9776_G__43647$jscomp$inline_9788_next_result$jscomp$inline_9786_o_result__$1$jscomp$inline_9779_o_result__$2$$;
    if ($APP.cljs.core.truth_($G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$)) {
      a: {
        $G__43524$jscomp$inline_9776_G__43647$jscomp$inline_9788_next_result$jscomp$inline_9786_o_result__$1$jscomp$inline_9779_o_result__$2$$ = $G__43649_result__$1$jscomp$7_result__$2$$.cljs$core$IFn$_invoke$arity$1 ? $G__43649_result__$1$jscomp$7_result__$2$$.cljs$core$IFn$_invoke$arity$1($G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$) : $G__43649_result__$1$jscomp$7_result__$2$$.call(null, $G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$);
        var $G__43524__$1$jscomp$inline_9778_first__43530$jscomp$inline_9781_seq__43526$jscomp$inline_9777_ss__$1$$ = $APP.cljs.core.seq($G__43524$jscomp$inline_9776_G__43647$jscomp$inline_9788_next_result$jscomp$inline_9786_o_result__$1$jscomp$inline_9779_o_result__$2$$);
        $APP.cljs.core.first($G__43524__$1$jscomp$inline_9778_first__43530$jscomp$inline_9781_seq__43526$jscomp$inline_9777_ss__$1$$);
        $APP.cljs.core.next($G__43524__$1$jscomp$inline_9778_first__43530$jscomp$inline_9781_seq__43526$jscomp$inline_9777_ss__$1$$);
        $G__43524__$1$jscomp$inline_9778_first__43530$jscomp$inline_9781_seq__43526$jscomp$inline_9777_ss__$1$$ = $G__43524$jscomp$inline_9776_G__43647$jscomp$inline_9788_next_result$jscomp$inline_9786_o_result__$1$jscomp$inline_9779_o_result__$2$$;
        for ($G__43524$jscomp$inline_9776_G__43647$jscomp$inline_9788_next_result$jscomp$inline_9786_o_result__$1$jscomp$inline_9779_o_result__$2$$ = $G__43649_result__$1$jscomp$7_result__$2$$;;) {
          var $s__$1$jscomp$inline_9783_seq__43529$jscomp$inline_9780_temp__5823__auto__$$ = $APP.cljs.core.seq($G__43524__$1$jscomp$inline_9778_first__43530$jscomp$inline_9781_seq__43526$jscomp$inline_9777_ss__$1$$);
          $G__43524__$1$jscomp$inline_9778_first__43530$jscomp$inline_9781_seq__43526$jscomp$inline_9777_ss__$1$$ = $APP.cljs.core.first($s__$1$jscomp$inline_9783_seq__43529$jscomp$inline_9780_temp__5823__auto__$$);
          var $seq__43529__$1$$ = $APP.cljs.core.next($s__$1$jscomp$inline_9783_seq__43529$jscomp$inline_9780_temp__5823__auto__$$);
          $s__$1$jscomp$inline_9783_seq__43529$jscomp$inline_9780_temp__5823__auto__$$ = $G__43524__$1$jscomp$inline_9778_first__43530$jscomp$inline_9781_seq__43526$jscomp$inline_9777_ss__$1$$;
          $G__43524__$1$jscomp$inline_9778_first__43530$jscomp$inline_9781_seq__43526$jscomp$inline_9777_ss__$1$$ = $seq__43529__$1$$;
          if ($APP.cljs.core.truth_($s__$1$jscomp$inline_9783_seq__43529$jscomp$inline_9780_temp__5823__auto__$$)) {
            $s__$1$jscomp$inline_9783_seq__43529$jscomp$inline_9780_temp__5823__auto__$$ = $G__43649_result__$1$jscomp$7_result__$2$$.cljs$core$IFn$_invoke$arity$1 ? $G__43649_result__$1$jscomp$7_result__$2$$.cljs$core$IFn$_invoke$arity$1($s__$1$jscomp$inline_9783_seq__43529$jscomp$inline_9780_temp__5823__auto__$$) : $G__43649_result__$1$jscomp$7_result__$2$$.call(null, $s__$1$jscomp$inline_9783_seq__43529$jscomp$inline_9780_temp__5823__auto__$$), $G__43524$jscomp$inline_9776_G__43647$jscomp$inline_9788_next_result$jscomp$inline_9786_o_result__$1$jscomp$inline_9779_o_result__$2$$ = 
            $APP.cljs.core.truth_($s__$1$jscomp$inline_9783_seq__43529$jscomp$inline_9780_temp__5823__auto__$$) ? $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$4($G__43524$jscomp$inline_9776_G__43647$jscomp$inline_9788_next_result$jscomp$inline_9786_o_result__$1$jscomp$inline_9779_o_result__$2$$, $G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$, asami.common_index.sinto, $s__$1$jscomp$inline_9783_seq__43529$jscomp$inline_9780_temp__5823__auto__$$) : $G__43524$jscomp$inline_9776_G__43647$jscomp$inline_9788_next_result$jscomp$inline_9786_o_result__$1$jscomp$inline_9779_o_result__$2$$;
          } else {
            $G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$ = $G__43524$jscomp$inline_9776_G__43647$jscomp$inline_9788_next_result$jscomp$inline_9786_o_result__$1$jscomp$inline_9779_o_result__$2$$;
            break a;
          }
        }
        $G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$ = void 0;
      }
      $G__43649_result__$1$jscomp$7_result__$2$$ = $G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$;
      $G__43501_G__43501__$1_next_result$jscomp$2_o__$1$$ = $first__43520_os__$1_resolution$$;
    } else {
      return $G__43649_result__$1$jscomp$7_result__$2$$;
    }
  }
};
asami.common_index.add_zero_step = function($os_map$$, $index$$) {
  return $APP.cljs.core.reduce_kv(function($idx$$, $o$$, $ss$$) {
    return function($x$$) {
      return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($p1__43531_SHARP_$$, $p2__43532_SHARP_$$) {
        return $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$4($p1__43531_SHARP_$$, $p2__43532_SHARP_$$, asami.common_index.sconj, $p2__43532_SHARP_$$);
      }, $x$$, $ss$$);
    }($APP.cljs.core.update.cljs$core$IFn$_invoke$arity$4($idx$$, $o$$, asami.common_index.sconj, $o$$));
  }, $index$$, $os_map$$);
};
asami.common_index.get_transitive_edges_STAR_ = function($or__5025__auto__$jscomp$338_os_map$jscomp$1_result$$) {
  for (;;) {
    var $next_result$$ = asami.common_index.step_by_predicate($or__5025__auto__$jscomp$338_os_map$jscomp$1_result$$);
    if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($next_result$$, $or__5025__auto__$jscomp$338_os_map$jscomp$1_result$$)) {
      return $APP.cljs.core.truth_($or__5025__auto__$jscomp$338_os_map$jscomp$1_result$$) ? $or__5025__auto__$jscomp$338_os_map$jscomp$1_result$$ : $APP.cljs.core.PersistentArrayMap.EMPTY;
    }
    $or__5025__auto__$jscomp$338_os_map$jscomp$1_result$$ = $next_result$$;
  }
};
asami.common_index.transitive_cache_depth = 2;
asami.common_index.get_transitive_edges = asami.internal.shallow_cache_1(asami.common_index.transitive_cache_depth, asami.common_index.get_transitive_edges_STAR_);
asami.common_index.create_o__GT_smap = function($fexpr__43535_map__43534__$1_p__43533$$, $G__43536_p$$) {
  $fexpr__43535_map__43534__$1_p__43533$$ = $APP.cljs.core.__destructure_map($fexpr__43535_map__43534__$1_p__43533$$);
  var $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($fexpr__43535_map__43534__$1_p__43533$$, $APP.cljs$cst$1584$pos);
  $G__43536_p$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($G__43536_p$$) : $idx$$.call(null, $G__43536_p$$);
  $fexpr__43535_map__43534__$1_p__43533$$ = asami.common_index.mid_level_map_fn($fexpr__43535_map__43534__$1_p__43533$$);
  return $fexpr__43535_map__43534__$1_p__43533$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__43535_map__43534__$1_p__43533$$.cljs$core$IFn$_invoke$arity$1($G__43536_p$$) : $fexpr__43535_map__43534__$1_p__43533$$.call(null, $G__43536_p$$);
};
asami.common_index.get_transitive_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, $APP.cljs$cst$1438$v, asami.common_index._QMARK_], null), function($p__43537$$, $tag$$, $s$$, $p$$, $o$$) {
  var $map__43538__$1$$ = $APP.cljs.core.__destructure_map($p__43537$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43538__$1$$, $APP.cljs$cst$1584$pos), $o__GT_s_map$$ = asami.common_index.create_o__GT_smap($map__43538__$1$$, $p$$), $result_index$$ = asami.common_index.get_transitive_edges($o__GT_s_map$$), $result_index__$1$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2009$star, $tag$$) ? asami.common_index.add_zero_step($o__GT_s_map$$, $result_index$$) : 
  $result_index$$;
  return function $asami$common_index$iter__43539$$($s__43540$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43540__$1$$ = $s__43540$$;;) {
        var $iterys__5499__auto__$jscomp$9_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43540__$1$$);
        if ($iterys__5499__auto__$jscomp$9_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$9_temp__5825__auto__$$, $vec__43545$$ = $APP.cljs.core.first($xs__6385__auto__$$), $o_SINGLEQUOTE_$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43545$$, 0, null), $fs__5500__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43545$$, 1, null);
          $iterys__5499__auto__$jscomp$9_temp__5825__auto__$$ = function($s__43540__$1$$, $vec__43545$$, $o_SINGLEQUOTE_$$, $ss_SINGLEQUOTE_$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $o__GT_s_map$$, $result_index$$, $result_index__$1$$, $map__43538$$, $map__43538__$1$$, $graph$$, $idx$$) {
            return function $asami$common_index$iter__43539_$_iter__43541$$($s__43542$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43540__$1$$, $vec__43545$$, $o_SINGLEQUOTE_$$, $ss_SINGLEQUOTE_$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $o__GT_s_map$$, $result_index$$, $result_index__$1$$, $map__43538$$, $map__43538__$1$$, $graph$$, $idx$$) {
                return function() {
                  for (;;) {
                    var $s__43542__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43542$$);
                    if ($s__43542__$2_temp__5825__auto____$1$$) {
                      if ($APP.cljs.core.chunked_seq_QMARK_($s__43542__$2_temp__5825__auto____$1$$)) {
                        var $JSCompiler_inline_result$jscomp$773_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43542__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$773_c__5501__auto__$$), $b__43544_s_SINGLEQUOTE_$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                        a: {
                          for (var $i__43543$$ = 0;;) {
                            if ($i__43543$$ < $size__5502__auto__$$) {
                              var $s_SINGLEQUOTE_$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$773_c__5501__auto__$$, $i__43543$$);
                              $APP.cljs.core.chunk_append($b__43544_s_SINGLEQUOTE_$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s_SINGLEQUOTE_$$, $o_SINGLEQUOTE_$$], null));
                              $i__43543$$ += 1;
                            } else {
                              $JSCompiler_inline_result$jscomp$773_c__5501__auto__$$ = !0;
                              break a;
                            }
                          }
                          $JSCompiler_inline_result$jscomp$773_c__5501__auto__$$ = void 0;
                        }
                        return $JSCompiler_inline_result$jscomp$773_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43544_s_SINGLEQUOTE_$$), $asami$common_index$iter__43539_$_iter__43541$$($APP.cljs.core.chunk_rest($s__43542__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43544_s_SINGLEQUOTE_$$), null);
                      }
                      $b__43544_s_SINGLEQUOTE_$$ = $APP.cljs.core.first($s__43542__$2_temp__5825__auto____$1$$);
                      return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$b__43544_s_SINGLEQUOTE_$$, $o_SINGLEQUOTE_$$], null), $asami$common_index$iter__43539_$_iter__43541$$($APP.cljs.core.rest($s__43542__$2_temp__5825__auto____$1$$)));
                    }
                    return null;
                  }
                };
              }($s__43540__$1$$, $vec__43545$$, $o_SINGLEQUOTE_$$, $ss_SINGLEQUOTE_$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $o__GT_s_map$$, $result_index$$, $result_index__$1$$, $map__43538$$, $map__43538__$1$$, $graph$$, $idx$$), null, null);
            };
          }($s__43540__$1$$, $vec__43545$$, $o_SINGLEQUOTE_$$, $fs__5500__auto__$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$9_temp__5825__auto__$$, $o__GT_s_map$$, $result_index$$, $result_index__$1$$, $p__43537$$, $map__43538__$1$$, $map__43538__$1$$, $idx$$);
          if ($fs__5500__auto__$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$9_temp__5825__auto__$$($fs__5500__auto__$$))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$$, $asami$common_index$iter__43539$$($APP.cljs.core.rest($s__43540__$1$$)));
          }
          $s__43540__$1$$ = $APP.cljs.core.rest($s__43540__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($result_index__$1$$);
});
asami.common_index.get_transitive_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, $APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v], null), function($map__43549__$1_p__43548$$, $tag$$, $s$$, $nodes$jscomp$46_o__GT_s_map$jscomp$3_p$$, $o$$) {
  $map__43549__$1_p__43548$$ = $APP.cljs.core.__destructure_map($map__43549__$1_p__43548$$);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43549__$1_p__43548$$, $APP.cljs$cst$1584$pos);
  $nodes$jscomp$46_o__GT_s_map$jscomp$3_p$$ = asami.common_index.create_o__GT_smap($map__43549__$1_p__43548$$, $nodes$jscomp$46_o__GT_s_map$jscomp$3_p$$);
  $nodes$jscomp$46_o__GT_s_map$jscomp$3_p$$ = asami.common_index.get_transitive_edges($nodes$jscomp$46_o__GT_s_map$jscomp$3_p$$);
  $nodes$jscomp$46_o__GT_s_map$jscomp$3_p$$ = $nodes$jscomp$46_o__GT_s_map$jscomp$3_p$$.cljs$core$IFn$_invoke$arity$1 ? $nodes$jscomp$46_o__GT_s_map$jscomp$3_p$$.cljs$core$IFn$_invoke$arity$1($o$$) : $nodes$jscomp$46_o__GT_s_map$jscomp$3_p$$.call(null, $o$$);
  return asami.common_index.zero_step($tag$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$o$$], null), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.vector, $nodes$jscomp$46_o__GT_s_map$jscomp$3_p$$));
});
asami.common_index.get_transitive_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v, asami.common_index._QMARK_], null), function($map__43551__$1_p__43550$$, $tag$$, $s$$, $nodes$jscomp$47_o__GT_s_map$jscomp$4_p$$, $o$$) {
  $map__43551__$1_p__43550$$ = $APP.cljs.core.__destructure_map($map__43551__$1_p__43550$$);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43551__$1_p__43550$$, $APP.cljs$cst$1584$pos);
  $nodes$jscomp$47_o__GT_s_map$jscomp$4_p$$ = asami.common_index.create_o__GT_smap($map__43551__$1_p__43550$$, $nodes$jscomp$47_o__GT_s_map$jscomp$4_p$$);
  var $trans_closure$$ = asami.common_index.get_transitive_edges($nodes$jscomp$47_o__GT_s_map$jscomp$4_p$$);
  $nodes$jscomp$47_o__GT_s_map$jscomp$4_p$$ = function() {
    return function $asami$common_index$iter__43552$$($s__43553$$) {
      return new $APP.cljs.core.LazySeq(null, function() {
        for (var $s__43553__$1_s__43553__$2_temp__5825__auto__$$ = $s__43553$$;;) {
          if ($s__43553__$1_s__43553__$2_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43553__$1_s__43553__$2_temp__5825__auto__$$)) {
            if ($APP.cljs.core.chunked_seq_QMARK_($s__43553__$1_s__43553__$2_temp__5825__auto__$$)) {
              var $JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$ = $APP.cljs.core.chunk_first($s__43553__$1_s__43553__$2_temp__5825__auto__$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$), $b__43555_o_SINGLEQUOTE_$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
              a: {
                for (var $i__43554$$ = 0;;) {
                  if ($i__43554$$ < $size__5502__auto__$$) {
                    var $ss$jscomp$inline_4835_vec__43556$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$, $i__43554$$), $o_SINGLEQUOTE_$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($ss$jscomp$inline_4835_vec__43556$$, 0, null);
                    $ss$jscomp$inline_4835_vec__43556$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($ss$jscomp$inline_4835_vec__43556$$, 1, null);
                    $APP.cljs.core.contains_QMARK_($ss$jscomp$inline_4835_vec__43556$$, $s$$) && $APP.cljs.core.chunk_append($b__43555_o_SINGLEQUOTE_$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$o_SINGLEQUOTE_$$], null));
                    $i__43554$$ += 1;
                  } else {
                    $JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$ = !0;
                    break a;
                  }
                }
                $JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$ = void 0;
              }
              return $JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43555_o_SINGLEQUOTE_$$), $asami$common_index$iter__43552$$($APP.cljs.core.chunk_rest($s__43553__$1_s__43553__$2_temp__5825__auto__$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43555_o_SINGLEQUOTE_$$), null);
            }
            $JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$ = $APP.cljs.core.first($s__43553__$1_s__43553__$2_temp__5825__auto__$$);
            $b__43555_o_SINGLEQUOTE_$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$, 0, null);
            $JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$, 1, null);
            if ($APP.cljs.core.contains_QMARK_($JSCompiler_inline_result$jscomp$774_c__5501__auto__$jscomp$41_ss$$, $s$$)) {
              return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$b__43555_o_SINGLEQUOTE_$$], null), $asami$common_index$iter__43552$$($APP.cljs.core.rest($s__43553__$1_s__43553__$2_temp__5825__auto__$$)));
            }
            $s__43553__$1_s__43553__$2_temp__5825__auto__$$ = $APP.cljs.core.rest($s__43553__$1_s__43553__$2_temp__5825__auto__$$);
          } else {
            return null;
          }
        }
      }, null, null);
    }($trans_closure$$);
  }();
  return asami.common_index.zero_step($tag$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s$$], null), $nodes$jscomp$47_o__GT_s_map$jscomp$4_p$$);
});
asami.common_index.get_transitive_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, asami.common_index._QMARK_, asami.common_index._QMARK_], null), function($map__43563__$1_p__43562$$, $tag$$, $s$$, $p$$, $o$$) {
  $map__43563__$1_p__43562$$ = $APP.cljs.core.__destructure_map($map__43563__$1_p__43562$$);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43563__$1_p__43562$$, cljs$cst$2215$spo);
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Unable to do transitive closure with nothing bound", new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$255$args, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s$$, $p$$, $o$$], null)], null));
});
asami.analytics = {};
asami.analytics.entity_node_QMARK_ = function($n$$) {
  var $and__5023__auto__$$ = $n$$ instanceof $APP.cljs.core.Keyword;
  return $and__5023__auto__$$ ? $APP.cljs.core.namespace($n$$) : $and__5023__auto__$$;
};
var output_schema43575_43621 = $APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$APP.schema.core.Any]), input_schema43576_43622 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.graph.GraphType, cljs$cst$2210$arg0), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$64$node, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null)))], null), 
ret__35121__auto___43623 = asami.analytics.subgraph_from_node = function($map__43583__$1_next_nodes$$, $G__43626_node$jscomp$197_seen$$) {
  $map__43583__$1_next_nodes$$ = $APP.cljs.core.__destructure_map($map__43583__$1_next_nodes$$);
  var $spo$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43583__$1_next_nodes$$, cljs$cst$2215$spo), $pos$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43583__$1_next_nodes$$, $APP.cljs$cst$1584$pos), $get_object_sets_fn$$ = asami.common_index.lowest_level_sets_fn($map__43583__$1_next_nodes$$);
  $map__43583__$1_next_nodes$$ = function($seen$$, $n$$) {
    var $down_connected_down_connected_entities$$ = $APP.clojure.set.difference.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.clojure.set.union, function() {
      var $G__43585$$ = $APP.cljs.core.vals($spo$$.cljs$core$IFn$_invoke$arity$1 ? $spo$$.cljs$core$IFn$_invoke$arity$1($n$$) : $spo$$.call(null, $n$$));
      return $get_object_sets_fn$$.cljs$core$IFn$_invoke$arity$1 ? $get_object_sets_fn$$.cljs$core$IFn$_invoke$arity$1($G__43585$$) : $get_object_sets_fn$$.call(null, $G__43585$$);
    }()), $seen$$);
    $down_connected_down_connected_entities$$ = $APP.clojure.set.select(asami.analytics.entity_node_QMARK_, $down_connected_down_connected_entities$$);
    $seen$$ = $APP.cljs.core.set($APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($seen$$, $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.keys, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__43574_SHARP_$$) {
      return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($p1__43574_SHARP_$$, $n$$);
    }, $APP.cljs.core.vals($pos$$))], 0))));
    return $APP.clojure.set.union.cljs$core$IFn$_invoke$arity$2($down_connected_down_connected_entities$$, $seen$$);
  };
  var $G__43625_nodes$$ = $APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$G__43626_node$jscomp$197_seen$$]);
  for ($G__43626_node$jscomp$197_seen$$ = $APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$G__43626_node$jscomp$197_seen$$]);;) {
    if ($APP.cljs.core.not($APP.cljs.core.seq($G__43625_nodes$$))) {
      return $APP.clojure.set.select($spo$$, $G__43626_node$jscomp$197_seen$$);
    }
    var $next_step$$ = $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.clojure.set.union, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($map__43583__$1_next_nodes$$, $G__43626_node$jscomp$197_seen$$), $G__43625_nodes$$));
    $G__43625_nodes$$ = $next_step$$;
    $G__43626_node$jscomp$197_seen$$ = $APP.clojure.set.union.cljs$core$IFn$_invoke$arity$2($G__43626_node$jscomp$197_seen$$, $next_step$$);
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.analytics.subgraph_from_node), $APP.schema.core.__GT_FnSchema(output_schema43575_43621, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43576_43622], null)));
var output_schema43589_43627 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$APP.schema.core.Any])], null), input_schema43590_43628 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.graph.GraphType, cljs$cst$2210$arg0)], null), ret__35121__auto___43629 = asami.analytics.subgraph_entities = function($map__43594__$1_p__43593$$) {
  $map__43594__$1_p__43593$$ = $APP.cljs.core.__destructure_map($map__43594__$1_p__43593$$);
  for (var $spo$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43594__$1_p__43593$$, cljs$cst$2215$spo), $none_of$$ = function($graph_sets$$, $node$$) {
    return $APP.cljs.core.truth_($APP.cljs.core.some(function($p1__43588_SHARP_$$) {
      return $p1__43588_SHARP_$$.cljs$core$IFn$_invoke$arity$1 ? $p1__43588_SHARP_$$.cljs$core$IFn$_invoke$arity$1($node$$) : $p1__43588_SHARP_$$.call(null, $node$$);
    }, $graph_sets$$)) ? null : $node$$;
  }, $next_subgraphs_subgraphs$$ = $APP.cljs.core.PersistentVector.EMPTY, $G__43631_node$$ = $APP.cljs.core.first($APP.cljs.core.keys($spo$$));;) {
    if ($G__43631_node$$ == null) {
      return $next_subgraphs_subgraphs$$;
    }
    $G__43631_node$$ = $APP.cljs.core.set(asami.analytics.subgraph_from_node($map__43594__$1_p__43593$$, $G__43631_node$$));
    $next_subgraphs_subgraphs$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($next_subgraphs_subgraphs$$, $G__43631_node$$);
    $G__43631_node$$ = $APP.cljs.core.some($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($none_of$$, $next_subgraphs_subgraphs$$), $APP.cljs.core.keys($spo$$));
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.analytics.subgraph_entities), $APP.schema.core.__GT_FnSchema(output_schema43589_43627, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43590_43628], null)));
var output_schema43606_43632 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.graph.GraphType], null), input_schema43607_43633 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.graph.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null)))], null), ret__35121__auto___43634 = 
asami.analytics.subgraphs = function($graph$$) {
  var $groups$$ = asami.analytics.subgraph_entities($graph$$);
  return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($edges_entities$$) {
    $edges_entities$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($edges_entities$$, $APP.cljs.core.first), asami.graph.resolve_triple($graph$$, cljs$cst$2220$_QMARK_s, $APP.cljs$cst$2221$_QMARK_p, cljs$cst$2222$_QMARK_o));
    return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($g$$, $o$$) {
      var $s$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 0, null), $p$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 1, null);
      $o$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($o$$, 2, null);
      return asami.graph.graph_add($g$$, $s$$, $p$$, $o$$, 0);
    }, asami.graph.new_graph($graph$$), $edges_entities$$);
  }, $groups$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.analytics.subgraphs), $APP.schema.core.__GT_FnSchema(output_schema43606_43632, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43607_43633], null)));
zuko.node = {};
zuko.node.tg_ns = "tg";
zuko.node.NodeAPI = function() {
};
var zuko$node$NodeAPI$data_attribute$dyn_43149 = function($graph$$, $data$$) {
  var $m__5372__auto__$jscomp$211_m__5374__auto__$$ = zuko.node.data_attribute[$APP.goog.typeOf($graph$$ == null ? null : $graph$$)];
  if ($m__5372__auto__$jscomp$211_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$211_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$211_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($graph$$, $data$$) : $m__5372__auto__$jscomp$211_m__5374__auto__$$.call(null, $graph$$, $data$$);
  }
  $m__5372__auto__$jscomp$211_m__5374__auto__$$ = zuko.node.data_attribute._;
  if ($m__5372__auto__$jscomp$211_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$211_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$211_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($graph$$, $data$$) : $m__5372__auto__$jscomp$211_m__5374__auto__$$.call(null, $graph$$, $data$$);
  }
  throw $APP.cljs.core.missing_protocol("NodeAPI.data-attribute", $graph$$);
};
zuko.node.data_attribute = function($graph$$, $data$$) {
  return $graph$$ != null && $graph$$.zuko$node$NodeAPI$data_attribute$arity$2 != null ? $graph$$.zuko$node$NodeAPI$data_attribute$arity$2($graph$$, $data$$) : zuko$node$NodeAPI$data_attribute$dyn_43149($graph$$, $data$$);
};
var zuko$node$NodeAPI$container_attribute$dyn_43150 = function($graph$$, $data$$) {
  var $m__5372__auto__$jscomp$212_m__5374__auto__$$ = zuko.node.container_attribute[$APP.goog.typeOf($graph$$ == null ? null : $graph$$)];
  if ($m__5372__auto__$jscomp$212_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$212_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$212_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($graph$$, $data$$) : $m__5372__auto__$jscomp$212_m__5374__auto__$$.call(null, $graph$$, $data$$);
  }
  $m__5372__auto__$jscomp$212_m__5374__auto__$$ = zuko.node.container_attribute._;
  if ($m__5372__auto__$jscomp$212_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$212_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$212_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($graph$$, $data$$) : $m__5372__auto__$jscomp$212_m__5374__auto__$$.call(null, $graph$$, $data$$);
  }
  throw $APP.cljs.core.missing_protocol("NodeAPI.container-attribute", $graph$$);
};
zuko.node.container_attribute = function($graph$$, $data$$) {
  return $graph$$ != null && $graph$$.zuko$node$NodeAPI$container_attribute$arity$2 != null ? $graph$$.zuko$node$NodeAPI$container_attribute$arity$2($graph$$, $data$$) : zuko$node$NodeAPI$container_attribute$dyn_43150($graph$$, $data$$);
};
var zuko$node$NodeAPI$new_node$dyn_43151 = function($graph$$) {
  var $m__5372__auto__$jscomp$213_m__5374__auto__$$ = zuko.node.new_node[$APP.goog.typeOf($graph$$ == null ? null : $graph$$)];
  if ($m__5372__auto__$jscomp$213_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$213_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$213_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($graph$$) : $m__5372__auto__$jscomp$213_m__5374__auto__$$.call(null, $graph$$);
  }
  $m__5372__auto__$jscomp$213_m__5374__auto__$$ = zuko.node.new_node._;
  if ($m__5372__auto__$jscomp$213_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$213_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$213_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($graph$$) : $m__5372__auto__$jscomp$213_m__5374__auto__$$.call(null, $graph$$);
  }
  throw $APP.cljs.core.missing_protocol("NodeAPI.new-node", $graph$$);
};
zuko.node.new_node = function($graph$$) {
  return $graph$$ != null && $graph$$.zuko$node$NodeAPI$new_node$arity$1 != null ? $graph$$.zuko$node$NodeAPI$new_node$arity$1($graph$$) : zuko$node$NodeAPI$new_node$dyn_43151($graph$$);
};
var zuko$node$NodeAPI$node_id$dyn_43152 = function($graph$$, $n$$) {
  var $m__5372__auto__$jscomp$214_m__5374__auto__$$ = zuko.node.node_id[$APP.goog.typeOf($graph$$ == null ? null : $graph$$)];
  if ($m__5372__auto__$jscomp$214_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$214_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$214_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($graph$$, $n$$) : $m__5372__auto__$jscomp$214_m__5374__auto__$$.call(null, $graph$$, $n$$);
  }
  $m__5372__auto__$jscomp$214_m__5374__auto__$$ = zuko.node.node_id._;
  if ($m__5372__auto__$jscomp$214_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$214_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$214_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($graph$$, $n$$) : $m__5372__auto__$jscomp$214_m__5374__auto__$$.call(null, $graph$$, $n$$);
  }
  throw $APP.cljs.core.missing_protocol("NodeAPI.node-id", $graph$$);
};
zuko.node.node_id = function($graph$$, $n$$) {
  return $graph$$ != null && $graph$$.zuko$node$NodeAPI$node_id$arity$2 != null ? $graph$$.zuko$node$NodeAPI$node_id$arity$2($graph$$, $n$$) : zuko$node$NodeAPI$node_id$dyn_43152($graph$$, $n$$);
};
var zuko$node$NodeAPI$node_type_QMARK_$dyn_43153 = function($graph$$, $a$$, $n$$) {
  var $m__5372__auto__$jscomp$215_m__5374__auto__$$ = zuko.node.node_type_QMARK_[$APP.goog.typeOf($graph$$ == null ? null : $graph$$)];
  if ($m__5372__auto__$jscomp$215_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$215_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$215_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($graph$$, $a$$, $n$$) : $m__5372__auto__$jscomp$215_m__5374__auto__$$.call(null, $graph$$, $a$$, $n$$);
  }
  $m__5372__auto__$jscomp$215_m__5374__auto__$$ = zuko.node.node_type_QMARK_._;
  if ($m__5372__auto__$jscomp$215_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$215_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$215_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($graph$$, $a$$, $n$$) : $m__5372__auto__$jscomp$215_m__5374__auto__$$.call(null, $graph$$, $a$$, $n$$);
  }
  throw $APP.cljs.core.missing_protocol("NodeAPI.node-type?", $graph$$);
};
zuko.node.node_type_QMARK_ = function($graph$$, $a$$, $n$$) {
  return $graph$$ != null && $graph$$.zuko$node$NodeAPI$node_type_QMARK_$arity$3 != null ? $graph$$.zuko$node$NodeAPI$node_type_QMARK_$arity$3($graph$$, $a$$, $n$$) : zuko$node$NodeAPI$node_type_QMARK_$dyn_43153($graph$$, $a$$, $n$$);
};
var zuko$node$NodeAPI$find_triple$dyn_43154 = function($graph$$, $pattern$$) {
  var $m__5372__auto__$jscomp$216_m__5374__auto__$$ = zuko.node.find_triple[$APP.goog.typeOf($graph$$ == null ? null : $graph$$)];
  if ($m__5372__auto__$jscomp$216_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$216_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$216_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($graph$$, $pattern$$) : $m__5372__auto__$jscomp$216_m__5374__auto__$$.call(null, $graph$$, $pattern$$);
  }
  $m__5372__auto__$jscomp$216_m__5374__auto__$$ = zuko.node.find_triple._;
  if ($m__5372__auto__$jscomp$216_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$216_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$216_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($graph$$, $pattern$$) : $m__5372__auto__$jscomp$216_m__5374__auto__$$.call(null, $graph$$, $pattern$$);
  }
  throw $APP.cljs.core.missing_protocol("NodeAPI.find-triple", $graph$$);
};
zuko.node.find_triple = function($graph$$, $pattern$$) {
  return $graph$$ != null && $graph$$.zuko$node$NodeAPI$find_triple$arity$2 != null ? $graph$$.zuko$node$NodeAPI$find_triple$arity$2($graph$$, $pattern$$) : zuko$node$NodeAPI$find_triple$dyn_43154($graph$$, $pattern$$);
};
zuko.node.node_label = function($s$$, $n$$) {
  return $APP.cljs.core.keyword.cljs$core$IFn$_invoke$arity$2("tg", ["id-", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(zuko.node.node_id($s$$, $n$$))].join(""));
};
zuko.logging = {};
zuko.logging.nodefs = function() {
  try {
    return require("fs");
  } catch ($e43128$$) {
    return null;
  }
}();
zuko.logging._STAR_level_STAR_ = 0;
zuko.logging._STAR_output_STAR_ = null;
zuko.logging.log_level = new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$144$trace, 6, $APP.cljs$cst$2223$debug, 5, $APP.cljs$cst$2224$info, 4, $APP.cljs$cst$2225$warn, 3, $APP.cljs$cst$1404$error, 2, $APP.cljs$cst$2226$fatal, 1], null);
zuko.logging.log_label = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p__43132_v$$) {
  var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__43132_v$$, 0, null);
  $p__43132_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__43132_v$$, 1, null);
  return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p__43132_v$$, $k$$], null);
}, zuko.logging.log_level));
zuko.logging.set_logging_level_BANG_ = function($level$jscomp$41_n$$) {
  $level$jscomp$41_n$$ = typeof $level$jscomp$41_n$$ === "number" ? $level$jscomp$41_n$$ : zuko.logging.log_level.cljs$core$IFn$_invoke$arity$2 ? zuko.logging.log_level.cljs$core$IFn$_invoke$arity$2($level$jscomp$41_n$$, 0) : zuko.logging.log_level.call(null, $level$jscomp$41_n$$, 0);
  return zuko.logging._STAR_level_STAR_ = $level$jscomp$41_n$$;
};
zuko.logging.set_output_BANG_ = function($output$$) {
  return zuko.logging._STAR_output_STAR_ = $output$$;
};
zuko.logging.LogOutput = function() {
};
var zuko$logging$LogOutput$emit$dyn_43157 = function($dest$$, $text$$) {
  var $m__5372__auto__$jscomp$217_m__5374__auto__$$ = zuko.logging.emit[$APP.goog.typeOf($dest$$ == null ? null : $dest$$)];
  if ($m__5372__auto__$jscomp$217_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$217_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$217_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($dest$$, $text$$) : $m__5372__auto__$jscomp$217_m__5374__auto__$$.call(null, $dest$$, $text$$);
  }
  $m__5372__auto__$jscomp$217_m__5374__auto__$$ = zuko.logging.emit._;
  if ($m__5372__auto__$jscomp$217_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$217_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$217_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($dest$$, $text$$) : $m__5372__auto__$jscomp$217_m__5374__auto__$$.call(null, $dest$$, $text$$);
  }
  throw $APP.cljs.core.missing_protocol("LogOutput.emit", $dest$$);
};
zuko.logging.emit = function($dest$$, $text$$) {
  return $dest$$ != null && $dest$$.zuko$logging$LogOutput$emit$arity$2 != null ? $dest$$.zuko$logging$LogOutput$emit$arity$2($dest$$, $text$$) : zuko$logging$LogOutput$emit$dyn_43157($dest$$, $text$$);
};
zuko.logging.LogOutput.string = !0;
zuko.logging.emit.string = function($dest$$, $text$$) {
  return $APP.cljs.core.empty_QMARK_($dest$$) ? $APP.cljs.core.println.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$text$$], 0)) : $APP.cljs.core.truth_(zuko.logging.nodefs) ? zuko.logging.nodefs.appendFileSync($dest$$, [$APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($text$$), "\n"].join("")) : null;
};
$APP.cljs.core.Atom.prototype.zuko$logging$LogOutput$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.Atom.prototype.zuko$logging$LogOutput$emit$arity$2 = function($dest$$, $text$$) {
  return $APP.cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(this, $APP.cljs.core.conj, $text$$);
};
zuko.logging.LogOutput["null"] = !0;
zuko.logging.emit["null"] = function($dest$$, $text$$) {
  return $APP.cljs.core.println.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$text$$], 0));
};
zuko.logging.log_STAR_ = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$202_argseq__5756__auto__$$ = [], $len__5749__auto___43162$$ = arguments.length, $i__5750__auto___43163$$ = 0;;) {
    if ($i__5750__auto___43163$$ < $len__5749__auto___43162$$) {
      $args__5755__auto__$jscomp$202_argseq__5756__auto__$$.push(arguments[$i__5750__auto___43163$$]), $i__5750__auto___43163$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$202_argseq__5756__auto__$$ = 3 < $args__5755__auto__$jscomp$202_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$202_argseq__5756__auto__$$.slice(3), 0, null) : null;
  return zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], $args__5755__auto__$jscomp$202_argseq__5756__auto__$$);
};
zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic = function($log_output_temp__5825__auto__$$, $level$$, $cns_text$$, $data$$) {
  $log_output_temp__5825__auto__$$ = $level$$ instanceof $APP.cljs.core.Keyword ? $level$$ : zuko.logging.log_label.cljs$core$IFn$_invoke$arity$1 ? zuko.logging.log_label.cljs$core$IFn$_invoke$arity$1($level$$) : zuko.logging.log_label.call(null, $level$$);
  return $APP.cljs.core.truth_($log_output_temp__5825__auto__$$) && (zuko.logging.log_level.cljs$core$IFn$_invoke$arity$1 ? zuko.logging.log_level.cljs$core$IFn$_invoke$arity$1($log_output_temp__5825__auto__$$) : zuko.logging.log_level.call(null, $log_output_temp__5825__auto__$$)) <= (zuko.logging.log_level.cljs$core$IFn$_invoke$arity$2 ? zuko.logging.log_level.cljs$core$IFn$_invoke$arity$2(zuko.logging._STAR_level_STAR_, zuko.logging._STAR_level_STAR_) : zuko.logging.log_level.call(null, zuko.logging._STAR_level_STAR_, 
  zuko.logging._STAR_level_STAR_)) ? ($cns_text$$ = [$APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.seq($cns_text$$) ? $cns_text$$ : "\x3cunknown\x3e"), " ", $APP.clojure.string.upper_case($APP.cljs.core.name($log_output_temp__5825__auto__$$)), ": ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.str, $data$$))].join(""), zuko.logging.emit(zuko.logging._STAR_output_STAR_, $cns_text$$)) : null;
};
zuko.logging.log_STAR_.cljs$lang$maxFixedArity = 3;
zuko.logging.log_STAR_.cljs$lang$applyTo = function($G__43145_seq43143$$) {
  var $G__43144$$ = $APP.cljs.core.first($G__43145_seq43143$$), $G__43146_seq43143__$1$$ = $APP.cljs.core.next($G__43145_seq43143$$);
  $G__43145_seq43143$$ = $APP.cljs.core.first($G__43146_seq43143__$1$$);
  var $seq43143__$2_seq43143__$3$$ = $APP.cljs.core.next($G__43146_seq43143__$1$$);
  $G__43146_seq43143__$1$$ = $APP.cljs.core.first($seq43143__$2_seq43143__$3$$);
  $seq43143__$2_seq43143__$3$$ = $APP.cljs.core.next($seq43143__$2_seq43143__$3$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__43144$$, $G__43145_seq43143$$, $G__43146_seq43143__$1$$, $seq43143__$2_seq43143__$3$$);
};
asami.index = {};
asami.index.Index = $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.required_key($APP.cljs$cst$2227$t), $APP.schema.core.Int, $APP.schema.core.required_key($APP.cljs$cst$396$id), $APP.schema.core.Int])])])]);
var output_schema43766_44164 = asami.index.Index, input_schema43767_44165 = new $APP.cljs.core.PersistentVector(null, 6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.index.Index, $APP.cljs.core.with_meta($APP.cljs$cst$1256$idx, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2228$Index], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1255$a, new $APP.cljs.core.PersistentArrayMap(null, 1, 
[$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2229$b, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2230$c, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Int, 
$APP.cljs.core.with_meta($APP.cljs$cst$1850$id, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2231$s_SLASH_Int], null))), $APP.schema.core.one($APP.schema.core.Int, $APP.cljs.core.with_meta($APP.cljs$cst$1235$t, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2231$s_SLASH_Int], null)))], null), ret__35121__auto___44166 = asami.index.index_add = function($idx$$, $a$$, $b$$, $c$$, $id$$, $t$$) {
  var $temp__5823__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $a$$);
  if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
    var $temp__5823__auto____$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($temp__5823__auto__$$, $b$$);
    return $APP.cljs.core.truth_($temp__5823__auto____$1$$) ? $APP.cljs.core.truth_($APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($temp__5823__auto____$1$$, $c$$)) ? $idx$$ : $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($idx$$, $a$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$$, $b$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto____$1$$, $c$$, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2227$t, $t$$, $APP.cljs$cst$396$id, 
    $id$$], null)))) : $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($idx$$, $a$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$$, $b$$, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$c$$, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2227$t, $t$$, $APP.cljs$cst$396$id, $id$$], null)])));
  }
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($idx$$, $a$$, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$b$$, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$c$$, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2227$t, $t$$, $APP.cljs$cst$396$id, $id$$], null)])]));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.index.index_add), $APP.schema.core.__GT_FnSchema(output_schema43766_44164, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43767_44165], null)));
var output_schema43774_44173 = $APP.schema.core.maybe(asami.index.Index), input_schema43775_44174 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.index.Index, $APP.cljs.core.with_meta($APP.cljs$cst$1256$idx, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2228$Index], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1255$a, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2229$b, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2230$c, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null)))], null), ret__35121__auto___44179 = 
asami.index.index_delete = function($idx$$, $a$$, $b$$, $c$$) {
  var $temp__5823__auto__$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($a$$) : $idx$$.call(null, $a$$);
  if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
    var $temp__5823__auto____$1$$ = $temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$1($b$$) : $temp__5823__auto__$$.call(null, $b$$);
    if ($APP.cljs.core.truth_($temp__5823__auto____$1$$) && ($c$$ = $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($temp__5823__auto____$1$$, $c$$), $c$$ !== $temp__5823__auto____$1$$)) {
      return $b$$ = $APP.cljs.core.seq($c$$) ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$$, $b$$, $c$$) : $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($temp__5823__auto__$$, $b$$), $APP.cljs.core.seq($b$$) ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($idx$$, $a$$, $b$$) : $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($idx$$, $a$$);
    }
  }
  return null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.index.index_delete), $APP.schema.core.__GT_FnSchema(output_schema43774_44173, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43775_44174], null)));
asami.index.get_from_index = function() {
  var $method_table__5622__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $prefer_table__5623__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $method_cache__5624__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $cached_hierarchy__5625__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), 
  $JSCompiler_temp_const$jscomp$777_hierarchy__5626__auto__$$ = $APP.cljs.core.get, $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$777_hierarchy__5626__auto__$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.PersistentArrayMap.EMPTY;
  var $JSCompiler_inline_result$jscomp$778_fexpr__43788$$ = $APP.cljs.core.get_global_hierarchy;
  $JSCompiler_inline_result$jscomp$778_fexpr__43788$$ = $JSCompiler_inline_result$jscomp$778_fexpr__43788$$.cljs$core$IFn$_invoke$arity$0 ? $JSCompiler_inline_result$jscomp$778_fexpr__43788$$.cljs$core$IFn$_invoke$arity$0() : $JSCompiler_inline_result$jscomp$778_fexpr__43788$$.call(null);
  $JSCompiler_temp_const$jscomp$777_hierarchy__5626__auto__$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$777_hierarchy__5626__auto__$$, $JSCompiler_temp_const$jscomp$0$$, $APP.cljs$cst$204$hierarchy, $JSCompiler_inline_result$jscomp$778_fexpr__43788$$);
  return new $APP.cljs.core.MultiFn($APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("asami.index", "get-from-index"), asami.common_index.simplify, $APP.cljs$cst$205$default, $JSCompiler_temp_const$jscomp$777_hierarchy__5626__auto__$$, $method_table__5622__auto__$$, $prefer_table__5623__auto__$$, $method_cache__5624__auto__$$, $cached_hierarchy__5625__auto__$$);
}();
asami.index.get_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v], null), function($JSCompiler_temp_const$jscomp$0$$, $G__43791__$1$jscomp$inline_4842_s$$, $G__43791__$2$jscomp$inline_4843_p$$, $G__43791__$3$jscomp$inline_4844_JSCompiler_inline_result$jscomp$781_o$$) {
  $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.__destructure_map($JSCompiler_temp_const$jscomp$0$$);
  var $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($JSCompiler_temp_const$jscomp$0$$, cljs$cst$2215$spo);
  $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core;
  var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$0$$.truth_;
  $G__43791__$1$jscomp$inline_4842_s$$ = $idx$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $G__43791__$1$jscomp$inline_4842_s$$);
  $G__43791__$2$jscomp$inline_4843_p$$ = $G__43791__$1$jscomp$inline_4842_s$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43791__$1$jscomp$inline_4842_s$$, $G__43791__$2$jscomp$inline_4843_p$$);
  $G__43791__$3$jscomp$inline_4844_JSCompiler_inline_result$jscomp$781_o$$ = $G__43791__$2$jscomp$inline_4843_p$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43791__$2$jscomp$inline_4843_p$$, $G__43791__$3$jscomp$inline_4844_JSCompiler_inline_result$jscomp$781_o$$);
  $G__43791__$3$jscomp$inline_4844_JSCompiler_inline_result$jscomp$781_o$$ = $G__43791__$3$jscomp$inline_4844_JSCompiler_inline_result$jscomp$781_o$$ == null ? null : $APP.cljs.core.keys($G__43791__$3$jscomp$inline_4844_JSCompiler_inline_result$jscomp$781_o$$);
  return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$0$$, $G__43791__$3$jscomp$inline_4844_JSCompiler_inline_result$jscomp$781_o$$) ? new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY], null) : $APP.cljs.core.PersistentVector.EMPTY;
});
asami.index.get_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v, asami.common_index._QMARK_], null), function($JSCompiler_temp_const$jscomp$0$$, $G__43794__$1$jscomp$inline_4847_s$$, $G__43794__$2$jscomp$inline_4848_JSCompiler_inline_result$jscomp$785_p$$, $JSCompiler_temp_const$jscomp$783_o$$) {
  $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.__destructure_map($JSCompiler_temp_const$jscomp$0$$);
  var $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($JSCompiler_temp_const$jscomp$0$$, cljs$cst$2215$spo);
  $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.map;
  $JSCompiler_temp_const$jscomp$783_o$$ = $JSCompiler_temp_const$jscomp$0$$.cljs$core$IFn$_invoke$arity$2;
  var $JSCompiler_temp_const$$ = $APP.cljs.core.vector;
  $G__43794__$1$jscomp$inline_4847_s$$ = $idx$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $G__43794__$1$jscomp$inline_4847_s$$);
  $G__43794__$2$jscomp$inline_4848_JSCompiler_inline_result$jscomp$785_p$$ = $G__43794__$1$jscomp$inline_4847_s$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43794__$1$jscomp$inline_4847_s$$, $G__43794__$2$jscomp$inline_4848_JSCompiler_inline_result$jscomp$785_p$$);
  $G__43794__$2$jscomp$inline_4848_JSCompiler_inline_result$jscomp$785_p$$ = $G__43794__$2$jscomp$inline_4848_JSCompiler_inline_result$jscomp$785_p$$ == null ? null : $APP.cljs.core.keys($G__43794__$2$jscomp$inline_4848_JSCompiler_inline_result$jscomp$785_p$$);
  return $JSCompiler_temp_const$jscomp$783_o$$.call($JSCompiler_temp_const$jscomp$0$$, $JSCompiler_temp_const$$, $G__43794__$2$jscomp$inline_4848_JSCompiler_inline_result$jscomp$785_p$$);
});
asami.index.get_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, asami.common_index._QMARK_, $APP.cljs$cst$1438$v], null), function($idx$$, $s$$, $p$$, $o$$) {
  $idx$$ = $APP.cljs.core.__destructure_map($idx$$);
  $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $APP.cljs$cst$1584$pos);
  return $APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$2(function($JSCompiler_temp_const$jscomp$0$$) {
    var $p__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$0$$, 0, null), $G__43805__$1$jscomp$inline_4851_JSCompiler_inline_result$jscomp$788_os$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$0$$, 1, null);
    $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core;
    var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$0$$.truth_;
    $G__43805__$1$jscomp$inline_4851_JSCompiler_inline_result$jscomp$788_os$$ = $G__43805__$1$jscomp$inline_4851_JSCompiler_inline_result$jscomp$788_os$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43805__$1$jscomp$inline_4851_JSCompiler_inline_result$jscomp$788_os$$, $o$$);
    $G__43805__$1$jscomp$inline_4851_JSCompiler_inline_result$jscomp$788_os$$ = $G__43805__$1$jscomp$inline_4851_JSCompiler_inline_result$jscomp$788_os$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43805__$1$jscomp$inline_4851_JSCompiler_inline_result$jscomp$788_os$$, $s$$);
    return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$0$$, $G__43805__$1$jscomp$inline_4851_JSCompiler_inline_result$jscomp$788_os$$) ? new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p__$1$$], null) : null;
  }, $idx$$);
});
asami.index.get_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, asami.common_index._QMARK_, asami.common_index._QMARK_], null), function($p__43810$$, $s$$, $p$$, $o$$) {
  var $map__43811__$1$$ = $APP.cljs.core.__destructure_map($p__43810$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43811__$1$$, cljs$cst$2215$spo), $edx$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($s$$) : $idx$$.call(null, $s$$);
  return function $asami$index$iter__43812$$($s__43813$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43813__$1$$ = $s__43813$$;;) {
        var $iterys__5499__auto__$jscomp$10_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43813__$1$$);
        if ($iterys__5499__auto__$jscomp$10_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$10_temp__5825__auto__$$, $fs__5500__auto__$jscomp$10_p__$1$$ = $APP.cljs.core.first($xs__6385__auto__$$);
          $iterys__5499__auto__$jscomp$10_temp__5825__auto__$$ = function($s__43813__$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43811$$, $map__43811__$1$$, $idx$$) {
            return function $asami$index$iter__43812_$_iter__43814$$($s__43815$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43813__$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43811$$, $map__43811__$1$$, $idx$$) {
                return function() {
                  for (;;) {
                    var $s__43815__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43815$$);
                    if ($s__43815__$2_temp__5825__auto____$1$$) {
                      if ($APP.cljs.core.chunked_seq_QMARK_($s__43815__$2_temp__5825__auto____$1$$)) {
                        var $JSCompiler_inline_result$jscomp$789_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43815__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$789_c__5501__auto__$$), $b__43817_o__$1$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                        a: {
                          for (var $i__43816$$ = 0;;) {
                            if ($i__43816$$ < $size__5502__auto__$$) {
                              var $o__$1$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$789_c__5501__auto__$$, $i__43816$$);
                              $APP.cljs.core.chunk_append($b__43817_o__$1$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p__$1$$, $o__$1$$], null));
                              $i__43816$$ += 1;
                            } else {
                              $JSCompiler_inline_result$jscomp$789_c__5501__auto__$$ = !0;
                              break a;
                            }
                          }
                          $JSCompiler_inline_result$jscomp$789_c__5501__auto__$$ = void 0;
                        }
                        return $JSCompiler_inline_result$jscomp$789_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43817_o__$1$$), $asami$index$iter__43812_$_iter__43814$$($APP.cljs.core.chunk_rest($s__43815__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43817_o__$1$$), null);
                      }
                      $b__43817_o__$1$$ = $APP.cljs.core.first($s__43815__$2_temp__5825__auto____$1$$);
                      return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p__$1$$, $b__43817_o__$1$$], null), $asami$index$iter__43812_$_iter__43814$$($APP.cljs.core.rest($s__43815__$2_temp__5825__auto____$1$$)));
                    }
                    return null;
                  }
                };
              }($s__43813__$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43811$$, $map__43811__$1$$, $idx$$), null, null);
            };
          }($s__43813__$1$$, $fs__5500__auto__$jscomp$10_p__$1$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$10_temp__5825__auto__$$, $edx$$, $p__43810$$, $map__43811__$1$$, $idx$$);
          if ($fs__5500__auto__$jscomp$10_p__$1$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$10_temp__5825__auto__$$($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.keys, $edx$$)($fs__5500__auto__$jscomp$10_p__$1$$)))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$10_p__$1$$, $asami$index$iter__43812$$($APP.cljs.core.rest($s__43813__$1$$)));
          }
          $s__43813__$1$$ = $APP.cljs.core.rest($s__43813__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($APP.cljs.core.keys($edx$$));
});
asami.index.get_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, $APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v], null), function($JSCompiler_temp_const$jscomp$0$$, $JSCompiler_temp_const$jscomp$791_s$$, $G__43867__$1$jscomp$inline_4858_p$$, $G__43867__$2$jscomp$inline_4859_JSCompiler_inline_result$jscomp$793_o$$) {
  $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.__destructure_map($JSCompiler_temp_const$jscomp$0$$);
  var $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($JSCompiler_temp_const$jscomp$0$$, $APP.cljs$cst$1584$pos);
  $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.map;
  $JSCompiler_temp_const$jscomp$791_s$$ = $JSCompiler_temp_const$jscomp$0$$.cljs$core$IFn$_invoke$arity$2;
  var $JSCompiler_temp_const$$ = $APP.cljs.core.vector;
  $G__43867__$1$jscomp$inline_4858_p$$ = $idx$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $G__43867__$1$jscomp$inline_4858_p$$);
  $G__43867__$2$jscomp$inline_4859_JSCompiler_inline_result$jscomp$793_o$$ = $G__43867__$1$jscomp$inline_4858_p$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43867__$1$jscomp$inline_4858_p$$, $G__43867__$2$jscomp$inline_4859_JSCompiler_inline_result$jscomp$793_o$$);
  $G__43867__$2$jscomp$inline_4859_JSCompiler_inline_result$jscomp$793_o$$ = $G__43867__$2$jscomp$inline_4859_JSCompiler_inline_result$jscomp$793_o$$ == null ? null : $APP.cljs.core.keys($G__43867__$2$jscomp$inline_4859_JSCompiler_inline_result$jscomp$793_o$$);
  return $JSCompiler_temp_const$jscomp$791_s$$.call($JSCompiler_temp_const$jscomp$0$$, $JSCompiler_temp_const$$, $G__43867__$2$jscomp$inline_4859_JSCompiler_inline_result$jscomp$793_o$$);
});
asami.index.get_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, $APP.cljs$cst$1438$v, asami.common_index._QMARK_], null), function($p__43868$$, $s$$, $p$$, $o$$) {
  var $map__43869__$1$$ = $APP.cljs.core.__destructure_map($p__43868$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43869__$1$$, $APP.cljs$cst$1584$pos), $edx$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($p$$) : $idx$$.call(null, $p$$);
  return function $asami$index$iter__43874$$($s__43875$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43875__$1$$ = $s__43875$$;;) {
        var $iterys__5499__auto__$jscomp$11_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43875__$1$$);
        if ($iterys__5499__auto__$jscomp$11_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$11_temp__5825__auto__$$, $fs__5500__auto__$jscomp$11_o__$1$$ = $APP.cljs.core.first($xs__6385__auto__$$);
          $iterys__5499__auto__$jscomp$11_temp__5825__auto__$$ = function($s__43875__$1$$, $o__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43869$$, $map__43869__$1$$, $idx$$) {
            return function $asami$index$iter__43874_$_iter__43876$$($s__43877$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43875__$1$$, $o__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43869$$, $map__43869__$1$$, $idx$$) {
                return function() {
                  for (;;) {
                    var $s__43877__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43877$$);
                    if ($s__43877__$2_temp__5825__auto____$1$$) {
                      if ($APP.cljs.core.chunked_seq_QMARK_($s__43877__$2_temp__5825__auto____$1$$)) {
                        var $JSCompiler_inline_result$jscomp$794_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43877__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$794_c__5501__auto__$$), $b__43879_s__$1$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                        a: {
                          for (var $i__43878$$ = 0;;) {
                            if ($i__43878$$ < $size__5502__auto__$$) {
                              var $s__$1$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$794_c__5501__auto__$$, $i__43878$$);
                              $APP.cljs.core.chunk_append($b__43879_s__$1$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$, $o__$1$$], null));
                              $i__43878$$ += 1;
                            } else {
                              $JSCompiler_inline_result$jscomp$794_c__5501__auto__$$ = !0;
                              break a;
                            }
                          }
                          $JSCompiler_inline_result$jscomp$794_c__5501__auto__$$ = void 0;
                        }
                        return $JSCompiler_inline_result$jscomp$794_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43879_s__$1$$), $asami$index$iter__43874_$_iter__43876$$($APP.cljs.core.chunk_rest($s__43877__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43879_s__$1$$), null);
                      }
                      $b__43879_s__$1$$ = $APP.cljs.core.first($s__43877__$2_temp__5825__auto____$1$$);
                      return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$b__43879_s__$1$$, $o__$1$$], null), $asami$index$iter__43874_$_iter__43876$$($APP.cljs.core.rest($s__43877__$2_temp__5825__auto____$1$$)));
                    }
                    return null;
                  }
                };
              }($s__43875__$1$$, $o__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43869$$, $map__43869__$1$$, $idx$$), null, null);
            };
          }($s__43875__$1$$, $fs__5500__auto__$jscomp$11_o__$1$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$11_temp__5825__auto__$$, $edx$$, $p__43868$$, $map__43869__$1$$, $idx$$);
          if ($fs__5500__auto__$jscomp$11_o__$1$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$11_temp__5825__auto__$$($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.keys, $edx$$)($fs__5500__auto__$jscomp$11_o__$1$$)))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$11_o__$1$$, $asami$index$iter__43874$$($APP.cljs.core.rest($s__43875__$1$$)));
          }
          $s__43875__$1$$ = $APP.cljs.core.rest($s__43875__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($APP.cljs.core.keys($edx$$));
});
asami.index.get_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, asami.common_index._QMARK_, $APP.cljs$cst$1438$v], null), function($p__43901$$, $s$$, $p$$, $o$$) {
  var $map__43902__$1$$ = $APP.cljs.core.__destructure_map($p__43901$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43902__$1$$, $APP.cljs$cst$1584$pos);
  return function $asami$index$iter__43903$$($s__43904$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43904__$1$$ = $s__43904$$;;) {
        var $iterys__5499__auto__$jscomp$12_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43904__$1$$);
        if ($iterys__5499__auto__$jscomp$12_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$12_temp__5825__auto__$$, $vec__43909$$ = $APP.cljs.core.first($xs__6385__auto__$$), $p__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43909$$, 0, null), $fs__5500__auto__$jscomp$12_os$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43909$$, 1, null);
          $iterys__5499__auto__$jscomp$12_temp__5825__auto__$$ = function($s__43904__$1$$, $vec__43909$$, $p__$1$$, $os$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43902$$, $map__43902__$1$$, $idx$$) {
            return function $asami$index$iter__43903_$_iter__43905$$($s__43906$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43904__$1$$, $vec__43909$$, $p__$1$$, $os$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43902$$, $map__43902__$1$$, $idx$$) {
                return function() {
                  for (;;) {
                    var $s__43906__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43906$$);
                    if ($s__43906__$2_temp__5825__auto____$1$$) {
                      if ($APP.cljs.core.chunked_seq_QMARK_($s__43906__$2_temp__5825__auto____$1$$)) {
                        var $JSCompiler_inline_result$jscomp$795_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43906__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$795_c__5501__auto__$$), $b__43908_s__$1$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                        a: {
                          for (var $i__43907$$ = 0;;) {
                            if ($i__43907$$ < $size__5502__auto__$$) {
                              var $s__$1$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$795_c__5501__auto__$$, $i__43907$$);
                              $APP.cljs.core.chunk_append($b__43908_s__$1$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$, $p__$1$$], null));
                              $i__43907$$ += 1;
                            } else {
                              $JSCompiler_inline_result$jscomp$795_c__5501__auto__$$ = !0;
                              break a;
                            }
                          }
                          $JSCompiler_inline_result$jscomp$795_c__5501__auto__$$ = void 0;
                        }
                        return $JSCompiler_inline_result$jscomp$795_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43908_s__$1$$), $asami$index$iter__43903_$_iter__43905$$($APP.cljs.core.chunk_rest($s__43906__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43908_s__$1$$), null);
                      }
                      $b__43908_s__$1$$ = $APP.cljs.core.first($s__43906__$2_temp__5825__auto____$1$$);
                      return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$b__43908_s__$1$$, $p__$1$$], null), $asami$index$iter__43903_$_iter__43905$$($APP.cljs.core.rest($s__43906__$2_temp__5825__auto____$1$$)));
                    }
                    return null;
                  }
                };
              }($s__43904__$1$$, $vec__43909$$, $p__$1$$, $os$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43902$$, $map__43902__$1$$, $idx$$), null, null);
            };
          }($s__43904__$1$$, $vec__43909$$, $p__$1$$, $fs__5500__auto__$jscomp$12_os$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$12_temp__5825__auto__$$, $p__43901$$, $map__43902__$1$$, $idx$$);
          if ($fs__5500__auto__$jscomp$12_os$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$12_temp__5825__auto__$$($APP.cljs.core.keys($fs__5500__auto__$jscomp$12_os$$.cljs$core$IFn$_invoke$arity$1 ? $fs__5500__auto__$jscomp$12_os$$.cljs$core$IFn$_invoke$arity$1($o$$) : $fs__5500__auto__$jscomp$12_os$$.call(null, $o$$))))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$12_os$$, $asami$index$iter__43903$$($APP.cljs.core.rest($s__43904__$1$$)));
          }
          $s__43904__$1$$ = $APP.cljs.core.rest($s__43904__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($idx$$);
});
asami.index.get_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, asami.common_index._QMARK_, asami.common_index._QMARK_], null), function($p__43933$$, $s$$, $p$$, $o$$) {
  var $map__43934__$1$$ = $APP.cljs.core.__destructure_map($p__43933$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43934__$1$$, cljs$cst$2215$spo);
  return function $asami$index$iter__43935$$($s__43936$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43936__$1$$ = $s__43936$$;;) {
        var $iterys__5499__auto__$jscomp$13_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43936__$1$$);
        if ($iterys__5499__auto__$jscomp$13_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$13_temp__5825__auto__$$, $fs__5500__auto__$jscomp$13_s__$1$$ = $APP.cljs.core.first($xs__6385__auto__$$);
          $iterys__5499__auto__$jscomp$13_temp__5825__auto__$$ = function($s__43936__$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43934$$, $map__43934__$1$$, $idx$$) {
            return function $asami$index$iter__43935_$_iter__43937$$($s__43938$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43936__$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43934$$, $map__43934__$1$$, $idx$$) {
                return function() {
                  for (var $s__43938__$1$$ = $s__43938$$;;) {
                    var $fs__5500__auto__$jscomp$14_iterys__5499__auto__$jscomp$14_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43938__$1$$);
                    if ($fs__5500__auto__$jscomp$14_iterys__5499__auto__$jscomp$14_temp__5825__auto____$1$$) {
                      var $xs__6385__auto____$1$$ = $fs__5500__auto__$jscomp$14_iterys__5499__auto__$jscomp$14_temp__5825__auto____$1$$, $p__$1$$ = $APP.cljs.core.first($xs__6385__auto____$1$$);
                      $fs__5500__auto__$jscomp$14_iterys__5499__auto__$jscomp$14_temp__5825__auto____$1$$ = function($s__43938__$1$$, $s__43936__$1$$, $p__$1$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43934$$, $map__43934__$1$$, $idx$$) {
                        return function $asami$index$iter__43935_$_iter__43937_$_iter__43939$$($s__43940$$) {
                          return new $APP.cljs.core.LazySeq(null, function($s__43938__$1$$, $s__43936__$1$$, $p__$1$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43934$$, $map__43934__$1$$, $idx$$) {
                            return function() {
                              for (;;) {
                                var $s__43940__$2_temp__5825__auto____$2$$ = $APP.cljs.core.seq($s__43940$$);
                                if ($s__43940__$2_temp__5825__auto____$2$$) {
                                  if ($APP.cljs.core.chunked_seq_QMARK_($s__43940__$2_temp__5825__auto____$2$$)) {
                                    var $JSCompiler_inline_result$jscomp$796_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43940__$2_temp__5825__auto____$2$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$796_c__5501__auto__$$), $b__43942_o__$1$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                                    a: {
                                      for (var $i__43941$$ = 0;;) {
                                        if ($i__43941$$ < $size__5502__auto__$$) {
                                          var $o__$1$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$796_c__5501__auto__$$, $i__43941$$);
                                          $APP.cljs.core.chunk_append($b__43942_o__$1$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$, $p__$1$$, $o__$1$$], null));
                                          $i__43941$$ += 1;
                                        } else {
                                          $JSCompiler_inline_result$jscomp$796_c__5501__auto__$$ = !0;
                                          break a;
                                        }
                                      }
                                      $JSCompiler_inline_result$jscomp$796_c__5501__auto__$$ = void 0;
                                    }
                                    return $JSCompiler_inline_result$jscomp$796_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43942_o__$1$$), $asami$index$iter__43935_$_iter__43937_$_iter__43939$$($APP.cljs.core.chunk_rest($s__43940__$2_temp__5825__auto____$2$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43942_o__$1$$), null);
                                  }
                                  $b__43942_o__$1$$ = $APP.cljs.core.first($s__43940__$2_temp__5825__auto____$2$$);
                                  return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$, $p__$1$$, $b__43942_o__$1$$], null), $asami$index$iter__43935_$_iter__43937_$_iter__43939$$($APP.cljs.core.rest($s__43940__$2_temp__5825__auto____$2$$)));
                                }
                                return null;
                              }
                            };
                          }($s__43938__$1$$, $s__43936__$1$$, $p__$1$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43934$$, $map__43934__$1$$, $idx$$), null, null);
                        };
                      }($s__43938__$1$$, $s__43936__$1$$, $p__$1$$, $xs__6385__auto____$1$$, $fs__5500__auto__$jscomp$14_iterys__5499__auto__$jscomp$14_temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43934$$, $map__43934__$1$$, $idx$$);
                      if ($fs__5500__auto__$jscomp$14_iterys__5499__auto__$jscomp$14_temp__5825__auto____$1$$ = $APP.cljs.core.seq($fs__5500__auto__$jscomp$14_iterys__5499__auto__$jscomp$14_temp__5825__auto____$1$$($APP.cljs.core.keys(function() {
                        var $fexpr__43976$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($s__$1$$) : $idx$$.call(null, $s__$1$$);
                        return $fexpr__43976$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__43976$$.cljs$core$IFn$_invoke$arity$1($p__$1$$) : $fexpr__43976$$.call(null, $p__$1$$);
                      }())))) {
                        return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$14_iterys__5499__auto__$jscomp$14_temp__5825__auto____$1$$, $asami$index$iter__43935_$_iter__43937$$($APP.cljs.core.rest($s__43938__$1$$)));
                      }
                      $s__43938__$1$$ = $APP.cljs.core.rest($s__43938__$1$$);
                    } else {
                      return null;
                    }
                  }
                };
              }($s__43936__$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43934$$, $map__43934__$1$$, $idx$$), null, null);
            };
          }($s__43936__$1$$, $fs__5500__auto__$jscomp$13_s__$1$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$13_temp__5825__auto__$$, $p__43933$$, $map__43934__$1$$, $idx$$);
          if ($fs__5500__auto__$jscomp$13_s__$1$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$13_temp__5825__auto__$$($APP.cljs.core.keys($idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($fs__5500__auto__$jscomp$13_s__$1$$) : $idx$$.call(null, $fs__5500__auto__$jscomp$13_s__$1$$))))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$13_s__$1$$, $asami$index$iter__43935$$($APP.cljs.core.rest($s__43936__$1$$)));
          }
          $s__43936__$1$$ = $APP.cljs.core.rest($s__43936__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($APP.cljs.core.keys($idx$$));
});
asami.index.count_transitive_from_index = function() {
  var $method_table__5622__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $prefer_table__5623__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $method_cache__5624__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $cached_hierarchy__5625__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), 
  $JSCompiler_temp_const$jscomp$799_hierarchy__5626__auto__$$ = $APP.cljs.core.get, $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$799_hierarchy__5626__auto__$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.PersistentArrayMap.EMPTY;
  var $JSCompiler_inline_result$jscomp$800_fexpr__43989$$ = $APP.cljs.core.get_global_hierarchy;
  $JSCompiler_inline_result$jscomp$800_fexpr__43989$$ = $JSCompiler_inline_result$jscomp$800_fexpr__43989$$.cljs$core$IFn$_invoke$arity$0 ? $JSCompiler_inline_result$jscomp$800_fexpr__43989$$.cljs$core$IFn$_invoke$arity$0() : $JSCompiler_inline_result$jscomp$800_fexpr__43989$$.call(null);
  $JSCompiler_temp_const$jscomp$799_hierarchy__5626__auto__$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$799_hierarchy__5626__auto__$$, $JSCompiler_temp_const$jscomp$0$$, $APP.cljs$cst$204$hierarchy, $JSCompiler_inline_result$jscomp$800_fexpr__43989$$);
  return new $APP.cljs.core.MultiFn($APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("asami.index", "count-transitive-from-index"), asami.common_index.trans_simplify, $APP.cljs$cst$205$default, $JSCompiler_temp_const$jscomp$799_hierarchy__5626__auto__$$, $method_table__5622__auto__$$, $prefer_table__5623__auto__$$, $method_cache__5624__auto__$$, $cached_hierarchy__5625__auto__$$);
}();
asami.index.count_transitive_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, $APP.cljs$cst$205$default, function($graph$$, $tag$$, $s$$, $p$$, $o$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, asami.common_index._QMARK_, asami.common_index._QMARK_], null), asami.common_index.simplify.cljs$core$IFn$_invoke$arity$variadic($graph$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$s$$, $p$$, $o$$], 0))) ? $APP.cljs.core.count(cljs$cst$2215$spo.cljs$core$IFn$_invoke$arity$1($graph$$)) * $APP.cljs.core.count(cljs$cst$2232$osp.cljs$core$IFn$_invoke$arity$1($graph$$)) : 
  $APP.cljs.core.count(asami.common_index.get_transitive_from_index.cljs$core$IFn$_invoke$arity$5($graph$$, $tag$$, $s$$, $p$$, $o$$));
});
asami.index.GraphIndexed = function($spo$$, $pos$$, $spot$$, $tconj$$, $__meta$$, $__extmap$$, $__hash$$) {
  this.spo = $spo$$;
  this.pos = $pos$$;
  this.spot = $spot$$;
  this.tconj = $tconj$$;
  this.__meta = $__meta$$;
  this.__extmap = $__extmap$$;
  this.__hash = $__hash$$;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
asami.index.GraphIndexed.prototype.asami$graph$Graph$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.index.GraphIndexed.prototype.asami$graph$Graph$new_graph$arity$1 = function($this$$$) {
  return asami.index.empty_graph;
};
asami.index.GraphIndexed.prototype.asami$graph$Graph$graph_add$arity$4 = function($this$$$, $subj$$, $pred$$, $obj$$) {
  return this.asami$graph$Graph$graph_add$arity$5(null, $subj$$, $pred$$, $obj$$, asami.graph._STAR_default_tx_id_STAR_);
};
asami.index.GraphIndexed.prototype.asami$graph$Graph$graph_add$arity$5 = function($new_spo_this$$$, $G__44005$jscomp$inline_4876_JSCompiler_inline_result$jscomp$806_subj$$, $pred$$, $obj$$, $tx$$) {
  6 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$144$trace, "asami.index", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["insert: ", new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__44005$jscomp$inline_4876_JSCompiler_inline_result$jscomp$806_subj$$, $pred$$, $obj$$, $tx$$], null)], 0));
  var $JSCompiler_temp_const$jscomp$801_id$$ = $APP.cljs.core.count(this.spot) + 1;
  $new_spo_this$$$ = asami.index.index_add(this.spo, $G__44005$jscomp$inline_4876_JSCompiler_inline_result$jscomp$806_subj$$, $pred$$, $obj$$, $JSCompiler_temp_const$jscomp$801_id$$, $tx$$);
  if (this.spo === $new_spo_this$$$) {
    return 6 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$144$trace, "asami.index", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["statement already existed"], 0)), this;
  }
  var $JSCompiler_temp_const$$ = $APP.cljs.core.assoc, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$variadic, $JSCompiler_temp_const$jscomp$1$$ = $APP.cljs.core.prim_seq, $JSCompiler_temp_const$jscomp$2$$ = $JSCompiler_temp_const$jscomp$1$$.cljs$core$IFn$_invoke$arity$2;
  $JSCompiler_temp_const$jscomp$801_id$$ = asami.index.index_add(this.pos, $pred$$, $obj$$, $G__44005$jscomp$inline_4876_JSCompiler_inline_result$jscomp$806_subj$$, $JSCompiler_temp_const$jscomp$801_id$$, $tx$$);
  var $G__44004$$ = this.spot;
  $G__44005$jscomp$inline_4876_JSCompiler_inline_result$jscomp$806_subj$$ = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__44005$jscomp$inline_4876_JSCompiler_inline_result$jscomp$806_subj$$, $pred$$, $obj$$, $tx$$], null);
  $G__44005$jscomp$inline_4876_JSCompiler_inline_result$jscomp$806_subj$$ = this.tconj.cljs$core$IFn$_invoke$arity$2 ? this.tconj.cljs$core$IFn$_invoke$arity$2($G__44004$$, $G__44005$jscomp$inline_4876_JSCompiler_inline_result$jscomp$806_subj$$) : this.tconj.call(null, $G__44004$$, $G__44005$jscomp$inline_4876_JSCompiler_inline_result$jscomp$806_subj$$);
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, this, cljs$cst$2215$spo, $new_spo_this$$$, $JSCompiler_temp_const$jscomp$2$$.call($JSCompiler_temp_const$jscomp$1$$, [$APP.cljs$cst$1584$pos, $JSCompiler_temp_const$jscomp$801_id$$, cljs$cst$2233$spot, $G__44005$jscomp$inline_4876_JSCompiler_inline_result$jscomp$806_subj$$], 0));
};
asami.index.GraphIndexed.prototype.asami$graph$Graph$graph_delete$arity$4 = function($temp__5823__auto__$jscomp$165_this$$$, $subj$$, $pred$$, $obj$$) {
  6 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$144$trace, "asami.index", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["delete ", new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$subj$$, $pred$$, $obj$$], null)], 0));
  $temp__5823__auto__$jscomp$165_this$$$ = asami.index.index_delete(this.spo, $subj$$, $pred$$, $obj$$);
  if ($APP.cljs.core.truth_($temp__5823__auto__$jscomp$165_this$$$)) {
    return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(this, cljs$cst$2215$spo, $temp__5823__auto__$jscomp$165_this$$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$1584$pos, asami.index.index_delete(this.pos, $pred$$, $obj$$, $subj$$)], 0));
  }
  6 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$144$trace, "asami.index", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["statement did not exist"], 0));
  return this;
};
asami.index.GraphIndexed.prototype.asami$graph$Graph$graph_transact$arity$4 = function($this$$$, $result$jscomp$130_tx_id$$, $assertions$$, $retractions$$) {
  $this$$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(this, cljs$cst$2233$spot, $APP.cljs.core.transient$(this.spot), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$2234$tconj, $APP.cljs.core.conj_BANG_], 0));
  $result$jscomp$130_tx_id$$ = asami.common_index.graph_transact($this$$$, $result$jscomp$130_tx_id$$, $assertions$$, $retractions$$, $APP.cljs.core.volatile_BANG_(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.PersistentArrayMap.EMPTY], null)));
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic($result$jscomp$130_tx_id$$, cljs$cst$2233$spot, $APP.cljs.core.persistent_BANG_(cljs$cst$2233$spot.cljs$core$IFn$_invoke$arity$1($result$jscomp$130_tx_id$$)), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$2234$tconj, $APP.cljs.core.conj], 0));
};
asami.index.GraphIndexed.prototype.asami$graph$Graph$graph_transact$arity$5 = function($this$$jscomp$688_tmpgraph$$, $result$jscomp$131_tx_id$$, $assertions$$, $retractions$$, $generated_data$$) {
  $this$$jscomp$688_tmpgraph$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(this, cljs$cst$2233$spot, $APP.cljs.core.transient$(this.spot), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$2234$tconj, $APP.cljs.core.conj_BANG_], 0));
  $result$jscomp$131_tx_id$$ = asami.common_index.graph_transact($this$$jscomp$688_tmpgraph$$, $result$jscomp$131_tx_id$$, $assertions$$, $retractions$$, $generated_data$$);
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic($result$jscomp$131_tx_id$$, cljs$cst$2233$spot, $APP.cljs.core.persistent_BANG_(cljs$cst$2233$spot.cljs$core$IFn$_invoke$arity$1($result$jscomp$131_tx_id$$)), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$2234$tconj, $APP.cljs.core.conj], 0));
};
asami.index.GraphIndexed.prototype.asami$graph$Graph$graph_diff$arity$2 = function($s_po_this$$$, $other$$) {
  if (!$APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.type(this), $APP.cljs.core.type($other$$))) {
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Unable to compare diffs between graphs of different types", new $APP.cljs.core.PersistentArrayMap(null, 2, [cljs$cst$2235$this, this, cljs$cst$2236$other, $other$$], null));
  }
  $s_po_this$$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function($p__44021_po$$) {
    var $s$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44021_po$$, 0, null);
    $p__44021_po$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44021_po$$, 1, null);
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($p__44021_po$$, $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs$cst$2215$spo.cljs$core$IFn$_invoke$arity$1($other$$), $s$$));
  }, this.spo);
  return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.first, $s_po_this$$$);
};
asami.index.GraphIndexed.prototype.asami$graph$Graph$resolve_triple$arity$4 = function($temp__5823__auto__$jscomp$166_this$$$, $subj$$, $plain_pred_pred$$, $obj$$) {
  $temp__5823__auto__$jscomp$166_this$$$ = asami.common_index.check_for_transitive($plain_pred_pred$$);
  return $APP.cljs.core.truth_($temp__5823__auto__$jscomp$166_this$$$) ? ($plain_pred_pred$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$jscomp$166_this$$$, 0, null), $temp__5823__auto__$jscomp$166_this$$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$jscomp$166_this$$$, 1, null), asami.common_index.get_transitive_from_index.cljs$core$IFn$_invoke$arity$5(this, $temp__5823__auto__$jscomp$166_this$$$, $subj$$, $plain_pred_pred$$, $obj$$)) : asami.index.get_from_index.cljs$core$IFn$_invoke$arity$4(this, 
  $subj$$, $plain_pred_pred$$, $obj$$);
};
asami.index.GraphIndexed.prototype.asami$graph$Graph$attribute_values$arity$2 = function($this$$$, $node$$) {
  var $this$__$1$$ = this, $edx$$ = this.spo.cljs$core$IFn$_invoke$arity$1 ? this.spo.cljs$core$IFn$_invoke$arity$1($node$$) : this.spo.call(null, $node$$);
  return function $asami$index$iter__44032$$($s__44033$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__44033__$1$$ = $s__44033$$;;) {
        var $iterys__5499__auto__$jscomp$15_temp__5825__auto__$$ = $APP.cljs.core.seq($s__44033__$1$$);
        if ($iterys__5499__auto__$jscomp$15_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$15_temp__5825__auto__$$, $fs__5500__auto__$jscomp$15_p$$ = $APP.cljs.core.first($xs__6385__auto__$$);
          $iterys__5499__auto__$jscomp$15_temp__5825__auto__$$ = function($s__44033__$1$$, $p$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $this$__$1$$) {
            return function $asami$index$iter__44032_$_iter__44034$$($s__44035$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__44033__$1$$, $p$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $this$__$1$$) {
                return function() {
                  for (;;) {
                    var $s__44035__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__44035$$);
                    if ($s__44035__$2_temp__5825__auto____$1$$) {
                      if ($APP.cljs.core.chunked_seq_QMARK_($s__44035__$2_temp__5825__auto____$1$$)) {
                        var $JSCompiler_inline_result$jscomp$807_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__44035__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$807_c__5501__auto__$$), $b__44037_o$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                        a: {
                          for (var $i__44036$$ = 0;;) {
                            if ($i__44036$$ < $size__5502__auto__$$) {
                              var $o$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$807_c__5501__auto__$$, $i__44036$$);
                              $APP.cljs.core.chunk_append($b__44037_o$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p$$, $o$$], null));
                              $i__44036$$ += 1;
                            } else {
                              $JSCompiler_inline_result$jscomp$807_c__5501__auto__$$ = !0;
                              break a;
                            }
                          }
                          $JSCompiler_inline_result$jscomp$807_c__5501__auto__$$ = void 0;
                        }
                        return $JSCompiler_inline_result$jscomp$807_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__44037_o$$), $asami$index$iter__44032_$_iter__44034$$($APP.cljs.core.chunk_rest($s__44035__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__44037_o$$), null);
                      }
                      $b__44037_o$$ = $APP.cljs.core.first($s__44035__$2_temp__5825__auto____$1$$);
                      return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p$$, $b__44037_o$$], null), $asami$index$iter__44032_$_iter__44034$$($APP.cljs.core.rest($s__44035__$2_temp__5825__auto____$1$$)));
                    }
                    return null;
                  }
                };
              }($s__44033__$1$$, $p$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $this$__$1$$), null, null);
            };
          }($s__44033__$1$$, $fs__5500__auto__$jscomp$15_p$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$15_temp__5825__auto__$$, $edx$$, $this$__$1$$);
          if ($fs__5500__auto__$jscomp$15_p$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$15_temp__5825__auto__$$($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.keys, $edx$$)($fs__5500__auto__$jscomp$15_p$$)))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$15_p$$, $asami$index$iter__44032$$($APP.cljs.core.rest($s__44033__$1$$)));
          }
          $s__44033__$1$$ = $APP.cljs.core.rest($s__44033__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($APP.cljs.core.keys($edx$$));
};
asami.index.GraphIndexed.prototype.asami$graph$Graph$count_triple$arity$4 = function($temp__5823__auto__$jscomp$167_this$$jscomp$692_trans_tag$$, $subj$$, $plain_pred$jscomp$1_pred$$, $obj$$) {
  $temp__5823__auto__$jscomp$167_this$$jscomp$692_trans_tag$$ = asami.common_index.check_for_transitive($plain_pred$jscomp$1_pred$$);
  return $APP.cljs.core.truth_($temp__5823__auto__$jscomp$167_this$$jscomp$692_trans_tag$$) ? ($plain_pred$jscomp$1_pred$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$jscomp$167_this$$jscomp$692_trans_tag$$, 0, null), $temp__5823__auto__$jscomp$167_this$$jscomp$692_trans_tag$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$jscomp$167_this$$jscomp$692_trans_tag$$, 1, null), asami.index.count_transitive_from_index.cljs$core$IFn$_invoke$arity$5(this, 
  $temp__5823__auto__$jscomp$167_this$$jscomp$692_trans_tag$$, $subj$$, $plain_pred$jscomp$1_pred$$, $obj$$)) : asami.common_index.count_from_index.cljs$core$IFn$_invoke$arity$4(this, $subj$$, $plain_pred$jscomp$1_pred$$, $obj$$);
};
asami.index.GraphIndexed.prototype.cljs$core$ILookup$_lookup$arity$2 = function($this__5323__auto__$$, $k__5324__auto__$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k__5324__auto__$$, null);
};
asami.index.GraphIndexed.prototype.cljs$core$ILookup$_lookup$arity$3 = function($this__5325__auto__$$, $k43995$$, $else__5326__auto__$$) {
  switch($k43995$$ instanceof $APP.cljs.core.Keyword ? $k43995$$.fqn : null) {
    case "spo":
      return this.spo;
    case "pos":
      return this.pos;
    case "spot":
      return this.spot;
    case "tconj":
      return this.tconj;
    default:
      return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3(this.__extmap, $k43995$$, $else__5326__auto__$$);
  }
};
asami.index.GraphIndexed.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function($this__5343__auto__$$, $f__5344__auto__$$, $init__5345__auto__$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($ret__5346__auto__$$, $p__44057_v__5348__auto__$$) {
    var $k__5347__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44057_v__5348__auto__$$, 0, null);
    $p__44057_v__5348__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44057_v__5348__auto__$$, 1, null);
    return $f__5344__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $f__5344__auto__$$.cljs$core$IFn$_invoke$arity$3($ret__5346__auto__$$, $k__5347__auto__$$, $p__44057_v__5348__auto__$$) : $f__5344__auto__$$.call(null, $ret__5346__auto__$$, $k__5347__auto__$$, $p__44057_v__5348__auto__$$);
  }, $init__5345__auto__$$, this);
};
asami.index.GraphIndexed.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this__5338__auto__$$, $writer__5339__auto__$$, $opts__5340__auto__$$) {
  return $APP.cljs.core.pr_sequential_writer($writer__5339__auto__$$, function($keyval__5342__auto__$$) {
    return $APP.cljs.core.pr_sequential_writer($writer__5339__auto__$$, $APP.cljs.core.pr_writer, "", " ", "", $opts__5340__auto__$$, $keyval__5342__auto__$$);
  }, "#asami.index.GraphIndexed{", ", ", "}", $opts__5340__auto__$$, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2215$spo, this.spo], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1584$pos, this.pos], null), new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2233$spot, this.spot], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2234$tconj, this.tconj], null)], null), this.__extmap));
};
asami.index.GraphIndexed.prototype.cljs$core$IIterable$_iterator$arity$1 = function($G__43994$$) {
  return new $APP.cljs.core.RecordIter(0, this, 4, new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2215$spo, $APP.cljs$cst$1584$pos, cljs$cst$2233$spot, cljs$cst$2234$tconj], null), $APP.cljs.core.truth_(this.__extmap) ? $APP.cljs.core._iterator(this.__extmap) : $APP.cljs.core.nil_iter());
};
asami.index.GraphIndexed.prototype.cljs$core$IMeta$_meta$arity$1 = function($this__5321__auto__$$) {
  return this.__meta;
};
asami.index.GraphIndexed.prototype.cljs$core$ICloneable$_clone$arity$1 = function($this__5318__auto__$$) {
  return new asami.index.GraphIndexed(this.spo, this.pos, this.spot, this.tconj, this.__meta, this.__extmap, this.__hash);
};
asami.index.GraphIndexed.prototype.cljs$core$ICounted$_count$arity$1 = function($this__5327__auto__$$) {
  return 4 + $APP.cljs.core.count(this.__extmap);
};
asami.index.GraphIndexed.prototype.cljs$core$IHash$_hash$arity$1 = function($h__5134__auto__$jscomp$71_h__5134__auto____$1$jscomp$71_this__5319__auto__$$) {
  $h__5134__auto__$jscomp$71_h__5134__auto____$1$jscomp$71_this__5319__auto__$$ = this.__hash;
  return $h__5134__auto__$jscomp$71_h__5134__auto____$1$jscomp$71_this__5319__auto__$$ != null ? $h__5134__auto__$jscomp$71_h__5134__auto____$1$jscomp$71_this__5319__auto__$$ : this.__hash = $h__5134__auto__$jscomp$71_h__5134__auto____$1$jscomp$71_this__5319__auto__$$ = 1947501688 ^ $APP.cljs.core.hash_unordered_coll(this);
};
asami.index.GraphIndexed.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this43996$$, $other43997$$) {
  return $other43997$$ != null && this.constructor === $other43997$$.constructor && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.spo, $other43997$$.spo) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.pos, $other43997$$.pos) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.spot, $other43997$$.spot) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.tconj, $other43997$$.tconj) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.__extmap, $other43997$$.__extmap);
};
asami.index.GraphIndexed.prototype.asami$common_index$NestedIndex$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.index.GraphIndexed.prototype.asami$common_index$NestedIndex$lowest_level_fn$arity$1 = function($this$$$) {
  return $APP.cljs.core.keys;
};
asami.index.GraphIndexed.prototype.asami$common_index$NestedIndex$lowest_level_sets_fn$arity$1 = function($this$$$) {
  return $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.map, $APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set, $APP.cljs.core.keys));
};
asami.index.GraphIndexed.prototype.asami$common_index$NestedIndex$lowest_level_set_fn$arity$1 = function($this$$$) {
  return $APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set, $APP.cljs.core.keys);
};
asami.index.GraphIndexed.prototype.asami$common_index$NestedIndex$mid_level_map_fn$arity$1 = function($this$$$) {
  return function($p1__43991_SHARP_$$) {
    return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p__44080_v$$) {
      var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44080_v$$, 0, null);
      $p__44080_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44080_v$$, 1, null);
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, $APP.cljs.core.set($APP.cljs.core.keys($p__44080_v$$))], null);
    }, $p1__43991_SHARP_$$));
  };
};
asami.index.GraphIndexed.prototype.cljs$core$IMap$_dissoc$arity$2 = function($this__5333__auto__$$, $k__5334__auto__$$) {
  return $APP.cljs.core.contains_QMARK_(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 4, [cljs$cst$2234$tconj, null, $APP.cljs$cst$1584$pos, null, cljs$cst$2215$spo, null, cljs$cst$2233$spot, null], null), null), $k__5334__auto__$$) ? $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._with_meta($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), $k__5334__auto__$$) : new asami.index.GraphIndexed(this.spo, 
  this.pos, this.spot, this.tconj, this.__meta, $APP.cljs.core.not_empty($APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.__extmap, $k__5334__auto__$$)), null);
};
asami.index.GraphIndexed.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($this__5330__auto__$$, $k43995$$) {
  switch($k43995$$ instanceof $APP.cljs.core.Keyword ? $k43995$$.fqn : null) {
    case "spo":
    case "pos":
    case "spot":
    case "tconj":
      return !0;
    default:
      return $APP.cljs.core.contains_QMARK_(this.__extmap, $k43995$$);
  }
};
asami.index.GraphIndexed.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($pred__44107_this__5331__auto__$$, $k__5332__auto__$$, $G__43994$$) {
  $pred__44107_this__5331__auto__$$ = $APP.cljs.core.keyword_identical_QMARK_;
  return $APP.cljs.core.truth_($pred__44107_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__44107_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2(cljs$cst$2215$spo, $k__5332__auto__$$) : $pred__44107_this__5331__auto__$$.call(null, cljs$cst$2215$spo, $k__5332__auto__$$)) ? new asami.index.GraphIndexed($G__43994$$, this.pos, this.spot, this.tconj, this.__meta, this.__extmap, null) : $APP.cljs.core.truth_($pred__44107_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__44107_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1584$pos, 
  $k__5332__auto__$$) : $pred__44107_this__5331__auto__$$.call(null, $APP.cljs$cst$1584$pos, $k__5332__auto__$$)) ? new asami.index.GraphIndexed(this.spo, $G__43994$$, this.spot, this.tconj, this.__meta, this.__extmap, null) : $APP.cljs.core.truth_($pred__44107_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__44107_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2(cljs$cst$2233$spot, $k__5332__auto__$$) : $pred__44107_this__5331__auto__$$.call(null, cljs$cst$2233$spot, $k__5332__auto__$$)) ? 
  new asami.index.GraphIndexed(this.spo, this.pos, $G__43994$$, this.tconj, this.__meta, this.__extmap, null) : $APP.cljs.core.truth_($pred__44107_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__44107_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2(cljs$cst$2234$tconj, $k__5332__auto__$$) : $pred__44107_this__5331__auto__$$.call(null, cljs$cst$2234$tconj, $k__5332__auto__$$)) ? new asami.index.GraphIndexed(this.spo, this.pos, this.spot, $G__43994$$, this.__meta, this.__extmap, null) : 
  new asami.index.GraphIndexed(this.spo, this.pos, this.spot, this.tconj, this.__meta, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.__extmap, $k__5332__auto__$$, $G__43994$$), null);
};
asami.index.GraphIndexed.prototype.cljs$core$ISeqable$_seq$arity$1 = function($this__5336__auto__$$) {
  return $APP.cljs.core.seq($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.MapEntry(cljs$cst$2215$spo, this.spo, null), new $APP.cljs.core.MapEntry($APP.cljs$cst$1584$pos, this.pos, null), new $APP.cljs.core.MapEntry(cljs$cst$2233$spot, this.spot, null), new $APP.cljs.core.MapEntry(cljs$cst$2234$tconj, this.tconj, null)], null), this.__extmap));
};
asami.index.GraphIndexed.prototype.zuko$node$NodeAPI$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.index.GraphIndexed.prototype.zuko$node$NodeAPI$data_attribute$arity$2 = function($_$$, $___$1$$) {
  return cljs$cst$2237$a_SLASH_first;
};
asami.index.GraphIndexed.prototype.zuko$node$NodeAPI$container_attribute$arity$2 = function($_$$, $___$1$$) {
  return cljs$cst$2238$a_SLASH_contains;
};
asami.index.GraphIndexed.prototype.zuko$node$NodeAPI$new_node$arity$1 = function($_$$) {
  return asami.graph.new_node.cljs$core$IFn$_invoke$arity$0();
};
asami.index.GraphIndexed.prototype.zuko$node$NodeAPI$node_id$arity$2 = function($_$$, $n$$) {
  return asami.graph.node_id($n$$);
};
asami.index.GraphIndexed.prototype.zuko$node$NodeAPI$node_type_QMARK_$arity$3 = function($_$$, $___$1$$, $n$$) {
  return asami.graph.node_type_QMARK_($n$$);
};
asami.index.GraphIndexed.prototype.zuko$node$NodeAPI$find_triple$arity$2 = function($e$jscomp$268_this$$$, $p__44130_v$$) {
  $e$jscomp$268_this$$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44130_v$$, 0, null);
  var $a$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44130_v$$, 1, null);
  $p__44130_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44130_v$$, 2, null);
  return this.asami$graph$Graph$resolve_triple$arity$4(null, $e$jscomp$268_this$$$, $a$$, $p__44130_v$$);
};
asami.index.GraphIndexed.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($this__5322__auto__$$, $G__43994$$) {
  return new asami.index.GraphIndexed(this.spo, this.pos, this.spot, this.tconj, $G__43994$$, this.__extmap, this.__hash);
};
asami.index.GraphIndexed.prototype.cljs$core$ICollection$_conj$arity$2 = function($this__5328__auto__$$, $entry__5329__auto__$$) {
  return $APP.cljs.core.vector_QMARK_($entry__5329__auto__$$) ? this.cljs$core$IAssociative$_assoc$arity$3(null, $APP.cljs.core._nth($entry__5329__auto__$$, 0), $APP.cljs.core._nth($entry__5329__auto__$$, 1)) : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($APP.cljs.core._conj, this, $entry__5329__auto__$$);
};
asami.index.GraphIndexed.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2239$spo, $APP.cljs$cst$1607$pos, cljs$cst$2240$spot, cljs$cst$2241$tconj], null);
};
asami.index.GraphIndexed.cljs$lang$type = !0;
asami.index.GraphIndexed.cljs$lang$ctorPrSeq = function($this__5369__auto__$$) {
  return new $APP.cljs.core.List(null, "asami.index/GraphIndexed", null, 1, null);
};
asami.index.GraphIndexed.cljs$lang$ctorPrWriter = function($this__5369__auto__$$, $writer__5370__auto__$$) {
  return $APP.cljs.core._write($writer__5370__auto__$$, "asami.index/GraphIndexed");
};
asami.index.__GT_GraphIndexed = function($spo$$, $pos$$, $spot$$, $tconj$$) {
  return new asami.index.GraphIndexed($spo$$, $pos$$, $spot$$, $tconj$$, null, null, null);
};
asami.index.map__GT_GraphIndexed = function($G__44002$$) {
  var $G__44151$jscomp$inline_4882_extmap__5365__auto__$$ = $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic($G__44002$$, cljs$cst$2215$spo, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$1584$pos, cljs$cst$2233$spot, cljs$cst$2234$tconj], 0));
  $G__44151$jscomp$inline_4882_extmap__5365__auto__$$ = $APP.cljs.core.record_QMARK_($G__44002$$) ? $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $G__44151$jscomp$inline_4882_extmap__5365__auto__$$) : $G__44151$jscomp$inline_4882_extmap__5365__auto__$$;
  return new asami.index.GraphIndexed(cljs$cst$2215$spo.cljs$core$IFn$_invoke$arity$1($G__44002$$), $APP.cljs$cst$1584$pos.cljs$core$IFn$_invoke$arity$1($G__44002$$), cljs$cst$2233$spot.cljs$core$IFn$_invoke$arity$1($G__44002$$), cljs$cst$2234$tconj.cljs$core$IFn$_invoke$arity$1($G__44002$$), null, $APP.cljs.core.not_empty($G__44151$jscomp$inline_4882_extmap__5365__auto__$$), null);
};
asami.index.empty_graph = asami.index.__GT_GraphIndexed($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.conj);
asami.multi_graph = {};
asami.multi_graph._STAR_insert_op_STAR_ = $APP.cljs.core.inc;
asami.multi_graph.IndexStructure = $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.required_key($APP.cljs$cst$1650$count), $APP.schema.core.Num, $APP.schema.core.required_key($APP.cljs$cst$2227$t), $APP.schema.core.Int, $APP.schema.core.required_key($APP.cljs$cst$396$id), 
$APP.schema.core.Int, $APP.schema.core.Keyword, $APP.schema.core.Any])])])]);
var output_schema43762_44061 = asami.multi_graph.IndexStructure, input_schema43763_44062 = new $APP.cljs.core.PersistentVector(null, 6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.multi_graph.IndexStructure, $APP.cljs.core.with_meta($APP.cljs$cst$1256$idx, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2242$IndexStructure], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1255$a, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2229$b, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2230$c, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Int, 
$APP.cljs.core.with_meta($APP.cljs$cst$2201$tx, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2231$s_SLASH_Int], null))), $APP.schema.core.one($APP.schema.core.Int, $APP.cljs.core.with_meta($APP.cljs$cst$1850$id, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2231$s_SLASH_Int], null)))], null), ret__35121__auto___44063 = asami.multi_graph.multi_add = function($idx$$, $a$$, $b$$, $c$$, $tx$$, $id$$) {
  var $temp__5823__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $a$$);
  if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
    var $temp__5823__auto____$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($temp__5823__auto__$$, $b$$);
    if ($APP.cljs.core.truth_($temp__5823__auto____$1$$)) {
      var $temp__5823__auto____$2$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($temp__5823__auto____$1$$, $c$$);
      return $APP.cljs.core.truth_($temp__5823__auto____$2$$) ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($idx$$, $a$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$$, $b$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto____$1$$, $c$$, $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$3($temp__5823__auto____$2$$, $APP.cljs$cst$1650$count, asami.multi_graph._STAR_insert_op_STAR_)))) : $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($idx$$, 
      $a$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$$, $b$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto____$1$$, $c$$, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$1650$count, asami.multi_graph._STAR_insert_op_STAR_.call(null, 0), $APP.cljs$cst$2227$t, $tx$$, $APP.cljs$cst$396$id, $id$$], null))));
    }
    return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($idx$$, $a$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$$, $b$$, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$c$$, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$1650$count, asami.multi_graph._STAR_insert_op_STAR_.call(null, 0), $APP.cljs$cst$2227$t, $tx$$, $APP.cljs$cst$396$id, $id$$], null)])));
  }
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($idx$$, $a$$, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$b$$, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$c$$, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$1650$count, asami.multi_graph._STAR_insert_op_STAR_.call(null, 0), $APP.cljs$cst$2227$t, $tx$$, $APP.cljs$cst$396$id, $id$$], null)])]));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.multi_graph.multi_add), $APP.schema.core.__GT_FnSchema(output_schema43762_44061, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43763_44062], null)));
var output_schema43778_44064 = $APP.schema.core.maybe(asami.multi_graph.IndexStructure), input_schema43779_44065 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.multi_graph.IndexStructure, $APP.cljs.core.with_meta($APP.cljs$cst$1256$idx, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2242$IndexStructure], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1255$a, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2229$b, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2230$c, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], 
null)))], null), ret__35121__auto___44066 = asami.multi_graph.multi_delete = function($idx$$, $a$$, $b$jscomp$255_new_idx2$$, $c$jscomp$238_new_idx3$$) {
  var $temp__5823__auto__$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($a$$) : $idx$$.call(null, $a$$);
  if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
    var $temp__5823__auto____$1$$ = $temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$1($b$jscomp$255_new_idx2$$) : $temp__5823__auto__$$.call(null, $b$jscomp$255_new_idx2$$);
    if ($APP.cljs.core.truth_($temp__5823__auto____$1$$)) {
      var $map__43786__$1_temp__5823__auto____$2$$ = $temp__5823__auto____$1$$.cljs$core$IFn$_invoke$arity$1 ? $temp__5823__auto____$1$$.cljs$core$IFn$_invoke$arity$1($c$jscomp$238_new_idx3$$) : $temp__5823__auto____$1$$.call(null, $c$jscomp$238_new_idx3$$);
      if ($APP.cljs.core.truth_($map__43786__$1_temp__5823__auto____$2$$)) {
        $map__43786__$1_temp__5823__auto____$2$$ = $APP.cljs.core.__destructure_map($map__43786__$1_temp__5823__auto____$2$$);
        var $c4$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43786__$1_temp__5823__auto____$2$$, $APP.cljs$cst$1650$count);
        return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $c4$$) ? ($c$jscomp$238_new_idx3$$ = $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($temp__5823__auto____$1$$, $c$jscomp$238_new_idx3$$), $b$jscomp$255_new_idx2$$ = $APP.cljs.core.seq($c$jscomp$238_new_idx3$$) ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$$, $b$jscomp$255_new_idx2$$, $c$jscomp$238_new_idx3$$) : $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($temp__5823__auto__$$, $b$jscomp$255_new_idx2$$), 
        $APP.cljs.core.seq($b$jscomp$255_new_idx2$$) ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($idx$$, $a$$, $b$jscomp$255_new_idx2$$) : $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($idx$$, $a$$)) : $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($idx$$, $a$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$$, $b$jscomp$255_new_idx2$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($temp__5823__auto____$1$$, $c$jscomp$238_new_idx3$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($map__43786__$1_temp__5823__auto____$2$$, 
        $APP.cljs$cst$1650$count, $c4$$ - 1))));
      }
    }
  }
  return null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.multi_graph.multi_delete), $APP.schema.core.__GT_FnSchema(output_schema43778_44064, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43779_44065], null)));
asami.multi_graph.get_from_multi_index = function() {
  var $method_table__5622__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $prefer_table__5623__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $method_cache__5624__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $cached_hierarchy__5625__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), 
  $JSCompiler_temp_const$jscomp$810_hierarchy__5626__auto__$$ = $APP.cljs.core.get, $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$810_hierarchy__5626__auto__$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.PersistentArrayMap.EMPTY;
  var $JSCompiler_inline_result$jscomp$811_fexpr__43787$$ = $APP.cljs.core.get_global_hierarchy;
  $JSCompiler_inline_result$jscomp$811_fexpr__43787$$ = $JSCompiler_inline_result$jscomp$811_fexpr__43787$$.cljs$core$IFn$_invoke$arity$0 ? $JSCompiler_inline_result$jscomp$811_fexpr__43787$$.cljs$core$IFn$_invoke$arity$0() : $JSCompiler_inline_result$jscomp$811_fexpr__43787$$.call(null);
  $JSCompiler_temp_const$jscomp$810_hierarchy__5626__auto__$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$810_hierarchy__5626__auto__$$, $JSCompiler_temp_const$jscomp$0$$, $APP.cljs$cst$204$hierarchy, $JSCompiler_inline_result$jscomp$811_fexpr__43787$$);
  return new $APP.cljs.core.MultiFn($APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("asami.multi-graph", "get-from-multi-index"), asami.common_index.simplify, $APP.cljs$cst$205$default, $JSCompiler_temp_const$jscomp$810_hierarchy__5626__auto__$$, $method_table__5622__auto__$$, $prefer_table__5623__auto__$$, $method_cache__5624__auto__$$, $cached_hierarchy__5625__auto__$$);
}();
asami.multi_graph.get_from_multi_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v], null), function($G__43797$$, $G__43797__$1$jscomp$inline_4887_s$$, $G__43797__$2$jscomp$inline_4888_p$$, $G__43797__$3$jscomp$inline_4889_n$jscomp$275_o$$) {
  $G__43797$$ = $APP.cljs.core.__destructure_map($G__43797$$);
  $G__43797$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43797$$, cljs$cst$2215$spo);
  $G__43797__$1$jscomp$inline_4887_s$$ = $G__43797$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43797$$, $G__43797__$1$jscomp$inline_4887_s$$);
  $G__43797__$2$jscomp$inline_4888_p$$ = $G__43797__$1$jscomp$inline_4887_s$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43797__$1$jscomp$inline_4887_s$$, $G__43797__$2$jscomp$inline_4888_p$$);
  $G__43797__$3$jscomp$inline_4889_n$jscomp$275_o$$ = $G__43797__$2$jscomp$inline_4888_p$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43797__$2$jscomp$inline_4888_p$$, $G__43797__$3$jscomp$inline_4889_n$jscomp$275_o$$);
  $G__43797__$3$jscomp$inline_4889_n$jscomp$275_o$$ = $G__43797__$3$jscomp$inline_4889_n$jscomp$275_o$$ == null ? null : $APP.cljs$cst$1650$count.cljs$core$IFn$_invoke$arity$1($G__43797__$3$jscomp$inline_4889_n$jscomp$275_o$$);
  return typeof $G__43797__$3$jscomp$inline_4889_n$jscomp$275_o$$ === "number" && $G__43797__$3$jscomp$inline_4889_n$jscomp$275_o$$ > 0 ? $APP.cljs.core.repeat.cljs$core$IFn$_invoke$arity$2($G__43797__$3$jscomp$inline_4889_n$jscomp$275_o$$, $APP.cljs.core.PersistentVector.EMPTY) : $APP.cljs.core.PersistentVector.EMPTY;
});
asami.multi_graph.get_from_multi_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v, asami.common_index._QMARK_], null), function($p__43798$$, $s$$, $p$$, $o$$) {
  var $map__43818__$1$$ = $APP.cljs.core.__destructure_map($p__43798$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43818__$1$$, cljs$cst$2215$spo);
  return function $asami$multi_graph$iter__43819$$($s__43820$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43820__$1$$ = $s__43820$$;;) {
        var $iterys__5499__auto__$jscomp$16_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43820__$1$$);
        if ($iterys__5499__auto__$jscomp$16_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$16_temp__5825__auto__$$, $vec__43825$$ = $APP.cljs.core.first($xs__6385__auto__$$), $o__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43825$$, 0, null), $map__43828$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43825$$, 1, null), $map__43828__$1$$ = $APP.cljs.core.__destructure_map($map__43828$$), $c$jscomp$239_fs__5500__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43828__$1$$, $APP.cljs$cst$1650$count);
          $iterys__5499__auto__$jscomp$16_temp__5825__auto__$$ = function($s__43820__$1$$, $vec__43825$$, $o__$1$$, $map__43828$$, $map__43828__$1$$, $c$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43818$$, $map__43818__$1$$, $idx$$) {
            return function $asami$multi_graph$iter__43819_$_iter__43821$$($s__43822$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43820__$1$$, $vec__43825$$, $o__$1$$, $map__43828$$, $map__43828__$1$$, $c$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43818$$, $map__43818__$1$$, $idx$$) {
                return function() {
                  for (;;) {
                    var $s__43822__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43822$$);
                    if ($s__43822__$2_temp__5825__auto____$1$$) {
                      if ($APP.cljs.core.chunked_seq_QMARK_($s__43822__$2_temp__5825__auto____$1$$)) {
                        var $JSCompiler_inline_result$jscomp$812_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43822__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$812_c__5501__auto__$$), $b__43824$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                        a: {
                          for (var $i__43823$$ = 0;;) {
                            if ($i__43823$$ < $size__5502__auto__$$) {
                              $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$812_c__5501__auto__$$, $i__43823$$), $APP.cljs.core.chunk_append($b__43824$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$o__$1$$], null)), $i__43823$$ += 1;
                            } else {
                              $JSCompiler_inline_result$jscomp$812_c__5501__auto__$$ = !0;
                              break a;
                            }
                          }
                          $JSCompiler_inline_result$jscomp$812_c__5501__auto__$$ = void 0;
                        }
                        return $JSCompiler_inline_result$jscomp$812_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43824$$), $asami$multi_graph$iter__43819_$_iter__43821$$($APP.cljs.core.chunk_rest($s__43822__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43824$$), null);
                      }
                      $APP.cljs.core.first($s__43822__$2_temp__5825__auto____$1$$);
                      return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$o__$1$$], null), $asami$multi_graph$iter__43819_$_iter__43821$$($APP.cljs.core.rest($s__43822__$2_temp__5825__auto____$1$$)));
                    }
                    return null;
                  }
                };
              }($s__43820__$1$$, $vec__43825$$, $o__$1$$, $map__43828$$, $map__43828__$1$$, $c$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43818$$, $map__43818__$1$$, $idx$$), null, null);
            };
          }($s__43820__$1$$, $vec__43825$$, $o__$1$$, $map__43828$$, $map__43828__$1$$, $c$jscomp$239_fs__5500__auto__$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$16_temp__5825__auto__$$, $p__43798$$, $map__43818__$1$$, $idx$$);
          if ($c$jscomp$239_fs__5500__auto__$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$16_temp__5825__auto__$$($APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($c$jscomp$239_fs__5500__auto__$$)))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($c$jscomp$239_fs__5500__auto__$$, $asami$multi_graph$iter__43819$$($APP.cljs.core.rest($s__43820__$1$$)));
          }
          $s__43820__$1$$ = $APP.cljs.core.rest($s__43820__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }(function() {
    var $G__43831__$1$$ = $idx$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $s$$);
    return $G__43831__$1$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43831__$1$$, $p$$);
  }());
});
asami.multi_graph.get_from_multi_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, asami.common_index._QMARK_, $APP.cljs$cst$1438$v], null), function($p__43841$$, $s$$, $p$$, $o$$) {
  var $map__43843__$1$$ = $APP.cljs.core.__destructure_map($p__43841$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43843__$1$$, cljs$cst$2232$osp);
  return function $asami$multi_graph$iter__43844$$($s__43845$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43845__$1$$ = $s__43845$$;;) {
        var $iterys__5499__auto__$jscomp$17_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43845__$1$$);
        if ($iterys__5499__auto__$jscomp$17_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$17_temp__5825__auto__$$, $vec__43850$$ = $APP.cljs.core.first($xs__6385__auto__$$), $p__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43850$$, 0, null), $map__43853$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43850$$, 1, null), $map__43853__$1$$ = $APP.cljs.core.__destructure_map($map__43853$$), $c$jscomp$242_fs__5500__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43853__$1$$, $APP.cljs$cst$1650$count);
          $iterys__5499__auto__$jscomp$17_temp__5825__auto__$$ = function($s__43845__$1$$, $vec__43850$$, $p__$1$$, $map__43853$$, $map__43853__$1$$, $c$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43843$$, $map__43843__$1$$, $idx$$) {
            return function $asami$multi_graph$iter__43844_$_iter__43846$$($s__43847$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43845__$1$$, $vec__43850$$, $p__$1$$, $map__43853$$, $map__43853__$1$$, $c$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43843$$, $map__43843__$1$$, $idx$$) {
                return function() {
                  for (;;) {
                    var $s__43847__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43847$$);
                    if ($s__43847__$2_temp__5825__auto____$1$$) {
                      if ($APP.cljs.core.chunked_seq_QMARK_($s__43847__$2_temp__5825__auto____$1$$)) {
                        var $JSCompiler_inline_result$jscomp$813_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43847__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$813_c__5501__auto__$$), $b__43849$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                        a: {
                          for (var $i__43848$$ = 0;;) {
                            if ($i__43848$$ < $size__5502__auto__$$) {
                              $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$813_c__5501__auto__$$, $i__43848$$), $APP.cljs.core.chunk_append($b__43849$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p__$1$$], null)), $i__43848$$ += 1;
                            } else {
                              $JSCompiler_inline_result$jscomp$813_c__5501__auto__$$ = !0;
                              break a;
                            }
                          }
                          $JSCompiler_inline_result$jscomp$813_c__5501__auto__$$ = void 0;
                        }
                        return $JSCompiler_inline_result$jscomp$813_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43849$$), $asami$multi_graph$iter__43844_$_iter__43846$$($APP.cljs.core.chunk_rest($s__43847__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43849$$), null);
                      }
                      $APP.cljs.core.first($s__43847__$2_temp__5825__auto____$1$$);
                      return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p__$1$$], null), $asami$multi_graph$iter__43844_$_iter__43846$$($APP.cljs.core.rest($s__43847__$2_temp__5825__auto____$1$$)));
                    }
                    return null;
                  }
                };
              }($s__43845__$1$$, $vec__43850$$, $p__$1$$, $map__43853$$, $map__43853__$1$$, $c$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43843$$, $map__43843__$1$$, $idx$$), null, null);
            };
          }($s__43845__$1$$, $vec__43850$$, $p__$1$$, $map__43853$$, $map__43853__$1$$, $c$jscomp$242_fs__5500__auto__$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$17_temp__5825__auto__$$, $p__43841$$, $map__43843__$1$$, $idx$$);
          if ($c$jscomp$242_fs__5500__auto__$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$17_temp__5825__auto__$$($APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($c$jscomp$242_fs__5500__auto__$$)))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($c$jscomp$242_fs__5500__auto__$$, $asami$multi_graph$iter__43844$$($APP.cljs.core.rest($s__43845__$1$$)));
          }
          $s__43845__$1$$ = $APP.cljs.core.rest($s__43845__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }(function() {
    var $G__43854__$1$$ = $idx$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $o$$);
    return $G__43854__$1$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43854__$1$$, $s$$);
  }());
});
asami.multi_graph.get_from_multi_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1438$v, asami.common_index._QMARK_, asami.common_index._QMARK_], null), function($p__43855$$, $s$$, $p$$, $o$$) {
  var $map__43856__$1$$ = $APP.cljs.core.__destructure_map($p__43855$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43856__$1$$, cljs$cst$2215$spo), $edx$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($s$$) : $idx$$.call(null, $s$$);
  return function $asami$multi_graph$iter__43857$$($s__43858$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43858__$1$$ = $s__43858$$;;) {
        var $iterys__5499__auto__$jscomp$18_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43858__$1$$);
        if ($iterys__5499__auto__$jscomp$18_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$18_temp__5825__auto__$$, $fs__5500__auto__$jscomp$18_p__$1$$ = $APP.cljs.core.first($xs__6385__auto__$$);
          $iterys__5499__auto__$jscomp$18_temp__5825__auto__$$ = function($s__43858__$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43856$$, $map__43856__$1$$, $idx$$) {
            return function $asami$multi_graph$iter__43857_$_iter__43859$$($s__43860$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43858__$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43856$$, $map__43856__$1$$, $idx$$) {
                return function() {
                  for (var $s__43860__$1$$ = $s__43860$$;;) {
                    var $iterys__5499__auto__$jscomp$19_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43860__$1$$);
                    if ($iterys__5499__auto__$jscomp$19_temp__5825__auto____$1$$) {
                      var $xs__6385__auto____$1$$ = $iterys__5499__auto__$jscomp$19_temp__5825__auto____$1$$, $vec__43870$$ = $APP.cljs.core.first($xs__6385__auto____$1$$), $o__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43870$$, 0, null), $map__43873$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43870$$, 1, null), $map__43873__$1$$ = $APP.cljs.core.__destructure_map($map__43873$$), $c$jscomp$245_fs__5500__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43873__$1$$, 
                      $APP.cljs$cst$1650$count);
                      $iterys__5499__auto__$jscomp$19_temp__5825__auto____$1$$ = function($s__43860__$1$$, $s__43858__$1$$, $vec__43870$$, $o__$1$$, $map__43873$$, $map__43873__$1$$, $c$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43856$$, $map__43856__$1$$, $idx$$) {
                        return function $asami$multi_graph$iter__43857_$_iter__43859_$_iter__43861$$($s__43862$$) {
                          return new $APP.cljs.core.LazySeq(null, function($s__43860__$1$$, $s__43858__$1$$, $vec__43870$$, $o__$1$$, $map__43873$$, $map__43873__$1$$, $c$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43856$$, $map__43856__$1$$, $idx$$) {
                            return function() {
                              for (;;) {
                                var $s__43862__$2_temp__5825__auto____$2$$ = $APP.cljs.core.seq($s__43862$$);
                                if ($s__43862__$2_temp__5825__auto____$2$$) {
                                  if ($APP.cljs.core.chunked_seq_QMARK_($s__43862__$2_temp__5825__auto____$2$$)) {
                                    var $JSCompiler_inline_result$jscomp$814_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43862__$2_temp__5825__auto____$2$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$814_c__5501__auto__$$), $b__43864$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                                    a: {
                                      for (var $i__43863$$ = 0;;) {
                                        if ($i__43863$$ < $size__5502__auto__$$) {
                                          $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$814_c__5501__auto__$$, $i__43863$$), $APP.cljs.core.chunk_append($b__43864$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p__$1$$, $o__$1$$], null)), $i__43863$$ += 1;
                                        } else {
                                          $JSCompiler_inline_result$jscomp$814_c__5501__auto__$$ = !0;
                                          break a;
                                        }
                                      }
                                      $JSCompiler_inline_result$jscomp$814_c__5501__auto__$$ = void 0;
                                    }
                                    return $JSCompiler_inline_result$jscomp$814_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43864$$), $asami$multi_graph$iter__43857_$_iter__43859_$_iter__43861$$($APP.cljs.core.chunk_rest($s__43862__$2_temp__5825__auto____$2$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43864$$), null);
                                  }
                                  $APP.cljs.core.first($s__43862__$2_temp__5825__auto____$2$$);
                                  return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p__$1$$, $o__$1$$], null), $asami$multi_graph$iter__43857_$_iter__43859_$_iter__43861$$($APP.cljs.core.rest($s__43862__$2_temp__5825__auto____$2$$)));
                                }
                                return null;
                              }
                            };
                          }($s__43860__$1$$, $s__43858__$1$$, $vec__43870$$, $o__$1$$, $map__43873$$, $map__43873__$1$$, $c$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43856$$, $map__43856__$1$$, $idx$$), null, null);
                        };
                      }($s__43860__$1$$, $s__43858__$1$$, $vec__43870$$, $o__$1$$, $map__43873$$, $map__43873__$1$$, $c$jscomp$245_fs__5500__auto__$$, $xs__6385__auto____$1$$, $iterys__5499__auto__$jscomp$19_temp__5825__auto____$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43856$$, $map__43856__$1$$, $idx$$);
                      if ($c$jscomp$245_fs__5500__auto__$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$19_temp__5825__auto____$1$$($APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($c$jscomp$245_fs__5500__auto__$$)))) {
                        return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($c$jscomp$245_fs__5500__auto__$$, $asami$multi_graph$iter__43857_$_iter__43859$$($APP.cljs.core.rest($s__43860__$1$$)));
                      }
                      $s__43860__$1$$ = $APP.cljs.core.rest($s__43860__$1$$);
                    } else {
                      return null;
                    }
                  }
                };
              }($s__43858__$1$$, $p__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43856$$, $map__43856__$1$$, $idx$$), null, null);
            };
          }($s__43858__$1$$, $fs__5500__auto__$jscomp$18_p__$1$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$18_temp__5825__auto__$$, $edx$$, $p__43855$$, $map__43856__$1$$, $idx$$);
          if ($fs__5500__auto__$jscomp$18_p__$1$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$18_temp__5825__auto__$$($edx$$.cljs$core$IFn$_invoke$arity$1 ? $edx$$.cljs$core$IFn$_invoke$arity$1($fs__5500__auto__$jscomp$18_p__$1$$) : $edx$$.call(null, $fs__5500__auto__$jscomp$18_p__$1$$)))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$18_p__$1$$, $asami$multi_graph$iter__43857$$($APP.cljs.core.rest($s__43858__$1$$)));
          }
          $s__43858__$1$$ = $APP.cljs.core.rest($s__43858__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($APP.cljs.core.keys($edx$$));
});
asami.multi_graph.get_from_multi_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, $APP.cljs$cst$1438$v, $APP.cljs$cst$1438$v], null), function($p__43889$$, $s$$, $p$$, $o$$) {
  var $map__43890__$1$$ = $APP.cljs.core.__destructure_map($p__43889$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43890__$1$$, $APP.cljs$cst$1584$pos);
  return function $asami$multi_graph$iter__43891$$($s__43892$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43892__$1$$ = $s__43892$$;;) {
        var $iterys__5499__auto__$jscomp$20_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43892__$1$$);
        if ($iterys__5499__auto__$jscomp$20_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$20_temp__5825__auto__$$, $vec__43897$$ = $APP.cljs.core.first($xs__6385__auto__$$), $s__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43897$$, 0, null), $map__43900$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43897$$, 1, null), $map__43900__$1$$ = $APP.cljs.core.__destructure_map($map__43900$$), $c$jscomp$248_fs__5500__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43900__$1$$, $APP.cljs$cst$1650$count);
          $iterys__5499__auto__$jscomp$20_temp__5825__auto__$$ = function($s__43892__$1$$, $vec__43897$$, $s__$1$$, $map__43900$$, $map__43900__$1$$, $c$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43890$$, $map__43890__$1$$, $idx$$) {
            return function $asami$multi_graph$iter__43891_$_iter__43893$$($s__43894$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43892__$1$$, $vec__43897$$, $s__$1$$, $map__43900$$, $map__43900__$1$$, $c$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43890$$, $map__43890__$1$$, $idx$$) {
                return function() {
                  for (;;) {
                    var $s__43894__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43894$$);
                    if ($s__43894__$2_temp__5825__auto____$1$$) {
                      if ($APP.cljs.core.chunked_seq_QMARK_($s__43894__$2_temp__5825__auto____$1$$)) {
                        var $JSCompiler_inline_result$jscomp$815_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43894__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$815_c__5501__auto__$$), $b__43896$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                        a: {
                          for (var $i__43895$$ = 0;;) {
                            if ($i__43895$$ < $size__5502__auto__$$) {
                              $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$815_c__5501__auto__$$, $i__43895$$), $APP.cljs.core.chunk_append($b__43896$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$], null)), $i__43895$$ += 1;
                            } else {
                              $JSCompiler_inline_result$jscomp$815_c__5501__auto__$$ = !0;
                              break a;
                            }
                          }
                          $JSCompiler_inline_result$jscomp$815_c__5501__auto__$$ = void 0;
                        }
                        return $JSCompiler_inline_result$jscomp$815_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43896$$), $asami$multi_graph$iter__43891_$_iter__43893$$($APP.cljs.core.chunk_rest($s__43894__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43896$$), null);
                      }
                      $APP.cljs.core.first($s__43894__$2_temp__5825__auto____$1$$);
                      return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$], null), $asami$multi_graph$iter__43891_$_iter__43893$$($APP.cljs.core.rest($s__43894__$2_temp__5825__auto____$1$$)));
                    }
                    return null;
                  }
                };
              }($s__43892__$1$$, $vec__43897$$, $s__$1$$, $map__43900$$, $map__43900__$1$$, $c$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43890$$, $map__43890__$1$$, $idx$$), null, null);
            };
          }($s__43892__$1$$, $vec__43897$$, $s__$1$$, $map__43900$$, $map__43900__$1$$, $c$jscomp$248_fs__5500__auto__$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$20_temp__5825__auto__$$, $p__43889$$, $map__43890__$1$$, $idx$$);
          if ($c$jscomp$248_fs__5500__auto__$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$20_temp__5825__auto__$$($APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($c$jscomp$248_fs__5500__auto__$$)))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($c$jscomp$248_fs__5500__auto__$$, $asami$multi_graph$iter__43891$$($APP.cljs.core.rest($s__43892__$1$$)));
          }
          $s__43892__$1$$ = $APP.cljs.core.rest($s__43892__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }(function() {
    var $G__43916__$1$$ = $idx$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($idx$$, $p$$);
    return $G__43916__$1$$ == null ? null : $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__43916__$1$$, $o$$);
  }());
});
asami.multi_graph.get_from_multi_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, $APP.cljs$cst$1438$v, asami.common_index._QMARK_], null), function($p__43917$$, $s$$, $p$$, $o$$) {
  var $map__43918__$1$$ = $APP.cljs.core.__destructure_map($p__43917$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43918__$1$$, $APP.cljs$cst$1584$pos), $edx$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($p$$) : $idx$$.call(null, $p$$);
  return function $asami$multi_graph$iter__43919$$($s__43920$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43920__$1$$ = $s__43920$$;;) {
        var $iterys__5499__auto__$jscomp$21_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43920__$1$$);
        if ($iterys__5499__auto__$jscomp$21_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$21_temp__5825__auto__$$, $fs__5500__auto__$jscomp$21_o__$1$$ = $APP.cljs.core.first($xs__6385__auto__$$);
          $iterys__5499__auto__$jscomp$21_temp__5825__auto__$$ = function($s__43920__$1$$, $o__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43918$$, $map__43918__$1$$, $idx$$) {
            return function $asami$multi_graph$iter__43919_$_iter__43921$$($s__43922$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43920__$1$$, $o__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43918$$, $map__43918__$1$$, $idx$$) {
                return function() {
                  for (var $s__43922__$1$$ = $s__43922$$;;) {
                    var $iterys__5499__auto__$jscomp$22_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43922__$1$$);
                    if ($iterys__5499__auto__$jscomp$22_temp__5825__auto____$1$$) {
                      var $xs__6385__auto____$1$$ = $iterys__5499__auto__$jscomp$22_temp__5825__auto____$1$$, $vec__43929$$ = $APP.cljs.core.first($xs__6385__auto____$1$$), $s__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43929$$, 0, null), $map__43932$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43929$$, 1, null), $map__43932__$1$$ = $APP.cljs.core.__destructure_map($map__43932$$), $c$jscomp$251_fs__5500__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43932__$1$$, 
                      $APP.cljs$cst$1650$count);
                      $iterys__5499__auto__$jscomp$22_temp__5825__auto____$1$$ = function($s__43922__$1$$, $s__43920__$1$$, $vec__43929$$, $s__$1$$, $map__43932$$, $map__43932__$1$$, $c$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $o__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43918$$, $map__43918__$1$$, $idx$$) {
                        return function $asami$multi_graph$iter__43919_$_iter__43921_$_iter__43923$$($s__43924$$) {
                          return new $APP.cljs.core.LazySeq(null, function($s__43922__$1$$, $s__43920__$1$$, $vec__43929$$, $s__$1$$, $map__43932$$, $map__43932__$1$$, $c$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $o__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43918$$, $map__43918__$1$$, $idx$$) {
                            return function() {
                              for (;;) {
                                var $s__43924__$2_temp__5825__auto____$2$$ = $APP.cljs.core.seq($s__43924$$);
                                if ($s__43924__$2_temp__5825__auto____$2$$) {
                                  if ($APP.cljs.core.chunked_seq_QMARK_($s__43924__$2_temp__5825__auto____$2$$)) {
                                    var $JSCompiler_inline_result$jscomp$816_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43924__$2_temp__5825__auto____$2$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$816_c__5501__auto__$$), $b__43926$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                                    a: {
                                      for (var $i__43925$$ = 0;;) {
                                        if ($i__43925$$ < $size__5502__auto__$$) {
                                          $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$816_c__5501__auto__$$, $i__43925$$), $APP.cljs.core.chunk_append($b__43926$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$, $o__$1$$], null)), $i__43925$$ += 1;
                                        } else {
                                          $JSCompiler_inline_result$jscomp$816_c__5501__auto__$$ = !0;
                                          break a;
                                        }
                                      }
                                      $JSCompiler_inline_result$jscomp$816_c__5501__auto__$$ = void 0;
                                    }
                                    return $JSCompiler_inline_result$jscomp$816_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43926$$), $asami$multi_graph$iter__43919_$_iter__43921_$_iter__43923$$($APP.cljs.core.chunk_rest($s__43924__$2_temp__5825__auto____$2$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43926$$), null);
                                  }
                                  $APP.cljs.core.first($s__43924__$2_temp__5825__auto____$2$$);
                                  return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$, $o__$1$$], null), $asami$multi_graph$iter__43919_$_iter__43921_$_iter__43923$$($APP.cljs.core.rest($s__43924__$2_temp__5825__auto____$2$$)));
                                }
                                return null;
                              }
                            };
                          }($s__43922__$1$$, $s__43920__$1$$, $vec__43929$$, $s__$1$$, $map__43932$$, $map__43932__$1$$, $c$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $o__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43918$$, $map__43918__$1$$, $idx$$), null, null);
                        };
                      }($s__43922__$1$$, $s__43920__$1$$, $vec__43929$$, $s__$1$$, $map__43932$$, $map__43932__$1$$, $c$jscomp$251_fs__5500__auto__$$, $xs__6385__auto____$1$$, $iterys__5499__auto__$jscomp$22_temp__5825__auto____$1$$, $o__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43918$$, $map__43918__$1$$, $idx$$);
                      if ($c$jscomp$251_fs__5500__auto__$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$22_temp__5825__auto____$1$$($APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($c$jscomp$251_fs__5500__auto__$$)))) {
                        return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($c$jscomp$251_fs__5500__auto__$$, $asami$multi_graph$iter__43919_$_iter__43921$$($APP.cljs.core.rest($s__43922__$1$$)));
                      }
                      $s__43922__$1$$ = $APP.cljs.core.rest($s__43922__$1$$);
                    } else {
                      return null;
                    }
                  }
                };
              }($s__43920__$1$$, $o__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43918$$, $map__43918__$1$$, $idx$$), null, null);
            };
          }($s__43920__$1$$, $fs__5500__auto__$jscomp$21_o__$1$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$21_temp__5825__auto__$$, $edx$$, $p__43917$$, $map__43918__$1$$, $idx$$);
          if ($fs__5500__auto__$jscomp$21_o__$1$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$21_temp__5825__auto__$$($edx$$.cljs$core$IFn$_invoke$arity$1 ? $edx$$.cljs$core$IFn$_invoke$arity$1($fs__5500__auto__$jscomp$21_o__$1$$) : $edx$$.call(null, $fs__5500__auto__$jscomp$21_o__$1$$)))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$21_o__$1$$, $asami$multi_graph$iter__43919$$($APP.cljs.core.rest($s__43920__$1$$)));
          }
          $s__43920__$1$$ = $APP.cljs.core.rest($s__43920__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($APP.cljs.core.keys($edx$$));
});
asami.multi_graph.get_from_multi_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, asami.common_index._QMARK_, $APP.cljs$cst$1438$v], null), function($p__43943$$, $s$$, $p$$, $o$$) {
  var $map__43945__$1$$ = $APP.cljs.core.__destructure_map($p__43943$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43945__$1$$, cljs$cst$2232$osp), $edx$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($o$$) : $idx$$.call(null, $o$$);
  return function $asami$multi_graph$iter__43946$$($s__43947$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43947__$1$$ = $s__43947$$;;) {
        var $iterys__5499__auto__$jscomp$23_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43947__$1$$);
        if ($iterys__5499__auto__$jscomp$23_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$23_temp__5825__auto__$$, $fs__5500__auto__$jscomp$23_s__$1$$ = $APP.cljs.core.first($xs__6385__auto__$$);
          $iterys__5499__auto__$jscomp$23_temp__5825__auto__$$ = function($s__43947__$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43945$$, $map__43945__$1$$, $idx$$) {
            return function $asami$multi_graph$iter__43946_$_iter__43948$$($s__43949$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43947__$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43945$$, $map__43945__$1$$, $idx$$) {
                return function() {
                  for (var $s__43949__$1$$ = $s__43949$$;;) {
                    var $iterys__5499__auto__$jscomp$24_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43949__$1$$);
                    if ($iterys__5499__auto__$jscomp$24_temp__5825__auto____$1$$) {
                      var $xs__6385__auto____$1$$ = $iterys__5499__auto__$jscomp$24_temp__5825__auto____$1$$, $vec__43960$$ = $APP.cljs.core.first($xs__6385__auto____$1$$), $p__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43960$$, 0, null), $map__43963$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43960$$, 1, null), $map__43963__$1$$ = $APP.cljs.core.__destructure_map($map__43963$$), $c$jscomp$254_fs__5500__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43963__$1$$, 
                      $APP.cljs$cst$1650$count);
                      $iterys__5499__auto__$jscomp$24_temp__5825__auto____$1$$ = function($s__43949__$1$$, $s__43947__$1$$, $vec__43960$$, $p__$1$$, $map__43963$$, $map__43963__$1$$, $c$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43945$$, $map__43945__$1$$, $idx$$) {
                        return function $asami$multi_graph$iter__43946_$_iter__43948_$_iter__43950$$($s__43951$$) {
                          return new $APP.cljs.core.LazySeq(null, function($s__43949__$1$$, $s__43947__$1$$, $vec__43960$$, $p__$1$$, $map__43963$$, $map__43963__$1$$, $c$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43945$$, $map__43945__$1$$, $idx$$) {
                            return function() {
                              for (;;) {
                                var $s__43951__$2_temp__5825__auto____$2$$ = $APP.cljs.core.seq($s__43951$$);
                                if ($s__43951__$2_temp__5825__auto____$2$$) {
                                  if ($APP.cljs.core.chunked_seq_QMARK_($s__43951__$2_temp__5825__auto____$2$$)) {
                                    var $JSCompiler_inline_result$jscomp$817_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43951__$2_temp__5825__auto____$2$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$817_c__5501__auto__$$), $b__43953$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                                    a: {
                                      for (var $i__43952$$ = 0;;) {
                                        if ($i__43952$$ < $size__5502__auto__$$) {
                                          $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$817_c__5501__auto__$$, $i__43952$$), $APP.cljs.core.chunk_append($b__43953$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$, $p__$1$$], null)), $i__43952$$ += 1;
                                        } else {
                                          $JSCompiler_inline_result$jscomp$817_c__5501__auto__$$ = !0;
                                          break a;
                                        }
                                      }
                                      $JSCompiler_inline_result$jscomp$817_c__5501__auto__$$ = void 0;
                                    }
                                    return $JSCompiler_inline_result$jscomp$817_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43953$$), $asami$multi_graph$iter__43946_$_iter__43948_$_iter__43950$$($APP.cljs.core.chunk_rest($s__43951__$2_temp__5825__auto____$2$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43953$$), null);
                                  }
                                  $APP.cljs.core.first($s__43951__$2_temp__5825__auto____$2$$);
                                  return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$, $p__$1$$], null), $asami$multi_graph$iter__43946_$_iter__43948_$_iter__43950$$($APP.cljs.core.rest($s__43951__$2_temp__5825__auto____$2$$)));
                                }
                                return null;
                              }
                            };
                          }($s__43949__$1$$, $s__43947__$1$$, $vec__43960$$, $p__$1$$, $map__43963$$, $map__43963__$1$$, $c$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43945$$, $map__43945__$1$$, $idx$$), null, null);
                        };
                      }($s__43949__$1$$, $s__43947__$1$$, $vec__43960$$, $p__$1$$, $map__43963$$, $map__43963__$1$$, $c$jscomp$254_fs__5500__auto__$$, $xs__6385__auto____$1$$, $iterys__5499__auto__$jscomp$24_temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43945$$, $map__43945__$1$$, $idx$$);
                      if ($c$jscomp$254_fs__5500__auto__$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$24_temp__5825__auto____$1$$($APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($c$jscomp$254_fs__5500__auto__$$)))) {
                        return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($c$jscomp$254_fs__5500__auto__$$, $asami$multi_graph$iter__43946_$_iter__43948$$($APP.cljs.core.rest($s__43949__$1$$)));
                      }
                      $s__43949__$1$$ = $APP.cljs.core.rest($s__43949__$1$$);
                    } else {
                      return null;
                    }
                  }
                };
              }($s__43947__$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $edx$$, $map__43945$$, $map__43945__$1$$, $idx$$), null, null);
            };
          }($s__43947__$1$$, $fs__5500__auto__$jscomp$23_s__$1$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$23_temp__5825__auto__$$, $edx$$, $p__43943$$, $map__43945__$1$$, $idx$$);
          if ($fs__5500__auto__$jscomp$23_s__$1$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$23_temp__5825__auto__$$($edx$$.cljs$core$IFn$_invoke$arity$1 ? $edx$$.cljs$core$IFn$_invoke$arity$1($fs__5500__auto__$jscomp$23_s__$1$$) : $edx$$.call(null, $fs__5500__auto__$jscomp$23_s__$1$$)))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$23_s__$1$$, $asami$multi_graph$iter__43946$$($APP.cljs.core.rest($s__43947__$1$$)));
          }
          $s__43947__$1$$ = $APP.cljs.core.rest($s__43947__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($APP.cljs.core.keys($edx$$));
});
asami.multi_graph.get_from_multi_index.cljs$core$IMultiFn$_add_method$arity$3(null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, asami.common_index._QMARK_, asami.common_index._QMARK_], null), function($p__43964$$, $s$$, $p$$, $o$$) {
  var $map__43965__$1$$ = $APP.cljs.core.__destructure_map($p__43964$$), $idx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43965__$1$$, cljs$cst$2215$spo);
  return function $asami$multi_graph$iter__43966$$($s__43967$$) {
    return new $APP.cljs.core.LazySeq(null, function() {
      for (var $s__43967__$1$$ = $s__43967$$;;) {
        var $iterys__5499__auto__$jscomp$25_temp__5825__auto__$$ = $APP.cljs.core.seq($s__43967__$1$$);
        if ($iterys__5499__auto__$jscomp$25_temp__5825__auto__$$) {
          var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$25_temp__5825__auto__$$, $fs__5500__auto__$jscomp$25_s__$1$$ = $APP.cljs.core.first($xs__6385__auto__$$);
          $iterys__5499__auto__$jscomp$25_temp__5825__auto__$$ = function($s__43967__$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$) {
            return function $asami$multi_graph$iter__43966_$_iter__43968$$($s__43969$$) {
              return new $APP.cljs.core.LazySeq(null, function($s__43967__$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$) {
                return function() {
                  for (var $s__43969__$1$$ = $s__43969$$;;) {
                    var $fs__5500__auto__$jscomp$26_iterys__5499__auto__$jscomp$26_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__43969__$1$$);
                    if ($fs__5500__auto__$jscomp$26_iterys__5499__auto__$jscomp$26_temp__5825__auto____$1$$) {
                      var $xs__6385__auto____$1$$ = $fs__5500__auto__$jscomp$26_iterys__5499__auto__$jscomp$26_temp__5825__auto____$1$$, $p__$1$$ = $APP.cljs.core.first($xs__6385__auto____$1$$);
                      $fs__5500__auto__$jscomp$26_iterys__5499__auto__$jscomp$26_temp__5825__auto____$1$$ = function($s__43969__$1$$, $s__43967__$1$$, $p__$1$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$) {
                        return function $asami$multi_graph$iter__43966_$_iter__43968_$_iter__43970$$($s__43971$$) {
                          return new $APP.cljs.core.LazySeq(null, function($s__43969__$1$$, $s__43967__$1$$, $p__$1$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$) {
                            return function() {
                              for (var $s__43971__$1$$ = $s__43971$$;;) {
                                var $iterys__5499__auto__$jscomp$27_temp__5825__auto____$2$$ = $APP.cljs.core.seq($s__43971__$1$$);
                                if ($iterys__5499__auto__$jscomp$27_temp__5825__auto____$2$$) {
                                  var $xs__6385__auto____$2$$ = $iterys__5499__auto__$jscomp$27_temp__5825__auto____$2$$, $vec__43980$$ = $APP.cljs.core.first($xs__6385__auto____$2$$), $o__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43980$$, 0, null), $map__43983$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__43980$$, 1, null), $map__43983__$1$$ = $APP.cljs.core.__destructure_map($map__43983$$), $c$jscomp$257_fs__5500__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__43983__$1$$, 
                                  $APP.cljs$cst$1650$count);
                                  $iterys__5499__auto__$jscomp$27_temp__5825__auto____$2$$ = function($s__43971__$1$$, $s__43969__$1$$, $s__43967__$1$$, $vec__43980$$, $o__$1$$, $map__43983$$, $map__43983__$1$$, $c$$, $xs__6385__auto____$2$$, $temp__5825__auto____$2$$, $p__$1$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$) {
                                    return function $asami$multi_graph$iter__43966_$_iter__43968_$_iter__43970_$_iter__43972$$($s__43973$$) {
                                      return new $APP.cljs.core.LazySeq(null, function($s__43971__$1$$, $s__43969__$1$$, $s__43967__$1$$, $vec__43980$$, $o__$1$$, $map__43983$$, $map__43983__$1$$, $c$$, $xs__6385__auto____$2$$, $temp__5825__auto____$2$$, $p__$1$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$) {
                                        return function() {
                                          for (;;) {
                                            var $s__43973__$2_temp__5825__auto____$3$$ = $APP.cljs.core.seq($s__43973$$);
                                            if ($s__43973__$2_temp__5825__auto____$3$$) {
                                              if ($APP.cljs.core.chunked_seq_QMARK_($s__43973__$2_temp__5825__auto____$3$$)) {
                                                var $JSCompiler_inline_result$jscomp$818_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__43973__$2_temp__5825__auto____$3$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$818_c__5501__auto__$$), $b__43975$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                                                a: {
                                                  for (var $i__43974$$ = 0;;) {
                                                    if ($i__43974$$ < $size__5502__auto__$$) {
                                                      $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$818_c__5501__auto__$$, $i__43974$$), $APP.cljs.core.chunk_append($b__43975$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$, $p__$1$$, $o__$1$$], null)), $i__43974$$ += 1;
                                                    } else {
                                                      $JSCompiler_inline_result$jscomp$818_c__5501__auto__$$ = !0;
                                                      break a;
                                                    }
                                                  }
                                                  $JSCompiler_inline_result$jscomp$818_c__5501__auto__$$ = void 0;
                                                }
                                                return $JSCompiler_inline_result$jscomp$818_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43975$$), $asami$multi_graph$iter__43966_$_iter__43968_$_iter__43970_$_iter__43972$$($APP.cljs.core.chunk_rest($s__43973__$2_temp__5825__auto____$3$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__43975$$), null);
                                              }
                                              $APP.cljs.core.first($s__43973__$2_temp__5825__auto____$3$$);
                                              return $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$s__$1$$, $p__$1$$, $o__$1$$], null), $asami$multi_graph$iter__43966_$_iter__43968_$_iter__43970_$_iter__43972$$($APP.cljs.core.rest($s__43973__$2_temp__5825__auto____$3$$)));
                                            }
                                            return null;
                                          }
                                        };
                                      }($s__43971__$1$$, $s__43969__$1$$, $s__43967__$1$$, $vec__43980$$, $o__$1$$, $map__43983$$, $map__43983__$1$$, $c$$, $xs__6385__auto____$2$$, $temp__5825__auto____$2$$, $p__$1$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$), null, null);
                                    };
                                  }($s__43971__$1$$, $s__43969__$1$$, $s__43967__$1$$, $vec__43980$$, $o__$1$$, $map__43983$$, $map__43983__$1$$, $c$jscomp$257_fs__5500__auto__$$, $xs__6385__auto____$2$$, $iterys__5499__auto__$jscomp$27_temp__5825__auto____$2$$, $p__$1$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$);
                                  if ($c$jscomp$257_fs__5500__auto__$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$27_temp__5825__auto____$2$$($APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($c$jscomp$257_fs__5500__auto__$$)))) {
                                    return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($c$jscomp$257_fs__5500__auto__$$, $asami$multi_graph$iter__43966_$_iter__43968_$_iter__43970$$($APP.cljs.core.rest($s__43971__$1$$)));
                                  }
                                  $s__43971__$1$$ = $APP.cljs.core.rest($s__43971__$1$$);
                                } else {
                                  return null;
                                }
                              }
                            };
                          }($s__43969__$1$$, $s__43967__$1$$, $p__$1$$, $xs__6385__auto____$1$$, $temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$), null, null);
                        };
                      }($s__43969__$1$$, $s__43967__$1$$, $p__$1$$, $xs__6385__auto____$1$$, $fs__5500__auto__$jscomp$26_iterys__5499__auto__$jscomp$26_temp__5825__auto____$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$);
                      if ($fs__5500__auto__$jscomp$26_iterys__5499__auto__$jscomp$26_temp__5825__auto____$1$$ = $APP.cljs.core.seq($fs__5500__auto__$jscomp$26_iterys__5499__auto__$jscomp$26_temp__5825__auto____$1$$(function() {
                        var $fexpr__43988$$ = $idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($s__$1$$) : $idx$$.call(null, $s__$1$$);
                        return $fexpr__43988$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__43988$$.cljs$core$IFn$_invoke$arity$1($p__$1$$) : $fexpr__43988$$.call(null, $p__$1$$);
                      }()))) {
                        return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$26_iterys__5499__auto__$jscomp$26_temp__5825__auto____$1$$, $asami$multi_graph$iter__43966_$_iter__43968$$($APP.cljs.core.rest($s__43969__$1$$)));
                      }
                      $s__43969__$1$$ = $APP.cljs.core.rest($s__43969__$1$$);
                    } else {
                      return null;
                    }
                  }
                };
              }($s__43967__$1$$, $s__$1$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $map__43965$$, $map__43965__$1$$, $idx$$), null, null);
            };
          }($s__43967__$1$$, $fs__5500__auto__$jscomp$25_s__$1$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$25_temp__5825__auto__$$, $p__43964$$, $map__43965__$1$$, $idx$$);
          if ($fs__5500__auto__$jscomp$25_s__$1$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$25_temp__5825__auto__$$($APP.cljs.core.keys($idx$$.cljs$core$IFn$_invoke$arity$1 ? $idx$$.cljs$core$IFn$_invoke$arity$1($fs__5500__auto__$jscomp$25_s__$1$$) : $idx$$.call(null, $fs__5500__auto__$jscomp$25_s__$1$$))))) {
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$25_s__$1$$, $asami$multi_graph$iter__43966$$($APP.cljs.core.rest($s__43967__$1$$)));
          }
          $s__43967__$1$$ = $APP.cljs.core.rest($s__43967__$1$$);
        } else {
          return null;
        }
      }
    }, null, null);
  }($APP.cljs.core.keys($idx$$));
});
asami.multi_graph.count_transitive_from_index = function() {
  var $method_table__5622__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $prefer_table__5623__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $method_cache__5624__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $cached_hierarchy__5625__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), 
  $JSCompiler_temp_const$jscomp$821_hierarchy__5626__auto__$$ = $APP.cljs.core.get, $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$821_hierarchy__5626__auto__$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.PersistentArrayMap.EMPTY;
  var $JSCompiler_inline_result$jscomp$822_fexpr__43990$$ = $APP.cljs.core.get_global_hierarchy;
  $JSCompiler_inline_result$jscomp$822_fexpr__43990$$ = $JSCompiler_inline_result$jscomp$822_fexpr__43990$$.cljs$core$IFn$_invoke$arity$0 ? $JSCompiler_inline_result$jscomp$822_fexpr__43990$$.cljs$core$IFn$_invoke$arity$0() : $JSCompiler_inline_result$jscomp$822_fexpr__43990$$.call(null);
  $JSCompiler_temp_const$jscomp$821_hierarchy__5626__auto__$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$821_hierarchy__5626__auto__$$, $JSCompiler_temp_const$jscomp$0$$, $APP.cljs$cst$204$hierarchy, $JSCompiler_inline_result$jscomp$822_fexpr__43990$$);
  return new $APP.cljs.core.MultiFn($APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("asami.multi-graph", "count-transitive-from-index"), asami.common_index.trans_simplify, $APP.cljs$cst$205$default, $JSCompiler_temp_const$jscomp$821_hierarchy__5626__auto__$$, $method_table__5622__auto__$$, $prefer_table__5623__auto__$$, $method_cache__5624__auto__$$, $cached_hierarchy__5625__auto__$$);
}();
asami.multi_graph.count_transitive_from_index.cljs$core$IMultiFn$_add_method$arity$3(null, $APP.cljs$cst$205$default, function($graph$$, $tag$$, $s$$, $p$$, $o$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.common_index._QMARK_, asami.common_index._QMARK_, asami.common_index._QMARK_], null), asami.common_index.simplify.cljs$core$IFn$_invoke$arity$variadic($graph$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$s$$, $p$$, $o$$], 0))) ? $APP.cljs.core.count(cljs$cst$2215$spo.cljs$core$IFn$_invoke$arity$1($graph$$)) * $APP.cljs.core.count(cljs$cst$2232$osp.cljs$core$IFn$_invoke$arity$1($graph$$)) : 
  $APP.cljs.core.count(asami.common_index.get_transitive_from_index.cljs$core$IFn$_invoke$arity$5($graph$$, $tag$$, $s$$, $p$$, $o$$));
});
asami.multi_graph.MultiGraph = function($spo$$, $pos$$, $osp$$, $next_stmt_id$$, $__meta$$, $__extmap$$, $__hash$$) {
  this.spo = $spo$$;
  this.pos = $pos$$;
  this.osp = $osp$$;
  this.next_stmt_id = $next_stmt_id$$;
  this.__meta = $__meta$$;
  this.__extmap = $__extmap$$;
  this.__hash = $__hash$$;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$new_graph$arity$1 = function($this$$$) {
  return asami.multi_graph.empty_multi_graph;
};
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$graph_add$arity$4 = function($this$$$, $subj$$, $pred$$, $obj$$) {
  return this.asami$graph$Graph$graph_add$arity$5(null, $subj$$, $pred$$, $obj$$, asami.graph._STAR_default_tx_id_STAR_);
};
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$graph_add$arity$5 = function($id$jscomp$41_or__5025__auto__$jscomp$inline_4921_this$$$, $subj$$, $pred$$, $obj$$, $tx$$) {
  6 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$144$trace, "asami.multi-graph", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["insert ", new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$subj$$, $pred$$, $obj$$, $tx$$], null)], 0));
  $id$jscomp$41_or__5025__auto__$jscomp$inline_4921_this$$$ = cljs$cst$2243$next_stmt_id.cljs$core$IFn$_invoke$arity$1(this);
  $id$jscomp$41_or__5025__auto__$jscomp$inline_4921_this$$$ = $APP.cljs.core.truth_($id$jscomp$41_or__5025__auto__$jscomp$inline_4921_this$$$) ? $id$jscomp$41_or__5025__auto__$jscomp$inline_4921_this$$$ : 1;
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(this, cljs$cst$2215$spo, asami.multi_graph.multi_add(this.spo, $subj$$, $pred$$, $obj$$, $tx$$, $id$jscomp$41_or__5025__auto__$jscomp$inline_4921_this$$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$1584$pos, asami.multi_graph.multi_add(this.pos, $pred$$, $obj$$, $subj$$, $tx$$, $id$jscomp$41_or__5025__auto__$jscomp$inline_4921_this$$$), cljs$cst$2232$osp, asami.multi_graph.multi_add(this.osp, $obj$$, $subj$$, 
  $pred$$, $tx$$, $id$jscomp$41_or__5025__auto__$jscomp$inline_4921_this$$$), cljs$cst$2243$next_stmt_id, $id$jscomp$41_or__5025__auto__$jscomp$inline_4921_this$$$ + 1], 0));
};
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$graph_delete$arity$4 = function($temp__5823__auto__$jscomp$170_this$$$, $subj$$, $pred$$, $obj$$) {
  6 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$144$trace, "asami.multi-graph", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["delete ", new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$subj$$, $pred$$, $obj$$], null)], 0));
  $temp__5823__auto__$jscomp$170_this$$$ = asami.multi_graph.multi_delete(this.spo, $subj$$, $pred$$, $obj$$);
  if ($APP.cljs.core.truth_($temp__5823__auto__$jscomp$170_this$$$)) {
    return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(this, cljs$cst$2215$spo, $temp__5823__auto__$jscomp$170_this$$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$1584$pos, asami.multi_graph.multi_delete(this.pos, $pred$$, $obj$$, $subj$$), cljs$cst$2232$osp, asami.multi_graph.multi_delete(this.osp, $obj$$, $subj$$, $pred$$)], 0));
  }
  6 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$144$trace, "asami.multi-graph", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["statement did not exist"], 0));
  return this;
};
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$graph_transact$arity$4 = function($this$$$, $tx_id$$, $assertions$$, $retractions$$) {
  return asami.common_index.graph_transact(this, $tx_id$$, $assertions$$, $retractions$$, $APP.cljs.core.volatile_BANG_(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.PersistentArrayMap.EMPTY], null)));
};
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$graph_transact$arity$5 = function($this$$$, $tx_id$$, $assertions$$, $retractions$$, $generated_data$$) {
  return asami.common_index.graph_transact(this, $tx_id$$, $assertions$$, $retractions$$, $generated_data$$);
};
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$graph_diff$arity$2 = function($s_po$jscomp$1_this$$$, $other$$) {
  if (!$APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.type(this), $APP.cljs.core.type($other$$))) {
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Unable to compare diffs between graphs of different types", new $APP.cljs.core.PersistentArrayMap(null, 2, [cljs$cst$2235$this, this, cljs$cst$2236$other, $other$$], null));
  }
  $s_po$jscomp$1_this$$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function($p__44006_po$$) {
    var $s$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44006_po$$, 0, null);
    $p__44006_po$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44006_po$$, 1, null);
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($p__44006_po$$, $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs$cst$2215$spo.cljs$core$IFn$_invoke$arity$1($other$$), $s$$));
  }, this.spo);
  return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.first, $s_po$jscomp$1_this$$$);
};
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$resolve_triple$arity$4 = function($temp__5823__auto__$jscomp$171_this$$jscomp$705_trans_tag$$, $subj$$, $plain_pred$jscomp$2_pred$$, $obj$$) {
  $temp__5823__auto__$jscomp$171_this$$jscomp$705_trans_tag$$ = asami.common_index.check_for_transitive($plain_pred$jscomp$2_pred$$);
  return $APP.cljs.core.truth_($temp__5823__auto__$jscomp$171_this$$jscomp$705_trans_tag$$) ? ($plain_pred$jscomp$2_pred$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$jscomp$171_this$$jscomp$705_trans_tag$$, 0, null), $temp__5823__auto__$jscomp$171_this$$jscomp$705_trans_tag$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$jscomp$171_this$$jscomp$705_trans_tag$$, 1, null), asami.common_index.get_transitive_from_index.cljs$core$IFn$_invoke$arity$5(this, 
  $temp__5823__auto__$jscomp$171_this$$jscomp$705_trans_tag$$, $subj$$, $plain_pred$jscomp$2_pred$$, $obj$$)) : asami.multi_graph.get_from_multi_index.cljs$core$IFn$_invoke$arity$4(this, $subj$$, $plain_pred$jscomp$2_pred$$, $obj$$);
};
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$attribute_values$arity$2 = function($this$$$, $node$$) {
  return asami.multi_graph.get_from_multi_index.cljs$core$IFn$_invoke$arity$4(this, $node$$, $APP.cljs$cst$2244$_QMARK_a, cljs$cst$2245$_QMARK_v);
};
asami.multi_graph.MultiGraph.prototype.asami$graph$Graph$count_triple$arity$4 = function($temp__5823__auto__$jscomp$172_this$$jscomp$707_trans_tag$$, $subj$$, $plain_pred$jscomp$3_pred$$, $obj$$) {
  $temp__5823__auto__$jscomp$172_this$$jscomp$707_trans_tag$$ = asami.common_index.check_for_transitive($plain_pred$jscomp$3_pred$$);
  return $APP.cljs.core.truth_($temp__5823__auto__$jscomp$172_this$$jscomp$707_trans_tag$$) ? ($plain_pred$jscomp$3_pred$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$jscomp$172_this$$jscomp$707_trans_tag$$, 0, null), $temp__5823__auto__$jscomp$172_this$$jscomp$707_trans_tag$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($temp__5823__auto__$jscomp$172_this$$jscomp$707_trans_tag$$, 1, null), asami.multi_graph.count_transitive_from_index.cljs$core$IFn$_invoke$arity$5(this, 
  $temp__5823__auto__$jscomp$172_this$$jscomp$707_trans_tag$$, $subj$$, $plain_pred$jscomp$3_pred$$, $obj$$)) : asami.common_index.count_from_index.cljs$core$IFn$_invoke$arity$4(this, $subj$$, $plain_pred$jscomp$3_pred$$, $obj$$);
};
asami.multi_graph.MultiGraph.prototype.cljs$core$ILookup$_lookup$arity$2 = function($this__5323__auto__$$, $k__5324__auto__$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k__5324__auto__$$, null);
};
asami.multi_graph.MultiGraph.prototype.cljs$core$ILookup$_lookup$arity$3 = function($this__5325__auto__$$, $k43999$$, $else__5326__auto__$$) {
  switch($k43999$$ instanceof $APP.cljs.core.Keyword ? $k43999$$.fqn : null) {
    case "spo":
      return this.spo;
    case "pos":
      return this.pos;
    case "osp":
      return this.osp;
    case "next-stmt-id":
      return this.next_stmt_id;
    default:
      return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3(this.__extmap, $k43999$$, $else__5326__auto__$$);
  }
};
asami.multi_graph.MultiGraph.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function($this__5343__auto__$$, $f__5344__auto__$$, $init__5345__auto__$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($ret__5346__auto__$$, $p__44017_v__5348__auto__$$) {
    var $k__5347__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44017_v__5348__auto__$$, 0, null);
    $p__44017_v__5348__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44017_v__5348__auto__$$, 1, null);
    return $f__5344__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $f__5344__auto__$$.cljs$core$IFn$_invoke$arity$3($ret__5346__auto__$$, $k__5347__auto__$$, $p__44017_v__5348__auto__$$) : $f__5344__auto__$$.call(null, $ret__5346__auto__$$, $k__5347__auto__$$, $p__44017_v__5348__auto__$$);
  }, $init__5345__auto__$$, this);
};
asami.multi_graph.MultiGraph.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this__5338__auto__$$, $writer__5339__auto__$$, $opts__5340__auto__$$) {
  return $APP.cljs.core.pr_sequential_writer($writer__5339__auto__$$, function($keyval__5342__auto__$$) {
    return $APP.cljs.core.pr_sequential_writer($writer__5339__auto__$$, $APP.cljs.core.pr_writer, "", " ", "", $opts__5340__auto__$$, $keyval__5342__auto__$$);
  }, "#asami.multi-graph.MultiGraph{", ", ", "}", $opts__5340__auto__$$, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2215$spo, this.spo], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1584$pos, this.pos], null), new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2232$osp, this.osp], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2243$next_stmt_id, this.next_stmt_id], null)], null), this.__extmap));
};
asami.multi_graph.MultiGraph.prototype.cljs$core$IIterable$_iterator$arity$1 = function($G__43998$$) {
  return new $APP.cljs.core.RecordIter(0, this, 4, new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2215$spo, $APP.cljs$cst$1584$pos, cljs$cst$2232$osp, cljs$cst$2243$next_stmt_id], null), $APP.cljs.core.truth_(this.__extmap) ? $APP.cljs.core._iterator(this.__extmap) : $APP.cljs.core.nil_iter());
};
asami.multi_graph.MultiGraph.prototype.cljs$core$IMeta$_meta$arity$1 = function($this__5321__auto__$$) {
  return this.__meta;
};
asami.multi_graph.MultiGraph.prototype.cljs$core$ICloneable$_clone$arity$1 = function($this__5318__auto__$$) {
  return new asami.multi_graph.MultiGraph(this.spo, this.pos, this.osp, this.next_stmt_id, this.__meta, this.__extmap, this.__hash);
};
asami.multi_graph.MultiGraph.prototype.cljs$core$ICounted$_count$arity$1 = function($this__5327__auto__$$) {
  return 4 + $APP.cljs.core.count(this.__extmap);
};
asami.multi_graph.MultiGraph.prototype.cljs$core$IHash$_hash$arity$1 = function($h__5134__auto__$jscomp$72_h__5134__auto____$1$jscomp$72_this__5319__auto__$$) {
  $h__5134__auto__$jscomp$72_h__5134__auto____$1$jscomp$72_this__5319__auto__$$ = this.__hash;
  return $h__5134__auto__$jscomp$72_h__5134__auto____$1$jscomp$72_this__5319__auto__$$ != null ? $h__5134__auto__$jscomp$72_h__5134__auto____$1$jscomp$72_this__5319__auto__$$ : this.__hash = $h__5134__auto__$jscomp$72_h__5134__auto____$1$jscomp$72_this__5319__auto__$$ = -1432270615 ^ $APP.cljs.core.hash_unordered_coll(this);
};
asami.multi_graph.MultiGraph.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this44000$$, $other44001$$) {
  return $other44001$$ != null && this.constructor === $other44001$$.constructor && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.spo, $other44001$$.spo) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.pos, $other44001$$.pos) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.osp, $other44001$$.osp) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.next_stmt_id, $other44001$$.next_stmt_id) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.__extmap, $other44001$$.__extmap);
};
asami.multi_graph.MultiGraph.prototype.asami$common_index$NestedIndex$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.multi_graph.MultiGraph.prototype.asami$common_index$NestedIndex$lowest_level_fn$arity$1 = function($this$$$) {
  return $APP.cljs.core.keys;
};
asami.multi_graph.MultiGraph.prototype.asami$common_index$NestedIndex$lowest_level_set_fn$arity$1 = function($this$$$) {
  return $APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set, $APP.cljs.core.keys);
};
asami.multi_graph.MultiGraph.prototype.asami$common_index$NestedIndex$lowest_level_sets_fn$arity$1 = function($this$$$) {
  return $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.map, $APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set, $APP.cljs.core.keys));
};
asami.multi_graph.MultiGraph.prototype.asami$common_index$NestedIndex$mid_level_map_fn$arity$1 = function($this$$$) {
  return function($p1__43992_SHARP_$$) {
    return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p__44025_v$$) {
      var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44025_v$$, 0, null);
      $p__44025_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44025_v$$, 1, null);
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, $APP.cljs.core.set($APP.cljs.core.keys($p__44025_v$$))], null);
    }, $p1__43992_SHARP_$$));
  };
};
asami.multi_graph.MultiGraph.prototype.cljs$core$IMap$_dissoc$arity$2 = function($this__5333__auto__$$, $k__5334__auto__$$) {
  return $APP.cljs.core.contains_QMARK_(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 4, [cljs$cst$2232$osp, null, $APP.cljs$cst$1584$pos, null, cljs$cst$2215$spo, null, cljs$cst$2243$next_stmt_id, null], null), null), $k__5334__auto__$$) ? $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._with_meta($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), $k__5334__auto__$$) : new asami.multi_graph.MultiGraph(this.spo, 
  this.pos, this.osp, this.next_stmt_id, this.__meta, $APP.cljs.core.not_empty($APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.__extmap, $k__5334__auto__$$)), null);
};
asami.multi_graph.MultiGraph.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($this__5330__auto__$$, $k43999$$) {
  switch($k43999$$ instanceof $APP.cljs.core.Keyword ? $k43999$$.fqn : null) {
    case "spo":
    case "pos":
    case "osp":
    case "next-stmt-id":
      return !0;
    default:
      return $APP.cljs.core.contains_QMARK_(this.__extmap, $k43999$$);
  }
};
asami.multi_graph.MultiGraph.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($pred__44039_this__5331__auto__$$, $k__5332__auto__$$, $G__43998$$) {
  $pred__44039_this__5331__auto__$$ = $APP.cljs.core.keyword_identical_QMARK_;
  return $APP.cljs.core.truth_($pred__44039_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__44039_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2(cljs$cst$2215$spo, $k__5332__auto__$$) : $pred__44039_this__5331__auto__$$.call(null, cljs$cst$2215$spo, $k__5332__auto__$$)) ? new asami.multi_graph.MultiGraph($G__43998$$, this.pos, this.osp, this.next_stmt_id, this.__meta, this.__extmap, null) : $APP.cljs.core.truth_($pred__44039_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__44039_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1584$pos, 
  $k__5332__auto__$$) : $pred__44039_this__5331__auto__$$.call(null, $APP.cljs$cst$1584$pos, $k__5332__auto__$$)) ? new asami.multi_graph.MultiGraph(this.spo, $G__43998$$, this.osp, this.next_stmt_id, this.__meta, this.__extmap, null) : $APP.cljs.core.truth_($pred__44039_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__44039_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2(cljs$cst$2232$osp, $k__5332__auto__$$) : $pred__44039_this__5331__auto__$$.call(null, cljs$cst$2232$osp, $k__5332__auto__$$)) ? 
  new asami.multi_graph.MultiGraph(this.spo, this.pos, $G__43998$$, this.next_stmt_id, this.__meta, this.__extmap, null) : $APP.cljs.core.truth_($pred__44039_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__44039_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2(cljs$cst$2243$next_stmt_id, $k__5332__auto__$$) : $pred__44039_this__5331__auto__$$.call(null, cljs$cst$2243$next_stmt_id, $k__5332__auto__$$)) ? new asami.multi_graph.MultiGraph(this.spo, this.pos, this.osp, $G__43998$$, this.__meta, 
  this.__extmap, null) : new asami.multi_graph.MultiGraph(this.spo, this.pos, this.osp, this.next_stmt_id, this.__meta, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.__extmap, $k__5332__auto__$$, $G__43998$$), null);
};
asami.multi_graph.MultiGraph.prototype.cljs$core$ISeqable$_seq$arity$1 = function($this__5336__auto__$$) {
  return $APP.cljs.core.seq($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.MapEntry(cljs$cst$2215$spo, this.spo, null), new $APP.cljs.core.MapEntry($APP.cljs$cst$1584$pos, this.pos, null), new $APP.cljs.core.MapEntry(cljs$cst$2232$osp, this.osp, null), new $APP.cljs.core.MapEntry(cljs$cst$2243$next_stmt_id, this.next_stmt_id, null)], null), this.__extmap));
};
asami.multi_graph.MultiGraph.prototype.zuko$node$NodeAPI$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.multi_graph.MultiGraph.prototype.zuko$node$NodeAPI$data_attribute$arity$2 = function($_$$, $___$1$$) {
  return cljs$cst$2237$a_SLASH_first;
};
asami.multi_graph.MultiGraph.prototype.zuko$node$NodeAPI$container_attribute$arity$2 = function($_$$, $___$1$$) {
  return cljs$cst$2238$a_SLASH_contains;
};
asami.multi_graph.MultiGraph.prototype.zuko$node$NodeAPI$new_node$arity$1 = function($_$$) {
  return asami.graph.new_node.cljs$core$IFn$_invoke$arity$0();
};
asami.multi_graph.MultiGraph.prototype.zuko$node$NodeAPI$node_id$arity$2 = function($_$$, $n$$) {
  return asami.graph.node_id($n$$);
};
asami.multi_graph.MultiGraph.prototype.zuko$node$NodeAPI$node_type_QMARK_$arity$3 = function($_$$, $___$1$$, $n$$) {
  return asami.graph.node_type_QMARK_($n$$);
};
asami.multi_graph.MultiGraph.prototype.zuko$node$NodeAPI$find_triple$arity$2 = function($e$jscomp$269_this$$$, $p__44042_v$$) {
  $e$jscomp$269_this$$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44042_v$$, 0, null);
  var $a$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44042_v$$, 1, null);
  $p__44042_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44042_v$$, 2, null);
  return this.asami$graph$Graph$resolve_triple$arity$4(null, $e$jscomp$269_this$$$, $a$$, $p__44042_v$$);
};
asami.multi_graph.MultiGraph.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($this__5322__auto__$$, $G__43998$$) {
  return new asami.multi_graph.MultiGraph(this.spo, this.pos, this.osp, this.next_stmt_id, $G__43998$$, this.__extmap, this.__hash);
};
asami.multi_graph.MultiGraph.prototype.cljs$core$ICollection$_conj$arity$2 = function($this__5328__auto__$$, $entry__5329__auto__$$) {
  return $APP.cljs.core.vector_QMARK_($entry__5329__auto__$$) ? this.cljs$core$IAssociative$_assoc$arity$3(null, $APP.cljs.core._nth($entry__5329__auto__$$, 0), $APP.cljs.core._nth($entry__5329__auto__$$, 1)) : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($APP.cljs.core._conj, this, $entry__5329__auto__$$);
};
asami.multi_graph.MultiGraph.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2239$spo, $APP.cljs$cst$1607$pos, cljs$cst$2246$osp, cljs$cst$2247$next_stmt_id], null);
};
asami.multi_graph.MultiGraph.cljs$lang$type = !0;
asami.multi_graph.MultiGraph.cljs$lang$ctorPrSeq = function($this__5369__auto__$$) {
  return new $APP.cljs.core.List(null, "asami.multi-graph/MultiGraph", null, 1, null);
};
asami.multi_graph.MultiGraph.cljs$lang$ctorPrWriter = function($this__5369__auto__$$, $writer__5370__auto__$$) {
  return $APP.cljs.core._write($writer__5370__auto__$$, "asami.multi-graph/MultiGraph");
};
asami.multi_graph.__GT_MultiGraph = function($spo$$, $pos$$, $osp$$, $next_stmt_id$$) {
  return new asami.multi_graph.MultiGraph($spo$$, $pos$$, $osp$$, $next_stmt_id$$, null, null, null);
};
asami.multi_graph.map__GT_MultiGraph = function($G__44003$$) {
  var $G__44046$jscomp$inline_4923_extmap__5365__auto__$$ = $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic($G__44003$$, cljs$cst$2215$spo, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$1584$pos, cljs$cst$2232$osp, cljs$cst$2243$next_stmt_id], 0));
  $G__44046$jscomp$inline_4923_extmap__5365__auto__$$ = $APP.cljs.core.record_QMARK_($G__44003$$) ? $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $G__44046$jscomp$inline_4923_extmap__5365__auto__$$) : $G__44046$jscomp$inline_4923_extmap__5365__auto__$$;
  return new asami.multi_graph.MultiGraph(cljs$cst$2215$spo.cljs$core$IFn$_invoke$arity$1($G__44003$$), $APP.cljs$cst$1584$pos.cljs$core$IFn$_invoke$arity$1($G__44003$$), cljs$cst$2232$osp.cljs$core$IFn$_invoke$arity$1($G__44003$$), cljs$cst$2243$next_stmt_id.cljs$core$IFn$_invoke$arity$1($G__44003$$), null, $APP.cljs.core.not_empty($G__44046$jscomp$inline_4923_extmap__5365__auto__$$), null);
};
asami.multi_graph.multi_graph_add = function($var_args$$) {
  switch(arguments.length) {
    case 6:
      return asami.multi_graph.multi_graph_add.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 5:
      return asami.multi_graph.multi_graph_add.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
asami.multi_graph.multi_graph_add.cljs$core$IFn$_invoke$arity$6 = function($graph$$, $subj$$, $pred$$, $obj$$, $tx$$, $_STAR_insert_op_STAR__temp_val__44054_n$$) {
  6 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$144$trace, "asami.multi-graph", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["insert *", $_STAR_insert_op_STAR__temp_val__44054_n$$], 0));
  var $_STAR_insert_op_STAR__orig_val__44053$$ = asami.multi_graph._STAR_insert_op_STAR_;
  $_STAR_insert_op_STAR__temp_val__44054_n$$ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._PLUS_, $_STAR_insert_op_STAR__temp_val__44054_n$$);
  asami.multi_graph._STAR_insert_op_STAR_ = $_STAR_insert_op_STAR__temp_val__44054_n$$;
  try {
    return asami.graph.graph_add($graph$$, $subj$$, $pred$$, $obj$$, $tx$$);
  } finally {
    asami.multi_graph._STAR_insert_op_STAR_ = $_STAR_insert_op_STAR__orig_val__44053$$;
  }
};
asami.multi_graph.multi_graph_add.cljs$core$IFn$_invoke$arity$5 = function($graph$$, $subj$$, $pred$$, $obj$$, $tx$$) {
  var $_STAR_insert_op_STAR__orig_val__44055$$ = asami.multi_graph._STAR_insert_op_STAR_;
  asami.multi_graph._STAR_insert_op_STAR_ = $APP.cljs.core.inc;
  try {
    return asami.graph.graph_add($graph$$, $subj$$, $pred$$, $obj$$, $tx$$);
  } finally {
    asami.multi_graph._STAR_insert_op_STAR_ = $_STAR_insert_op_STAR__orig_val__44055$$;
  }
};
asami.multi_graph.multi_graph_add.cljs$lang$maxFixedArity = 6;
asami.multi_graph.empty_multi_graph = asami.multi_graph.__GT_MultiGraph($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.PersistentArrayMap.EMPTY, null);
zuko.sandbox = {};
zuko.sandbox.allowed_fns = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 372, [$APP.cljs$cst$702$unchecked_char, null, $APP.cljs$cst$843$sorted_set, null, $APP.cljs$cst$844$true_QMARK_, null, $APP.cljs$cst$686$unchecked_byte, null, $APP.cljs$cst$850$reduce_kv, null, $APP.cljs$cst$852$update_in, null, $APP.cljs$cst$854$derive, null, $APP.cljs$cst$855$nfirst, null, $APP.cljs$cst$856$sort_by, null, $APP.cljs$cst$69$keys, null, $APP.cljs$cst$23$first, null, $APP.cljs$cst$858$butlast, 
null, $APP.cljs$cst$408$and, null, cljs$cst$2248$aset_byte, null, $APP.cljs$cst$860$partition_by, null, $APP.cljs$cst$861$uri_QMARK_, null, $APP.cljs$cst$862$map_entry_QMARK_, null, $APP.cljs$cst$863$simple_keyword_QMARK_, null, $APP.cljs$cst$864$into_array, null, cljs$cst$2249$decimal_QMARK_, null, $APP.cljs$cst$24$rest, null, cljs$cst$2250$rational_QMARK_, null, $APP.cljs$cst$866$seq, null, $APP.cljs$cst$634$unchecked_inc_int, null, $APP.cljs$cst$869$odd_QMARK_, null, $APP.cljs$cst$870$partition, 
null, $APP.cljs$cst$682$_GT__EQ_, null, $APP.cljs$cst$871$fnext, null, $APP.cljs$cst$681$bit_or, null, $APP.cljs$cst$873$disj, null, $APP.cljs$cst$687$unchecked_short, null, $APP.cljs$cst$876$ffirst, null, $APP.cljs$cst$700$unchecked_negate_int, null, $APP.cljs$cst$879$print_str, null, $APP.cljs$cst$881$uuid_QMARK_, null, $APP.cljs$cst$886$select_keys, null, cljs$cst$2251$bigdec, null, $APP.cljs$cst$887$reverse, null, $APP.cljs$cst$888$special_symbol_QMARK_, null, $APP.cljs$cst$889$merge, null, $APP.cljs$cst$890$inst_ms, 
null, $APP.cljs$cst$664$unchecked_multiply, null, cljs$cst$2252$iterator_seq, null, $APP.cljs$cst$893$inst_QMARK_, null, $APP.cljs$cst$894$random_sample, null, $APP.cljs$cst$662$_GT_, null, $APP.cljs$cst$25$count, null, $APP.cljs$cst$895$simple_ident_QMARK_, null, $APP.cljs$cst$898$last, null, $APP.cljs$cst$627$bit_shift_left, null, $APP.cljs$cst$661$int, null, $APP.cljs$cst$633$unchecked_negate, null, $APP.cljs$cst$620$unchecked_remainder_int, null, $APP.cljs$cst$694$byte, null, $APP.cljs$cst$901$conj_BANG_, 
null, $APP.cljs$cst$905$int_QMARK_, null, $APP.cljs$cst$683$long_array, null, $APP.cljs$cst$907$find, null, $APP.cljs$cst$37$vals, null, $APP.cljs$cst$643$num, null, $APP.cljs$cst$674$nil_QMARK_, null, $APP.cljs$cst$909$hash, null, $APP.cljs$cst$680$unchecked_subtract, null, $APP.cljs$cst$915$float_QMARK_, null, $APP.cljs$cst$623$short_array, null, $APP.cljs$cst$916$second, null, cljs$cst$2253$vector_of, null, $APP.cljs$cst$655$unchecked_add_int, null, $APP.cljs$cst$622$dec_SINGLEQUOTE_, null, $APP.cljs$cst$922$ifn_QMARK_, 
null, $APP.cljs$cst$689$inc, null, $APP.cljs$cst$220$_SLASH_, null, $APP.cljs$cst$927$with_meta, null, $APP.cljs$cst$928$map_QMARK_, null, $APP.cljs$cst$929$vector_QMARK_, null, $APP.cljs$cst$657$quot, null, $APP.cljs$cst$931$any_QMARK_, null, cljs$cst$2254$default_data_readers, null, $APP.cljs$cst$677$unchecked_add, null, cljs$cst$2255$construct_proxy, null, $APP.cljs$cst$635$floats, null, $APP.cljs$cst$934$drop_while, null, $APP.cljs$cst$1665$struct, null, $APP.cljs$cst$935$bounded_count, null, 
$APP.cljs$cst$936$take_while, null, $APP.cljs$cst$937$extends_QMARK_, null, $APP.cljs$cst$938$sort, null, $APP.cljs$cst$939$false_QMARK_, null, $APP.cljs$cst$940$cat, null, $APP.cljs$cst$351$unquote_splicing, null, $APP.cljs$cst$942$replace, null, $APP.cljs$cst$944$drop, null, $APP.cljs$cst$946$not, null, $APP.cljs$cst$947$keep, null, $APP.cljs$cst$948$cons, null, $APP.cljs$cst$624$bit_shift_right, null, $APP.cljs$cst$950$associative_QMARK_, null, $APP.cljs$cst$350$unquote, null, $APP.cljs$cst$956$bit_flip, 
null, $APP.cljs$cst$957$aset, null, $APP.cljs$cst$958$some_fn, null, $APP.cljs$cst$660$unchecked_multiply_int, null, $APP.cljs$cst$961$identity, null, $APP.cljs$cst$962$to_array, null, $APP.cljs$cst$666$double_array, null, $APP.cljs$cst$963$sorted_map, null, $APP.cljs$cst$965$concat, null, $APP.cljs$cst$631$char, null, $APP.cljs$cst$966$ident_QMARK_, null, $APP.cljs$cst$967$make_array, null, $APP.cljs$cst$969$peek, null, $APP.cljs$cst$970$hash_unordered_coll, null, $APP.cljs$cst$972$sequence, null, 
cljs$cst$2256$bases, null, $APP.cljs$cst$973$group_by, null, $APP.cljs$cst$974$re_seq, null, $APP.cljs$cst$621$unchecked_subtract_int, null, $APP.cljs$cst$648$_LT__EQ_, null, $APP.cljs$cst$626$_EQ_, null, $APP.cljs$cst$979$keep_indexed, null, $APP.cljs$cst$981$every_QMARK_, null, $APP.cljs$cst$94$comp, null, $APP.cljs$cst$982$bit_set, null, $APP.cljs$cst$983$dissoc, null, $APP.cljs$cst$651$min, null, $APP.cljs$cst$984$char_QMARK_, null, $APP.cljs$cst$986$interleave, null, cljs$cst$2257$create_struct, 
null, $APP.cljs$cst$991$split_at, null, $APP.cljs$cst$992$neg_int_QMARK_, null, $APP.cljs$cst$993$mapv, null, $APP.cljs$cst$2258$bigint, null, $APP.cljs$cst$697$char_array, null, $APP.cljs$cst$997$drop_last, null, $APP.cljs$cst$999$fnil, null, $APP.cljs$cst$1002$satisfies_QMARK_, null, $APP.cljs$cst$51$next, null, $APP.cljs$cst$690$_PLUS_, null, cljs$cst$2259$aset_int, null, $APP.cljs$cst$7$name, null, $APP.cljs$cst$658$unchecked_double, null, cljs$cst$2260$mix_collection_hash, null, $APP.cljs$cst$1005$symbol_QMARK_, 
null, cljs$cst$2261$clojure_version, null, $APP.cljs$cst$1007$disj_BANG_, null, $APP.cljs$cst$688$float_array, null, $APP.cljs$cst$2262$rationalize, null, $APP.cljs$cst$1010$methods, null, cljs$cst$2263$bit_clear, null, $APP.cljs$cst$1015$rand_int, null, $APP.cljs$cst$1016$complement, null, cljs$cst$2264$aset_char, null, $APP.cljs$cst$669$byte_array, null, $APP.cljs$cst$1017$list_QMARK_, null, $APP.cljs$cst$625$aget, null, $APP.cljs$cst$1018$zipmap, null, $APP.cljs$cst$1021$run_BANG_, null, $APP.cljs$cst$696$_EQ__EQ_, 
null, $APP.cljs$cst$691$chars, null, $APP.cljs$cst$1022$iterate, null, $APP.cljs$cst$79$boolean, null, $APP.cljs$cst$1023$hash_ordered_coll, null, $APP.cljs$cst$99$hash_map, null, $APP.cljs$cst$701$unchecked_inc, null, $APP.cljs$cst$1024$max_key, null, $APP.cljs$cst$1025$qualified_ident_QMARK_, null, $APP.cljs$cst$1026$dissoc_BANG_, null, $APP.cljs$cst$1027$coll_QMARK_, null, cljs$cst$2265$class_QMARK_, null, $APP.cljs$cst$1028$reversible_QMARK_, null, cljs$cst$2266$find_keyword, null, $APP.cljs$cst$1030$apply, 
null, $APP.cljs$cst$1031$subvec, null, $APP.cljs$cst$1032$isa_QMARK_, null, $APP.cljs$cst$1033$not_every_QMARK_, null, $APP.cljs$cst$1034$keyword_QMARK_, null, $APP.cljs$cst$698$compare, null, $APP.cljs$cst$1036$underive, null, $APP.cljs$cst$1037$transduce, null, $APP.cljs$cst$1038$range, null, $APP.cljs$cst$1040$sorted_QMARK_, null, $APP.cljs$cst$1041$frequencies, null, $APP.cljs$cst$1042$cycle, null, $APP.cljs$cst$695$max, null, $APP.cljs$cst$1043$simple_symbol_QMARK_, null, $APP.cljs$cst$1045$empty_QMARK_, 
null, $APP.cljs$cst$1046$into, null, $APP.cljs$cst$1047$integer_QMARK_, null, cljs$cst$2267$enumeration_seq, null, $APP.cljs$cst$650$_STAR_, null, $APP.cljs$cst$640$unsigned_bit_shift_right, null, $APP.cljs$cst$1388$format, null, $APP.cljs$cst$1054$distinct, null, $APP.cljs$cst$1055$ensure_reduced, null, $APP.cljs$cst$684$object_array, null, $APP.cljs$cst$2268$println_str, null, cljs$cst$2269$bytes_QMARK_, null, $APP.cljs$cst$1056$juxt, null, $APP.cljs$cst$1057$some, null, $APP.cljs$cst$649$__SINGLEQUOTE_, 
null, $APP.cljs$cst$1059$interpose, null, $APP.cljs$cst$1061$instance_QMARK_, null, $APP.cljs$cst$1062$descendants, null, $APP.cljs$cst$1063$get_in, null, cljs$cst$2270$aset_float, null, $APP.cljs$cst$20$meta, null, $APP.cljs$cst$12$val, null, $APP.cljs$cst$1067$assoc_in, null, $APP.cljs$cst$670$zero_QMARK_, null, $APP.cljs$cst$2271$numerator, null, $APP.cljs$cst$1070$realized_QMARK_, null, $APP.cljs$cst$1071$list_STAR_, null, $APP.cljs$cst$1074$subseq, null, $APP.cljs$cst$1075$delay_QMARK_, null, 
$APP.cljs$cst$1076$completing, null, $APP.cljs$cst$679$unchecked_divide_int, null, $APP.cljs$cst$1077$shuffle, null, $APP.cljs$cst$1079$prn_str, null, cljs$cst$2272$char_name_string, null, $APP.cljs$cst$1081$compare_and_set_BANG_, null, $APP.cljs$cst$659$longs, null, $APP.cljs$cst$663$unchecked_int, null, $APP.cljs$cst$1084$nthrest, null, $APP.cljs$cst$685$doubles, null, $APP.cljs$cst$1086$force, null, $APP.cljs$cst$1090$nnext, null, $APP.cljs$cst$629$dec, null, $APP.cljs$cst$1091$qualified_keyword_QMARK_, 
null, $APP.cljs$cst$1092$comparator, null, $APP.cljs$cst$1093$take_last, null, $APP.cljs$cst$1095$string_QMARK_, null, cljs$cst$2273$aset_double, null, $APP.cljs$cst$639$bit_xor, null, $APP.cljs$cst$1097$map, null, $APP.cljs$cst$667$float, null, $APP.cljs$cst$348$deref, null, $APP.cljs$cst$2274$class, null, $APP.cljs$cst$1099$re_pattern, null, cljs$cst$2275$reader_conditional, null, $APP.cljs$cst$1100$repeat, null, $APP.cljs$cst$1101$reduce, null, $APP.cljs$cst$1102$qualified_symbol_QMARK_, null, 
$APP.cljs$cst$1104$vector, null, $APP.cljs$cst$1105$doall, null, cljs$cst$2276$supers, null, $APP.cljs$cst$1107$assoc_BANG_, null, $APP.cljs$cst$1108$not_EQ_, null, cljs$cst$2277$update_proxy, null, $APP.cljs$cst$1110$constantly, null, $APP.cljs$cst$2278$denominator, null, $APP.cljs$cst$1111$seq_QMARK_, null, $APP.cljs$cst$435$get, null, $APP.cljs$cst$76$key, null, $APP.cljs$cst$654$bit_and_not, null, $APP.cljs$cst$1114$mapcat, null, $APP.cljs$cst$1116$nat_int_QMARK_, null, $APP.cljs$cst$8$str, null, 
$APP.cljs$cst$1119$empty, null, $APP.cljs$cst$1120$counted_QMARK_, null, $APP.cljs$cst$1121$set_QMARK_, null, $APP.cljs$cst$638$alength, null, $APP.cljs$cst$1122$filterv, null, $APP.cljs$cst$1123$reductions, null, $APP.cljs$cst$645$booleans, null, $APP.cljs$cst$630$_LT_, null, $APP.cljs$cst$1124$reduced, null, $APP.cljs$cst$1125$halt_when, null, $APP.cljs$cst$382$namespace, null, $APP.cljs$cst$1126$keyword, null, $APP.cljs$cst$1128$record_QMARK_, null, $APP.cljs$cst$1129$tagged_literal_QMARK_, null, 
$APP.cljs$cst$668$_, null, $APP.cljs$cst$675$bit_and, null, $APP.cljs$cst$1130$unreduced, null, $APP.cljs$cst$1131$assoc, null, $APP.cljs$cst$1133$partition_all, null, $APP.cljs$cst$693$bit_not, null, $APP.cljs$cst$1134$some_QMARK_, null, $APP.cljs$cst$636$pos_QMARK_, null, $APP.cljs$cst$1136$rand, null, $APP.cljs$cst$1137$re_matches, null, $APP.cljs$cst$1138$boolean_QMARK_, null, $APP.cljs$cst$1139$every_pred, null, $APP.cljs$cst$1141$fn_QMARK_, null, cljs$cst$2279$re_groups, null, $APP.cljs$cst$1142$sequential_QMARK_, 
null, $APP.cljs$cst$1143$list, null, $APP.cljs$cst$1144$sorted_set_by, null, $APP.cljs$cst$1145$nthnext, null, $APP.cljs$cst$1146$eduction, null, $APP.cljs$cst$1147$rand_nth, null, $APP.cljs$cst$1149$partial, null, cljs$cst$2280$re_matcher, null, $APP.cljs$cst$1151$rsubseq, null, $APP.cljs$cst$1152$contains_QMARK_, null, $APP.cljs$cst$699$shorts, null, $APP.cljs$cst$1157$hash_set, null, $APP.cljs$cst$1158$take, null, $APP.cljs$cst$1161$split_with, null, $APP.cljs$cst$1164$make_hierarchy, null, $APP.cljs$cst$1165$tagged_literal, 
null, $APP.cljs$cst$647$inc_SINGLEQUOTE_, null, $APP.cljs$cst$1166$parents, null, $APP.cljs$cst$1167$test, null, $APP.cljs$cst$63$vec, null, $APP.cljs$cst$673$nth, null, $APP.cljs$cst$1170$subs, null, $APP.cljs$cst$1171$to_array_2d, null, $APP.cljs$cst$1172$symbol, null, $APP.cljs$cst$1173$mod, null, $APP.cljs$cst$1174$number_QMARK_, null, $APP.cljs$cst$644$reduced_QMARK_, null, cljs$cst$2281$biginteger, null, cljs$cst$2282$aset_boolean, null, $APP.cljs$cst$2283$bean, null, $APP.cljs$cst$1177$conj, 
null, $APP.cljs$cst$703$bytes, null, $APP.cljs$cst$642$unchecked_float, null, $APP.cljs$cst$1179$bit_test, null, $APP.cljs$cst$1180$sorted_map_by, null, $APP.cljs$cst$1181$double_QMARK_, null, $APP.cljs$cst$1182$rseq, null, $APP.cljs$cst$632$unchecked_long, null, $APP.cljs$cst$653$double, null, $APP.cljs$cst$665$unchecked_dec, null, $APP.cljs$cst$1184$tree_seq, null, $APP.cljs$cst$1666$struct_map, null, $APP.cljs$cst$1186$seqable_QMARK_, null, cljs$cst$2284$reader_conditional_QMARK_, null, $APP.cljs$cst$1189$array_map, 
null, $APP.cljs$cst$619$_PLUS__SINGLEQUOTE_, null, $APP.cljs$cst$1191$dedupe, null, $APP.cljs$cst$656$short, null, $APP.cljs$cst$1192$update, null, $APP.cljs$cst$1193$filter, null, $APP.cljs$cst$671$unchecked_dec_int, null, $APP.cljs$cst$672$rem, null, $APP.cljs$cst$1196$pop, null, $APP.cljs$cst$2285$ratio_QMARK_, null, $APP.cljs$cst$1197$merge_with, null, cljs$cst$2286$deliver, null, $APP.cljs$cst$652$long, null, cljs$cst$2287$aset_short, null, $APP.cljs$cst$1200$flatten, null, $APP.cljs$cst$1201$distinct_QMARK_, 
null, $APP.cljs$cst$1202$map_indexed, null, $APP.cljs$cst$1205$even_QMARK_, null, cljs$cst$2288$xml_seq, null, $APP.cljs$cst$420$type, null, $APP.cljs$cst$641$neg_QMARK_, null, $APP.cljs$cst$1209$gensym, null, $APP.cljs$cst$676$_STAR__SINGLEQUOTE_, null, $APP.cljs$cst$1211$not_any_QMARK_, null, cljs$cst$2289$inst_ms_STAR_, null, $APP.cljs$cst$1212$take_nth, null, $APP.cljs$cst$1213$dorun, null, $APP.cljs$cst$1215$not_empty, null, cljs$cst$2290$aset_long, null, $APP.cljs$cst$403$or, null, $APP.cljs$cst$646$int_array, 
null, $APP.cljs$cst$1221$pos_int_QMARK_, null, $APP.cljs$cst$692$ints, null, $APP.cljs$cst$678$identical_QMARK_, null, $APP.cljs$cst$1225$indexed_QMARK_, null, $APP.cljs$cst$1226$min_key, null, $APP.cljs$cst$1227$repeatedly, null, cljs$cst$2291$char_escape_string, null, $APP.cljs$cst$1228$set, null, $APP.cljs$cst$1229$remove, null, $APP.cljs$cst$1232$re_find, null, cljs$cst$2292$slurp, null, $APP.cljs$cst$637$boolean_array, null], null), null);
zuko.sandbox.and_STAR_ = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return zuko.sandbox.and_STAR_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return zuko.sandbox.and_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var $args_arr__5774__auto__$jscomp$79_argseq__5775__auto__$$ = [], $len__5749__auto___43835$$ = arguments.length, $i__5750__auto___43836$$ = 0;;) {
        if ($i__5750__auto___43836$$ < $len__5749__auto___43835$$) {
          $args_arr__5774__auto__$jscomp$79_argseq__5775__auto__$$.push(arguments[$i__5750__auto___43836$$]), $i__5750__auto___43836$$ += 1;
        } else {
          break;
        }
      }
      $args_arr__5774__auto__$jscomp$79_argseq__5775__auto__$$ = 1 < $args_arr__5774__auto__$jscomp$79_argseq__5775__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args_arr__5774__auto__$jscomp$79_argseq__5775__auto__$$.slice(1), 0, null) : null;
      return zuko.sandbox.and_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args_arr__5774__auto__$jscomp$79_argseq__5775__auto__$$);
  }
};
zuko.sandbox.and_STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return !0;
};
zuko.sandbox.and_STAR_.cljs$core$IFn$_invoke$arity$1 = function($x$$) {
  return $x$$;
};
zuko.sandbox.and_STAR_.cljs$core$IFn$_invoke$arity$variadic = function($x$$, $n$$) {
  return $APP.cljs.core.truth_($x$$) ? $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2(zuko.sandbox.and_STAR_, $n$$) : $x$$;
};
zuko.sandbox.and_STAR_.cljs$lang$applyTo = function($seq43771_seq43771__$1$$) {
  var $G__43772$$ = $APP.cljs.core.first($seq43771_seq43771__$1$$);
  $seq43771_seq43771__$1$$ = $APP.cljs.core.next($seq43771_seq43771__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__43772$$, $seq43771_seq43771__$1$$);
};
zuko.sandbox.and_STAR_.cljs$lang$maxFixedArity = 1;
zuko.sandbox.or_STAR_ = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return zuko.sandbox.or_STAR_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return zuko.sandbox.or_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var $args_arr__5774__auto__$jscomp$80_argseq__5775__auto__$$ = [], $len__5749__auto___43839$$ = arguments.length, $i__5750__auto___43840$$ = 0;;) {
        if ($i__5750__auto___43840$$ < $len__5749__auto___43839$$) {
          $args_arr__5774__auto__$jscomp$80_argseq__5775__auto__$$.push(arguments[$i__5750__auto___43840$$]), $i__5750__auto___43840$$ += 1;
        } else {
          break;
        }
      }
      $args_arr__5774__auto__$jscomp$80_argseq__5775__auto__$$ = 1 < $args_arr__5774__auto__$jscomp$80_argseq__5775__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args_arr__5774__auto__$jscomp$80_argseq__5775__auto__$$.slice(1), 0, null) : null;
      return zuko.sandbox.or_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args_arr__5774__auto__$jscomp$80_argseq__5775__auto__$$);
  }
};
zuko.sandbox.or_STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return null;
};
zuko.sandbox.or_STAR_.cljs$core$IFn$_invoke$arity$1 = function($x$$) {
  return $x$$;
};
zuko.sandbox.or_STAR_.cljs$core$IFn$_invoke$arity$variadic = function($x$$, $n$$) {
  return $APP.cljs.core.truth_($x$$) ? $x$$ : $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2(zuko.sandbox.or_STAR_, $n$$);
};
zuko.sandbox.or_STAR_.cljs$lang$applyTo = function($seq43783_seq43783__$1$$) {
  var $G__43784$$ = $APP.cljs.core.first($seq43783_seq43783__$1$$);
  $seq43783_seq43783__$1$$ = $APP.cljs.core.next($seq43783_seq43783__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__43784$$, $seq43783_seq43783__$1$$);
};
zuko.sandbox.or_STAR_.cljs$lang$maxFixedArity = 1;
zuko.sandbox.allowed_map = $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$702$unchecked_char, $APP.cljs$cst$843$sorted_set, $APP.cljs$cst$844$true_QMARK_, $APP.cljs$cst$686$unchecked_byte, $APP.cljs$cst$850$reduce_kv, $APP.cljs$cst$852$update_in, $APP.cljs$cst$854$derive, $APP.cljs$cst$855$nfirst, $APP.cljs$cst$856$sort_by, $APP.cljs$cst$69$keys, $APP.cljs$cst$23$first, $APP.cljs$cst$858$butlast, $APP.cljs$cst$408$and, $APP.cljs$cst$860$partition_by, $APP.cljs$cst$861$uri_QMARK_, $APP.cljs$cst$862$map_entry_QMARK_, 
$APP.cljs$cst$863$simple_keyword_QMARK_, $APP.cljs$cst$864$into_array, $APP.cljs$cst$24$rest, $APP.cljs$cst$866$seq, $APP.cljs$cst$634$unchecked_inc_int, $APP.cljs$cst$869$odd_QMARK_, $APP.cljs$cst$870$partition, $APP.cljs$cst$682$_GT__EQ_, $APP.cljs$cst$871$fnext, $APP.cljs$cst$681$bit_or, $APP.cljs$cst$873$disj, $APP.cljs$cst$687$unchecked_short, $APP.cljs$cst$876$ffirst, $APP.cljs$cst$700$unchecked_negate_int, $APP.cljs$cst$879$print_str, $APP.cljs$cst$881$uuid_QMARK_, $APP.cljs$cst$886$select_keys, 
$APP.cljs$cst$887$reverse, $APP.cljs$cst$888$special_symbol_QMARK_, $APP.cljs$cst$889$merge, $APP.cljs$cst$890$inst_ms, $APP.cljs$cst$664$unchecked_multiply, $APP.cljs$cst$893$inst_QMARK_, $APP.cljs$cst$894$random_sample, $APP.cljs$cst$662$_GT_, $APP.cljs$cst$25$count, $APP.cljs$cst$895$simple_ident_QMARK_, $APP.cljs$cst$898$last, $APP.cljs$cst$627$bit_shift_left, $APP.cljs$cst$661$int, $APP.cljs$cst$633$unchecked_negate, $APP.cljs$cst$620$unchecked_remainder_int, $APP.cljs$cst$694$byte, $APP.cljs$cst$901$conj_BANG_, 
$APP.cljs$cst$905$int_QMARK_, $APP.cljs$cst$683$long_array, $APP.cljs$cst$907$find, $APP.cljs$cst$37$vals, $APP.cljs$cst$674$nil_QMARK_, $APP.cljs$cst$909$hash, $APP.cljs$cst$680$unchecked_subtract, $APP.cljs$cst$915$float_QMARK_, $APP.cljs$cst$916$second, $APP.cljs$cst$655$unchecked_add_int, $APP.cljs$cst$922$ifn_QMARK_, $APP.cljs$cst$689$inc, $APP.cljs$cst$220$_SLASH_, $APP.cljs$cst$927$with_meta, $APP.cljs$cst$928$map_QMARK_, $APP.cljs$cst$929$vector_QMARK_, $APP.cljs$cst$657$quot, $APP.cljs$cst$931$any_QMARK_, 
$APP.cljs$cst$677$unchecked_add, $APP.cljs$cst$635$floats, $APP.cljs$cst$934$drop_while, $APP.cljs$cst$935$bounded_count, $APP.cljs$cst$936$take_while, $APP.cljs$cst$938$sort, $APP.cljs$cst$939$false_QMARK_, $APP.cljs$cst$940$cat, $APP.cljs$cst$942$replace, $APP.cljs$cst$944$drop, $APP.cljs$cst$946$not, $APP.cljs$cst$947$keep, $APP.cljs$cst$948$cons, $APP.cljs$cst$624$bit_shift_right, $APP.cljs$cst$950$associative_QMARK_, $APP.cljs$cst$956$bit_flip, $APP.cljs$cst$957$aset, $APP.cljs$cst$958$some_fn, 
$APP.cljs$cst$660$unchecked_multiply_int, $APP.cljs$cst$961$identity, $APP.cljs$cst$962$to_array, $APP.cljs$cst$666$double_array, $APP.cljs$cst$963$sorted_map, $APP.cljs$cst$965$concat, $APP.cljs$cst$631$char, $APP.cljs$cst$966$ident_QMARK_, $APP.cljs$cst$967$make_array, $APP.cljs$cst$969$peek, $APP.cljs$cst$970$hash_unordered_coll, $APP.cljs$cst$972$sequence, $APP.cljs$cst$973$group_by, $APP.cljs$cst$974$re_seq, $APP.cljs$cst$621$unchecked_subtract_int, $APP.cljs$cst$648$_LT__EQ_, $APP.cljs$cst$626$_EQ_, 
$APP.cljs$cst$979$keep_indexed, $APP.cljs$cst$981$every_QMARK_, $APP.cljs$cst$94$comp, $APP.cljs$cst$982$bit_set, $APP.cljs$cst$983$dissoc, $APP.cljs$cst$651$min, $APP.cljs$cst$984$char_QMARK_, $APP.cljs$cst$986$interleave, $APP.cljs$cst$991$split_at, $APP.cljs$cst$992$neg_int_QMARK_, $APP.cljs$cst$993$mapv, $APP.cljs$cst$997$drop_last, $APP.cljs$cst$999$fnil, $APP.cljs$cst$51$next, $APP.cljs$cst$690$_PLUS_, $APP.cljs$cst$7$name, $APP.cljs$cst$658$unchecked_double, cljs$cst$2260$mix_collection_hash, 
$APP.cljs$cst$1005$symbol_QMARK_, $APP.cljs$cst$1007$disj_BANG_, $APP.cljs$cst$1010$methods, cljs$cst$2263$bit_clear, $APP.cljs$cst$1015$rand_int, $APP.cljs$cst$1016$complement, $APP.cljs$cst$1017$list_QMARK_, $APP.cljs$cst$625$aget, $APP.cljs$cst$1018$zipmap, $APP.cljs$cst$1021$run_BANG_, $APP.cljs$cst$696$_EQ__EQ_, $APP.cljs$cst$691$chars, $APP.cljs$cst$1022$iterate, $APP.cljs$cst$79$boolean, $APP.cljs$cst$1023$hash_ordered_coll, $APP.cljs$cst$99$hash_map, $APP.cljs$cst$701$unchecked_inc, $APP.cljs$cst$1024$max_key, 
$APP.cljs$cst$1025$qualified_ident_QMARK_, $APP.cljs$cst$1026$dissoc_BANG_, $APP.cljs$cst$1027$coll_QMARK_, $APP.cljs$cst$1028$reversible_QMARK_, $APP.cljs$cst$1030$apply, $APP.cljs$cst$1031$subvec, $APP.cljs$cst$1032$isa_QMARK_, $APP.cljs$cst$1033$not_every_QMARK_, $APP.cljs$cst$1034$keyword_QMARK_, $APP.cljs$cst$698$compare, $APP.cljs$cst$1036$underive, $APP.cljs$cst$1037$transduce, $APP.cljs$cst$1038$range, $APP.cljs$cst$1040$sorted_QMARK_, $APP.cljs$cst$1041$frequencies, $APP.cljs$cst$1042$cycle, 
$APP.cljs$cst$695$max, $APP.cljs$cst$1043$simple_symbol_QMARK_, $APP.cljs$cst$1045$empty_QMARK_, $APP.cljs$cst$1046$into, $APP.cljs$cst$1047$integer_QMARK_, $APP.cljs$cst$650$_STAR_, $APP.cljs$cst$640$unsigned_bit_shift_right, $APP.cljs$cst$1054$distinct, $APP.cljs$cst$1055$ensure_reduced, $APP.cljs$cst$684$object_array, $APP.cljs$cst$2268$println_str, $APP.cljs$cst$1056$juxt, $APP.cljs$cst$1057$some, $APP.cljs$cst$1059$interpose, $APP.cljs$cst$1061$instance_QMARK_, $APP.cljs$cst$1062$descendants, 
$APP.cljs$cst$1063$get_in, $APP.cljs$cst$20$meta, $APP.cljs$cst$12$val, $APP.cljs$cst$1067$assoc_in, $APP.cljs$cst$670$zero_QMARK_, $APP.cljs$cst$1070$realized_QMARK_, $APP.cljs$cst$1071$list_STAR_, $APP.cljs$cst$1074$subseq, $APP.cljs$cst$1075$delay_QMARK_, $APP.cljs$cst$1076$completing, $APP.cljs$cst$679$unchecked_divide_int, $APP.cljs$cst$1077$shuffle, $APP.cljs$cst$1079$prn_str, $APP.cljs$cst$1081$compare_and_set_BANG_, $APP.cljs$cst$659$longs, $APP.cljs$cst$663$unchecked_int, $APP.cljs$cst$1084$nthrest, 
$APP.cljs$cst$685$doubles, $APP.cljs$cst$1086$force, $APP.cljs$cst$1090$nnext, $APP.cljs$cst$629$dec, $APP.cljs$cst$1091$qualified_keyword_QMARK_, $APP.cljs$cst$1092$comparator, $APP.cljs$cst$1093$take_last, $APP.cljs$cst$1095$string_QMARK_, $APP.cljs$cst$639$bit_xor, $APP.cljs$cst$1097$map, $APP.cljs$cst$667$float, $APP.cljs$cst$348$deref, $APP.cljs$cst$1099$re_pattern, $APP.cljs$cst$1100$repeat, $APP.cljs$cst$1101$reduce, $APP.cljs$cst$1102$qualified_symbol_QMARK_, $APP.cljs$cst$1104$vector, $APP.cljs$cst$1105$doall, 
$APP.cljs$cst$1107$assoc_BANG_, $APP.cljs$cst$1108$not_EQ_, $APP.cljs$cst$1110$constantly, $APP.cljs$cst$1111$seq_QMARK_, $APP.cljs$cst$435$get, $APP.cljs$cst$76$key, $APP.cljs$cst$654$bit_and_not, $APP.cljs$cst$1114$mapcat, $APP.cljs$cst$1116$nat_int_QMARK_, $APP.cljs$cst$8$str, $APP.cljs$cst$1119$empty, $APP.cljs$cst$1120$counted_QMARK_, $APP.cljs$cst$1121$set_QMARK_, $APP.cljs$cst$638$alength, $APP.cljs$cst$1122$filterv, $APP.cljs$cst$1123$reductions, $APP.cljs$cst$645$booleans, $APP.cljs$cst$630$_LT_, 
$APP.cljs$cst$1124$reduced, $APP.cljs$cst$1125$halt_when, $APP.cljs$cst$382$namespace, $APP.cljs$cst$1126$keyword, $APP.cljs$cst$1128$record_QMARK_, $APP.cljs$cst$1129$tagged_literal_QMARK_, $APP.cljs$cst$668$_, $APP.cljs$cst$675$bit_and, $APP.cljs$cst$1130$unreduced, $APP.cljs$cst$1131$assoc, $APP.cljs$cst$1133$partition_all, $APP.cljs$cst$693$bit_not, $APP.cljs$cst$1134$some_QMARK_, $APP.cljs$cst$636$pos_QMARK_, $APP.cljs$cst$1136$rand, $APP.cljs$cst$1137$re_matches, $APP.cljs$cst$1138$boolean_QMARK_, 
$APP.cljs$cst$1139$every_pred, $APP.cljs$cst$1141$fn_QMARK_, $APP.cljs$cst$1142$sequential_QMARK_, $APP.cljs$cst$1143$list, $APP.cljs$cst$1144$sorted_set_by, $APP.cljs$cst$1145$nthnext, $APP.cljs$cst$1146$eduction, $APP.cljs$cst$1147$rand_nth, $APP.cljs$cst$1149$partial, $APP.cljs$cst$1151$rsubseq, $APP.cljs$cst$1152$contains_QMARK_, $APP.cljs$cst$699$shorts, $APP.cljs$cst$1157$hash_set, $APP.cljs$cst$1158$take, $APP.cljs$cst$1161$split_with, $APP.cljs$cst$1164$make_hierarchy, $APP.cljs$cst$1165$tagged_literal, 
$APP.cljs$cst$1166$parents, $APP.cljs$cst$1167$test, $APP.cljs$cst$63$vec, $APP.cljs$cst$673$nth, $APP.cljs$cst$1170$subs, $APP.cljs$cst$1171$to_array_2d, $APP.cljs$cst$1172$symbol, $APP.cljs$cst$1173$mod, $APP.cljs$cst$1174$number_QMARK_, $APP.cljs$cst$644$reduced_QMARK_, $APP.cljs$cst$1177$conj, $APP.cljs$cst$703$bytes, $APP.cljs$cst$642$unchecked_float, $APP.cljs$cst$1179$bit_test, $APP.cljs$cst$1180$sorted_map_by, $APP.cljs$cst$1181$double_QMARK_, $APP.cljs$cst$1182$rseq, $APP.cljs$cst$632$unchecked_long, 
$APP.cljs$cst$653$double, $APP.cljs$cst$665$unchecked_dec, $APP.cljs$cst$1184$tree_seq, $APP.cljs$cst$1186$seqable_QMARK_, $APP.cljs$cst$1189$array_map, $APP.cljs$cst$1191$dedupe, $APP.cljs$cst$656$short, $APP.cljs$cst$1192$update, $APP.cljs$cst$1193$filter, $APP.cljs$cst$671$unchecked_dec_int, $APP.cljs$cst$672$rem, $APP.cljs$cst$1196$pop, $APP.cljs$cst$1197$merge_with, $APP.cljs$cst$652$long, $APP.cljs$cst$1200$flatten, $APP.cljs$cst$1201$distinct_QMARK_, $APP.cljs$cst$1202$map_indexed, $APP.cljs$cst$1205$even_QMARK_, 
$APP.cljs$cst$420$type, $APP.cljs$cst$641$neg_QMARK_, $APP.cljs$cst$1209$gensym, $APP.cljs$cst$1211$not_any_QMARK_, cljs$cst$2289$inst_ms_STAR_, $APP.cljs$cst$1212$take_nth, $APP.cljs$cst$1213$dorun, $APP.cljs$cst$1215$not_empty, $APP.cljs$cst$403$or, $APP.cljs$cst$646$int_array, $APP.cljs$cst$1221$pos_int_QMARK_, $APP.cljs$cst$692$ints, $APP.cljs$cst$678$identical_QMARK_, $APP.cljs$cst$1225$indexed_QMARK_, $APP.cljs$cst$1226$min_key, $APP.cljs$cst$1227$repeatedly, $APP.cljs$cst$1228$set, $APP.cljs$cst$1229$remove, 
$APP.cljs$cst$1232$re_find], [$APP.cljs.core.unchecked_char, $APP.cljs.core.sorted_set, $APP.cljs.core.true_QMARK_, $APP.cljs.core.unchecked_byte, $APP.cljs.core.reduce_kv, $APP.cljs.core.update_in, $APP.cljs.core.derive, $APP.cljs.core.nfirst, $APP.cljs.core.sort_by, $APP.cljs.core.keys, $APP.cljs.core.first, $APP.cljs.core.butlast, zuko.sandbox.and_STAR_, $APP.cljs.core.partition_by, $APP.cljs.core.uri_QMARK_, $APP.cljs.core.map_entry_QMARK_, $APP.cljs.core.simple_keyword_QMARK_, $APP.cljs.core.into_array, 
$APP.cljs.core.rest, $APP.cljs.core.seq, $APP.cljs.core.unchecked_inc_int, $APP.cljs.core.odd_QMARK_, $APP.cljs.core.partition, $APP.cljs.core._GT__EQ_, $APP.cljs.core.fnext, $APP.cljs.core.bit_or, $APP.cljs.core.disj, $APP.cljs.core.unchecked_short, $APP.cljs.core.ffirst, $APP.cljs.core.unchecked_negate_int, $APP.cljs.core.print_str, $APP.cljs.core.uuid_QMARK_, $APP.cljs.core.select_keys, $APP.cljs.core.reverse, $APP.cljs.core.special_symbol_QMARK_, $APP.cljs.core.merge, $APP.cljs.core.inst_ms, 
$APP.cljs.core.unchecked_multiply, $APP.cljs.core.inst_QMARK_, $APP.cljs.core.random_sample, $APP.cljs.core._GT_, $APP.cljs.core.count, $APP.cljs.core.simple_ident_QMARK_, $APP.cljs.core.last, $APP.cljs.core.bit_shift_left, $APP.cljs.core.int$, $APP.cljs.core.unchecked_negate, $APP.cljs.core.unchecked_remainder_int, $APP.cljs.core.byte$, $APP.cljs.core.conj_BANG_, $APP.cljs.core.int_QMARK_, $APP.cljs.core.long_array, $APP.cljs.core.find, $APP.cljs.core.vals, $APP.cljs.core.nil_QMARK_, $APP.cljs.core.hash, 
$APP.cljs.core.unchecked_subtract, $APP.cljs.core.float_QMARK_, $APP.cljs.core.second, $APP.cljs.core.unchecked_add_int, $APP.cljs.core.ifn_QMARK_, $APP.cljs.core.inc, $APP.cljs.core._SLASH_, $APP.cljs.core.with_meta, $APP.cljs.core.map_QMARK_, $APP.cljs.core.vector_QMARK_, $APP.cljs.core.quot, $APP.cljs.core.any_QMARK_, $APP.cljs.core.unchecked_add, $APP.cljs.core.floats, $APP.cljs.core.drop_while, $APP.cljs.core.bounded_count, $APP.cljs.core.take_while, $APP.cljs.core.sort, $APP.cljs.core.false_QMARK_, 
$APP.cljs.core.cat, $APP.cljs.core.replace, $APP.cljs.core.drop, $APP.cljs.core.not, $APP.cljs.core.keep, $APP.cljs.core.cons, $APP.cljs.core.bit_shift_right, $APP.cljs.core.associative_QMARK_, $APP.cljs.core.bit_flip, $APP.cljs.core.aset, $APP.cljs.core.some_fn, $APP.cljs.core.unchecked_multiply_int, $APP.cljs.core.identity, $APP.cljs.core.to_array, $APP.cljs.core.double_array, $APP.cljs.core.sorted_map, $APP.cljs.core.concat, $APP.cljs.core.char$, $APP.cljs.core.ident_QMARK_, $APP.cljs.core.make_array, 
$APP.cljs.core.peek, $APP.cljs.core.hash_unordered_coll, $APP.cljs.core.sequence, $APP.cljs.core.group_by, $APP.cljs.core.re_seq, $APP.cljs.core.unchecked_subtract_int, $APP.cljs.core._LT__EQ_, $APP.cljs.core._EQ_, $APP.cljs.core.keep_indexed, $APP.cljs.core.every_QMARK_, $APP.cljs.core.comp, $APP.cljs.core.bit_set, $APP.cljs.core.dissoc, $APP.cljs.core.min, $APP.cljs.core.char_QMARK_, $APP.cljs.core.interleave, $APP.cljs.core.split_at, $APP.cljs.core.neg_int_QMARK_, $APP.cljs.core.mapv, $APP.cljs.core.drop_last, 
$APP.cljs.core.fnil, $APP.cljs.core.next, $APP.cljs.core._PLUS_, $APP.cljs.core.name, $APP.cljs.core.unchecked_double, $APP.cljs.core.mix_collection_hash, $APP.cljs.core.symbol_QMARK_, $APP.cljs.core.disj_BANG_, $APP.cljs.core.methods$, $APP.cljs.core.bit_clear, $APP.cljs.core.rand_int, $APP.cljs.core.complement, $APP.cljs.core.list_QMARK_, $APP.cljs.core.aget, $APP.cljs.core.zipmap, $APP.cljs.core.run_BANG_, $APP.cljs.core._EQ__EQ_, $APP.cljs.core.chars, $APP.cljs.core.iterate, $APP.cljs.core.boolean$, 
$APP.cljs.core.hash_ordered_coll, $APP.cljs.core.hash_map, $APP.cljs.core.unchecked_inc, $APP.cljs.core.max_key, $APP.cljs.core.qualified_ident_QMARK_, $APP.cljs.core.dissoc_BANG_, $APP.cljs.core.coll_QMARK_, $APP.cljs.core.reversible_QMARK_, $APP.cljs.core.apply, $APP.cljs.core.subvec, $APP.cljs.core.isa_QMARK_, $APP.cljs.core.not_every_QMARK_, $APP.cljs.core.keyword_QMARK_, $APP.cljs.core.compare, $APP.cljs.core.underive, $APP.cljs.core.transduce, $APP.cljs.core.range, $APP.cljs.core.sorted_QMARK_, 
$APP.cljs.core.frequencies, $APP.cljs.core.cycle, $APP.cljs.core.max, $APP.cljs.core.simple_symbol_QMARK_, $APP.cljs.core.empty_QMARK_, $APP.cljs.core.into, $APP.cljs.core.integer_QMARK_, $APP.cljs.core._STAR_, $APP.cljs.core.unsigned_bit_shift_right, $APP.cljs.core.distinct, $APP.cljs.core.ensure_reduced, $APP.cljs.core.object_array, $APP.cljs.core.println_str, $APP.cljs.core.juxt, $APP.cljs.core.some, $APP.cljs.core.interpose, $APP.cljs.core.instance_QMARK_, $APP.cljs.core.descendants, $APP.cljs.core.get_in, 
$APP.cljs.core.meta, $APP.cljs.core.val, $APP.cljs.core.assoc_in, $APP.cljs.core.zero_QMARK_, $APP.cljs.core.realized_QMARK_, $APP.cljs.core.list_STAR_, $APP.cljs.core.subseq, $APP.cljs.core.delay_QMARK_, $APP.cljs.core.completing, $APP.cljs.core.unchecked_divide_int, $APP.cljs.core.shuffle, $APP.cljs.core.prn_str, $APP.cljs.core.compare_and_set_BANG_, $APP.cljs.core.longs, $APP.cljs.core.unchecked_int, $APP.cljs.core.nthrest, $APP.cljs.core.doubles, $APP.cljs.core.force, $APP.cljs.core.nnext, $APP.cljs.core.dec, 
$APP.cljs.core.qualified_keyword_QMARK_, $APP.cljs.core.comparator, $APP.cljs.core.take_last, $APP.cljs.core.string_QMARK_, $APP.cljs.core.bit_xor, $APP.cljs.core.map, $APP.cljs.core.float$, $APP.cljs.core.deref, $APP.cljs.core.re_pattern, $APP.cljs.core.repeat, $APP.cljs.core.reduce, $APP.cljs.core.qualified_symbol_QMARK_, $APP.cljs.core.vector, $APP.cljs.core.doall, $APP.cljs.core.assoc_BANG_, $APP.cljs.core.not_EQ_, $APP.cljs.core.constantly, $APP.cljs.core.seq_QMARK_, $APP.cljs.core.get, $APP.cljs.core.key, 
$APP.cljs.core.bit_and_not, $APP.cljs.core.mapcat, $APP.cljs.core.nat_int_QMARK_, $APP.cljs.core.str, $APP.cljs.core.empty, $APP.cljs.core.counted_QMARK_, $APP.cljs.core.set_QMARK_, $APP.cljs.core.alength, $APP.cljs.core.filterv, $APP.cljs.core.reductions, $APP.cljs.core.booleans, $APP.cljs.core._LT_, $APP.cljs.core.reduced, $APP.cljs.core.halt_when, $APP.cljs.core.namespace, $APP.cljs.core.keyword, $APP.cljs.core.record_QMARK_, $APP.cljs.core.tagged_literal_QMARK_, $APP.cljs.core._, $APP.cljs.core.bit_and, 
$APP.cljs.core.unreduced, $APP.cljs.core.assoc, $APP.cljs.core.partition_all, $APP.cljs.core.bit_not, $APP.cljs.core.some_QMARK_, $APP.cljs.core.pos_QMARK_, $APP.cljs.core.rand, $APP.cljs.core.re_matches, $APP.cljs.core.boolean_QMARK_, $APP.cljs.core.every_pred, $APP.cljs.core.fn_QMARK_, $APP.cljs.core.sequential_QMARK_, $APP.cljs.core.list, $APP.cljs.core.sorted_set_by, $APP.cljs.core.nthnext, $APP.cljs.core.eduction, $APP.cljs.core.rand_nth, $APP.cljs.core.partial, $APP.cljs.core.rsubseq, $APP.cljs.core.contains_QMARK_, 
$APP.cljs.core.shorts, $APP.cljs.core.hash_set, $APP.cljs.core.take, $APP.cljs.core.split_with, $APP.cljs.core.make_hierarchy, $APP.cljs.core.tagged_literal, $APP.cljs.core.parents, $APP.cljs.core.test, $APP.cljs.core.vec, $APP.cljs.core.nth, $APP.cljs.core.subs, $APP.cljs.core.to_array_2d, $APP.cljs.core.symbol, $APP.cljs.core.mod, $APP.cljs.core.number_QMARK_, $APP.cljs.core.reduced_QMARK_, $APP.cljs.core.conj, $APP.cljs.core.bytes, $APP.cljs.core.unchecked_float, $APP.cljs.core.bit_test, $APP.cljs.core.sorted_map_by, 
$APP.cljs.core.double_QMARK_, $APP.cljs.core.rseq, $APP.cljs.core.unchecked_long, $APP.cljs.core.double$, $APP.cljs.core.unchecked_dec, $APP.cljs.core.tree_seq, $APP.cljs.core.seqable_QMARK_, $APP.cljs.core.array_map, $APP.cljs.core.dedupe, $APP.cljs.core.short$, $APP.cljs.core.update, $APP.cljs.core.filter, $APP.cljs.core.unchecked_dec_int, $APP.cljs.core.rem, $APP.cljs.core.pop, $APP.cljs.core.merge_with, $APP.cljs.core.long$, $APP.cljs.core.flatten, $APP.cljs.core.distinct_QMARK_, $APP.cljs.core.map_indexed, 
$APP.cljs.core.even_QMARK_, $APP.cljs.core.type, $APP.cljs.core.neg_QMARK_, $APP.cljs.core.gensym, $APP.cljs.core.not_any_QMARK_, $APP.cljs.core.inst_ms_STAR_, $APP.cljs.core.take_nth, $APP.cljs.core.dorun, $APP.cljs.core.not_empty, zuko.sandbox.or_STAR_, $APP.cljs.core.int_array, $APP.cljs.core.pos_int_QMARK_, $APP.cljs.core.ints, $APP.cljs.core.identical_QMARK_, $APP.cljs.core.indexed_QMARK_, $APP.cljs.core.min_key, $APP.cljs.core.repeatedly, $APP.cljs.core.set, $APP.cljs.core.remove, $APP.cljs.core.re_find]);
zuko.sandbox.allowed_map_str = $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1309$split, $APP.cljs$cst$1310$index_of, $APP.cljs$cst$1311$trimr, $APP.cljs$cst$1312$upper_case, $APP.cljs$cst$1313$lower_case, $APP.cljs$cst$887$reverse, $APP.cljs$cst$1314$ends_with_QMARK_, $APP.cljs$cst$1315$split_lines, $APP.cljs$cst$1316$last_index_of, $APP.cljs$cst$1317$trim_newline, $APP.cljs$cst$1318$blank_QMARK_, $APP.cljs$cst$942$replace, $APP.cljs$cst$1319$join, $APP.cljs$cst$1320$trim, $APP.cljs$cst$1321$starts_with_QMARK_, 
$APP.cljs$cst$1322$triml, $APP.cljs$cst$1323$escape, $APP.cljs$cst$1324$includes_QMARK_, $APP.cljs$cst$1325$capitalize, $APP.cljs$cst$1326$replace_first], [$APP.clojure.string.split, $APP.clojure.string.index_of, $APP.clojure.string.trimr, $APP.clojure.string.upper_case, $APP.clojure.string.lower_case, $APP.clojure.string.reverse, $APP.clojure.string.ends_with_QMARK_, $APP.clojure.string.split_lines, $APP.clojure.string.last_index_of, $APP.clojure.string.trim_newline, $APP.clojure.string.blank_QMARK_, 
$APP.clojure.string.replace, $APP.clojure.string.join, $APP.clojure.string.trim, $APP.clojure.string.starts_with_QMARK_, $APP.clojure.string.triml, $APP.clojure.string.escape, $APP.clojure.string.includes_QMARK_, $APP.clojure.string.capitalize, $APP.clojure.string.replace_first]);
zuko.util = {};
zuko.util.known_namespaces = new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$538$cljs_DOT_core, zuko.sandbox.allowed_map, $APP.cljs$cst$415$clojure_DOT_core, zuko.sandbox.allowed_map, $APP.cljs$cst$1297$clojure_DOT_string, zuko.sandbox.allowed_map_str, "cljs.core", zuko.sandbox.allowed_map, "clojure.core", zuko.sandbox.allowed_map, "clojure.string", zuko.sandbox.allowed_map_str], null);
var output_schema43806_43954 = $APP.schema.core.maybe($APP.cljs.core.Var), input_schema43807_43955 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.schema.core.Keyword, $APP.schema.core.Symbol], 0)), $APP.cljs.core.with_meta(cljs$cst$2293$kw, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
$APP.cljs.core.list(cljs$cst$2294$s_SLASH_cond_pre, cljs$cst$2295$s_SLASH_Keyword, cljs$cst$2296$s_SLASH_Symbol)], null)))], null), ret__35121__auto___43956 = zuko.util.get_fn_reference = function($kw$$) {
  var $kns$$ = $APP.cljs.core.namespace($kw$$);
  $kns$$ = zuko.util.known_namespaces.cljs$core$IFn$_invoke$arity$1 ? zuko.util.known_namespaces.cljs$core$IFn$_invoke$arity$1($kns$$) : zuko.util.known_namespaces.call(null, $kns$$);
  $kw$$ = $APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.name($kw$$));
  return $APP.cljs.core.truth_($kns$$) ? $kns$$.cljs$core$IFn$_invoke$arity$1 ? $kns$$.cljs$core$IFn$_invoke$arity$1($kw$$) : $kns$$.call(null, $kw$$) : null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(zuko.util.get_fn_reference), $APP.schema.core.__GT_FnSchema(output_schema43806_43954, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43807_43955], null)));
zuko.util.c_eval = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$203_argseq__5756__auto__$$ = [], $len__5749__auto___43957$$ = arguments.length, $i__5750__auto___43958$$ = 0;;) {
    if ($i__5750__auto___43958$$ < $len__5749__auto___43957$$) {
      $args__5755__auto__$jscomp$203_argseq__5756__auto__$$.push(arguments[$i__5750__auto___43958$$]), $i__5750__auto___43958$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$203_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$203_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$203_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return zuko.util.c_eval.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$203_argseq__5756__auto__$$);
};
zuko.util.c_eval.cljs$core$IFn$_invoke$arity$variadic = function($expr$$, $p__43832$$) {
  $APP.cljs.core.__destructure_map($p__43832$$);
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("eval not supported in web environment", new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1404$error, "No eval support"], null));
};
zuko.util.c_eval.cljs$lang$maxFixedArity = 1;
zuko.util.c_eval.cljs$lang$applyTo = function($seq43829_seq43829__$1$$) {
  var $G__43830$$ = $APP.cljs.core.first($seq43829_seq43829__$1$$);
  $seq43829_seq43829__$1$$ = $APP.cljs.core.next($seq43829_seq43829__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__43830$$, $seq43829_seq43829__$1$$);
};
zuko.util.fn_for = function($op$jscomp$13_or__5025__auto__$$) {
  var $resolve_symbol$$ = function($ns_symbol$$, $s$$) {
    return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2(zuko.util.known_namespaces, $ns_symbol$$), $APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.name($s$$)));
  }, $op_symbol$$ = typeof $op$jscomp$13_or__5025__auto__$$ === "string" ? $APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$1($op$jscomp$13_or__5025__auto__$$) : $op$jscomp$13_or__5025__auto__$$;
  $op$jscomp$13_or__5025__auto__$$ = function() {
    var $or__5025__auto__$jscomp$342_temp__5823__auto__$$ = $APP.cljs.core.namespace($op_symbol$$);
    if ($APP.cljs.core.truth_($or__5025__auto__$jscomp$342_temp__5823__auto__$$)) {
      var $ons_symbol_temp__5823__auto____$1$$ = $APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$1($or__5025__auto__$jscomp$342_temp__5823__auto__$$);
      $ons_symbol_temp__5823__auto____$1$$ = zuko.util.known_namespaces.cljs$core$IFn$_invoke$arity$1 ? zuko.util.known_namespaces.cljs$core$IFn$_invoke$arity$1($ons_symbol_temp__5823__auto____$1$$) : zuko.util.known_namespaces.call(null, $ons_symbol_temp__5823__auto____$1$$);
      if ($APP.cljs.core.truth_($ons_symbol_temp__5823__auto____$1$$)) {
        return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($ons_symbol_temp__5823__auto____$1$$, $APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.name($op_symbol$$)));
      }
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unable to resolve symbol '", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($op_symbol$$), " in ", $or__5025__auto__$jscomp$342_temp__5823__auto__$$].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2297$op, $op_symbol$$, $APP.cljs$cst$586$namespace, $or__5025__auto__$jscomp$342_temp__5823__auto__$$], null));
    }
    $or__5025__auto__$jscomp$342_temp__5823__auto__$$ = $resolve_symbol$$($APP.cljs$cst$415$clojure_DOT_core, $op_symbol$$);
    return $APP.cljs.core.truth_($or__5025__auto__$jscomp$342_temp__5823__auto__$$) ? $or__5025__auto__$jscomp$342_temp__5823__auto__$$ : $resolve_symbol$$($APP.cljs$cst$538$cljs_DOT_core, $op_symbol$$);
  }();
  if ($APP.cljs.core.truth_($op$jscomp$13_or__5025__auto__$$)) {
    return $op$jscomp$13_or__5025__auto__$$;
  }
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unable to resolve symbol '", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($op_symbol$$), " in ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var $or__5025__auto____$1$$ = $APP.cljs.core.namespace($op_symbol$$);
    return $APP.cljs.core.truth_($or__5025__auto____$1$$) ? $or__5025__auto____$1$$ : $APP.cljs$cst$538$cljs_DOT_core;
  }())].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2297$op, $op_symbol$$, $APP.cljs$cst$586$namespace, function() {
    var $or__5025__auto____$1$$ = $APP.cljs.core.namespace($op_symbol$$);
    return $APP.cljs.core.truth_($or__5025__auto____$1$$) ? $or__5025__auto____$1$$ : "cljs.core";
  }()], null));
};
var output_schema43880_43977 = $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.schema.core.Any]), input_schema43881_43978 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.make_fn_schema($APP.schema.core.Any, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.schema.core.one($APP.schema.core.Any, cljs$cst$2210$arg0)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$2298$valfn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list($APP.cljs$cst$1511$_EQ__GT_, cljs$cst$2204$s_SLASH_Any, cljs$cst$2204$s_SLASH_Any)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$14$s, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2204$s_SLASH_Any], null)], null)))], null), input_schema43884_43979 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.make_fn_schema($APP.schema.core.Any, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, cljs$cst$2210$arg0)], null)], null)), $APP.cljs.core.with_meta($APP.cljs$cst$1517$keyfn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list($APP.cljs$cst$1511$_EQ__GT_, cljs$cst$2204$s_SLASH_Any, cljs$cst$2204$s_SLASH_Any)], null))), $APP.schema.core.one($APP.schema.core.make_fn_schema($APP.schema.core.Any, new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, cljs$cst$2210$arg0)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$2298$valfn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list($APP.cljs$cst$1511$_EQ__GT_, cljs$cst$2204$s_SLASH_Any, cljs$cst$2204$s_SLASH_Any)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$14$s, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2204$s_SLASH_Any], null)], null)))], null), ret__35121__auto___43984 = function() {
  zuko.util.mapmap = function($var_args$$) {
    switch(arguments.length) {
      case 2:
        return zuko.util.mapmap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      case 3:
        return zuko.util.mapmap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  zuko.util.mapmap.cljs$core$IFn$_invoke$arity$2 = function($valfn$$, $s$$) {
    return zuko.util.mapmap.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.identity, $valfn$$, $s$$);
  };
  zuko.util.mapmap.cljs$core$IFn$_invoke$arity$3 = function($keyfn$$, $valfn$$, $s$$) {
    return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.juxt.cljs$core$IFn$_invoke$arity$2($keyfn$$, $valfn$$), $s$$));
  };
  zuko.util.mapmap.cljs$lang$maxFixedArity = 3;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(zuko.util.mapmap), $APP.schema.core.make_fn_schema(output_schema43880_43977, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43881_43978, input_schema43884_43979], null)));
var output_schema43912_43986 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), "true values"), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), "false values")], null), input_schema43913_43987 = new $APP.cljs.core.PersistentVector(null, 
2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1253$p, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$14$s, new $APP.cljs.core.PersistentArrayMap(null, 1, 
[$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2204$s_SLASH_Any], null)], null)))], null), ret__35121__auto___43993 = zuko.util.divide_SINGLEQUOTE_ = function($decision_map_p$$, $s$$) {
  $decision_map_p$$ = $APP.cljs.core.group_by($decision_map_p$$, $s$$);
  return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($decision_map_p$$, !0), $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($decision_map_p$$, !1)], null);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(zuko.util.divide_SINGLEQUOTE_), $APP.schema.core.__GT_FnSchema(output_schema43912_43986, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema43913_43987], null)));
zuko.util.fixpoint = function($f$jscomp$531_s$$, $a$$) {
  $f$jscomp$531_s$$ = $APP.cljs.core.iterate($f$jscomp$531_s$$, $a$$);
  return $APP.cljs.core.some($APP.cljs.core.identity, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$3(function($fexpr__43944_p1__43927_SHARP_$$, $p2__43928_SHARP_$$) {
    $fexpr__43944_p1__43927_SHARP_$$ = $APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$fexpr__43944_p1__43927_SHARP_$$]);
    return $fexpr__43944_p1__43927_SHARP_$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__43944_p1__43927_SHARP_$$.cljs$core$IFn$_invoke$arity$1($p2__43928_SHARP_$$) : $fexpr__43944_p1__43927_SHARP_$$.call(null, $p2__43928_SHARP_$$);
  }, $f$jscomp$531_s$$, $APP.cljs.core.rest($f$jscomp$531_s$$)));
};
asami.planner = {};
asami.planner.HasVars = function() {
};
var asami$planner$HasVars$get_vars$dyn_44598 = function($this$$$) {
  var $m__5372__auto__$jscomp$218_m__5374__auto__$$ = asami.planner.get_vars[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$218_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$218_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$218_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$218_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$218_m__5374__auto__$$ = asami.planner.get_vars._;
  if ($m__5372__auto__$jscomp$218_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$218_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$218_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$218_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("HasVars.get-vars", $this$$$);
};
asami.planner.get_vars = function($this$$$) {
  return $this$$$ != null && $this$$$.asami$planner$HasVars$get_vars$arity$1 != null ? $this$$$.asami$planner$HasVars$get_vars$arity$1($this$$$) : asami$planner$HasVars$get_vars$dyn_44598($this$$$);
};
var output_schema44099_44599 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), input_schema44100_44600 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1242$e, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$14$s, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2204$s_SLASH_Any], null)], null)))], null), ret__35121__auto___44601 = asami.planner.without = function($e$$, $s$$) {
  return $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._EQ_, $e$$), $s$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.without), $APP.schema.core.__GT_FnSchema(output_schema44099_44599, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44100_44600], null)));
var output_schema__35146__auto___44602 = $APP.schema.core.Any;
asami.planner.Bindings = $APP.schema.core.validate(output_schema__35146__auto___44602, $APP.schema.core.constrained.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null)], null), function($p1__44106_SHARP_$$) {
  return cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($p1__44106_SHARP_$$));
}));
asami.planner.bindings_QMARK_ = function($b$$) {
  return $APP.cljs.core.vector_QMARK_(cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($b$$))) && $APP.cljs.core.sequential_QMARK_($b$$);
};
asami.planner.nested_seq_QMARK_ = function($s$$) {
  return $APP.cljs.core.sequential_QMARK_($s$$) && ($APP.cljs.core.empty_QMARK_($s$$) || $APP.cljs.core.vector_QMARK_($APP.cljs.core.first($s$$)));
};
asami.planner.PatternOrBindings = $APP.schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([asami.planner.nested_seq_QMARK_, asami.planner.Bindings, $APP.cljs$cst$225$else, zuko.schema.Pattern], 0));
asami.planner.CountablePattern = $APP.schema.core.if$(asami.planner.nested_seq_QMARK_, asami.planner.Bindings, $APP.schema.core.if$($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.seq_QMARK_, $APP.cljs.core.first), zuko.schema.EvalPattern, zuko.schema.EPVPattern));
asami.planner.addset = $APP.cljs.core.fnil.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.conj, $APP.cljs.core.PersistentHashSet.EMPTY);
var output_schema44126_44609 = $APP.schema.core.maybe(asami.planner.CountablePattern), input_schema44127_44610 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([asami.planner.CountablePattern, $APP.schema.core.Num]), $APP.cljs.core.with_meta(cljs$cst$2300$pattern_counts, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$2301$CountablePattern, cljs$cst$2302$s_SLASH_Num], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2301$CountablePattern], null)], null)))], 
null), ret__35121__auto___44616 = asami.planner.find_start = function($local_counts_pattern$$, $patterns$$) {
  if ($APP.cljs.core.seq($patterns$$)) {
    $local_counts_pattern$$ = $APP.cljs.core.select_keys($local_counts_pattern$$, $patterns$$);
    var $low_count$$ = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.min, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.second, $local_counts_pattern$$));
    $local_counts_pattern$$ = $APP.cljs.core.ffirst($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function($p1__44125_SHARP_$$) {
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($low_count$$, $APP.cljs.core.second($p1__44125_SHARP_$$));
    }, $local_counts_pattern$$));
    return $APP.cljs.core.first($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._EQ_, $local_counts_pattern$$), $patterns$$));
  }
  return null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.find_start), $APP.schema.core.__GT_FnSchema(output_schema44126_44609, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44127_44610], null)));
var output_schema44141_44617 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.EvalPattern], null), input_schema44142_44618 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.EvalPattern], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2304$EvalPattern], null)], null)))], null), ret__35121__auto___44619 = asami.planner.order = function($patterns$$) {
  for (var $G__44624_chain$$ = $APP.cljs.core.PersistentVector.EMPTY, $G__44625_to_bind$$ = $APP.cljs.core.set($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.second, $patterns$$)), $G__44626_remaining$$ = $patterns$$;;) {
    if ($APP.cljs.core.not($APP.cljs.core.seq($G__44626_remaining$$))) {
      return $G__44624_chain$$;
    }
    var $b$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function($chain$$, $to_bind$$, $remaining$$, $output_schema44141_44617$$, $input_schema44142_44618$$) {
      return function($p1__44134_SHARP_$$) {
        return $APP.cljs.core.not_any_QMARK_($to_bind$$, asami.planner.get_vars($p1__44134_SHARP_$$));
      };
    }($G__44624_chain$$, $G__44625_to_bind$$, $G__44626_remaining$$, output_schema44141_44617, input_schema44142_44618), $G__44626_remaining$$), $p$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($b$$, 0, null);
    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p$$, 0, null);
    $b$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p$$, 1, null);
    if ($p$$ == null) {
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unable to find valid ordering for bindings: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentVector.EMPTY, $G__44626_remaining$$))].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$394$bindings, $patterns$$, cljs$cst$2305$to_bind, $G__44625_to_bind$$], null));
    }
    $G__44624_chain$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($G__44624_chain$$, $p$$);
    $G__44625_to_bind$$ = $APP.cljs.core.disj.cljs$core$IFn$_invoke$arity$2($G__44625_to_bind$$, $b$$);
    $G__44626_remaining$$ = asami.planner.without($p$$, $G__44626_remaining$$);
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.order), $APP.schema.core.__GT_FnSchema(output_schema44141_44617, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44142_44618], null)));
var output_schema44169_44627 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), input_schema44170_44628 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.maybe($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([zuko.schema.Var])), $APP.cljs.core.with_meta(cljs$cst$2306$prebound, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
$APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2308$Var, "null"], null), null))], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2301$CountablePattern], null)], null))), $APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([asami.planner.CountablePattern, $APP.schema.core.Num]), $APP.cljs.core.with_meta(cljs$cst$2300$pattern_counts, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2301$CountablePattern, cljs$cst$2302$s_SLASH_Num], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.EvalPattern], null), $APP.cljs.core.with_meta(cljs$cst$2309$eval_patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2304$EvalPattern], null)], null)))], null), ret__35121__auto___44641 = asami.planner.path = function($prebound$$, $patterns$$, $pattern_counts$$, $eval_patterns$$) {
  var $smallest_count$$ = $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.min, $APP.cljs.core.vals($pattern_counts$$)), $path_through$$ = function() {
    var $output_schema44175$$ = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), $input_schema44176$$ = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$APP.cljs.core.Symbol]), $APP.cljs.core.with_meta($APP.cljs$cst$2310$bound, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
    new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1451$Symbol, "null"], null), null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), $APP.cljs.core.with_meta(cljs$cst$2311$rpatterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
    [cljs$cst$2301$CountablePattern], null)], null))), $APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([zuko.schema.Var, asami.planner.CountablePattern]), $APP.cljs.core.with_meta(cljs$cst$2312$binding_outs, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2308$Var, cljs$cst$2301$CountablePattern], null)], null)))], null);
    return $APP.schema.core.schematize_fn(function $asami$planner$path_$_path_through$$($bound$$, $rpatterns_temp__5823__auto__$$, $binding_outs$$) {
      if ($APP.cljs.core.seq($rpatterns_temp__5823__auto__$$)) {
        var $all_bound_QMARK_$$ = function() {
          var $asami$planner$path_$_path_through_$_all_bound_QMARK_$$ = null, $asami$planner$path_$_path_through_$_all_bound_QMARK___1$$ = function($p$$) {
            return $asami$planner$path_$_path_through_$_all_bound_QMARK_$$.cljs$core$IFn$_invoke$arity$2(null, $p$$);
          }, $asami$planner$path_$_path_through_$_all_bound_QMARK___2$$ = function($extra_bindings$$, $p$$) {
            return $APP.cljs.core.every_QMARK_($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($bound$$, $extra_bindings$$), asami.planner.get_vars($p$$));
          };
          $asami$planner$path_$_path_through_$_all_bound_QMARK_$$ = function($extra_bindings$$, $p$$) {
            switch(arguments.length) {
              case 1:
                return $asami$planner$path_$_path_through_$_all_bound_QMARK___1$$.call(this, $extra_bindings$$);
              case 2:
                return $asami$planner$path_$_path_through_$_all_bound_QMARK___2$$.call(this, $extra_bindings$$, $p$$);
            }
            throw Error("Invalid arity: " + arguments.length);
          };
          $asami$planner$path_$_path_through_$_all_bound_QMARK_$$.cljs$core$IFn$_invoke$arity$1 = $asami$planner$path_$_path_through_$_all_bound_QMARK___1$$;
          $asami$planner$path_$_path_through_$_all_bound_QMARK_$$.cljs$core$IFn$_invoke$arity$2 = $asami$planner$path_$_path_through_$_all_bound_QMARK___2$$;
          return $asami$planner$path_$_path_through_$_all_bound_QMARK_$$;
        }(), $min_pattern_next_pattern_p$$ = function($G__44226__$1_first__44237_ps$$) {
          var $G__44644_G__44650_mcount__$1_mcount__$2_seq__44229$$ = $APP.cljs.core.seq($G__44226__$1_first__44237_ps$$), $G__44643_G__44649_first__44230_m__$1$jscomp$13_m__$2$$ = $APP.cljs.core.first($G__44644_G__44650_mcount__$1_mcount__$2_seq__44229$$);
          $APP.cljs.core.next($G__44644_G__44650_mcount__$1_mcount__$2_seq__44229$$);
          for ($G__44644_G__44650_mcount__$1_mcount__$2_seq__44229$$ = 0;;) {
            var $p__$1$$ = $APP.cljs.core.seq($G__44226__$1_first__44237_ps$$);
            $G__44226__$1_first__44237_ps$$ = $APP.cljs.core.first($p__$1$$);
            var $pcount_seq__44236__$1$$ = $APP.cljs.core.next($p__$1$$);
            $p__$1$$ = $G__44226__$1_first__44237_ps$$;
            $G__44226__$1_first__44237_ps$$ = $pcount_seq__44236__$1$$;
            if ($p__$1$$ == null) {
              return $G__44643_G__44649_first__44230_m__$1$jscomp$13_m__$2$$;
            }
            $pcount_seq__44236__$1$$ = $pattern_counts$$.cljs$core$IFn$_invoke$arity$1 ? $pattern_counts$$.cljs$core$IFn$_invoke$arity$1($p__$1$$) : $pattern_counts$$.call(null, $p__$1$$);
            if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($smallest_count$$, $pcount_seq__44236__$1$$)) {
              return $p__$1$$;
            }
            if ($pcount_seq__44236__$1$$ < $G__44644_G__44650_mcount__$1_mcount__$2_seq__44229$$ || $G__44644_G__44650_mcount__$1_mcount__$2_seq__44229$$ === 0) {
              $G__44643_G__44649_first__44230_m__$1$jscomp$13_m__$2$$ = $p__$1$$, $G__44644_G__44650_mcount__$1_mcount__$2_seq__44229$$ = $pcount_seq__44236__$1$$;
            }
          }
        }, $b$jscomp$258_nexts$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function($b$jscomp$259_p$$) {
          $b$jscomp$259_p$$ = asami.planner.get_vars($b$jscomp$259_p$$);
          return ($APP.cljs.core.empty_QMARK_($bound$$) || $APP.cljs.core.seq($APP.clojure.set.intersection.cljs$core$IFn$_invoke$arity$2($b$jscomp$259_p$$, $bound$$))) && $APP.cljs.core.not($APP.cljs.core.some($binding_outs$$, $b$jscomp$259_p$$));
        }, $rpatterns_temp__5823__auto__$$);
        if ($APP.cljs.core.seq($b$jscomp$258_nexts$$)) {
          var $fully_bound_patterns_ordered_pre_reqs$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($all_bound_QMARK_$$, $b$jscomp$258_nexts$$);
          $min_pattern_next_pattern_p$$ = $APP.cljs.core.seq($fully_bound_patterns_ordered_pre_reqs$$) ? $min_pattern_next_pattern_p$$($fully_bound_patterns_ordered_pre_reqs$$) : $min_pattern_next_pattern_p$$($b$jscomp$258_nexts$$);
          return $APP.cljs.core.cons($min_pattern_next_pattern_p$$, $asami$planner$path_$_path_through$$($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($bound$$, asami.planner.get_vars($min_pattern_next_pattern_p$$)), asami.planner.without($min_pattern_next_pattern_p$$, $rpatterns_temp__5823__auto__$$), $binding_outs$$));
        }
        $b$jscomp$258_nexts$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$2(function($p$$) {
          var $pre_reqs$$ = $APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$2($binding_outs$$, asami.planner.get_vars($p$$));
          return $APP.cljs.core.seq($pre_reqs$$) && $APP.cljs.core.every_QMARK_($bound$$, $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(asami.planner.get_vars, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$pre_reqs$$], 0))) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p$$, $pre_reqs$$], null) : null;
        }, $rpatterns_temp__5823__auto__$$));
        if ($APP.cljs.core.seq($b$jscomp$258_nexts$$)) {
          $fully_bound_patterns_ordered_pre_reqs$$ = $APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$2(function($p__44246_pre_reqs$$) {
            var $ptn$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44246_pre_reqs$$, 0, null);
            $p__44246_pre_reqs$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44246_pre_reqs$$, 1, null);
            return $APP.cljs.core.truth_($all_bound_QMARK_$$($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.second, $p__44246_pre_reqs$$), $ptn$$)) ? $ptn$$ : null;
          }, $b$jscomp$258_nexts$$);
          $min_pattern_next_pattern_p$$ = $APP.cljs.core.seq($fully_bound_patterns_ordered_pre_reqs$$) ? $min_pattern_next_pattern_p$$($fully_bound_patterns_ordered_pre_reqs$$) : $min_pattern_next_pattern_p$$($APP.cljs.core.keys($b$jscomp$258_nexts$$));
          $fully_bound_patterns_ordered_pre_reqs$$ = asami.planner.order($b$jscomp$258_nexts$$.cljs$core$IFn$_invoke$arity$1 ? $b$jscomp$258_nexts$$.cljs$core$IFn$_invoke$arity$1($min_pattern_next_pattern_p$$) : $b$jscomp$258_nexts$$.call(null, $min_pattern_next_pattern_p$$));
          $b$jscomp$258_nexts$$ = asami.planner.get_vars($min_pattern_next_pattern_p$$);
          var $remaining_binding_outs$$ = $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.dissoc, $binding_outs$$, $b$jscomp$258_nexts$$);
          return ($rpatterns_temp__5823__auto__$$ = $APP.cljs.core.seq(asami.planner.without($min_pattern_next_pattern_p$$, $rpatterns_temp__5823__auto__$$))) ? $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic($fully_bound_patterns_ordered_pre_reqs$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$min_pattern_next_pattern_p$$], null), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$asami$planner$path_$_path_through$$($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($bound$$, 
          $b$jscomp$258_nexts$$), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.second, $fully_bound_patterns_ordered_pre_reqs$$)), $rpatterns_temp__5823__auto__$$, $remaining_binding_outs$$)], 0)) : $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic($fully_bound_patterns_ordered_pre_reqs$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$min_pattern_next_pattern_p$$], null), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([asami.planner.order($APP.cljs.core.vals($remaining_binding_outs$$))], 
          0));
        }
        throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unable to find path through: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($rpatterns_temp__5823__auto__$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 3, [cljs$cst$2313$patterns, $rpatterns_temp__5823__auto__$$, cljs$cst$2314$bound, $bound$$, cljs$cst$2315$binding_outs, $binding_outs$$], null));
      }
      return asami.planner.order($APP.cljs.core.vals($binding_outs$$));
    }, $APP.schema.core.__GT_FnSchema($output_schema44175$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$input_schema44176$$], null)));
  }(), $binding_outs$$ = zuko.util.mapmap.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.second, $APP.cljs.core.identity, $eval_patterns$$), $start$$ = asami.planner.find_start($pattern_counts$$, $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.some, $binding_outs$$), asami.planner.get_vars), $APP.cljs.core.seq($prebound$$) ? $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.some, 
  $prebound$$), asami.planner.get_vars), $patterns$$) : $patterns$$));
  return $APP.cljs.core.truth_($start$$) ? $APP.cljs.core.cons($start$$, function() {
    var $G__44253$$ = asami.planner.get_vars($start$$), $G__44254$$ = asami.planner.without($start$$, $patterns$$);
    return $path_through$$.cljs$core$IFn$_invoke$arity$3 ? $path_through$$.cljs$core$IFn$_invoke$arity$3($G__44253$$, $G__44254$$, $binding_outs$$) : $path_through$$.call(null, $G__44253$$, $G__44254$$, $binding_outs$$);
  }()) : function() {
    var $G__44256$$ = $APP.cljs.core.PersistentHashSet.EMPTY;
    return $path_through$$.cljs$core$IFn$_invoke$arity$3 ? $path_through$$.cljs$core$IFn$_invoke$arity$3($G__44256$$, $patterns$$, $binding_outs$$) : $path_through$$.call(null, $G__44256$$, $patterns$$, $binding_outs$$);
  }();
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.path), $APP.schema.core.__GT_FnSchema(output_schema44169_44627, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44170_44628], null)));
var output_schema44270_44694 = $APP.schema.core.Any, input_schema44271_44695 = new $APP.cljs.core.PersistentVector(null, 7, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1270$options, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2316$planned_patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2317$general_patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], 
null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2318$filter_patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2319$opt_patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2320$not_patterns, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___44700 = asami.planner.merge_operations = function($graph$$, $options$$, $planned_optionals_planned_patterns$$, $general_patterns$$, $filter_patterns$$, $opt_patterns$$, $not_patterns$$) {
  for (var $out_vars$$ = function($p$$) {
    return zuko.schema.eval_pattern_QMARK_($p$$) ? new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.second($p$$)], null) : asami.planner.get_vars($p$$);
  }, $non_optional_vars$$ = $APP.cljs.core.set($APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic($out_vars$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($planned_optionals_planned_patterns$$, $general_patterns$$)], 0))), $all_non_negation_vars$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($non_optional_vars$$, $opt_patterns$$), $filter_vars$$ = zuko.util.mapmap.cljs$core$IFn$_invoke$arity$2(asami.planner.get_vars, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($filter_patterns$$, 
  $not_patterns$$)), $opt_vars$$ = zuko.util.mapmap.cljs$core$IFn$_invoke$arity$2(function($p1__44268_SHARP_$$) {
    return $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($non_optional_vars$$, asami.planner.get_vars($p1__44268_SHARP_$$));
  }, $opt_patterns$$), $all_bound_for_QMARK_$$ = function($bound$$, $fltr$$) {
    return $APP.cljs.core.every_QMARK_(function($p1__44269_SHARP_$$) {
      var $or__5025__auto__$$ = $bound$$.cljs$core$IFn$_invoke$arity$1 ? $bound$$.cljs$core$IFn$_invoke$arity$1($p1__44269_SHARP_$$) : $bound$$.call(null, $p1__44269_SHARP_$$);
      return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : $APP.cljs.core.not($all_non_negation_vars$$.cljs$core$IFn$_invoke$arity$1 ? $all_non_negation_vars$$.cljs$core$IFn$_invoke$arity$1($p1__44269_SHARP_$$) : $all_non_negation_vars$$.call(null, $p1__44269_SHARP_$$));
    }, $filter_vars$$.cljs$core$IFn$_invoke$arity$1 ? $filter_vars$$.cljs$core$IFn$_invoke$arity$1($fltr$$) : $filter_vars$$.call(null, $fltr$$));
  }, $plan_path_with_bound_planned_negations$$ = function($G__44291$jscomp$inline_4927_JSCompiler_inline_result$jscomp$826_bound$$, $first__44288_p__44285$$) {
    var $JSCompiler_temp_const$$ = $APP.cljs.core.seq($first__44288_p__44285$$);
    $first__44288_p__44285$$ = $APP.cljs.core.first($JSCompiler_temp_const$$);
    var $patterns$$ = $APP.cljs.core.next($JSCompiler_temp_const$$);
    $JSCompiler_temp_const$$ = $APP.cljs.core.apply;
    var $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$1$$ = $APP.cljs.core.list;
    $G__44291$jscomp$inline_4927_JSCompiler_inline_result$jscomp$826_bound$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($options$$, cljs$cst$2314$bound, $G__44291$jscomp$inline_4927_JSCompiler_inline_result$jscomp$826_bound$$);
    $G__44291$jscomp$inline_4927_JSCompiler_inline_result$jscomp$826_bound$$ = asami.planner.plan_path.cljs$core$IFn$_invoke$arity$3 ? asami.planner.plan_path.cljs$core$IFn$_invoke$arity$3($graph$$, $patterns$$, $G__44291$jscomp$inline_4927_JSCompiler_inline_result$jscomp$826_bound$$) : asami.planner.plan_path.call(null, $graph$$, $patterns$$, $G__44291$jscomp$inline_4927_JSCompiler_inline_result$jscomp$826_bound$$);
    return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_temp_const$jscomp$1$$, $first__44288_p__44285$$, $G__44291$jscomp$inline_4927_JSCompiler_inline_result$jscomp$826_bound$$);
  }, $plan$$ = $APP.cljs.core.PersistentVector.EMPTY, $bound$$ = $APP.cljs.core.PersistentHashSet.EMPTY, $seq__44297$$ = $APP.cljs.core.seq($planned_optionals_planned_patterns$$), $first__44298$$ = $APP.cljs.core.first($seq__44297$$), $seq__44297__$1$$ = $APP.cljs.core.next($seq__44297$$), $G__44738_nxt_optionals_plan__$1$$ = $plan$$, $G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$ = $bound$$, $G__44295__$1_nxt_filters_remaining_negations$$ = $planned_optionals_planned_patterns$$, 
  $filters__$1_nxt_negations_remaining_filters$$ = $filter_patterns$$, $negative_nexts_optionals__$1$$ = $opt_patterns$$, $negations__$1$$ = $not_patterns$$;;) {
    var $G__44728_G__44736_plan__$2$$ = $G__44738_nxt_optionals_plan__$1$$, $G__44725_G__44733_G__44740_bound__$2$$ = $G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$, $vec__44317$$ = $G__44295__$1_nxt_filters_remaining_negations$$, $seq__44318$$ = $APP.cljs.core.seq($vec__44317$$), $first__44319$$ = $APP.cljs.core.first($seq__44318$$), $seq__44318__$1$$ = $APP.cljs.core.next($seq__44318$$), $np__$1$$ = $first__44319$$, $rp__$1$$ = $seq__44318__$1$$, $G__44726_G__44734_patterns__$1$$ = 
    $vec__44317$$, $G__44724_G__44735_G__44741_filters__$2$$ = $filters__$1_nxt_negations_remaining_filters$$, $G__44727_G__44732_G__44742_optionals__$2$$ = $negative_nexts_optionals__$1$$, $G__44723_G__44737_G__44743_negations__$2$$ = $negations__$1$$;
    if ($APP.cljs.core.not($APP.cljs.core.seq($G__44726_G__44734_patterns__$1$$))) {
      return $planned_optionals_planned_patterns$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($plan_path_with_bound_planned_negations$$, $G__44725_G__44733_G__44740_bound__$2$$), $G__44727_G__44732_G__44742_optionals__$2$$), $plan_path_with_bound_planned_negations$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($plan_path_with_bound_planned_negations$$, $G__44725_G__44733_G__44740_bound__$2$$), 
      $G__44723_G__44737_G__44743_negations__$2$$), $APP.cljs.core.doall.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic($G__44728_G__44736_plan__$2$$, $general_patterns$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$planned_optionals_planned_patterns$$, $plan_path_with_bound_planned_negations$$, $G__44724_G__44735_G__44741_filters__$2$$], 0)));
    }
    var $all_bound_QMARK_$$ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($all_bound_for_QMARK_$$, $G__44725_G__44733_G__44740_bound__$2$$);
    $G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$ = function($plan__$1$$, $bound__$1$$, $G__44295__$1$$, $filters__$1$$, $optionals__$1$$, $negations__$1$$, $all_bound_QMARK_$$, $plan__$2$$, $bound__$2$$, $vec__44317$$, $seq__44318$$, $first__44319$$, $seq__44318__$1$$, $np__$1$$, $rp__$1$$, $patterns__$1$$, $filters__$2$$, $optionals__$2$$, $negations__$2$$, $plan$$, $bound$$, $G__44295$$, $vec__44296$$, $seq__44297$$, $first__44298$$, $seq__44297__$1$$, $np$$, $rp$$, $patterns$$, 
    $filters$$, $optionals$$, $negations$$, $out_vars$$, $non_optional_vars$$, $all_non_negation_vars$$, $filter_vars$$, $opt_vars$$, $all_bound_for_QMARK_$$, $plan_path_with_bound$$, $output_schema44270_44694$$, $input_schema44271_44695$$) {
      return function($p$$) {
        return $APP.cljs.core.empty_QMARK_($APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($bound__$2$$, $opt_vars$$.cljs$core$IFn$_invoke$arity$1 ? $opt_vars$$.cljs$core$IFn$_invoke$arity$1($p$$) : $opt_vars$$.call(null, $p$$)));
      };
    }($G__44738_nxt_optionals_plan__$1$$, $G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$, $G__44295__$1_nxt_filters_remaining_negations$$, $filters__$1_nxt_negations_remaining_filters$$, $negative_nexts_optionals__$1$$, $negations__$1$$, $all_bound_QMARK_$$, $G__44728_G__44736_plan__$2$$, $G__44725_G__44733_G__44740_bound__$2$$, $vec__44317$$, $seq__44318$$, $first__44319$$, $seq__44318__$1$$, $np__$1$$, $rp__$1$$, $G__44726_G__44734_patterns__$1$$, $G__44724_G__44735_G__44741_filters__$2$$, 
    $G__44727_G__44732_G__44742_optionals__$2$$, $G__44723_G__44737_G__44743_negations__$2$$, $plan$$, $bound$$, $planned_optionals_planned_patterns$$, $planned_optionals_planned_patterns$$, $seq__44297$$, $first__44298$$, $seq__44297__$1$$, $first__44298$$, $seq__44297__$1$$, $planned_optionals_planned_patterns$$, $filter_patterns$$, $opt_patterns$$, $not_patterns$$, $out_vars$$, $non_optional_vars$$, $all_non_negation_vars$$, $filter_vars$$, $opt_vars$$, $all_bound_for_QMARK_$$, $plan_path_with_bound_planned_negations$$, 
    output_schema44270_44694, input_schema44271_44695);
    $G__44295__$1_nxt_filters_remaining_negations$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($all_bound_QMARK_$$, $G__44724_G__44735_G__44741_filters__$2$$);
    $G__44738_nxt_optionals_plan__$1$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($plan_path_with_bound_planned_negations$$, $G__44725_G__44733_G__44740_bound__$2$$), $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$, $G__44727_G__44732_G__44742_optionals__$2$$));
    $filters__$1_nxt_negations_remaining_filters$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($plan_path_with_bound_planned_negations$$, $G__44725_G__44733_G__44740_bound__$2$$), $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($all_bound_QMARK_$$, $G__44723_G__44737_G__44743_negations__$2$$));
    $negative_nexts_optionals__$1$$ = $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($filters__$1_nxt_negations_remaining_filters$$, $G__44295__$1_nxt_filters_remaining_negations$$);
    $G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$, $G__44727_G__44732_G__44742_optionals__$2$$);
    $filters__$1_nxt_negations_remaining_filters$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($all_bound_QMARK_$$, $G__44724_G__44735_G__44741_filters__$2$$);
    $G__44295__$1_nxt_filters_remaining_negations$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($all_bound_QMARK_$$, $G__44723_G__44737_G__44743_negations__$2$$);
    $APP.cljs.core.seq($negative_nexts_optionals__$1$$) ? ($G__44723_G__44737_G__44743_negations__$2$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($G__44728_G__44736_plan__$2$$, $negative_nexts_optionals__$1$$), $G__44724_G__44735_G__44741_filters__$2$$ = $G__44725_G__44733_G__44740_bound__$2$$, $G__44725_G__44733_G__44740_bound__$2$$ = $G__44726_G__44734_patterns__$1$$, $G__44726_G__44734_patterns__$1$$ = $filters__$1_nxt_negations_remaining_filters$$, $G__44728_G__44736_plan__$2$$ = $G__44295__$1_nxt_filters_remaining_negations$$, 
    $G__44738_nxt_optionals_plan__$1$$ = $G__44723_G__44737_G__44743_negations__$2$$, $G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$ = $G__44724_G__44735_G__44741_filters__$2$$, $G__44295__$1_nxt_filters_remaining_negations$$ = $G__44725_G__44733_G__44740_bound__$2$$, $filters__$1_nxt_negations_remaining_filters$$ = $G__44726_G__44734_patterns__$1$$, $negative_nexts_optionals__$1$$ = $G__44727_G__44732_G__44742_optionals__$2$$, $negations__$1$$ = $G__44728_G__44736_plan__$2$$) : 
    $APP.cljs.core.seq($G__44738_nxt_optionals_plan__$1$$) ? ($G__44727_G__44732_G__44742_optionals__$2$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($G__44728_G__44736_plan__$2$$, $G__44738_nxt_optionals_plan__$1$$), $G__44725_G__44733_G__44740_bound__$2$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($G__44725_G__44733_G__44740_bound__$2$$, $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic($out_vars$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$G__44738_nxt_optionals_plan__$1$$], 
    0))), $G__44728_G__44736_plan__$2$$ = $G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$, $G__44738_nxt_optionals_plan__$1$$ = $G__44727_G__44732_G__44742_optionals__$2$$, $G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$ = $G__44725_G__44733_G__44740_bound__$2$$, $G__44295__$1_nxt_filters_remaining_negations$$ = $G__44726_G__44734_patterns__$1$$, $filters__$1_nxt_negations_remaining_filters$$ = $G__44724_G__44735_G__44741_filters__$2$$, $negative_nexts_optionals__$1$$ = 
    $G__44728_G__44736_plan__$2$$, $negations__$1$$ = $G__44723_G__44737_G__44743_negations__$2$$) : ($G__44738_nxt_optionals_plan__$1$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($G__44728_G__44736_plan__$2$$, $np__$1$$), $G__44739_all_non_opt_bound_QMARK__bound__$1_remaining_optionals$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($G__44725_G__44733_G__44740_bound__$2$$, $out_vars$$($np__$1$$)), $G__44295__$1_nxt_filters_remaining_negations$$ = $G__44725_G__44733_G__44740_bound__$2$$ = 
    $rp__$1$$, $filters__$1_nxt_negations_remaining_filters$$ = $G__44724_G__44735_G__44741_filters__$2$$, $negative_nexts_optionals__$1$$ = $G__44727_G__44732_G__44742_optionals__$2$$, $negations__$1$$ = $G__44723_G__44737_G__44743_negations__$2$$);
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.merge_operations), $APP.schema.core.__GT_FnSchema(output_schema44270_44694, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44271_44695], null)));
var output_schema44330_44744 = $APP.schema.core.maybe(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.EvalPattern], null), "eval-patterns that can be used to bind a pattern"), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.EvalPattern], null), "eval-patterns that cannot be used to bind a pattern")], 
null)), input_schema44331_44745 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.EvalPattern], null), $APP.cljs.core.with_meta(cljs$cst$2321$evs, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2304$EvalPattern], 
null)], null))), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([zuko.schema.Var]), $APP.cljs.core.with_meta(cljs$cst$2322$bound_vars, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2308$Var, "null"], null), null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.EPVPattern], 
null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2323$EPVPattern], null)], null)))], null), ret__35121__auto___44756 = asami.planner.bindings_chain = function($evs$$, $bound_vars$$, $G__44344__$1_first__44350_patterns$jscomp$6_rp__$1$$) {
  var $out__GT_evals$$ = zuko.util.mapmap.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.second, $APP.cljs.core.identity, $evs$$), $chain_data_evals_evals$$ = $APP.cljs.core.seq($G__44344__$1_first__44350_patterns$jscomp$6_rp__$1$$);
  $APP.cljs.core.first($chain_data_evals_evals$$);
  for ($APP.cljs.core.next($chain_data_evals_evals$$);;) {
    $chain_data_evals_evals$$ = $APP.cljs.core.seq($G__44344__$1_first__44350_patterns$jscomp$6_rp__$1$$);
    $G__44344__$1_first__44350_patterns$jscomp$6_rp__$1$$ = $APP.cljs.core.first($chain_data_evals_evals$$);
    $chain_data_evals_evals$$ = $APP.cljs.core.next($chain_data_evals_evals$$);
    var $G__44758$jscomp$inline_4934_acc$jscomp$inline_4930_p__$1$$ = $G__44344__$1_first__44350_patterns$jscomp$6_rp__$1$$;
    $G__44344__$1_first__44350_patterns$jscomp$6_rp__$1$$ = $chain_data_evals_evals$$;
    if ($APP.cljs.core.truth_($G__44758$jscomp$inline_4934_acc$jscomp$inline_4930_p__$1$$)) {
      if ($chain_data_evals_evals$$ = $APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$2($out__GT_evals$$, asami.planner.get_vars($G__44758$jscomp$inline_4934_acc$jscomp$inline_4930_p__$1$$)), !$APP.cljs.core.not($APP.cljs.core.seq($chain_data_evals_evals$$))) {
        a: {
          for ($G__44758$jscomp$inline_4934_acc$jscomp$inline_4930_p__$1$$ = $APP.cljs.core.PersistentVector.EMPTY;;) {
            var $G__44757$jscomp$inline_4933_incoming$jscomp$inline_4931_next_evals$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($bound_vars$$, $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(asami.planner.get_vars, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$chain_data_evals_evals$$], 0)));
            if ($APP.cljs.core.not($APP.cljs.core.seq($G__44757$jscomp$inline_4933_incoming$jscomp$inline_4931_next_evals$$))) {
              $chain_data_evals_evals$$ = $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($chain_data_evals_evals$$, $G__44758$jscomp$inline_4934_acc$jscomp$inline_4930_p__$1$$);
              break a;
            } else {
              if ($G__44757$jscomp$inline_4933_incoming$jscomp$inline_4931_next_evals$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($out__GT_evals$$, $G__44757$jscomp$inline_4933_incoming$jscomp$inline_4931_next_evals$$), $APP.cljs.core.every_QMARK_($APP.cljs.core.identity, $G__44757$jscomp$inline_4933_incoming$jscomp$inline_4931_next_evals$$)) {
                $G__44758$jscomp$inline_4934_acc$jscomp$inline_4930_p__$1$$ = $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($chain_data_evals_evals$$, $G__44758$jscomp$inline_4934_acc$jscomp$inline_4930_p__$1$$);
                $chain_data_evals_evals$$ = $G__44757$jscomp$inline_4933_incoming$jscomp$inline_4931_next_evals$$;
                continue;
              } else {
                $chain_data_evals_evals$$ = null;
                break a;
              }
            }
            break;
          }
          $chain_data_evals_evals$$ = void 0;
        }
        if ($APP.cljs.core.seq($chain_data_evals_evals$$)) {
          return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$chain_data_evals_evals$$, $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set($chain_data_evals_evals$$), $evs$$)], null);
        }
      }
    } else {
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [null, $evs$$], null);
    }
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.bindings_chain), $APP.schema.core.__GT_FnSchema(output_schema44330_44744, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44331_44745], null)));
var output_schema44358_44762 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), "group"), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), "remainder"), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.EvalPattern], null), "unused eval bindings")], null), input_schema44359_44763 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.maybe($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([zuko.schema.Var])), $APP.cljs.core.with_meta($APP.cljs$cst$2310$bound, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, 
new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2308$Var, "null"], null), null))], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$2301$CountablePattern], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.EvalPattern], null), $APP.cljs.core.with_meta(cljs$cst$2309$eval_patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2304$EvalPattern], null)], null)))], null), ret__35121__auto___44784 = asami.planner.first_group_STAR_ = 
function($bound$$, $G__44789_ex_evals_patterns$$, $G__44786_eval_patterns$$) {
  var $step$$ = function($excluded$$, $next_pattern$$) {
    var $vs$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($excluded$$, 0, null), $included$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($excluded$$, 1, null);
    $excluded$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($excluded$$, 2, null);
    var $new_vars$$ = $APP.cljs.core.set(asami.planner.get_vars($next_pattern$$));
    return $APP.cljs.core.seq($APP.clojure.set.intersection.cljs$core$IFn$_invoke$arity$2($vs$$, $new_vars$$)) ? new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($vs$$, $new_vars$$), $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($included$$, $next_pattern$$), $excluded$$], null) : new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$vs$$, $included$$, $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($excluded$$, 
    $next_pattern$$)], null);
  }, $groups$$ = function($e$$) {
    var $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($e$$, 0, null), $i$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($e$$, 1, null);
    $e$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($e$$, 2, null);
    return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($step$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$v$$, $i$$, $APP.cljs.core.PersistentVector.EMPTY], null), $e$$);
  }, $eval_outs$$ = $APP.cljs.core.set($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.second, $G__44786_eval_patterns$$)), $independents$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function($p1__44354_SHARP_$$) {
    return $APP.cljs.core.some($eval_outs$$, asami.planner.get_vars($p1__44354_SHARP_$$));
  }, $G__44789_ex_evals_patterns$$), $in_group_included_vars_vec__44385$$ = function() {
    var $or__5025__auto__$$ = $APP.cljs.core.seq($bound$$) && $APP.cljs.core.seq($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function($p1__44355_SHARP_$$) {
      return $APP.cljs.core.some($bound$$, asami.planner.get_vars($p1__44355_SHARP_$$));
    }, $independents$$));
    return $or__5025__auto__$$ ? $or__5025__auto__$$ : $independents$$;
  }(), $G__44787_excluded_first_pattern_in_vars$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($in_group_included_vars_vec__44385$$, 0, null);
  $in_group_included_vars_vec__44385$$ = $APP.cljs.core.set(asami.planner.get_vars($G__44787_excluded_first_pattern_in_vars$$));
  var $ex_group_included_vec__44394$$ = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__44787_excluded_first_pattern_in_vars$$], null);
  for ($G__44787_excluded_first_pattern_in_vars$$ = asami.planner.without($G__44787_excluded_first_pattern_in_vars$$, $G__44789_ex_evals_patterns$$);;) {
    $ex_group_included_vec__44394$$ = zuko.util.fixpoint($groups$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$in_group_included_vars_vec__44385$$, $ex_group_included_vec__44394$$, $G__44787_excluded_first_pattern_in_vars$$], null));
    $G__44787_excluded_first_pattern_in_vars$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($ex_group_included_vec__44394$$, 0, null);
    $in_group_included_vars_vec__44385$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($ex_group_included_vec__44394$$, 1, null);
    $ex_group_included_vec__44394$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($ex_group_included_vec__44394$$, 2, null);
    $G__44789_ex_evals_patterns$$ = asami.planner.bindings_chain($G__44786_eval_patterns$$, $G__44787_excluded_first_pattern_in_vars$$, $ex_group_included_vec__44394$$);
    var $G__44788_in_evals$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__44789_ex_evals_patterns$$, 0, null);
    $G__44789_ex_evals_patterns$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__44789_ex_evals_patterns$$, 1, null);
    if ($APP.cljs.core.not($APP.cljs.core.seq($G__44788_in_evals$$))) {
      return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$in_group_included_vars_vec__44385$$, $ex_group_included_vec__44394$$, $G__44786_eval_patterns$$], null);
    }
    $G__44786_eval_patterns$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($G__44787_excluded_first_pattern_in_vars$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.second, $G__44788_in_evals$$));
    $G__44787_excluded_first_pattern_in_vars$$ = $APP.cljs.core.vec($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($in_group_included_vars_vec__44385$$, $G__44788_in_evals$$));
    $G__44788_in_evals$$ = $ex_group_included_vec__44394$$;
    $in_group_included_vars_vec__44385$$ = $G__44786_eval_patterns$$;
    $ex_group_included_vec__44394$$ = $G__44787_excluded_first_pattern_in_vars$$;
    $G__44787_excluded_first_pattern_in_vars$$ = $G__44788_in_evals$$;
    $G__44786_eval_patterns$$ = $G__44789_ex_evals_patterns$$;
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.first_group_STAR_), $APP.schema.core.__GT_FnSchema(output_schema44358_44762, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44359_44763], null)));
asami.planner.first_group = $APP.cljs.core.memoize(asami.planner.first_group_STAR_);
var output_schema44400_44790 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Num], null), input_schema44401_44791 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([asami.planner.CountablePattern, $APP.schema.core.Num]), $APP.cljs.core.with_meta(cljs$cst$2324$count_map, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2301$CountablePattern, cljs$cst$2302$s_SLASH_Num], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), $APP.cljs.core.with_meta($APP.cljs$cst$2325$path, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2301$CountablePattern], 
null)], null)))], null), ret__35121__auto___44792 = asami.planner.estimated_counts = function($count_map_counts$$, $path$$) {
  $count_map_counts$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$2($count_map_counts$$, $path$$));
  return $APP.cljs.core.with_meta($count_map_counts$$, new $APP.cljs.core.PersistentArrayMap(null, 2, [cljs$cst$2326$zero, $APP.cljs.core.some($APP.cljs.core.zero_QMARK_, $count_map_counts$$), cljs$cst$2327$single, $APP.cljs.core.every_QMARK_($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._EQ_, 1), $count_map_counts$$)], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.estimated_counts), $APP.schema.core.__GT_FnSchema(output_schema44400_44790, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44401_44791], null)));
var output_schema44404_44804 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), input_schema44405_44805 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([asami.planner.CountablePattern, $APP.schema.core.Num]), $APP.cljs.core.with_meta(cljs$cst$2324$count_map, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2301$CountablePattern, cljs$cst$2302$s_SLASH_Num], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null)], null), cljs$cst$2328$arg1)], null), ret__35121__auto___44818 = asami.planner.find_first = function($count_fn_count_map$$, 
$first__44411_min_path__$1_min_path__$2_p__44408$$) {
  var $G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$ = $APP.cljs.core.seq($first__44411_min_path__$1_min_path__$2_p__44408$$);
  $first__44411_min_path__$1_min_path__$2_p__44408$$ = $APP.cljs.core.first($G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$);
  $G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$ = $APP.cljs.core.next($G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$);
  $count_fn_count_map$$ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2(asami.planner.estimated_counts, $count_fn_count_map$$);
  var $first__44425_fpath__$1_min_counts_min_counts__$1$$ = $count_fn_count_map$$($first__44411_min_path__$1_min_path__$2_p__44408$$), $G__44415__$1_G__44827_G__44830_rpaths__$1_seq__44417_seq__44424_seq__44424__$1$$ = $APP.cljs.core.seq($G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$);
  $APP.cljs.core.first($G__44415__$1_G__44827_G__44830_rpaths__$1_seq__44417_seq__44424_seq__44424__$1$$);
  $APP.cljs.core.next($G__44415__$1_G__44827_G__44830_rpaths__$1_seq__44417_seq__44424_seq__44424__$1$$);
  for ($G__44415__$1_G__44827_G__44830_rpaths__$1_seq__44417_seq__44424_seq__44424__$1$$ = $G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$;;) {
    $G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$ = $first__44425_fpath__$1_min_counts_min_counts__$1$$;
    $G__44415__$1_G__44827_G__44830_rpaths__$1_seq__44417_seq__44424_seq__44424__$1$$ = $APP.cljs.core.seq($G__44415__$1_G__44827_G__44830_rpaths__$1_seq__44417_seq__44424_seq__44424__$1$$);
    $first__44425_fpath__$1_min_counts_min_counts__$1$$ = $APP.cljs.core.first($G__44415__$1_G__44827_G__44830_rpaths__$1_seq__44417_seq__44424_seq__44424__$1$$);
    $G__44415__$1_G__44827_G__44830_rpaths__$1_seq__44417_seq__44424_seq__44424__$1$$ = $APP.cljs.core.next($G__44415__$1_G__44827_G__44830_rpaths__$1_seq__44417_seq__44424_seq__44424__$1$$);
    var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
    var $JSCompiler_inline_result$jscomp$9314_map__44426$jscomp$inline_9792_or__5025__auto__$jscomp$inline_9791_zero$$ = $first__44425_fpath__$1_min_counts_min_counts__$1$$ == null;
    if (!$JSCompiler_inline_result$jscomp$9314_map__44426$jscomp$inline_9792_or__5025__auto__$jscomp$inline_9791_zero$$) {
      $JSCompiler_inline_result$jscomp$9314_map__44426$jscomp$inline_9792_or__5025__auto__$jscomp$inline_9791_zero$$ = $APP.cljs.core.meta($first__44411_min_path__$1_min_path__$2_p__44408$$);
      var $map__44426__$1$jscomp$inline_9793_single$$ = $APP.cljs.core.__destructure_map($JSCompiler_inline_result$jscomp$9314_map__44426$jscomp$inline_9792_or__5025__auto__$jscomp$inline_9791_zero$$);
      $JSCompiler_inline_result$jscomp$9314_map__44426$jscomp$inline_9792_or__5025__auto__$jscomp$inline_9791_zero$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__44426__$1$jscomp$inline_9793_single$$, cljs$cst$2326$zero);
      $map__44426__$1$jscomp$inline_9793_single$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__44426__$1$jscomp$inline_9793_single$$, cljs$cst$2327$single);
      $JSCompiler_inline_result$jscomp$9314_map__44426$jscomp$inline_9792_or__5025__auto__$jscomp$inline_9791_zero$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$9314_map__44426$jscomp$inline_9792_or__5025__auto__$jscomp$inline_9791_zero$$) ? $JSCompiler_inline_result$jscomp$9314_map__44426$jscomp$inline_9792_or__5025__auto__$jscomp$inline_9791_zero$$ : $map__44426__$1$jscomp$inline_9793_single$$;
    }
    if ($JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$9314_map__44426$jscomp$inline_9792_or__5025__auto__$jscomp$inline_9791_zero$$)) {
      return $first__44411_min_path__$1_min_path__$2_p__44408$$;
    }
    $JSCompiler_temp_const$$ = $count_fn_count_map$$($first__44425_fpath__$1_min_counts_min_counts__$1$$);
    $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $APP.cljs.core.compare($G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$, $JSCompiler_temp_const$$)) ? ($G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$ = $JSCompiler_temp_const$$, $first__44411_min_path__$1_min_path__$2_p__44408$$ = $first__44425_fpath__$1_min_counts_min_counts__$1$$, $first__44425_fpath__$1_min_counts_min_counts__$1$$ = $G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$) : $first__44425_fpath__$1_min_counts_min_counts__$1$$ = 
    $G__44826_G__44829_min_counts__$2_seq__44410_seq__44410__$1$$;
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.find_first), $APP.schema.core.__GT_FnSchema(output_schema44404_44804, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44405_44805], null)));
var output_schema44427_44831 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), input_schema44428_44832 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.maybe($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([zuko.schema.Var])), $APP.cljs.core.with_meta($APP.cljs$cst$2310$bound, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
$APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2308$Var, "null"], null), null))], null))), $APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([asami.planner.CountablePattern, $APP.schema.core.Num]), $APP.cljs.core.with_meta(cljs$cst$2324$count_map, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2301$CountablePattern, 
cljs$cst$2302$s_SLASH_Num], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.CountablePattern], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2301$CountablePattern], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.EvalPattern], null), $APP.cljs.core.with_meta(cljs$cst$2309$eval_patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2304$EvalPattern], null)], null)))], null), ret__35121__auto___44835 = asami.planner.min_join_path = function($bound$$, $count_map$$, $G__44434_G__44434__$1_G__44837_patterns$$, $G__44838_eval_patterns$$) {
  if ($APP.cljs.core.count($G__44434_G__44434__$1_G__44837_patterns$$) <= 1) {
    return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($G__44434_G__44434__$1_G__44837_patterns$$, asami.planner.order($G__44838_eval_patterns$$));
  }
  $G__44434_G__44434__$1_G__44837_patterns$$ = asami.planner.first_group($bound$$, $G__44434_G__44434__$1_G__44837_patterns$$, $G__44838_eval_patterns$$);
  $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__44434_G__44434__$1_G__44837_patterns$$, 0, null);
  $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__44434_G__44434__$1_G__44837_patterns$$, 1, null);
  $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__44434_G__44434__$1_G__44837_patterns$$, 2, null);
  for (var $ordered__$1_ordered__$2$$ = $APP.cljs.core.PersistentVector.EMPTY;;) {
    $G__44838_eval_patterns$$ = $G__44434_G__44434__$1_G__44837_patterns$$;
    var $all_ordered_group_countables_grp__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__44838_eval_patterns$$, 0, null);
    $G__44434_G__44434__$1_G__44837_patterns$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__44838_eval_patterns$$, 1, null);
    $G__44838_eval_patterns$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__44838_eval_patterns$$, 2, null);
    var $group_evals$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(zuko.schema.eval_pattern_QMARK_, $all_ordered_group_countables_grp__$1$$);
    $all_ordered_group_countables_grp__$1$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(zuko.schema.eval_pattern_QMARK_, $all_ordered_group_countables_grp__$1$$);
    $all_ordered_group_countables_grp__$1$$ = $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($ordered__$1_ordered__$2$$, asami.planner.path($bound$$, $all_ordered_group_countables_grp__$1$$, $count_map$$, $group_evals$$));
    if ($APP.cljs.core.empty_QMARK_($G__44434_G__44434__$1_G__44837_patterns$$)) {
      return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($all_ordered_group_countables_grp__$1$$, asami.planner.order($G__44838_eval_patterns$$));
    }
    $G__44434_G__44434__$1_G__44837_patterns$$ = asami.planner.first_group($bound$$, $G__44434_G__44434__$1_G__44837_patterns$$, $G__44838_eval_patterns$$);
    $ordered__$1_ordered__$2$$ = $G__44838_eval_patterns$$ = $all_ordered_group_countables_grp__$1$$;
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.min_join_path), $APP.schema.core.__GT_FnSchema(output_schema44427_44831, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44428_44832], null)));
var output_schema44444_44839 = $APP.schema.core.Bool, input_schema44445_44840 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$APP.schema.core.Symbol]), $APP.cljs.core.with_meta($APP.cljs$cst$2329$types, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2296$s_SLASH_Symbol, 
"null"], null), null)], null))), $APP.schema.core.one(asami.planner.PatternOrBindings, $APP.cljs.core.with_meta($APP.cljs$cst$2203$pattern, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2330$PatternOrBindings], null)))], null), ret__35121__auto___44843 = asami.planner.opt_type_QMARK_ = function($types$$, $pattern$$) {
  return $APP.cljs.core.seq_QMARK_($pattern$$) && $APP.cljs.core.contains_QMARK_($types$$, $APP.cljs.core.first($pattern$$));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.opt_type_QMARK_), $APP.schema.core.__GT_FnSchema(output_schema44444_44839, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44445_44840], null)));
asami.planner.not_operation_QMARK_ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2(asami.planner.opt_type_QMARK_, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$946$not, null, cljs$cst$2208$NOT, null], null), null));
asami.planner.opt_operation_QMARK_ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2(asami.planner.opt_type_QMARK_, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1502$optional, null, cljs$cst$2209$OPTIONAL, null], null), null));
var output_schema44448_44862 = $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Keyword, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], null)]), input_schema44449_44863 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], 
null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2330$PatternOrBindings], null)], null)))], null), ret__35121__auto___44865 = asami.planner.extract_patterns_by_type = function($patterns$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc$$, $p$$) {
    return $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$4($acc$$, asami.planner.bindings_QMARK_($p$$) ? cljs$cst$2331$prebounds : zuko.schema.epv_pattern_QMARK_($p$$) ? cljs$cst$2332$epv_patterns : zuko.schema.filter_pattern_QMARK_($p$$) ? cljs$cst$2333$filter_patterns : zuko.schema.eval_pattern_QMARK_($p$$) ? cljs$cst$2334$eval_patterns : $APP.cljs.core.truth_(asami.planner.not_operation_QMARK_($p$$)) ? cljs$cst$2335$not_patterns : $APP.cljs.core.truth_(asami.planner.opt_operation_QMARK_($p$$)) ? 
    cljs$cst$2336$opt_patterns : zuko.schema.op_pattern_QMARK_($p$$) ? cljs$cst$2337$op_patterns : $APP.cljs$cst$2338$unknown, $APP.cljs.core.fnil.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.conj, $APP.cljs.core.PersistentVector.EMPTY), $p$$);
  }, $APP.cljs.core.PersistentArrayMap.EMPTY, $patterns$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.extract_patterns_by_type), $APP.schema.core.__GT_FnSchema(output_schema44448_44862, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44449_44863], null)));
var output_schema44452_44866 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], null), input_schema44453_44867 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), 
$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2330$PatternOrBindings], null)], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1270$options, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___44868 = asami.planner.plan_path = function($graph$$, $count_map$jscomp$3_patterns$$, $options$$) {
  var $filter_patterns$$ = asami.planner.extract_patterns_by_type($count_map$jscomp$3_patterns$$), $bound$$ = $APP.cljs.core.__destructure_map($filter_patterns$$), $planned_prebounds$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($bound$$, cljs$cst$2331$prebounds), $epv_patterns$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($bound$$, cljs$cst$2332$epv_patterns);
  $filter_patterns$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($bound$$, cljs$cst$2333$filter_patterns);
  var $eval_patterns$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($bound$$, cljs$cst$2334$eval_patterns), $not_patterns$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($bound$$, cljs$cst$2335$not_patterns), $opt_patterns$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($bound$$, cljs$cst$2336$opt_patterns), $op_patterns_planned_sub_patterns$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($bound$$, cljs$cst$2337$op_patterns);
  $bound$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($bound$$, $APP.cljs$cst$2338$unknown);
  if ($APP.cljs.core.seq($bound$$)) {
    throw $APP.cljs.core.println.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["METAS: ", $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.meta, $count_map$jscomp$3_patterns$$)], 0)), $APP.cljs.core.println.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["PATTERNS: ", $count_map$jscomp$3_patterns$$], 0)), $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown form in query: ", $APP.clojure.string.join.cljs$core$IFn$_invoke$arity$2(",", 
    $APP.cljs.core.doall.cljs$core$IFn$_invoke$arity$1($bound$$))].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2338$unknown, $bound$$, $APP.cljs$cst$2339$query, $count_map$jscomp$3_patterns$$], null));
  }
  $count_map$jscomp$3_patterns$$ = $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([zuko.util.mapmap.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2(asami.graph.count_pattern, $graph$$), $epv_patterns$$), zuko.util.mapmap.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count, $planned_prebounds$$)], 0));
  $bound$$ = cljs$cst$2314$bound.cljs$core$IFn$_invoke$arity$1($options$$);
  $op_patterns_planned_sub_patterns$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($first__44460_p__44457$$) {
    var $args$$ = $APP.cljs.core.seq($first__44460_p__44457$$);
    $first__44460_p__44457$$ = $APP.cljs.core.first($args$$);
    $args$$ = $APP.cljs.core.next($args$$);
    return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.list, $first__44460_p__44457$$, asami.planner.plan_path.cljs$core$IFn$_invoke$arity$3 ? asami.planner.plan_path.cljs$core$IFn$_invoke$arity$3($graph$$, $args$$, $options$$) : asami.planner.plan_path.call(null, $graph$$, $args$$, $options$$));
  }, $op_patterns_planned_sub_patterns$$);
  $planned_prebounds$$ = asami.planner.min_join_path($bound$$, $count_map$jscomp$3_patterns$$, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($planned_prebounds$$, $epv_patterns$$), $eval_patterns$$);
  return asami.planner.merge_operations($graph$$, $options$$, $planned_prebounds$$, $op_patterns_planned_sub_patterns$$, $filter_patterns$$, $opt_patterns$$, $not_patterns$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.plan_path), $APP.schema.core.__GT_FnSchema(output_schema44452_44866, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44453_44867], null)));
var output_schema44461_44895 = $APP.schema.core.Any, input_schema44462_44896 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2340$terms, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___44897 = asami.planner.new_or = function($terms$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(1, $APP.cljs.core.count, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$terms$$], 0)) ? $APP.cljs.core.first($terms$$) : $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$403$or, $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc$$, $p__44465$$) {
    var $seq__44467_seq__44467__$1$$ = $APP.cljs.core.seq($p__44465$$), $first__44468$$ = $APP.cljs.core.first($seq__44467_seq__44467__$1$$);
    $seq__44467_seq__44467__$1$$ = $APP.cljs.core.next($seq__44467_seq__44467__$1$$);
    if ($APP.cljs.core.seq_QMARK_($p__44465$$)) {
      if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$403$or, $first__44468$$)) {
        return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($acc$$, $seq__44467_seq__44467__$1$$);
      }
      if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$946$not, $first__44468$$)) {
        throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Illegal use of NOT expression in OR expression", new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$712$or, $terms$$, $APP.cljs$cst$2341$not, $p__44465$$], null));
      }
    }
    return $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($acc$$, $p__44465$$);
  }, $APP.cljs.core.PersistentVector.EMPTY, $terms$$));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.new_or), $APP.schema.core.__GT_FnSchema(output_schema44461_44895, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44462_44896], null)));
var output_schema44470_44898 = $APP.schema.core.Any, input_schema44471_44899 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2340$terms, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___44900 = asami.planner.new_and = function($terms$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $APP.cljs.core.count($terms$$)) ? $APP.cljs.core.first($terms$$) : $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc$$, $p__44474$$) {
    var $args$$ = $APP.cljs.core.seq($p__44474$$), $first__44477$$ = $APP.cljs.core.first($args$$);
    $args$$ = $APP.cljs.core.next($args$$);
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $first__44477$$) ? $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($acc$$, $args$$) : $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($acc$$, $p__44474$$);
  }, $APP.cljs.core.PersistentVector.EMPTY, $terms$$));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.new_and), $APP.schema.core.__GT_FnSchema(output_schema44470_44898, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44471_44899], null)));
var output_schema44478_44901 = $APP.schema.core.Any, input_schema44479_44902 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$14$s, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1242$e, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___44903 = asami.planner.append = function($s$$, $e$$) {
  return $APP.cljs.core.vector_QMARK_($s$$) ? $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($s$$, $e$$) : $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($s$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$e$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.append), $APP.schema.core.__GT_FnSchema(output_schema44478_44901, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44479_44902], null)));
var output_schema44483_44904 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], null), input_schema44484_44905 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2330$PatternOrBindings], null)], null)))], null), input_schema44487_44906 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2330$PatternOrBindings], null)], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1270$options, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___44907 = function() {
  asami.planner.simplify_algebra = function($var_args$$) {
    switch(arguments.length) {
      case 1:
        return asami.planner.simplify_algebra.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      case 2:
        return asami.planner.simplify_algebra.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  asami.planner.simplify_algebra.cljs$core$IFn$_invoke$arity$1 = function($patterns$$) {
    return asami.planner.simplify_algebra.cljs$core$IFn$_invoke$arity$2($patterns$$, $APP.cljs.core.PersistentArrayMap.EMPTY);
  };
  asami.planner.simplify_algebra.cljs$core$IFn$_invoke$arity$2 = function($patterns$$, $first__44553_options$$) {
    var $or_term_QMARK_$$ = function($term$$) {
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$403$or, $APP.cljs.core.first($term$$));
    };
    $patterns$$ = function $asami$planner$sum_of_products$$($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) {
      if ($APP.cljs.core.vector_QMARK_($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)) {
        return $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$;
      }
      if ($APP.cljs.core.seq_QMARK_($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)) {
        var $args__$1$$ = $APP.cljs.core.seq($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$);
        $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$ = $APP.cljs.core.first($args__$1$$);
        $args__$1$$ = $APP.cljs.core.next($args__$1$$);
        if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$946$not, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)) {
          var $processed_vec__44522_vec__44525_vec__44531_vec__44534$$ = $asami$planner$sum_of_products$$($APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $args__$1$$));
          $args__$1$$ = $APP.cljs.core.seq($processed_vec__44522_vec__44525_vec__44531_vec__44534$$);
          $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$ = $APP.cljs.core.first($args__$1$$);
          $args__$1$$ = $APP.cljs.core.next($args__$1$$);
          return $APP.cljs.core.vector_QMARK_($processed_vec__44522_vec__44525_vec__44531_vec__44534$$) ? new $APP.cljs.core.List(null, $APP.cljs$cst$946$not, new $APP.cljs.core.List(null, $processed_vec__44522_vec__44525_vec__44531_vec__44534$$, null, 1, null), 2, null) : $APP.cljs.core.vector_QMARK_($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) ? $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$946$not, $processed_vec__44522_vec__44525_vec__44531_vec__44534$$) : 
          $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$946$not, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) ? $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $args__$1$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) ? $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$946$not, 
          $args__$1$$) : new $APP.cljs.core.List(null, $APP.cljs$cst$946$not, new $APP.cljs.core.List(null, $processed_vec__44522_vec__44525_vec__44531_vec__44534$$, null, 1, null), 2, null);
        }
        if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2208$NOT, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)) {
          return $processed_vec__44522_vec__44525_vec__44531_vec__44534$$ = $asami$planner$sum_of_products$$($APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $args__$1$$)), $args__$1$$ = $APP.cljs.core.seq($processed_vec__44522_vec__44525_vec__44531_vec__44534$$), $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$ = $APP.cljs.core.first($args__$1$$), $args__$1$$ = $APP.cljs.core.next($args__$1$$), $APP.cljs.core.vector_QMARK_($processed_vec__44522_vec__44525_vec__44531_vec__44534$$) ? 
          new $APP.cljs.core.List(null, $APP.cljs$cst$946$not, new $APP.cljs.core.List(null, $processed_vec__44522_vec__44525_vec__44531_vec__44534$$, null, 1, null), 2, null) : $APP.cljs.core.vector_QMARK_($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) ? $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$946$not, $processed_vec__44522_vec__44525_vec__44531_vec__44534$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$946$not, 
          $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) ? $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $args__$1$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) ? $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$946$not, $args__$1$$) : new $APP.cljs.core.List(null, $APP.cljs$cst$946$not, 
          new $APP.cljs.core.List(null, $processed_vec__44522_vec__44525_vec__44531_vec__44534$$, null, 1, null), 2, null);
        }
        if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1502$optional, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) || $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2209$OPTIONAL, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)) {
          return $processed_vec__44522_vec__44525_vec__44531_vec__44534$$ = $asami$planner$sum_of_products$$($APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $args__$1$$)), $args__$1$$ = $APP.cljs.core.seq($processed_vec__44522_vec__44525_vec__44531_vec__44534$$), $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$ = $APP.cljs.core.first($args__$1$$), $args__$1$$ = $APP.cljs.core.next($args__$1$$), $APP.cljs.core.vector_QMARK_($processed_vec__44522_vec__44525_vec__44531_vec__44534$$) ? 
          new $APP.cljs.core.List(null, $APP.cljs$cst$1502$optional, new $APP.cljs.core.List(null, $processed_vec__44522_vec__44525_vec__44531_vec__44534$$, null, 1, null), 2, null) : $APP.cljs.core.vector_QMARK_($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) ? $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1502$optional, $processed_vec__44522_vec__44525_vec__44531_vec__44534$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, 
          $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) ? $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1502$optional, $args__$1$$) : new $APP.cljs.core.List(null, $APP.cljs$cst$1502$optional, new $APP.cljs.core.List(null, $processed_vec__44522_vec__44525_vec__44531_vec__44534$$, null, 1, null), 2, null);
        }
        if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$403$or, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) || $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2207$OR, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)) {
          return asami.planner.new_or($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($asami$planner$sum_of_products$$, $args__$1$$));
        }
        if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)) {
          $args__$1$$ = $APP.cljs.core.doall.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($asami$planner$sum_of_products$$, $args__$1$$));
          $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$ = $APP.cljs.core.doall.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($or_term_QMARK_$$, $args__$1$$));
          if ($APP.cljs.core.seq($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)) {
            var $other_terms$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($or_term_QMARK_$$, $args__$1$$);
            $args__$1$$ = function($acc$$, $p__44539_seq__44541_seq__44541__$1$$) {
              $p__44539_seq__44541_seq__44541__$1$$ = $APP.cljs.core.seq($p__44539_seq__44541_seq__44541__$1$$);
              $APP.cljs.core.first($p__44539_seq__44541_seq__44541__$1$$);
              $p__44539_seq__44541_seq__44541__$1$$ = $APP.cljs.core.next($p__44539_seq__44541_seq__44541__$1$$);
              return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($acc$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__44482_SHARP_$$) {
                return asami.planner.new_and(asami.planner.append($other_terms$$, $p1__44482_SHARP_$$));
              }, $p__44539_seq__44541_seq__44541__$1$$));
            };
            return asami.planner.new_or($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($args__$1$$, $APP.cljs.core.PersistentVector.EMPTY, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$));
          }
          return asami.planner.new_and($args__$1$$);
        }
        if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2206$AND, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)) {
          return $args__$1$$ = $APP.cljs.core.doall.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($asami$planner$sum_of_products$$, $args__$1$$)), $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$ = $APP.cljs.core.doall.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($or_term_QMARK_$$, $args__$1$$)), $APP.cljs.core.seq($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$) ? 
          ($other_terms$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($or_term_QMARK_$$, $args__$1$$), $args__$1$$ = function($acc$$, $p__44544_seq__44547_seq__44547__$1$$) {
            $p__44544_seq__44547_seq__44547__$1$$ = $APP.cljs.core.seq($p__44544_seq__44547_seq__44547__$1$$);
            $APP.cljs.core.first($p__44544_seq__44547_seq__44547__$1$$);
            $p__44544_seq__44547_seq__44547__$1$$ = $APP.cljs.core.next($p__44544_seq__44547_seq__44547__$1$$);
            return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($acc$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__44482_SHARP_$$) {
              return asami.planner.new_and(asami.planner.append($other_terms$$, $p1__44482_SHARP_$$));
            }, $p__44544_seq__44547_seq__44547__$1$$));
          }, asami.planner.new_or($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($args__$1$$, $APP.cljs.core.PersistentVector.EMPTY, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$))) : asami.planner.new_and($args__$1$$);
        }
        throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown query operator: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2297$op, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$, $APP.cljs$cst$255$args, $args__$1$$], null));
      }
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown query term: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2342$term, $first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$, $APP.cljs$cst$139$type, $APP.cljs.core.type($first__44520_first__44524_first__44527_first__44533_first__44536_op__$1_or_terms_term$$)], 
      null));
    }($APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $patterns$$));
    var $args$$ = $APP.cljs.core.seq($patterns$$);
    $first__44553_options$$ = $APP.cljs.core.first($args$$);
    $args$$ = $APP.cljs.core.next($args$$);
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $first__44553_options$$) ? $args$$ : new $APP.cljs.core.List(null, $patterns$$, null, 1, null);
  };
  asami.planner.simplify_algebra.cljs$lang$maxFixedArity = 2;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.simplify_algebra), $APP.schema.core.make_fn_schema(output_schema44483_44904, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44484_44905, input_schema44487_44906], null)));
var output_schema44555_44933 = $APP.schema.core.Any, input_schema44556_44934 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___44935 = asami.planner.normalize_sum_of_products = function($patterns$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_, $G__44562$jscomp$inline_4938_JSCompiler_inline_result$jscomp$830_and__5023__auto__$$;
  if ($G__44562$jscomp$inline_4938_JSCompiler_inline_result$jscomp$830_and__5023__auto__$$ = $APP.cljs.core.seq_QMARK_($patterns$$)) {
    $G__44562$jscomp$inline_4938_JSCompiler_inline_result$jscomp$830_and__5023__auto__$$ = $APP.cljs.core.first($patterns$$);
    var $fexpr__44561$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [cljs$cst$2207$OR, null, $APP.cljs$cst$403$or, null], null), null);
    $G__44562$jscomp$inline_4938_JSCompiler_inline_result$jscomp$830_and__5023__auto__$$ = $fexpr__44561$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__44561$$.cljs$core$IFn$_invoke$arity$1($G__44562$jscomp$inline_4938_JSCompiler_inline_result$jscomp$830_and__5023__auto__$$) : $fexpr__44561$$.call(null, $G__44562$jscomp$inline_4938_JSCompiler_inline_result$jscomp$830_and__5023__auto__$$);
  }
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $G__44562$jscomp$inline_4938_JSCompiler_inline_result$jscomp$830_and__5023__auto__$$) ? $patterns$$ : new $APP.cljs.core.List(null, $APP.cljs$cst$403$or, new $APP.cljs.core.List(null, $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $APP.cljs.core.count($patterns$$)) ? $APP.cljs.core.first($patterns$$) : $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$408$and, $patterns$$), null, 1, null), 2, null);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.normalize_sum_of_products), $APP.schema.core.__GT_FnSchema(output_schema44555_44933, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44556_44934], null)));
var output_schema44565_44936 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], null), input_schema44566_44937 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), 
$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2330$PatternOrBindings], null)], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1270$options, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___44939 = asami.planner.minimal_first_planner = function($graph$$, $patterns$$, $options$$) {
  return asami.planner.plan_path($graph$$, $patterns$$, $options$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.minimal_first_planner), $APP.schema.core.__GT_FnSchema(output_schema44565_44936, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44566_44937], null)));
var output_schema44572_44940 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], null), input_schema44574_44941 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), 
$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.PatternOrBindings], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2330$PatternOrBindings], null)], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1270$options, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___44942 = asami.planner.user_plan = function($graph$$, $patterns$$, $options$$) {
  return $patterns$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.user_plan), $APP.schema.core.__GT_FnSchema(output_schema44572_44940, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44574_44941], null)));
asami.planner.aggregate_types = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 10, [$APP.cljs$cst$2343$sum, "null", $APP.cljs$cst$651$min, "null", $APP.cljs$cst$2344$stddev, "null", $APP.cljs$cst$2345$variance, "null", $APP.cljs$cst$2346$sample, "null", $APP.cljs$cst$2347$median, "null", $APP.cljs$cst$695$max, "null", $APP.cljs$cst$25$count, "null", $APP.cljs$cst$2348$count_distinct, "null", $APP.cljs$cst$2349$avg, "null"], null), null);
asami.planner.wildcard_QMARK_ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._EQ_, $APP.cljs$cst$650$_STAR_);
asami.planner.wildcard_permitted_QMARK_ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$2346$sample, "null", $APP.cljs$cst$25$count, "null", $APP.cljs$cst$2348$count_distinct, "null"], null), null);
asami.planner.aggregate_form_QMARK_ = function($s$$) {
  var $and__5023__auto__$jscomp$179_and__5023__auto____$1$jscomp$39_and__5023__auto____$2$jscomp$11_or__5025__auto__$$ = function() {
    var $and__5023__auto__$$ = $APP.cljs.core.vector_QMARK_($s$$);
    return $and__5023__auto__$$ ? $APP.cljs.core.some(asami.planner.aggregate_form_QMARK_, $s$$) : $and__5023__auto__$$;
  }();
  if ($APP.cljs.core.truth_($and__5023__auto__$jscomp$179_and__5023__auto____$1$jscomp$39_and__5023__auto____$2$jscomp$11_or__5025__auto__$$)) {
    return $and__5023__auto__$jscomp$179_and__5023__auto____$1$jscomp$39_and__5023__auto____$2$jscomp$11_or__5025__auto__$$;
  }
  if ($and__5023__auto__$jscomp$179_and__5023__auto____$1$jscomp$39_and__5023__auto____$2$jscomp$11_or__5025__auto__$$ = $APP.cljs.core.seq_QMARK_($s$$)) {
    if ($and__5023__auto__$jscomp$179_and__5023__auto____$1$jscomp$39_and__5023__auto____$2$jscomp$11_or__5025__auto__$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $APP.cljs.core.count($s$$))) {
      var $fs$$ = $APP.cljs.core.first($s$$);
      $and__5023__auto__$jscomp$179_and__5023__auto____$1$jscomp$39_and__5023__auto____$2$jscomp$11_or__5025__auto__$$ = asami.planner.aggregate_types.cljs$core$IFn$_invoke$arity$1 ? asami.planner.aggregate_types.cljs$core$IFn$_invoke$arity$1($fs$$) : asami.planner.aggregate_types.call(null, $fs$$);
      if ($APP.cljs.core.truth_($and__5023__auto__$jscomp$179_and__5023__auto____$1$jscomp$39_and__5023__auto____$2$jscomp$11_or__5025__auto__$$)) {
        if ($APP.cljs.core.truth_(function() {
          var $and__5023__auto____$3$$ = asami.planner.wildcard_QMARK_($APP.cljs.core.second($s$$));
          return $APP.cljs.core.truth_($and__5023__auto____$3$$) ? $APP.cljs.core.not(asami.planner.wildcard_permitted_QMARK_.cljs$core$IFn$_invoke$arity$1 ? asami.planner.wildcard_permitted_QMARK_.cljs$core$IFn$_invoke$arity$1($fs$$) : asami.planner.wildcard_permitted_QMARK_.call(null, $fs$$)) : $and__5023__auto____$3$$;
        }())) {
          throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Wildcard is not permitted for ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($fs$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$179$form, $s$$], null));
        }
        return !0;
      }
      return $and__5023__auto__$jscomp$179_and__5023__auto____$1$jscomp$39_and__5023__auto____$2$jscomp$11_or__5025__auto__$$;
    }
    return $and__5023__auto__$jscomp$179_and__5023__auto____$1$jscomp$39_and__5023__auto____$2$jscomp$11_or__5025__auto__$$;
  }
  return $and__5023__auto__$jscomp$179_and__5023__auto____$1$jscomp$39_and__5023__auto____$2$jscomp$11_or__5025__auto__$$;
};
asami.planner.Aggregate = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(asami.planner.aggregate_form_QMARK_);
asami.planner.VarOrWild = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(function($p1__44580_SHARP_$$) {
  var $or__5025__auto__$$ = zuko.schema.vartest_QMARK_($p1__44580_SHARP_$$);
  return $or__5025__auto__$$ ? $or__5025__auto__$$ : asami.planner.wildcard_QMARK_($p1__44580_SHARP_$$);
});
var output_schema44581_44943 = $APP.schema.core.maybe(zuko.schema.Pattern), input_schema44582_44944 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Bool, $APP.cljs.core.with_meta(cljs$cst$2350$aggregating_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2351$s_SLASH_Bool], null))), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([zuko.schema.Var]), 
$APP.cljs.core.with_meta(cljs$cst$2352$needed_vars, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2308$Var, "null"], null), null)], null))), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([asami.planner.VarOrWild]), $APP.cljs.core.with_meta(cljs$cst$2353$aggregate_vars, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2354$VarOrWild, "null"], null), null)], null))), $APP.schema.core.one(zuko.schema.Pattern, $APP.cljs.core.with_meta(cljs$cst$2355$constraint, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2213$Pattern], null)))], null), ret__35121__auto___44953 = asami.planner.aggregate_constraint = function($aggregating_QMARK_$$, $needed_vars$$, $aggregate_vars$$, $constraint$$) {
  $constraint$$ = function $asami$planner$aggregate_constraint_$_agg_constraint$$($cnstrnt_first__44590$$) {
    if ($APP.cljs.core.vector_QMARK_($cnstrnt_first__44590$$)) {
      var $JSCompiler_inline_result$jscomp$10209_vars$$ = asami.planner.get_vars($cnstrnt_first__44590$$), $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
      if ($APP.cljs.core.truth_($aggregating_QMARK_$$)) {
        var $and__5023__auto__$jscomp$inline_10368_or__5025__auto__$jscomp$inline_10366_or__5025__auto__$$ = $APP.cljs.core.some($aggregate_vars$$, $JSCompiler_inline_result$jscomp$10209_vars$$);
        $and__5023__auto__$jscomp$inline_10368_or__5025__auto__$jscomp$inline_10366_or__5025__auto__$$ = $APP.cljs.core.truth_($and__5023__auto__$jscomp$inline_10368_or__5025__auto__$jscomp$inline_10366_or__5025__auto__$$) ? $and__5023__auto__$jscomp$inline_10368_or__5025__auto__$jscomp$inline_10366_or__5025__auto__$$ : $APP.cljs.core.some($needed_vars$$, $JSCompiler_inline_result$jscomp$10209_vars$$) == null;
      } else {
        $and__5023__auto__$jscomp$inline_10368_or__5025__auto__$jscomp$inline_10366_or__5025__auto__$$ = $aggregating_QMARK_$$;
      }
      $JSCompiler_inline_result$jscomp$10209_vars$$ = $APP.cljs.core.truth_($and__5023__auto__$jscomp$inline_10368_or__5025__auto__$jscomp$inline_10366_or__5025__auto__$$) ? $and__5023__auto__$jscomp$inline_10368_or__5025__auto__$jscomp$inline_10366_or__5025__auto__$$ : ($and__5023__auto__$jscomp$inline_10368_or__5025__auto__$jscomp$inline_10366_or__5025__auto__$$ = $APP.cljs.core.not($aggregating_QMARK_$$)) ? $APP.cljs.core.some($needed_vars$$, $JSCompiler_inline_result$jscomp$10209_vars$$) : $and__5023__auto__$jscomp$inline_10368_or__5025__auto__$jscomp$inline_10366_or__5025__auto__$$;
      return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$10209_vars$$) ? $cnstrnt_first__44590$$ : null;
    }
    if ($APP.cljs.core.seq_QMARK_($cnstrnt_first__44590$$)) {
      return $JSCompiler_temp_const$$ = $APP.cljs.core.seq($cnstrnt_first__44590$$), $cnstrnt_first__44590$$ = $APP.cljs.core.first($JSCompiler_temp_const$$), $JSCompiler_temp_const$$ = $APP.cljs.core.next($JSCompiler_temp_const$$), $JSCompiler_temp_const$$ = $APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$2($asami$planner$aggregate_constraint_$_agg_constraint$$, $JSCompiler_temp_const$$), $APP.cljs.core.seq($JSCompiler_temp_const$$) ? $APP.cljs.core.count($JSCompiler_temp_const$$) > 1 ? $APP.cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2($cnstrnt_first__44590$$, 
      $JSCompiler_temp_const$$) : $APP.cljs.core.first($JSCompiler_temp_const$$) : null;
    }
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown constraint structure: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($cnstrnt_first__44590$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2356$constraint, $cnstrnt_first__44590$$], null));
  }($constraint$$);
  return $APP.cljs.core.vector_QMARK_($constraint$$) ? new $APP.cljs.core.List(null, $APP.cljs$cst$408$and, new $APP.cljs.core.List(null, $constraint$$, null, 1, null), 2, null) : $constraint$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.aggregate_constraint), $APP.schema.core.__GT_FnSchema(output_schema44581_44943, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44582_44944], null)));
asami.planner.dot_QMARK_ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._EQ_, $APP.cljs$cst$165$_DOT_);
asami.planner.Dot = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(asami.planner.dot_QMARK_);
asami.planner.tdot_QMARK_ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._EQ_, $APP.cljs$cst$1481$_DOT__DOT__DOT_);
asami.planner.TDot = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(asami.planner.tdot_QMARK_);
asami.planner.FindVectorElement = $APP.schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([asami.planner.tdot_QMARK_, asami.planner.TDot, $APP.cljs.core.symbol_QMARK_, zuko.schema.Var, $APP.cljs.core.seq_QMARK_, asami.planner.Aggregate], 0));
asami.planner.FindElement = $APP.schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([asami.planner.dot_QMARK_, asami.planner.Dot, $APP.cljs.core.symbol_QMARK_, zuko.schema.Var, $APP.cljs.core.seq_QMARK_, asami.planner.Aggregate, $APP.cljs.core.vector_QMARK_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.FindVectorElement], null)], 0));
var output_schema44591_44954 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), "outer query constraints"), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), "inner query constraints"), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([asami.planner.VarOrWild]), 
"vars to get aggregations for")], null), input_schema44592_44955 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(zuko.schema.Pattern, $APP.cljs.core.with_meta($APP.cljs$cst$2357$constraints, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2213$Pattern], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.planner.FindElement], 
null), $APP.cljs.core.with_meta(cljs$cst$2358$selection, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2359$FindElement], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.Var], null), $APP.cljs.core.with_meta(cljs$cst$2360$withs, new $APP.cljs.core.PersistentArrayMap(null, 1, 
[$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2308$Var], null)], null)))], null), ret__35121__auto___44956 = asami.planner.split_aggregate_terms = function($agg_constraints_constraints$$, $agg_vars_selection$$, $vars$$) {
  $agg_constraints_constraints$$ = $APP.cljs.core.seq($agg_constraints_constraints$$);
  $APP.cljs.core.first($agg_constraints_constraints$$);
  $agg_constraints_constraints$$ = $APP.cljs.core.next($agg_constraints_constraints$$);
  $vars$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(zuko.schema.vartest_QMARK_, $agg_vars_selection$$)), $vars$$);
  var $and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$;
  if ($and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $APP.cljs.core.count($agg_vars_selection$$))) {
    $and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$ = $APP.cljs.core.first($agg_vars_selection$$);
    var $and__5023__auto____$1$$ = $APP.cljs.core.vector_QMARK_($and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$);
    $and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$ = $and__5023__auto____$1$$ ? $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $APP.cljs.core.count($and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$)) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1481$_DOT__DOT__DOT_, $APP.cljs.core.second($and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$)) ? 
    $APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$APP.cljs.core.second($APP.cljs.core.first($and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$))]) : $APP.cljs.core.set($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.second, $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(asami.planner.aggregate_form_QMARK_, $and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$))) : $and__5023__auto____$1$$;
  }
  $agg_vars_selection$$ = $APP.cljs.core.truth_($and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$) ? $and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$ : $APP.cljs.core.set($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.second, $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(asami.planner.aggregate_form_QMARK_, $agg_vars_selection$$)));
  $and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$4(asami.planner.aggregate_constraint, !1, $vars$$, $agg_vars_selection$$), $agg_constraints_constraints$$);
  $agg_constraints_constraints$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$4(asami.planner.aggregate_constraint, !0, $vars$$, $agg_vars_selection$$), $agg_constraints_constraints$$);
  return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$and__5023__auto__$jscomp$inline_10372_non_agg_constraints_or__5025__auto__$jscomp$inline_10371_sel$$, $agg_constraints_constraints$$, $agg_vars_selection$$], null);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.planner.split_aggregate_terms), $APP.schema.core.__GT_FnSchema(output_schema44591_44954, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44592_44955], null)));
asami.projection = {};
asami.projection.EntityPropertyElt = $APP.schema.core.Any;
asami.projection.EntityPattern = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Symbol, "entity")], null);
asami.projection.EntityPropertyPattern = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.projection.EntityPropertyElt, "entity"), $APP.schema.core.one(asami.projection.EntityPropertyElt, "property"), $APP.schema.core.optional($APP.schema.core.Any, "value")], null);
asami.projection.EPVPattern = $APP.schema.core.if$(function($p1__44068_SHARP_$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $APP.cljs.core.count($p1__44068_SHARP_$$));
}, asami.projection.EntityPattern, asami.projection.EntityPropertyPattern);
var output_schema44069_44303 = $APP.schema.core.Bool, input_schema44070_44304 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$2203$pattern, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$2204$s_SLASH_Any], null)], null)))], null), ret__35121__auto___44305 = asami.projection.epv_pattern_QMARK_ = function($f$jscomp$532_pattern$$) {
  var $and__5023__auto__$$ = $APP.cljs.core.vector_QMARK_($f$jscomp$532_pattern$$);
  return $and__5023__auto__$$ ? ($f$jscomp$532_pattern$$ = $APP.cljs.core.first($f$jscomp$532_pattern$$), $APP.cljs.core.boolean$($f$jscomp$532_pattern$$) && !$APP.cljs.core.seq_QMARK_($f$jscomp$532_pattern$$)) : $and__5023__auto__$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.epv_pattern_QMARK_), $APP.schema.core.__GT_FnSchema(output_schema44069_44303, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44070_44304], null)));
asami.projection.Value = $APP.schema.core.Any;
asami.projection.Results = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Value], null)], null);
asami.projection.EntityPropAxiomElt = $APP.schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.schema.core.Keyword, $APP.schema.core.Num], 0));
asami.projection.EntityPropValAxiomElt = $APP.schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.complement($APP.cljs.core.symbol_QMARK_), $APP.schema.core.Any], 0));
asami.projection.Triple = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, "entity"), $APP.schema.core.one($APP.schema.core.Any, "property"), $APP.schema.core.one($APP.schema.core.Any, "value")], null);
asami.projection.Axiom = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.projection.EntityPropAxiomElt, "entity"), $APP.schema.core.one(asami.projection.EntityPropAxiomElt, "property"), $APP.schema.core.one(asami.projection.EntityPropValAxiomElt, "value")], null);
asami.projection.var_marker_QMARK_ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, ["%", null, "?", null], null), null);
asami.projection.Var = $APP.schema.core.constrained.cljs$core$IFn$_invoke$arity$2($APP.schema.core.Symbol, function($G__44085_p1__44075_SHARP_$$) {
  var $G__44081$jscomp$inline_4941_or__5025__auto__$$ = $APP.cljs.core.first($APP.cljs.core.name($G__44085_p1__44075_SHARP_$$));
  $G__44081$jscomp$inline_4941_or__5025__auto__$$ = asami.projection.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1 ? asami.projection.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1($G__44081$jscomp$inline_4941_or__5025__auto__$$) : asami.projection.var_marker_QMARK_.call(null, $G__44081$jscomp$inline_4941_or__5025__auto__$$);
  if ($APP.cljs.core.truth_($G__44081$jscomp$inline_4941_or__5025__auto__$$)) {
    return $G__44081$jscomp$inline_4941_or__5025__auto__$$;
  }
  $G__44085_p1__44075_SHARP_$$ = $APP.cljs.core.first($APP.cljs.core.namespace($G__44085_p1__44075_SHARP_$$));
  return asami.projection.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1 ? asami.projection.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1($G__44085_p1__44075_SHARP_$$) : asami.projection.var_marker_QMARK_.call(null, $G__44085_p1__44075_SHARP_$$);
});
var output_schema44086_44306 = $APP.schema.core.Bool, input_schema44088_44307 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1237$x, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___44308 = asami.projection.vartest_QMARK_ = function($G__44094$jscomp$inline_9805_JSCompiler_inline_result$jscomp$9318_x$$) {
  var $JSCompiler_temp$jscomp$9315_JSCompiler_temp_const$$;
  if ($JSCompiler_temp$jscomp$9315_JSCompiler_temp_const$$ = $G__44094$jscomp$inline_9805_JSCompiler_inline_result$jscomp$9318_x$$ instanceof $APP.cljs.core.Symbol) {
    $JSCompiler_temp$jscomp$9315_JSCompiler_temp_const$$ = $APP.cljs.core;
    var $JSCompiler_temp_const$$ = $JSCompiler_temp$jscomp$9315_JSCompiler_temp_const$$.boolean$;
    var $G__44093$jscomp$inline_9804_or__5025__auto__$$ = $APP.cljs.core.first($APP.cljs.core.name($G__44094$jscomp$inline_9805_JSCompiler_inline_result$jscomp$9318_x$$));
    $G__44093$jscomp$inline_9804_or__5025__auto__$$ = asami.projection.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1 ? asami.projection.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1($G__44093$jscomp$inline_9804_or__5025__auto__$$) : asami.projection.var_marker_QMARK_.call(null, $G__44093$jscomp$inline_9804_or__5025__auto__$$);
    $APP.cljs.core.truth_($G__44093$jscomp$inline_9804_or__5025__auto__$$) ? $G__44094$jscomp$inline_9805_JSCompiler_inline_result$jscomp$9318_x$$ = $G__44093$jscomp$inline_9804_or__5025__auto__$$ : ($G__44094$jscomp$inline_9805_JSCompiler_inline_result$jscomp$9318_x$$ = $APP.cljs.core.first($APP.cljs.core.namespace($G__44094$jscomp$inline_9805_JSCompiler_inline_result$jscomp$9318_x$$)), $G__44094$jscomp$inline_9805_JSCompiler_inline_result$jscomp$9318_x$$ = asami.projection.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1 ? 
    asami.projection.var_marker_QMARK_.cljs$core$IFn$_invoke$arity$1($G__44094$jscomp$inline_9805_JSCompiler_inline_result$jscomp$9318_x$$) : asami.projection.var_marker_QMARK_.call(null, $G__44094$jscomp$inline_9805_JSCompiler_inline_result$jscomp$9318_x$$));
    $JSCompiler_temp$jscomp$9315_JSCompiler_temp_const$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp$jscomp$9315_JSCompiler_temp_const$$, $G__44094$jscomp$inline_9805_JSCompiler_inline_result$jscomp$9318_x$$);
  }
  return $JSCompiler_temp$jscomp$9315_JSCompiler_temp_const$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.vartest_QMARK_), $APP.schema.core.__GT_FnSchema(output_schema44086_44306, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44088_44307], null)));
var output_schema44095_44309 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), input_schema44096_44310 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta(cljs$cst$2361$wide_pattern, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2204$s_SLASH_Any], null)], null))), $APP.schema.core.one($APP.schema.core.maybe(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Num], null)), $APP.cljs.core.with_meta($APP.cljs$cst$85$nodes, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, 
new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2302$s_SLASH_Num], null))], null))), $APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Num, $APP.schema.core.Num]), $APP.cljs.core.with_meta(cljs$cst$2362$mapping, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2302$s_SLASH_Num, cljs$cst$2302$s_SLASH_Num], null)], null))), 
$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Value], null), $APP.cljs.core.with_meta($APP.cljs$cst$317$row, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2363$Value], null)], null)))], null), ret__35121__auto___44311 = asami.projection.project_row = function($wide_pattern$$, $nodes$$, 
$mapping$$, $row$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($p$$, $f$jscomp$533_p__44113_v$$) {
    var $t$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($f$jscomp$533_p__44113_v$$, 0, null);
    $f$jscomp$533_p__44113_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($f$jscomp$533_p__44113_v$$, 1, null);
    $f$jscomp$533_p__44113_v$$ = $APP.cljs.core.nat_int_QMARK_($f$jscomp$533_p__44113_v$$) ? $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row$$, $f$jscomp$533_p__44113_v$$) : null;
    return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($p$$, $t$$, $f$jscomp$533_p__44113_v$$);
  }, $wide_pattern$$, $mapping$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.project_row), $APP.schema.core.__GT_FnSchema(output_schema44095_44309, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44096_44310], null)));
var output_schema44117_44312 = $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Num, $APP.schema.core.Num]), input_schema44118_44313 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta(cljs$cst$2364$from, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2204$s_SLASH_Any], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.Symbol], null), $APP.cljs.core.with_meta(cljs$cst$2365$to, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1451$Symbol], 
null)], null)))], null), ret__35121__auto___44314 = asami.projection.matching_vars = function($from$$, $to$$) {
  return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.concat, $APP.cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(function($nt$$, $vt$$) {
    return $APP.cljs.core.seq($APP.cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(function($nf$$, $vf$$) {
      return asami.projection.vartest_QMARK_($vf$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($vt$$, $vf$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$nf$$, $nt$$], null) : null;
    }, $from$$));
  }, $to$$)));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.matching_vars), $APP.schema.core.__GT_FnSchema(output_schema44117_44312, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44118_44313], null)));
var output_schema44136_44315 = $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Num, $APP.schema.core.Num]), input_schema44137_44316 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta(cljs$cst$2366$full_pattern, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2204$s_SLASH_Any], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.Symbol], null), $APP.cljs.core.with_meta(cljs$cst$2367$data_vars, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1451$Symbol], 
null)], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta($APP.cljs$cst$380$data, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null)))], null), ret__35121__auto___44320 = asami.projection.offset_mappings = function($full_pattern$$, $data_vars$$, $data$$) {
  var $known_vars$$ = $APP.cljs.core.set($data_vars$$), $var_positions$$ = asami.projection.matching_vars($full_pattern$$, $data_vars$$), $fresh_map$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($n$$, $v$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$v$$, -($n$$ + 1)], null);
  }, $APP.cljs.core.set($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function($p1__44135_SHARP_$$) {
    return asami.projection.vartest_QMARK_($p1__44135_SHARP_$$) && $APP.cljs.core.not($known_vars$$.cljs$core$IFn$_invoke$arity$1 ? $known_vars$$.cljs$core$IFn$_invoke$arity$1($p1__44135_SHARP_$$) : $known_vars$$.call(null, $p1__44135_SHARP_$$));
  }, $full_pattern$$))));
  return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($var_positions$$, $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.identity, $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($n$$, $v$$) {
    return ($var_positions$$.cljs$core$IFn$_invoke$arity$1 ? $var_positions$$.cljs$core$IFn$_invoke$arity$1($n$$) : $var_positions$$.call(null, $n$$)) == null && asami.projection.vartest_QMARK_($v$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$n$$, $fresh_map$$.cljs$core$IFn$_invoke$arity$1 ? $fresh_map$$.cljs$core$IFn$_invoke$arity$1($v$$) : $fresh_map$$.call(null, $v$$)], null) : null;
  }, $full_pattern$$)));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.offset_mappings), $APP.schema.core.__GT_FnSchema(output_schema44136_44315, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44137_44316], null)));
var output_schema44160_44321 = asami.projection.Results, input_schema44161_44322 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Num, $APP.schema.core.Num]), $APP.cljs.core.with_meta(cljs$cst$2369$pattern__GT_data, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2302$s_SLASH_Num, 
cljs$cst$2302$s_SLASH_Num], null)], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta($APP.cljs$cst$380$data, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null)))], null), ret__35121__auto___44323 = asami.projection.dedupe_by = function($pattern__GT_data$$, $data$$) {
  var $cols$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function($p1__44159_SHARP_$$) {
    return $p1__44159_SHARP_$$ >= 0;
  }, $APP.cljs.core.vals($pattern__GT_data$$));
  return $APP.cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(function($rf$$) {
    var $pvs$$ = $APP.cljs.core.volatile_BANG_($APP.cljs.core.PersistentHashSet.EMPTY);
    return function() {
      var $G__44324$$ = null, $G__44324__0$$ = function() {
        return $rf$$.cljs$core$IFn$_invoke$arity$0 ? $rf$$.cljs$core$IFn$_invoke$arity$0() : $rf$$.call(null);
      }, $G__44324__1$$ = function($result$$) {
        return $rf$$.cljs$core$IFn$_invoke$arity$1 ? $rf$$.cljs$core$IFn$_invoke$arity$1($result$$) : $rf$$.call(null, $result$$);
      }, $G__44324__2$$ = function($result$$, $input$$) {
        var $row$$ = $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.nth, $input$$), $cols$$), $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
        var $JSCompiler_inline_result$jscomp$833_fexpr__44167$$ = $APP.cljs.core.deref($pvs$$);
        $JSCompiler_inline_result$jscomp$833_fexpr__44167$$ = $JSCompiler_inline_result$jscomp$833_fexpr__44167$$.cljs$core$IFn$_invoke$arity$1 ? $JSCompiler_inline_result$jscomp$833_fexpr__44167$$.cljs$core$IFn$_invoke$arity$1($row$$) : $JSCompiler_inline_result$jscomp$833_fexpr__44167$$.call(null, $row$$);
        if ($JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$833_fexpr__44167$$)) {
          return $result$$;
        }
        $pvs$$.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($pvs$$.cljs$core$IDeref$_deref$arity$1(null), $row$$));
        return $rf$$.cljs$core$IFn$_invoke$arity$2 ? $rf$$.cljs$core$IFn$_invoke$arity$2($result$$, $input$$) : $rf$$.call(null, $result$$, $input$$);
      };
      $G__44324$$ = function($result$$, $input$$) {
        switch(arguments.length) {
          case 0:
            return $G__44324__0$$.call(this);
          case 1:
            return $G__44324__1$$.call(this, $result$$);
          case 2:
            return $G__44324__2$$.call(this, $result$$, $input$$);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      $G__44324$$.cljs$core$IFn$_invoke$arity$0 = $G__44324__0$$;
      $G__44324$$.cljs$core$IFn$_invoke$arity$1 = $G__44324__1$$;
      $G__44324$$.cljs$core$IFn$_invoke$arity$2 = $G__44324__2$$;
      return $G__44324$$;
    }();
  }, $data$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.dedupe_by), $APP.schema.core.__GT_FnSchema(output_schema44160_44321, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44161_44322], null)));
var output_schema44180_44325 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Num], null), input_schema44181_44326 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Num, $APP.schema.core.Num]), $APP.cljs.core.with_meta(cljs$cst$2370$offset_map, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2302$s_SLASH_Num, cljs$cst$2302$s_SLASH_Num], null)], null)))], null), ret__35121__auto___44327 = asami.projection.new_nodes = function($offset_map$$) {
  return $APP.cljs.core.seq($APP.cljs.core.set($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.neg_QMARK_, $APP.cljs.core.vals($offset_map$$))));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.new_nodes), $APP.schema.core.__GT_FnSchema(output_schema44180_44325, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44181_44326], null)));
var output_schema44184_44328 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), input_schema44185_44329 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2371$resolve_pattern_fn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), 
$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Axiom], null), $APP.cljs.core.with_meta($APP.cljs$cst$2372$group, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2373$Axiom], null)], null)))], null), ret__35121__auto___44334 = asami.projection.group_exists_QMARK_ = function($resolve_pattern_fn$$, 
$group_temp__5823__auto__$$) {
  $group_temp__5823__auto__$$ = $APP.cljs.core.some(function($p__44188$$) {
    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44188$$, 0, null);
    var $a$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44188$$, 1, null);
    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44188$$, 2, null);
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($a$$, $APP.cljs$cst$2374$db_SLASH_ident) ? $p__44188$$ : null;
  }, $group_temp__5823__auto__$$);
  if ($APP.cljs.core.truth_($group_temp__5823__auto__$$)) {
    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($group_temp__5823__auto__$$, 0, null);
    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($group_temp__5823__auto__$$, 1, null);
    var $val$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($group_temp__5823__auto__$$, 2, null);
    return $APP.cljs.core.seq(function() {
      var $G__44210$$ = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2375$_QMARK_e, $APP.cljs$cst$2374$db_SLASH_ident, $val$$], null);
      return $resolve_pattern_fn$$.cljs$core$IFn$_invoke$arity$1 ? $resolve_pattern_fn$$.cljs$core$IFn$_invoke$arity$1($G__44210$$) : $resolve_pattern_fn$$.call(null, $G__44210$$);
    }());
  }
  return null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.group_exists_QMARK_), $APP.schema.core.__GT_FnSchema(output_schema44184_44328, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44185_44329], null)));
var output_schema44211_44335 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Axiom], null), input_schema44212_44336 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Axiom], null), $APP.cljs.core.with_meta(cljs$cst$2376$triples, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2373$Axiom], null)], null)))], null), ret__35121__auto___44337 = asami.projection.adorn_entities = function($triples$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc$jscomp$34_r$$, $p__44215$$) {
    var $e$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44215$$, 0, null), $a$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44215$$, 1, null);
    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44215$$, 2, null);
    $acc$jscomp$34_r$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($acc$jscomp$34_r$$, $p__44215$$);
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2374$db_SLASH_ident, $a$$) ? $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($acc$jscomp$34_r$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$e$$, cljs$cst$2377$a_SLASH_entity, !0], null)) : $acc$jscomp$34_r$$;
  }, $APP.cljs.core.PersistentVector.EMPTY, $triples$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.adorn_entities), $APP.schema.core.__GT_FnSchema(output_schema44211_44335, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44212_44336], null)));
var output_schema44219_44338 = $APP.schema.core.Any, input_schema44220_44339 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.projection.Var, $APP.cljs.core.with_meta($APP.cljs$cst$57$v, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2308$Var], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Var], 
null), $APP.cljs.core.with_meta($APP.cljs$cst$2378$columns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2308$Var], null)], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta($APP.cljs$cst$380$data, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null)))], null), ret__35121__auto___44340 = 
asami.projection.project_single = function($v$$, $columns$$, $data$$) {
  var $temp__5823__auto__$$ = $APP.cljs.core.first($APP.cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(function($n$$, $c$$) {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($v$$, $c$$) ? $n$$ : null;
  }, $columns$$));
  if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
    return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.first($data$$), $temp__5823__auto__$$);
  }
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Projection variable was not in the selected data: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($v$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$328$var, $v$$, $APP.cljs$cst$142$data, $columns$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.project_single), $APP.schema.core.__GT_FnSchema(output_schema44219_44338, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44220_44339], null)));
var output_schema44241_44351 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), input_schema44242_44352 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.projection.Var, $APP.cljs.core.with_meta($APP.cljs$cst$57$v, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2308$Var], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Var], null), $APP.cljs.core.with_meta($APP.cljs$cst$2378$columns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2308$Var], null)], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta($APP.cljs$cst$380$data, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
cljs$cst$2368$Results], null)))], null), ret__35121__auto___44353 = asami.projection.project_collection = function($v$$, $columns$$, $data$$) {
  var $temp__5823__auto__$$ = $APP.cljs.core.first($APP.cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(function($n$$, $c$$) {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($v$$, $c$$) ? $n$$ : null;
  }, $columns$$));
  if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
    return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__44240_SHARP_$$) {
      return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($p1__44240_SHARP_$$, $temp__5823__auto__$$);
    }, $data$$);
  }
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Projection variable was not in the selected data: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($v$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$328$var, $v$$, $APP.cljs$cst$142$data, $columns$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.project_collection), $APP.schema.core.__GT_FnSchema(output_schema44241_44351, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44242_44352], null)));
var output_schema44259_44356 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), input_schema44260_44357 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Var], null), $APP.cljs.core.with_meta($APP.cljs$cst$2379$tuple, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2308$Var], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Var], null), $APP.cljs.core.with_meta($APP.cljs$cst$2378$columns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$2308$Var], null)], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta($APP.cljs$cst$380$data, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null)))], null), ret__35121__auto___44362 = asami.projection.project_tuple = function($missing_tuple$$, $columns$$, $data$$) {
  if ($APP.cljs.core.seq($data$$)) {
    var $width$$ = $APP.cljs.core.count($missing_tuple$$), $col_mapping$$ = asami.projection.matching_vars($missing_tuple$$, $columns$$), $row$$ = $APP.cljs.core.first($data$$);
    if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($width$$, $APP.cljs.core.count($col_mapping$$))) {
      return $APP.cljs.core.with_meta($APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function($p1__44245_SHARP_$$) {
        return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row$$, $col_mapping$$.cljs$core$IFn$_invoke$arity$1 ? $col_mapping$$.cljs$core$IFn$_invoke$arity$1($p1__44245_SHARP_$$) : $col_mapping$$.call(null, $p1__44245_SHARP_$$));
      }, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($width$$)), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $missing_tuple$$], null));
    }
    $missing_tuple$$ = $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.nth, $missing_tuple$$), $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($col_mapping$$, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.count($missing_tuple$$))));
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Projection variables not found in the selected data: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($missing_tuple$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2380$missing, $missing_tuple$$, $APP.cljs$cst$142$data, $columns$$], null));
  }
  return null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.project_tuple), $APP.schema.core.__GT_FnSchema(output_schema44259_44356, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44260_44357], null)));
var output_schema44264_44363 = asami.projection.Results, input_schema44265_44364 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$2203$pattern, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$2204$s_SLASH_Any], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Var], null), $APP.cljs.core.with_meta($APP.cljs$cst$2378$columns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2308$Var], null)], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta($APP.cljs$cst$380$data, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null)))], null), ret__35121__auto___44366 = asami.projection.project_results = function($pattern$$, $columns$$, $data$$) {
  var $full_pattern$$ = $APP.cljs.core.vec($pattern$$), $pattern__GT_data$$ = asami.projection.offset_mappings($full_pattern$$, $columns$$, $data$$), $nodes$$ = asami.projection.new_nodes($pattern__GT_data$$);
  return $APP.cljs.core.with_meta($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__44263_SHARP_$$) {
    return asami.projection.project_row($full_pattern$$, $nodes$$, $pattern__GT_data$$, $p1__44263_SHARP_$$);
  }, $data$$), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $full_pattern$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.project_results), $APP.schema.core.__GT_FnSchema(output_schema44264_44363, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44265_44364], null)));
var output_schema44275_44370 = $APP.schema.core.Any, input_schema44276_44371 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), cljs$cst$2210$arg0), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta($APP.cljs$cst$380$data, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
cljs$cst$2368$Results], null)))], null), ret__35121__auto___44372 = asami.projection.project = function($p__44280$$, $data$$) {
  var $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44280$$, 0, null), $length$$ = $APP.cljs.core.count($p__44280$$), $columns$$ = cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($data$$));
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $length$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$165$_DOT_, $APP.cljs.core.second($p__44280$$)) ? asami.projection.project_single($v$$, $columns$$, $data$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $length$$) && $APP.cljs.core.vector_QMARK_($v$$) ? $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $APP.cljs.core.count($v$$)) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1481$_DOT__DOT__DOT_, 
  $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($v$$, 1)) ? asami.projection.project_collection($APP.cljs.core.first($v$$), $columns$$, $data$$) : asami.projection.project_tuple($v$$, $columns$$, $data$$) : asami.projection.project_results($p__44280$$, $columns$$, $data$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.projection.project), $APP.schema.core.__GT_FnSchema(output_schema44275_44370, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44276_44371], null)));
asami.query = {};
asami.query._STAR_env_STAR_ = $APP.cljs.core.PersistentArrayMap.EMPTY;
asami.query._STAR_select_distinct_STAR_ = $APP.cljs.core.distinct;
asami.query._STAR_override_restrictions_STAR_ = !1;
asami.query.identity_binding = $APP.cljs.core.with_meta(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $APP.cljs.core.PersistentVector.EMPTY], null));
asami.query.null_value = null;
asami.query.vars = function($s$$) {
  return $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(asami.projection.vartest_QMARK_, $s$$);
};
asami.query.plain_var = function($v$$) {
  var $n$$ = $APP.cljs.core.name($v$$), $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
  var $G__44604$jscomp$inline_4947_JSCompiler_inline_result$$ = $APP.cljs.core.last($n$$);
  var $fexpr__44603$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, ["*", null, "+", null], null), null);
  $G__44604$jscomp$inline_4947_JSCompiler_inline_result$$ = $fexpr__44603$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__44603$$.cljs$core$IFn$_invoke$arity$1($G__44604$jscomp$inline_4947_JSCompiler_inline_result$$) : $fexpr__44603$$.call(null, $G__44604$jscomp$inline_4947_JSCompiler_inline_result$$);
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $G__44604$jscomp$inline_4947_JSCompiler_inline_result$$) ? $APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.namespace($v$$), $APP.cljs.core.subs.cljs$core$IFn$_invoke$arity$3($n$$, 0, $n$$.length - 1)) : $v$$;
};
asami.query.plain_vars = function($v$$) {
  return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(asami.query.plain_var, asami.query.vars($v$$));
};
asami.query.find_vars = function($f$$) {
  return $APP.cljs.core.set(asami.query.plain_vars($f$$));
};
asami.query.op_error = function($pattern$$) {
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Unknown operator", new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2297$op, $APP.cljs.core.first($pattern$$), $APP.cljs$cst$255$args, $APP.cljs.core.rest($pattern$$)], null));
};
asami.query.pattern_error = function($pattern$$) {
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown pattern type in query: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($pattern$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2381$pattern, $pattern$$], null));
};
asami.planner.HasVars.object = !0;
asami.planner.get_vars.object = function($pattern$$) {
  if (asami.planner.bindings_QMARK_($pattern$$)) {
    return $APP.cljs.core.set(cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($pattern$$)));
  }
  if (asami.projection.epv_pattern_QMARK_($pattern$$)) {
    return asami.query.find_vars($pattern$$);
  }
  if (zuko.schema.filter_pattern_QMARK_($pattern$$)) {
    var $JSCompiler_temp_const$jscomp$838_expr$jscomp$66_or__5025__auto__$$ = $APP.cljs$cst$2382$vars.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($pattern$$));
    return $APP.cljs.core.truth_($JSCompiler_temp_const$jscomp$838_expr$jscomp$66_or__5025__auto__$$) ? $JSCompiler_temp_const$jscomp$838_expr$jscomp$66_or__5025__auto__$$ : asami.query.find_vars($APP.cljs.core.first($pattern$$));
  }
  if (zuko.schema.op_pattern_QMARK_($pattern$$)) {
    $JSCompiler_temp_const$jscomp$838_expr$jscomp$66_or__5025__auto__$$ = $APP.cljs.core;
    var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$838_expr$jscomp$66_or__5025__auto__$$.truth_;
    var $G__44634$jscomp$inline_4950_JSCompiler_inline_result$$ = $APP.cljs.core.first($pattern$$);
    $G__44634$jscomp$inline_4950_JSCompiler_inline_result$$ = asami.query.operators.cljs$core$IFn$_invoke$arity$1 ? asami.query.operators.cljs$core$IFn$_invoke$arity$1($G__44634$jscomp$inline_4950_JSCompiler_inline_result$$) : asami.query.operators.call(null, $G__44634$jscomp$inline_4950_JSCompiler_inline_result$$);
    return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$838_expr$jscomp$66_or__5025__auto__$$, $G__44634$jscomp$inline_4950_JSCompiler_inline_result$$) ? asami.query.operand_vars.cljs$core$IFn$_invoke$arity$1 ? asami.query.operand_vars.cljs$core$IFn$_invoke$arity$1($pattern$$) : asami.query.operand_vars.call(null, $pattern$$) : asami.query.op_error($pattern$$);
  }
  return zuko.schema.eval_pattern_QMARK_($pattern$$) ? ($JSCompiler_temp_const$jscomp$838_expr$jscomp$66_or__5025__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($pattern$$, 0, null), $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($pattern$$, 1, null), $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(asami.projection.vartest_QMARK_, $JSCompiler_temp_const$jscomp$838_expr$jscomp$66_or__5025__auto__$$)) : asami.query.pattern_error($pattern$$);
};
asami.planner.HasVars["null"] = !0;
asami.planner.get_vars["null"] = function($pattern$$) {
  return null;
};
asami.query.operand_vars = function($o$$) {
  return $APP.cljs.core.first($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($p__44655$$, $v$$) {
    var $acc$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44655$$, 0, null), $seen_QMARK_$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44655$$, 1, null);
    return $APP.cljs.core.truth_($seen_QMARK_$$.cljs$core$IFn$_invoke$arity$1 ? $seen_QMARK_$$.cljs$core$IFn$_invoke$arity$1($v$$) : $seen_QMARK_$$.call(null, $v$$)) ? $p__44655$$ : new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($acc$$, $v$$), $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($seen_QMARK_$$, $v$$)], null);
  }, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.PersistentHashSet.EMPTY], null), $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(asami.planner.get_vars, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.rest($o$$)], 0))));
};
var output_schema44659_45682 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), input_schema44660_45683 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1242$e, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$14$s, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2204$s_SLASH_Any], null)], null)))], null), ret__35121__auto___45685 = asami.query.without = function($e$$, $s$$) {
  return $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._EQ_, $e$$), $s$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.without), $APP.schema.core.__GT_FnSchema(output_schema44659_45682, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44660_45683], null)));
var output_schema44664_45686 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), input_schema44665_45687 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Value], null), $APP.cljs.core.with_meta($APP.cljs$cst$2383$existing, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2363$Value], null)], null))), $APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Num, $APP.schema.core.Num]), $APP.cljs.core.with_meta(cljs$cst$2362$mapping, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2302$s_SLASH_Num, cljs$cst$2302$s_SLASH_Num], 
null)], null))), $APP.schema.core.one(asami.projection.EPVPattern, $APP.cljs.core.with_meta($APP.cljs$cst$2203$pattern, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2323$EPVPattern], null)))], null), ret__35121__auto___45688 = asami.query.modify_pattern = function($existing$$, $mapping$$, $pattern$$) {
  return $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($n$jscomp$286_temp__5823__auto__$$, $v$$) {
    $n$jscomp$286_temp__5823__auto__$$ = $mapping$$.cljs$core$IFn$_invoke$arity$1 ? $mapping$$.cljs$core$IFn$_invoke$arity$1($n$jscomp$286_temp__5823__auto__$$) : $mapping$$.call(null, $n$jscomp$286_temp__5823__auto__$$);
    return $APP.cljs.core.truth_($n$jscomp$286_temp__5823__auto__$$) ? $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($existing$$, $n$jscomp$286_temp__5823__auto__$$) : $v$$;
  }, $pattern$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.modify_pattern), $APP.schema.core.__GT_FnSchema(output_schema44664_45686, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44665_45687], null)));
var output_schema44676_45689 = asami.projection.Results, input_schema44677_45690 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta(cljs$cst$2384$part, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null))), $APP.schema.core.one(asami.projection.EPVPattern, $APP.cljs.core.with_meta($APP.cljs$cst$2203$pattern, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2323$EPVPattern], null)))], null), ret__35121__auto___45691 = asami.query.pattern_left_join = function($graph$$, $part$$, $pattern$$) {
  var $cols$$ = cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($part$$)), $total_cols$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($cols$$, $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set($cols$$), asami.query.plain_vars($pattern$$)))), $pattern__GT_left$$ = asami.projection.matching_vars($pattern$$, $cols$$);
  return $APP.cljs.core.with_meta(function() {
    return function $asami$query$pattern_left_join_$_iter__44688$$($s__44689$$) {
      return new $APP.cljs.core.LazySeq(null, function() {
        for (var $s__44689__$1$$ = $s__44689$$;;) {
          var $iterys__5499__auto__$jscomp$28_temp__5825__auto__$$ = $APP.cljs.core.seq($s__44689__$1$$);
          if ($iterys__5499__auto__$jscomp$28_temp__5825__auto__$$) {
            var $xs__6385__auto__$$ = $iterys__5499__auto__$jscomp$28_temp__5825__auto__$$, $lrow$$ = $APP.cljs.core.first($xs__6385__auto__$$), $fs__5500__auto__$$ = asami.query.modify_pattern($lrow$$, $pattern__GT_left$$, $pattern$$);
            $iterys__5499__auto__$jscomp$28_temp__5825__auto__$$ = function($s__44689__$1$$, $lookup$$, $lrow$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $cols$$, $total_cols$$, $pattern__GT_left$$, $output_schema44676_45689$$, $input_schema44677_45690$$) {
              return function $asami$query$pattern_left_join_$_iter__44688_$_iter__44690$$($s__44691$$) {
                return new $APP.cljs.core.LazySeq(null, function($s__44689__$1$$, $lookup$$, $lrow$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $cols$$, $total_cols$$, $pattern__GT_left$$, $output_schema44676_45689$$, $input_schema44677_45690$$) {
                  return function() {
                    for (;;) {
                      var $s__44691__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__44691$$);
                      if ($s__44691__$2_temp__5825__auto____$1$$) {
                        if ($APP.cljs.core.chunked_seq_QMARK_($s__44691__$2_temp__5825__auto____$1$$)) {
                          var $JSCompiler_inline_result$jscomp$840_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__44691__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$840_c__5501__auto__$$), $b__44693_rrow$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                          a: {
                            for (var $i__44692$$ = 0;;) {
                              if ($i__44692$$ < $size__5502__auto__$$) {
                                var $rrow$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$840_c__5501__auto__$$, $i__44692$$);
                                $APP.cljs.core.chunk_append($b__44693_rrow$$, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($lrow$$, $rrow$$));
                                $i__44692$$ += 1;
                              } else {
                                $JSCompiler_inline_result$jscomp$840_c__5501__auto__$$ = !0;
                                break a;
                              }
                            }
                            $JSCompiler_inline_result$jscomp$840_c__5501__auto__$$ = void 0;
                          }
                          return $JSCompiler_inline_result$jscomp$840_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__44693_rrow$$), $asami$query$pattern_left_join_$_iter__44688_$_iter__44690$$($APP.cljs.core.chunk_rest($s__44691__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__44693_rrow$$), null);
                        }
                        $b__44693_rrow$$ = $APP.cljs.core.first($s__44691__$2_temp__5825__auto____$1$$);
                        return $APP.cljs.core.cons($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($lrow$$, $b__44693_rrow$$), $asami$query$pattern_left_join_$_iter__44688_$_iter__44690$$($APP.cljs.core.rest($s__44691__$2_temp__5825__auto____$1$$)));
                      }
                      return null;
                    }
                  };
                }($s__44689__$1$$, $lookup$$, $lrow$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $cols$$, $total_cols$$, $pattern__GT_left$$, $output_schema44676_45689$$, $input_schema44677_45690$$), null, null);
              };
            }($s__44689__$1$$, $fs__5500__auto__$$, $lrow$$, $xs__6385__auto__$$, $iterys__5499__auto__$jscomp$28_temp__5825__auto__$$, $cols$$, $total_cols$$, $pattern__GT_left$$, output_schema44676_45689, input_schema44677_45690);
            if ($fs__5500__auto__$$ = $APP.cljs.core.seq($iterys__5499__auto__$jscomp$28_temp__5825__auto__$$(asami.graph.resolve_pattern($graph$$, $fs__5500__auto__$$)))) {
              return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$$, $asami$query$pattern_left_join_$_iter__44688$$($APP.cljs.core.rest($s__44689__$1$$)));
            }
            $s__44689__$1$$ = $APP.cljs.core.rest($s__44689__$1$$);
          } else {
            return null;
          }
        }
      }, null, null);
    }($part$$);
  }(), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $total_cols$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.pattern_left_join), $APP.schema.core.__GT_FnSchema(output_schema44676_45689, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44677_45690], null)));
asami.query.vconj = function($c$$, $v$$) {
  return $APP.cljs.core.truth_($c$$) ? $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($c$$, $v$$) : new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$v$$], null);
};
var output_schema44766_45699 = asami.projection.Results, input_schema44767_45700 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta(cljs$cst$2384$part, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta($APP.cljs$cst$375$bindings, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null)))], null), ret__35121__auto___45701 = asami.query.prebound_left_join = function($part$$, $bindings$$) {
  var $lcols$$ = cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($part$$)), $rcols$$ = cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($bindings$$)), $total_cols$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($lcols$$, $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set($lcols$$), $rcols$$))), $left__GT_binding$$ = asami.projection.matching_vars($lcols$$, 
  $rcols$$);
  return $APP.cljs.core.with_meta($APP.cljs.core.seq($left__GT_binding$$) ? function() {
    var $key_indices$$ = $APP.cljs.core.sort.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.keys($left__GT_binding$$)), $select_key$$ = function($row$$) {
      return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__44765_SHARP_$$) {
        return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row$$, $p1__44765_SHARP_$$);
      }, $key_indices$$);
    }, $val_set$$ = $APP.cljs.core.set($APP.cljs.core.vals($left__GT_binding$$)), $width$$ = $APP.cljs.core.count($rcols$$), $split_row$$ = function($row$$) {
      return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($p__44779_v$$, $n$$) {
        var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44779_v$$, 0, null);
        $p__44779_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44779_v$$, 1, null);
        $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row$$, $n$$);
        return $APP.cljs.core.truth_($val_set$$.cljs$core$IFn$_invoke$arity$1 ? $val_set$$.cljs$core$IFn$_invoke$arity$1($n$$) : $val_set$$.call(null, $n$$)) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($k$$, $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row$$, $n$$)), $p__44779_v$$], null) : new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($p__44779_v$$, 
        $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row$$, $n$$))], null);
      }, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.PersistentVector.EMPTY], null), $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($width$$));
    }, $local_index$$ = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($idx$$, $row$$) {
      var $new$$$ = $split_row$$($row$$);
      $row$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($new$$$, 0, null);
      $new$$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($new$$$, 1, null);
      return $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$4($idx$$, $row$$, asami.query.vconj, $new$$$);
    }, $APP.cljs.core.PersistentArrayMap.EMPTY, $bindings$$);
    return function $asami$query$prebound_left_join_$_iter__44811$$($s__44812$$) {
      return new $APP.cljs.core.LazySeq(null, function() {
        for (var $s__44812__$1$$ = $s__44812$$;;) {
          var $fs__5500__auto__$jscomp$29_iterys__5499__auto__$jscomp$29_temp__5825__auto__$$ = $APP.cljs.core.seq($s__44812__$1$$);
          if ($fs__5500__auto__$jscomp$29_iterys__5499__auto__$jscomp$29_temp__5825__auto__$$) {
            var $xs__6385__auto__$$ = $fs__5500__auto__$jscomp$29_iterys__5499__auto__$jscomp$29_temp__5825__auto__$$, $lrow$$ = $APP.cljs.core.first($xs__6385__auto__$$);
            $fs__5500__auto__$jscomp$29_iterys__5499__auto__$jscomp$29_temp__5825__auto__$$ = function($s__44812__$1$$, $lrow$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $key_indices$$, $select_key$$, $val_set$$, $width$$, $split_row$$, $local_index$$, $lcols$$, $rcols$$, $total_cols$$, $left__GT_binding$$, $output_schema44766_45699$$, $input_schema44767_45700$$) {
              return function $asami$query$prebound_left_join_$_iter__44811_$_iter__44813$$($s__44814$$) {
                return new $APP.cljs.core.LazySeq(null, function($s__44812__$1$$, $lrow$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $key_indices$$, $select_key$$, $val_set$$, $width$$, $split_row$$, $local_index$$, $lcols$$, $rcols$$, $total_cols$$, $left__GT_binding$$, $output_schema44766_45699$$, $input_schema44767_45700$$) {
                  return function() {
                    for (;;) {
                      var $s__44814__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__44814$$);
                      if ($s__44814__$2_temp__5825__auto____$1$$) {
                        if ($APP.cljs.core.chunked_seq_QMARK_($s__44814__$2_temp__5825__auto____$1$$)) {
                          var $JSCompiler_inline_result$jscomp$841_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__44814__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$841_c__5501__auto__$$), $b__44816_rrow$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                          a: {
                            for (var $i__44815$$ = 0;;) {
                              if ($i__44815$$ < $size__5502__auto__$$) {
                                var $rrow$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$841_c__5501__auto__$$, $i__44815$$);
                                $APP.cljs.core.chunk_append($b__44816_rrow$$, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($lrow$$, $rrow$$));
                                $i__44815$$ += 1;
                              } else {
                                $JSCompiler_inline_result$jscomp$841_c__5501__auto__$$ = !0;
                                break a;
                              }
                            }
                            $JSCompiler_inline_result$jscomp$841_c__5501__auto__$$ = void 0;
                          }
                          return $JSCompiler_inline_result$jscomp$841_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__44816_rrow$$), $asami$query$prebound_left_join_$_iter__44811_$_iter__44813$$($APP.cljs.core.chunk_rest($s__44814__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__44816_rrow$$), null);
                        }
                        $b__44816_rrow$$ = $APP.cljs.core.first($s__44814__$2_temp__5825__auto____$1$$);
                        return $APP.cljs.core.cons($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($lrow$$, $b__44816_rrow$$), $asami$query$prebound_left_join_$_iter__44811_$_iter__44813$$($APP.cljs.core.rest($s__44814__$2_temp__5825__auto____$1$$)));
                      }
                      return null;
                    }
                  };
                }($s__44812__$1$$, $lrow$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $key_indices$$, $select_key$$, $val_set$$, $width$$, $split_row$$, $local_index$$, $lcols$$, $rcols$$, $total_cols$$, $left__GT_binding$$, $output_schema44766_45699$$, $input_schema44767_45700$$), null, null);
              };
            }($s__44812__$1$$, $lrow$$, $xs__6385__auto__$$, $fs__5500__auto__$jscomp$29_iterys__5499__auto__$jscomp$29_temp__5825__auto__$$, $key_indices$$, $select_key$$, $val_set$$, $width$$, $split_row$$, $local_index$$, $lcols$$, $rcols$$, $total_cols$$, $left__GT_binding$$, output_schema44766_45699, input_schema44767_45700);
            if ($fs__5500__auto__$jscomp$29_iterys__5499__auto__$jscomp$29_temp__5825__auto__$$ = $APP.cljs.core.seq($fs__5500__auto__$jscomp$29_iterys__5499__auto__$jscomp$29_temp__5825__auto__$$(function() {
              var $G__44817$$ = $select_key$$($lrow$$);
              return $local_index$$.cljs$core$IFn$_invoke$arity$1 ? $local_index$$.cljs$core$IFn$_invoke$arity$1($G__44817$$) : $local_index$$.call(null, $G__44817$$);
            }()))) {
              return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$29_iterys__5499__auto__$jscomp$29_temp__5825__auto__$$, $asami$query$prebound_left_join_$_iter__44811$$($APP.cljs.core.rest($s__44812__$1$$)));
            }
            $s__44812__$1$$ = $APP.cljs.core.rest($s__44812__$1$$);
          } else {
            return null;
          }
        }
      }, null, null);
    }($part$$);
  }() : function() {
    return function $asami$query$prebound_left_join_$_iter__44847$$($s__44848$$) {
      return new $APP.cljs.core.LazySeq(null, function() {
        for (var $s__44848__$1$$ = $s__44848$$;;) {
          var $fs__5500__auto__$jscomp$30_iterys__5499__auto__$jscomp$30_temp__5825__auto__$$ = $APP.cljs.core.seq($s__44848__$1$$);
          if ($fs__5500__auto__$jscomp$30_iterys__5499__auto__$jscomp$30_temp__5825__auto__$$) {
            var $xs__6385__auto__$$ = $fs__5500__auto__$jscomp$30_iterys__5499__auto__$jscomp$30_temp__5825__auto__$$, $row_l$$ = $APP.cljs.core.first($xs__6385__auto__$$);
            $fs__5500__auto__$jscomp$30_iterys__5499__auto__$jscomp$30_temp__5825__auto__$$ = function($s__44848__$1$$, $row_l$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $lcols$$, $rcols$$, $total_cols$$, $left__GT_binding$$, $output_schema44766_45699$$, $input_schema44767_45700$$) {
              return function $asami$query$prebound_left_join_$_iter__44847_$_iter__44849$$($s__44850$$) {
                return new $APP.cljs.core.LazySeq(null, function($s__44848__$1$$, $row_l$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $lcols$$, $rcols$$, $total_cols$$, $left__GT_binding$$, $output_schema44766_45699$$, $input_schema44767_45700$$) {
                  return function() {
                    for (;;) {
                      var $s__44850__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__44850$$);
                      if ($s__44850__$2_temp__5825__auto____$1$$) {
                        if ($APP.cljs.core.chunked_seq_QMARK_($s__44850__$2_temp__5825__auto____$1$$)) {
                          var $JSCompiler_inline_result$jscomp$842_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__44850__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$842_c__5501__auto__$$), $b__44852_row_r$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                          a: {
                            for (var $i__44851$$ = 0;;) {
                              if ($i__44851$$ < $size__5502__auto__$$) {
                                var $row_r$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$842_c__5501__auto__$$, $i__44851$$);
                                $APP.cljs.core.chunk_append($b__44852_row_r$$, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($row_l$$, $row_r$$));
                                $i__44851$$ += 1;
                              } else {
                                $JSCompiler_inline_result$jscomp$842_c__5501__auto__$$ = !0;
                                break a;
                              }
                            }
                            $JSCompiler_inline_result$jscomp$842_c__5501__auto__$$ = void 0;
                          }
                          return $JSCompiler_inline_result$jscomp$842_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__44852_row_r$$), $asami$query$prebound_left_join_$_iter__44847_$_iter__44849$$($APP.cljs.core.chunk_rest($s__44850__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__44852_row_r$$), null);
                        }
                        $b__44852_row_r$$ = $APP.cljs.core.first($s__44850__$2_temp__5825__auto____$1$$);
                        return $APP.cljs.core.cons($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($row_l$$, $b__44852_row_r$$), $asami$query$prebound_left_join_$_iter__44847_$_iter__44849$$($APP.cljs.core.rest($s__44850__$2_temp__5825__auto____$1$$)));
                      }
                      return null;
                    }
                  };
                }($s__44848__$1$$, $row_l$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $lcols$$, $rcols$$, $total_cols$$, $left__GT_binding$$, $output_schema44766_45699$$, $input_schema44767_45700$$), null, null);
              };
            }($s__44848__$1$$, $row_l$$, $xs__6385__auto__$$, $fs__5500__auto__$jscomp$30_iterys__5499__auto__$jscomp$30_temp__5825__auto__$$, $lcols$$, $rcols$$, $total_cols$$, $left__GT_binding$$, output_schema44766_45699, input_schema44767_45700);
            if ($fs__5500__auto__$jscomp$30_iterys__5499__auto__$jscomp$30_temp__5825__auto__$$ = $APP.cljs.core.seq($fs__5500__auto__$jscomp$30_iterys__5499__auto__$jscomp$30_temp__5825__auto__$$($bindings$$))) {
              return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$30_iterys__5499__auto__$jscomp$30_temp__5825__auto__$$, $asami$query$prebound_left_join_$_iter__44847$$($APP.cljs.core.rest($s__44848__$1$$)));
            }
            $s__44848__$1$$ = $APP.cljs.core.rest($s__44848__$1$$);
          } else {
            return null;
          }
        }
      }, null, null);
    }($part$$);
  }(), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $total_cols$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.prebound_left_join), $APP.schema.core.__GT_FnSchema(output_schema44766_45699, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44767_45700], null)));
asami.query.VarIndex = $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([asami.projection.Var, $APP.schema.core.Num]);
var output_schema44875_45706 = asami.query.VarIndex, input_schema44876_45707 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Var], null), $APP.cljs.core.with_meta($APP.cljs$cst$2385$vars, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$2308$Var], null)], null)))], null), ret__35121__auto___45708 = asami.query.index_vars = function($vars$$) {
  return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($n$$, $c$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$c$$, $n$$], null);
  }, $vars$$));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.index_vars), $APP.schema.core.__GT_FnSchema(output_schema44875_45706, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44876_45707], null)));
var output_schema44884_45709 = $APP.schema.core.maybe(asami.projection.Var), input_schema44885_45710 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.query.VarIndex, $APP.cljs.core.with_meta(cljs$cst$2386$var_index, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2387$VarIndex], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2388$arg, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null)))], null), ret__35121__auto___45711 = asami.query.missing = function($var_index$$, $arg$$) {
  return asami.projection.vartest_QMARK_($arg$$) && $APP.cljs.core.not($var_index$$.cljs$core$IFn$_invoke$arity$1 ? $var_index$$.cljs$core$IFn$_invoke$arity$1($arg$$) : $var_index$$.call(null, $arg$$)) ? $arg$$ : null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.missing), $APP.schema.core.__GT_FnSchema(output_schema44884_45709, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44885_45710], null)));
asami.query.Fcn = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(function($p1__44894_SHARP_$$) {
  return $APP.cljs.core.fn_QMARK_($p1__44894_SHARP_$$) || $APP.cljs.core.var_QMARK_($p1__44894_SHARP_$$);
});
var output_schema44909_45712 = $APP.schema.core.maybe(asami.query.Fcn), input_schema44910_45713 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Symbol, $APP.cljs.core.with_meta($APP.cljs$cst$14$s, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2296$s_SLASH_Symbol], null)))], null), ret__35121__auto___45714 = asami.query.resolve_op = function($s$$) {
  return $APP.cljs.core.truth_(function() {
    var $G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$ = asami.query._STAR_override_restrictions_STAR_;
    if ($APP.cljs.core.truth_($G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$)) {
      return $G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$;
    }
    $G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$ = $APP.cljs.core.namespace($s$$);
    if ($APP.cljs.core.truth_($G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$)) {
      var $fexpr__44913$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 3, ["clojure.core", null, "clojure.string", null, "cljs.core", null], null), null);
      $G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$ = $fexpr__44913$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__44913$$.cljs$core$IFn$_invoke$arity$1($G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$) : $fexpr__44913$$.call(null, $G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$);
      return $APP.cljs.core.truth_($G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$) ? ($G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$ = $APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.name($s$$)), zuko.sandbox.allowed_fns.cljs$core$IFn$_invoke$arity$1 ? zuko.sandbox.allowed_fns.cljs$core$IFn$_invoke$arity$1($G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$) : zuko.sandbox.allowed_fns.call(null, 
      $G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$)) : $G__44914_and__5023__auto__$jscomp$185_or__5025__auto__$jscomp$354_temp__5823__auto__$$;
    }
    return zuko.sandbox.allowed_fns.cljs$core$IFn$_invoke$arity$1 ? zuko.sandbox.allowed_fns.cljs$core$IFn$_invoke$arity$1($s$$) : zuko.sandbox.allowed_fns.call(null, $s$$);
  }()) ? zuko.util.fn_for($s$$) : null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.resolve_op), $APP.schema.core.__GT_FnSchema(output_schema44909_45712, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44910_45713], null)));
var output_schema44915_45715 = asami.query.Fcn, input_schema44916_45716 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2389$op, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(asami.query.VarIndex, $APP.cljs.core.with_meta(cljs$cst$2386$var_index, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2387$VarIndex], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2384$part, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___45717 = asami.query.retrieve_op = function($op$$, $var_index$$, $part$$) {
  if (asami.projection.vartest_QMARK_($op$$)) {
    var $JSCompiler_temp$jscomp$843_JSCompiler_temp$jscomp$844_JSCompiler_temp$jscomp$845_JSCompiler_temp$jscomp$846_or__5025__auto__$$ = function() {
      var $G__44919$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.first($part$$), $var_index$$.cljs$core$IFn$_invoke$arity$1 ? $var_index$$.cljs$core$IFn$_invoke$arity$1($op$$) : $var_index$$.call(null, $op$$));
      return asami.query.retrieve_op.cljs$core$IFn$_invoke$arity$3 ? asami.query.retrieve_op.cljs$core$IFn$_invoke$arity$3($G__44919$$, $var_index$$, $part$$) : asami.query.retrieve_op.call(null, $G__44919$$, $var_index$$, $part$$);
    }();
  } else {
    if ($APP.cljs.core.fn_QMARK_($op$$)) {
      $JSCompiler_temp$jscomp$843_JSCompiler_temp$jscomp$844_JSCompiler_temp$jscomp$845_JSCompiler_temp$jscomp$846_or__5025__auto__$$ = $op$$;
    } else {
      if ($op$$ instanceof $APP.cljs.core.Symbol) {
        $JSCompiler_temp$jscomp$843_JSCompiler_temp$jscomp$844_JSCompiler_temp$jscomp$845_JSCompiler_temp$jscomp$846_or__5025__auto__$$ = function() {
          var $or__5025__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2(asami.query._STAR_env_STAR_, $op$$);
          return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : asami.query.resolve_op($op$$);
        }();
      } else {
        if (typeof $op$$ === "string") {
          $JSCompiler_temp$jscomp$843_JSCompiler_temp$jscomp$844_JSCompiler_temp$jscomp$845_JSCompiler_temp$jscomp$846_or__5025__auto__$$ = asami.query.resolve_op($APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$1($op$$));
        } else {
          throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown operation type", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($op$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2297$op, $op$$, $APP.cljs$cst$139$type, $APP.cljs.core.type($op$$)], null));
        }
      }
    }
  }
  if ($APP.cljs.core.truth_($JSCompiler_temp$jscomp$843_JSCompiler_temp$jscomp$844_JSCompiler_temp$jscomp$845_JSCompiler_temp$jscomp$846_or__5025__auto__$$)) {
    return $JSCompiler_temp$jscomp$843_JSCompiler_temp$jscomp$844_JSCompiler_temp$jscomp$845_JSCompiler_temp$jscomp$846_or__5025__auto__$$;
  }
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unsupported operation: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($op$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2297$op, $op$$, $APP.cljs$cst$139$type, $APP.cljs.core.type($op$$)], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.retrieve_op), $APP.schema.core.__GT_FnSchema(output_schema44915_45715, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44916_45716], null)));
var output_schema44922_45722 = $APP.schema.core.Any, input_schema44923_45723 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta(cljs$cst$2384$part, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null))), $APP.schema.core.one(zuko.schema.FilterPattern, cljs$cst$2390$arg2)], null), ret__35121__auto___45724 = asami.query.filter_join = function($graph$jscomp$44_m$$, $part$$, $filter_fn_p__44926$$) {
  $graph$jscomp$44_m$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($filter_fn_p__44926$$, 0, null);
  $graph$jscomp$44_m$$ = $APP.cljs.core.seq($graph$jscomp$44_m$$);
  var $first__44932$$ = $APP.cljs.core.first($graph$jscomp$44_m$$), $seq__44931__$1$$ = $APP.cljs.core.next($graph$jscomp$44_m$$);
  $graph$jscomp$44_m$$ = $APP.cljs.core.meta($part$$);
  var $var_index$$ = asami.query.index_vars(cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($graph$jscomp$44_m$$)), $arg_indexes$$ = $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($i$$, $arg$jscomp$39_temp__5823__auto__$$) {
    $arg$jscomp$39_temp__5823__auto__$$ = $var_index$$.cljs$core$IFn$_invoke$arity$1 ? $var_index$$.cljs$core$IFn$_invoke$arity$1($arg$jscomp$39_temp__5823__auto__$$) : $var_index$$.call(null, $arg$jscomp$39_temp__5823__auto__$$);
    return $APP.cljs.core.truth_($arg$jscomp$39_temp__5823__auto__$$) ? $arg$jscomp$39_temp__5823__auto__$$ : $APP.cljs.core.constantly($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($seq__44931__$1$$, $i$$));
  }, $seq__44931__$1$$);
  $filter_fn_p__44926$$ = asami.projection.vartest_QMARK_($first__44932$$) ? function() {
    var $temp__5823__auto__$$ = $var_index$$.cljs$core$IFn$_invoke$arity$1 ? $var_index$$.cljs$core$IFn$_invoke$arity$1($first__44932$$) : $var_index$$.call(null, $first__44932$$);
    if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
      return function($a$$) {
        var $callable_op$$ = asami.query.retrieve_op($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($a$$, $temp__5823__auto__$$), $var_index$$, $part$$);
        return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($callable_op$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($f$$) {
          return $APP.cljs.core.fn_QMARK_($f$$) ? $f$$.cljs$core$IFn$_invoke$arity$0 ? $f$$.cljs$core$IFn$_invoke$arity$0() : $f$$.call(null) : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($a$$, $f$$);
        }, $arg_indexes$$));
      };
    }
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown variable: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($first__44932$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2297$op, $first__44932$$], null));
  }() : function() {
    var $callable_op$$ = asami.query.retrieve_op($first__44932$$, $var_index$$, $part$$);
    return function($a$$) {
      return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($callable_op$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($f$$) {
        return $APP.cljs.core.fn_QMARK_($f$$) ? $f$$.cljs$core$IFn$_invoke$arity$0 ? $f$$.cljs$core$IFn$_invoke$arity$0() : $f$$.call(null) : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($a$$, $f$$);
      }, $arg_indexes$$));
    };
  }();
  try {
    return $APP.cljs.core.with_meta($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($filter_fn_p__44926$$, $part$$), $graph$jscomp$44_m$$);
  } catch ($e44938$$) {
    var $e$$ = $e44938$$;
    throw function() {
      var $temp__5823__auto__$$ = $APP.cljs.core.some($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2(asami.query.missing, $var_index$$), $seq__44931__$1$$);
      if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
        var $JSCompiler_temp_const$$ = $APP.cljs.core.ex_info, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$2;
        var $JSCompiler_inline_result$jscomp$849_temp__5823__auto____$1$$ = $APP.cljs.core.namespace($temp__5823__auto__$$);
        $JSCompiler_inline_result$jscomp$849_temp__5823__auto____$1$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$849_temp__5823__auto____$1$$) ? [$JSCompiler_inline_result$jscomp$849_temp__5823__auto____$1$$, "/", $APP.cljs.core.name($temp__5823__auto__$$)].join("") : $APP.cljs.core.name($temp__5823__auto__$$);
        return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, ["Unknown variable in filter: ", $JSCompiler_inline_result$jscomp$849_temp__5823__auto____$1$$].join(""), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2382$vars, $APP.cljs.core.keys($var_index$$), cljs$cst$2391$filter_var, $temp__5823__auto__$$], null));
      }
      return $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Error executing filter: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($e$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1404$error, $e$$], null));
    }();
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.filter_join), $APP.schema.core.__GT_FnSchema(output_schema44922_45722, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44923_45723], null)));
var output_schema44949_45726 = $APP.schema.core.Any, input_schema44950_45727 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta(cljs$cst$2384$part, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null))), $APP.schema.core.one(zuko.schema.EvalPattern, cljs$cst$2390$arg2)], null), ret__35121__auto___45728 = asami.query.binding_join = function($binding_fn_graph$$, $part$$, $cols$$) {
  $binding_fn_graph$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($cols$$, 0, null);
  var $bnd_var_new_cols_seq__44962$$ = $APP.cljs.core.seq($binding_fn_graph$$), $first__44963$$ = $APP.cljs.core.first($bnd_var_new_cols_seq__44962$$);
  $APP.cljs.core.next($bnd_var_new_cols_seq__44962$$);
  $bnd_var_new_cols_seq__44962$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($cols$$, 1, null);
  $cols$$ = $APP.cljs.core.vec(cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($part$$)));
  $bnd_var_new_cols_seq__44962$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($cols$$, $bnd_var_new_cols_seq__44962$$);
  var $var_index$$ = asami.query.index_vars($cols$$), $arg_indexes$$ = $APP.cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(function($G__44967_p1__44945_SHARP_$$, $p2__44946_SHARP_$$) {
    if ($G__44967_p1__44945_SHARP_$$ === 0) {
      return null;
    }
    $G__44967_p1__44945_SHARP_$$ = -$G__44967_p1__44945_SHARP_$$;
    return $var_index$$.cljs$core$IFn$_invoke$arity$2 ? $var_index$$.cljs$core$IFn$_invoke$arity$2($p2__44946_SHARP_$$, $G__44967_p1__44945_SHARP_$$) : $var_index$$.call(null, $p2__44946_SHARP_$$, $G__44967_p1__44945_SHARP_$$);
  }, $binding_fn_graph$$), $expr__$1$$ = $APP.cljs.core.vec($binding_fn_graph$$);
  $binding_fn_graph$$ = asami.projection.vartest_QMARK_($first__44963$$) ? function() {
    var $temp__5823__auto__$$ = $var_index$$.cljs$core$IFn$_invoke$arity$1 ? $var_index$$.cljs$core$IFn$_invoke$arity$1($first__44963$$) : $var_index$$.call(null, $first__44963$$);
    if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
      return function($row$$) {
        var $o$$ = asami.query.retrieve_op($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row$$, $temp__5823__auto__$$), $var_index$$, $part$$);
        return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($row$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($o$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__44947_SHARP_$$) {
          return $p1__44947_SHARP_$$ < 0 ? $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($expr__$1$$, -$p1__44947_SHARP_$$) : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row$$, $p1__44947_SHARP_$$);
        }, $arg_indexes$$))], null));
      };
    }
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown variable: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($first__44963$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2297$op, $first__44963$$], null));
  }() : function() {
    var $callable_op$$ = asami.query.retrieve_op($first__44963$$, $var_index$$, $part$$);
    return function($row$$) {
      return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($row$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($callable_op$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__44948_SHARP_$$) {
        return $p1__44948_SHARP_$$ < 0 ? $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($expr__$1$$, -$p1__44948_SHARP_$$) : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row$$, $p1__44948_SHARP_$$);
      }, $arg_indexes$$))], null));
    };
  }();
  return $APP.cljs.core.with_meta($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($binding_fn_graph$$, $part$$), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $bnd_var_new_cols_seq__44962$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.binding_join), $APP.schema.core.__GT_FnSchema(output_schema44949_45726, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44950_45727], null)));
asami.query._STAR_plan_options_STAR_ = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1816$min], null);
var output_schema45000_45735 = $APP.schema.core.Any, input_schema45001_45736 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta(cljs$cst$2384$part, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null))), $APP.schema.core.one($APP.schema.core.Any, cljs$cst$2390$arg2)], null), ret__35121__auto___45737 = asami.query.minus = function($graph$$, $part$$, $p__45004_seq__45006$$) {
  $p__45004_seq__45006$$ = $APP.cljs.core.seq($p__45004_seq__45006$$);
  $APP.cljs.core.first($p__45004_seq__45006$$);
  var $seq__45006__$1$$ = $APP.cljs.core.next($p__45004_seq__45006$$), $fpattern$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($seq__45006__$1$$, 0, null), $ljoin$$ = function($p1__44993_SHARP_$$, $p2__44992_SHARP_$$) {
    return asami.query.left_join.cljs$core$IFn$_invoke$arity$3 ? asami.query.left_join.cljs$core$IFn$_invoke$arity$3($p2__44992_SHARP_$$, $p1__44993_SHARP_$$, $graph$$) : asami.query.left_join.call(null, $p2__44992_SHARP_$$, $p1__44993_SHARP_$$, $graph$$);
  }, $col_meta$$ = $APP.cljs.core.meta($part$$);
  return $APP.cljs.core.with_meta($APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(asami.projection.epv_pattern_QMARK_($fpattern$$) ? function() {
    var $cols$$ = cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($col_meta$$), $pattern__GT_left$$ = asami.projection.matching_vars($fpattern$$, $cols$$), $vars$$ = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($p1__44994_SHARP_$$, $p2__44995_SHARP_$$) {
      return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($p1__44994_SHARP_$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(asami.query.plain_var, asami.planner.get_vars($p2__44995_SHARP_$$)));
    }, $APP.cljs.core.PersistentHashSet.EMPTY, $seq__45006__$1$$), $pre_bound$$ = $APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$2($vars$$, $cols$$), $pattern_val_idxs$$ = $APP.cljs.core.set($APP.cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(function($n$$, $col$$) {
      return $APP.cljs.core.truth_($vars$$.cljs$core$IFn$_invoke$arity$1 ? $vars$$.cljs$core$IFn$_invoke$arity$1($col$$) : $vars$$.call(null, $col$$)) ? $n$$ : null;
    }, $cols$$));
    $cols$$ = $APP.cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(function($p1__44997_SHARP_$$, $p2__44996_SHARP_$$) {
      return asami.projection.vartest_QMARK_($p2__44996_SHARP_$$) && $APP.cljs.core.not($pattern__GT_left$$.cljs$core$IFn$_invoke$arity$1 ? $pattern__GT_left$$.cljs$core$IFn$_invoke$arity$1($p1__44997_SHARP_$$) : $pattern__GT_left$$.call(null, $p1__44997_SHARP_$$)) ? $p2__44996_SHARP_$$ : null;
    }, $fpattern$$);
    var $first_cols$$ = new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $APP.cljs.core.vec($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($pre_bound$$, $cols$$))], null);
    return function($bound_cols_part_line$$) {
      var $lookup$$ = asami.query.modify_pattern($bound_cols_part_line$$, $pattern__GT_left$$, $fpattern$$);
      $bound_cols_part_line$$ = $APP.cljs.core.vec($APP.cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(function($p1__44998_SHARP_$$, $p2__44999_SHARP_$$) {
        return $APP.cljs.core.truth_($pattern_val_idxs$$.cljs$core$IFn$_invoke$arity$1 ? $pattern_val_idxs$$.cljs$core$IFn$_invoke$arity$1($p1__44998_SHARP_$$) : $pattern_val_idxs$$.call(null, $p1__44998_SHARP_$$)) ? $p2__44999_SHARP_$$ : null;
      }, $bound_cols_part_line$$));
      return $APP.cljs.core.seq($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($ljoin$$, $APP.cljs.core.with_meta($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.into, $bound_cols_part_line$$), asami.graph.resolve_pattern($graph$$, $lookup$$)), $first_cols$$), $APP.cljs.core.rest($seq__45006__$1$$)));
    };
  }() : function($part_line$$) {
    return $APP.cljs.core.seq($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($ljoin$$, $APP.cljs.core.with_meta(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$part_line$$], null), $col_meta$$), $seq__45006__$1$$));
  }, $part$$), $col_meta$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.minus), $APP.schema.core.__GT_FnSchema(output_schema45000_45735, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45001_45736], null)));
asami.query.index = function($xs$$) {
  return $APP.cljs.core.zipmap($xs$$, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$0());
};
var output_schema45029_45742 = $APP.schema.core.Any, input_schema45030_45743 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta(cljs$cst$2384$part, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null))), $APP.schema.core.one($APP.schema.core.Any, cljs$cst$2390$arg2)], null), ret__35121__auto___45744 = asami.query.disjunction = function($graph$$, $part$$, $p__45040_seq__45042_seq__45042__$1_spread$$) {
  $p__45040_seq__45042_seq__45042__$1_spread$$ = $APP.cljs.core.seq($p__45040_seq__45042_seq__45042__$1_spread$$);
  $APP.cljs.core.first($p__45040_seq__45042_seq__45042__$1_spread$$);
  $p__45040_seq__45042_seq__45042__$1_spread$$ = $APP.cljs.core.next($p__45040_seq__45042_seq__45042__$1_spread$$);
  $p__45040_seq__45042_seq__45042__$1_spread$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__45028_SHARP_$$) {
    return asami.query.left_join.cljs$core$IFn$_invoke$arity$3 ? asami.query.left_join.cljs$core$IFn$_invoke$arity$3($p1__45028_SHARP_$$, $part$$, $graph$$) : asami.query.left_join.call(null, $p1__45028_SHARP_$$, $part$$, $graph$$);
  }, $p__45040_seq__45042_seq__45042__$1_spread$$);
  var $spread_cols$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs$cst$2299$cols, $APP.cljs.core.meta)), $p__45040_seq__45042_seq__45042__$1_spread$$), $result_cols$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.cat, $APP.cljs.core.distinct.cljs$core$IFn$_invoke$arity$0()), 
  $spread_cols$$);
  return $APP.cljs.core.with_meta(asami.query._STAR_select_distinct_STAR_.call(null, $APP.cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($results$$, $cols$$) {
    if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($cols$$, $result_cols$$)) {
      return $results$$;
    }
    var $cols_index$$ = asami.query.index($cols$$);
    $cols$$ = $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.juxt, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($col$$) {
      var $temp__5827__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($cols_index$$, $col$$);
      return $temp__5827__auto__$$ == null ? $APP.cljs.core.constantly(null) : function($result$$) {
        return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($result$$, $temp__5827__auto__$$);
      };
    }, $result_cols$$));
    return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($cols$$, $results$$);
  }), $APP.cljs.core.cat), $p__45040_seq__45042_seq__45042__$1_spread$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$spread_cols$$], 0))), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $result_cols$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.disjunction), $APP.schema.core.__GT_FnSchema(output_schema45029_45742, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45030_45743], null)));
var output_schema45049_45745 = $APP.schema.core.Any, input_schema45050_45746 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta(cljs$cst$2384$part, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null))), $APP.schema.core.one($APP.schema.core.Any, cljs$cst$2390$arg2)], null), ret__35121__auto___45747 = asami.query.conjunction = function($graph$$, $part$$, $p__45066_seq__45068_seq__45068__$1$$) {
  $p__45066_seq__45068_seq__45068__$1$$ = $APP.cljs.core.seq($p__45066_seq__45068_seq__45068__$1$$);
  $APP.cljs.core.first($p__45066_seq__45068_seq__45068__$1$$);
  $p__45066_seq__45068_seq__45068__$1$$ = $APP.cljs.core.next($p__45066_seq__45068_seq__45068__$1$$);
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($result$$, $pattern$$) {
    return asami.query.left_join.cljs$core$IFn$_invoke$arity$3 ? asami.query.left_join.cljs$core$IFn$_invoke$arity$3($pattern$$, $result$$, $graph$$) : asami.query.left_join.call(null, $pattern$$, $result$$, $graph$$);
  }, $part$$, $p__45066_seq__45068_seq__45068__$1$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.conjunction), $APP.schema.core.__GT_FnSchema(output_schema45049_45745, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45050_45746], null)));
var output_schema45072_45748 = $APP.schema.core.Any, input_schema45073_45749 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta(cljs$cst$2384$part, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null))), $APP.schema.core.one($APP.schema.core.Any, cljs$cst$2390$arg2)], null), ret__35121__auto___45750 = asami.query.optional = function($graph$$, $part$$, $new_cols$$) {
  var $cols$$ = $APP.cljs.core.seq($new_cols$$);
  $APP.cljs.core.first($cols$$);
  var $seq__45090__$1$$ = $APP.cljs.core.next($cols$$), $col_meta$$ = $APP.cljs.core.meta($part$$);
  $cols$$ = cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($col_meta$$);
  $new_cols$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set($cols$$), asami.planner.get_vars($new_cols$$));
  var $empties$$ = $APP.cljs.core.repeat.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count($new_cols$$), null), $ljoin$$ = function($p1__45071_SHARP_$$, $p2__45070_SHARP_$$) {
    return asami.query.left_join.cljs$core$IFn$_invoke$arity$3 ? asami.query.left_join.cljs$core$IFn$_invoke$arity$3($p2__45070_SHARP_$$, $p1__45071_SHARP_$$, $graph$$) : asami.query.left_join.call(null, $p2__45070_SHARP_$$, $p1__45071_SHARP_$$, $graph$$);
  };
  return $APP.cljs.core.with_meta($APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function($lrow$$) {
    var $or__5025__auto__$$ = $APP.cljs.core.seq($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($ljoin$$, $APP.cljs.core.with_meta(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$lrow$$], null), $col_meta$$), $seq__45090__$1$$));
    return $or__5025__auto__$$ ? $or__5025__auto__$$ : new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($lrow$$, $empties$$)], null);
  }, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$part$$], 0)), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $APP.cljs.core.vec($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($cols$$, $new_cols$$))], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.optional), $APP.schema.core.__GT_FnSchema(output_schema45072_45748, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45073_45749], null)));
asami.query.operators = new $APP.cljs.core.PersistentArrayMap(null, 8, [$APP.cljs$cst$946$not, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2392$left_join, asami.query.minus], null), cljs$cst$2208$NOT, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2392$left_join, asami.query.minus], null), $APP.cljs$cst$403$or, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2392$left_join, asami.query.disjunction], null), cljs$cst$2207$OR, new $APP.cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$2392$left_join, asami.query.disjunction], null), $APP.cljs$cst$408$and, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2392$left_join, asami.query.conjunction], null), cljs$cst$2206$AND, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2392$left_join, asami.query.conjunction], null), $APP.cljs$cst$1502$optional, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2392$left_join, asami.query.optional], null), cljs$cst$2209$OPTIONAL, new $APP.cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$2392$left_join, asami.query.optional], null)], null);
asami.query.left_join = function($pattern$$, $results$$, $graph$$) {
  if (asami.planner.bindings_QMARK_($pattern$$)) {
    return asami.query.prebound_left_join($results$$, $pattern$$);
  }
  if (asami.projection.epv_pattern_QMARK_($pattern$$)) {
    return asami.query.pattern_left_join($graph$$, $results$$, $pattern$$);
  }
  if (zuko.schema.filter_pattern_QMARK_($pattern$$)) {
    return asami.query.filter_join($graph$$, $results$$, $pattern$$);
  }
  if (zuko.schema.eval_pattern_QMARK_($pattern$$)) {
    return asami.query.binding_join($graph$$, $results$$, $pattern$$);
  }
  if (zuko.schema.op_pattern_QMARK_($pattern$$)) {
    var $G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$ = $APP.cljs.core.first($pattern$$);
    $G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$ = asami.query.operators.cljs$core$IFn$_invoke$arity$1 ? asami.query.operators.cljs$core$IFn$_invoke$arity$1($G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$) : asami.query.operators.call(null, $G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$);
    return $APP.cljs.core.truth_($G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$) ? ($G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$ = $APP.cljs.core.__destructure_map($G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$), $G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$, 
    cljs$cst$2392$left_join), $G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$3($graph$$, $results$$, $pattern$$) : $G__45103$jscomp$inline_4970_left_join_map__45114__$1_temp__5823__auto__$$.call(null, $graph$$, $results$$, $pattern$$)) : asami.query.op_error($pattern$$);
  }
  return asami.query.pattern_error($pattern$$);
};
var output_schema__35146__auto___45755 = $APP.schema.core.Any;
asami.query.InSpec = $APP.schema.core.validate(output_schema__35146__auto___45755, $APP.schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([function($p1__45117_SHARP_$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2393$$, $p1__45117_SHARP_$$);
}, $APP.schema.core.Symbol, function($JSCompiler_inline_result$$) {
  var $JSCompiler_temp$jscomp$850_JSCompiler_temp_const$$;
  if ($JSCompiler_temp$jscomp$850_JSCompiler_temp_const$$ = $JSCompiler_inline_result$$ instanceof $APP.cljs.core.Symbol) {
    $JSCompiler_temp$jscomp$850_JSCompiler_temp_const$$ = $APP.cljs.core._EQ_;
    var $JSCompiler_temp_const$$ = $JSCompiler_temp$jscomp$850_JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$2, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$1$$ = $JSCompiler_temp_const$jscomp$0$$.first;
    var $or__5025__auto__$$ = $APP.cljs.core.namespace($JSCompiler_inline_result$$);
    $JSCompiler_inline_result$$ = $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : $APP.cljs.core.name($JSCompiler_inline_result$$);
    $JSCompiler_temp$jscomp$850_JSCompiler_temp_const$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp$jscomp$850_JSCompiler_temp_const$$, "?", $JSCompiler_temp_const$jscomp$1$$.call($JSCompiler_temp_const$jscomp$0$$, $JSCompiler_inline_result$$));
  }
  return $JSCompiler_temp$jscomp$850_JSCompiler_temp_const$$;
}, $APP.schema.core.Symbol, function($p1__45125_SHARP_$$) {
  var $and__5023__auto__$$ = $APP.cljs.core.sequential_QMARK_;
  return $APP.cljs.core.truth_($and__5023__auto__$$) ? $APP.cljs.core.sequential_QMARK_($APP.cljs.core.first($p1__45125_SHARP_$$)) : $and__5023__auto__$$;
}, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Symbol], null)], null), $APP.cljs$cst$225$else, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Symbol], null)], 0)));
var output_schema45130_45756 = asami.planner.Bindings, input_schema45131_45757 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.planner.Bindings, $APP.cljs.core.with_meta(cljs$cst$2394$leftb, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2395$Bindings], null))), $APP.schema.core.one(asami.planner.Bindings, $APP.cljs.core.with_meta(cljs$cst$2396$rightb, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2395$Bindings], null)))], null), ret__35121__auto___45758 = asami.query.outer_product = function($leftb$$, $rightb$$) {
  var $namesl$$ = cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($leftb$$)), $namesr$$ = cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($rightb$$)), $temp__5825__auto___45759$$ = $APP.cljs.core.seq($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set($namesl$$), $namesr$$));
  if ($temp__5825__auto___45759$$) {
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Outer product between bindings should have distinct names", new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2397$duplicate_names, $temp__5825__auto___45759$$], null));
  }
  return $APP.cljs.core.with_meta(function() {
    return function $asami$query$outer_product_$_iter__45147$$($s__45148$$) {
      return new $APP.cljs.core.LazySeq(null, function() {
        for (var $s__45148__$1$$ = $s__45148$$;;) {
          var $fs__5500__auto__$jscomp$31_iterys__5499__auto__$jscomp$31_temp__5825__auto__$$ = $APP.cljs.core.seq($s__45148__$1$$);
          if ($fs__5500__auto__$jscomp$31_iterys__5499__auto__$jscomp$31_temp__5825__auto__$$) {
            var $xs__6385__auto__$$ = $fs__5500__auto__$jscomp$31_iterys__5499__auto__$jscomp$31_temp__5825__auto__$$, $row_l$$ = $APP.cljs.core.first($xs__6385__auto__$$);
            $fs__5500__auto__$jscomp$31_iterys__5499__auto__$jscomp$31_temp__5825__auto__$$ = function($s__45148__$1$$, $row_l$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $namesl$$, $namesr$$, $output_schema45130_45756$$, $input_schema45131_45757$$) {
              return function $asami$query$outer_product_$_iter__45147_$_iter__45149$$($s__45150$$) {
                return new $APP.cljs.core.LazySeq(null, function($s__45148__$1$$, $row_l$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $namesl$$, $namesr$$, $output_schema45130_45756$$, $input_schema45131_45757$$) {
                  return function() {
                    for (;;) {
                      var $s__45150__$2_temp__5825__auto____$1$$ = $APP.cljs.core.seq($s__45150$$);
                      if ($s__45150__$2_temp__5825__auto____$1$$) {
                        if ($APP.cljs.core.chunked_seq_QMARK_($s__45150__$2_temp__5825__auto____$1$$)) {
                          var $JSCompiler_inline_result$jscomp$856_c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__45150__$2_temp__5825__auto____$1$$), $size__5502__auto__$$ = $APP.cljs.core.count($JSCompiler_inline_result$jscomp$856_c__5501__auto__$$), $b__45152_row_r$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
                          a: {
                            for (var $i__45151$$ = 0;;) {
                              if ($i__45151$$ < $size__5502__auto__$$) {
                                var $row_r$$ = $APP.cljs.core._nth($JSCompiler_inline_result$jscomp$856_c__5501__auto__$$, $i__45151$$);
                                $APP.cljs.core.chunk_append($b__45152_row_r$$, $APP.cljs.core.vec($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($row_l$$, $row_r$$)));
                                $i__45151$$ += 1;
                              } else {
                                $JSCompiler_inline_result$jscomp$856_c__5501__auto__$$ = !0;
                                break a;
                              }
                            }
                            $JSCompiler_inline_result$jscomp$856_c__5501__auto__$$ = void 0;
                          }
                          return $JSCompiler_inline_result$jscomp$856_c__5501__auto__$$ ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__45152_row_r$$), $asami$query$outer_product_$_iter__45147_$_iter__45149$$($APP.cljs.core.chunk_rest($s__45150__$2_temp__5825__auto____$1$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__45152_row_r$$), null);
                        }
                        $b__45152_row_r$$ = $APP.cljs.core.first($s__45150__$2_temp__5825__auto____$1$$);
                        return $APP.cljs.core.cons($APP.cljs.core.vec($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($row_l$$, $b__45152_row_r$$)), $asami$query$outer_product_$_iter__45147_$_iter__45149$$($APP.cljs.core.rest($s__45150__$2_temp__5825__auto____$1$$)));
                      }
                      return null;
                    }
                  };
                }($s__45148__$1$$, $row_l$$, $xs__6385__auto__$$, $temp__5825__auto__$$, $namesl$$, $namesr$$, $output_schema45130_45756$$, $input_schema45131_45757$$), null, null);
              };
            }($s__45148__$1$$, $row_l$$, $xs__6385__auto__$$, $fs__5500__auto__$jscomp$31_iterys__5499__auto__$jscomp$31_temp__5825__auto__$$, $namesl$$, $namesr$$, output_schema45130_45756, input_schema45131_45757);
            if ($fs__5500__auto__$jscomp$31_iterys__5499__auto__$jscomp$31_temp__5825__auto__$$ = $APP.cljs.core.seq($fs__5500__auto__$jscomp$31_iterys__5499__auto__$jscomp$31_temp__5825__auto__$$($rightb$$))) {
              return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($fs__5500__auto__$jscomp$31_iterys__5499__auto__$jscomp$31_temp__5825__auto__$$, $asami$query$outer_product_$_iter__45147$$($APP.cljs.core.rest($s__45148__$1$$)));
            }
            $s__45148__$1$$ = $APP.cljs.core.rest($s__45148__$1$$);
          } else {
            return null;
          }
        }
      }, null, null);
    }($leftb$$);
  }(), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($namesl$$, $namesr$$)], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.outer_product), $APP.schema.core.__GT_FnSchema(output_schema45130_45756, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45131_45757], null)));
var output_schema45171_45768 = $APP.schema.core.Any, input_schema45172_45769 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$14$s, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___45770 = asami.query.symb_QMARK_ = function($s$$) {
  return $s$$ instanceof $APP.cljs.core.Symbol && $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2($s$$, $APP.cljs$cst$1481$_DOT__DOT__DOT_);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.symb_QMARK_), $APP.schema.core.__GT_FnSchema(output_schema45171_45768, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45172_45769], null)));
asami.query.empty_bindings = $APP.cljs.core.with_meta($APP.cljs.core.PersistentVector.EMPTY, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $APP.cljs.core.PersistentVector.EMPTY], null));
var output_schema45180_45771 = asami.planner.Bindings, input_schema45181_45772 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.query.InSpec, $APP.cljs.core.with_meta(cljs$cst$2398$nm, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2399$InSpec], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2400$values, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___45777 = asami.query.create_binding = function($nm$$, $values$$) {
  if ($nm$$ instanceof $APP.cljs.core.Symbol) {
    return $APP.cljs.core.with_meta(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$values$$], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$nm$$], null)], null));
  }
  if ($APP.cljs.core.sequential_QMARK_($nm$$)) {
    var $seq__45185_seq__45185__$1$$ = $APP.cljs.core.seq($nm$$), $first__45186$$ = $APP.cljs.core.first($seq__45185_seq__45185__$1$$);
    $seq__45185_seq__45185__$1$$ = $APP.cljs.core.next($seq__45185_seq__45185__$1$$);
    if ($APP.cljs.core.sequential_QMARK_($first__45186$$) && $seq__45185_seq__45185__$1$$ == null && $APP.cljs.core.every_QMARK_(asami.query.symb_QMARK_, $first__45186$$)) {
      if ($APP.cljs.core.every_QMARK_(function($p1__45179_SHARP_$$) {
        return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count($first__45186$$), $APP.cljs.core.count($p1__45179_SHARP_$$));
      }, $values$$)) {
        return $APP.cljs.core.with_meta($values$$, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $APP.cljs.core.vec($first__45186$$)], null));
      }
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Data does not match relation binding form", new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$179$form, $nm$$, $APP.cljs$cst$142$data, $values$$], null));
    }
    if (asami.query.symb_QMARK_($first__45186$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1481$_DOT__DOT__DOT_, $APP.cljs.core.first($seq__45185_seq__45185__$1$$)) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $APP.cljs.core.count($nm$$))) {
      if ($APP.cljs.core.coll_QMARK_($values$$)) {
        return $APP.cljs.core.with_meta($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.vector, $values$$), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$first__45186$$], null)], null));
      }
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Tuples data does not match collection binding form", new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$179$form, $nm$$, $APP.cljs$cst$142$data, $values$$], null));
    }
    if ($APP.cljs.core.every_QMARK_(asami.query.symb_QMARK_, $nm$$)) {
      if ($APP.cljs.core.sequential_QMARK_($values$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count($nm$$), $APP.cljs.core.count($values$$))) {
        return $APP.cljs.core.with_meta(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$values$$], null), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $APP.cljs.core.vec($nm$$)], null));
      }
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Tuples data does not match tuple binding form", new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$179$form, $nm$$, $APP.cljs$cst$142$data, $values$$], null));
    }
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Unrecognized binding form", new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$179$form, $nm$$], null));
  }
  return $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Illegal scalar binding form", new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$179$form, $nm$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.create_binding), $APP.schema.core.__GT_FnSchema(output_schema45180_45771, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45181_45772], null)));
var output_schema45215_45783 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.maybe(asami.planner.Bindings), "The bindings for other params"), $APP.schema.core.one($APP.schema.core.maybe($APP.schema.core.Any), "The default graph")], null), input_schema45216_45784 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.query.InSpec], null), $APP.cljs.core.with_meta($APP.cljs$cst$2401$in, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2399$InSpec], null)], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2400$values, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___45789 = asami.query.create_bindings = function($bindings$jscomp$192_bindings__$1$jscomp$6_in$$$, $values$$) {
  if ($APP.cljs.core.not($APP.cljs.core.seq($bindings$jscomp$192_bindings__$1$jscomp$6_in$$$))) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.query.empty_bindings, $APP.cljs.core.first($values$$)], null);
  }
  var $vec__45219$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.nil_QMARK_, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$3(function($n$$, $v$$) {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2393$$, $n$$) ? $v$$ : null;
  }, $bindings$jscomp$192_bindings__$1$jscomp$6_in$$$, $values$$)), $default$$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__45219$$, 0, null);
  if (1 < $APP.cljs.core.count($vec__45219$$)) {
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Only one default data source permitted", new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2402$defaults, $vec__45219$$], null));
  }
  if (!($APP.cljs.core.count($bindings$jscomp$192_bindings__$1$jscomp$6_in$$$) <= $APP.cljs.core.count($values$$))) {
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("In clause must not be more than the number of sources", new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1825$in, $bindings$jscomp$192_bindings__$1$jscomp$6_in$$$, $APP.cljs$cst$2403$sources, $values$$], null));
  }
  $bindings$jscomp$192_bindings__$1$jscomp$6_in$$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.identity, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$3(function($n$$, $v$$) {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2393$$, $n$$) ? null : asami.query.create_binding($n$$, $v$$);
  }, $bindings$jscomp$192_bindings__$1$jscomp$6_in$$$, $values$$));
  $bindings$jscomp$192_bindings__$1$jscomp$6_in$$$ = $APP.cljs.core.seq($bindings$jscomp$192_bindings__$1$jscomp$6_in$$$) ? $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(asami.query.outer_product, $bindings$jscomp$192_bindings__$1$jscomp$6_in$$$) : null;
  return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$bindings$jscomp$192_bindings__$1$jscomp$6_in$$$, $default$$$], null);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.create_bindings), $APP.schema.core.__GT_FnSchema(output_schema45215_45783, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45216_45784], null)));
asami.query.conforms_QMARK_ = function($t$$, $d$$) {
  try {
    return $APP.schema.core.validate($t$$, $d$$);
  } catch ($e45268$$) {
    return ["\x3e\x3e\x3e", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($e45268$$.getMessage()), "\x3c\x3c\x3c"].join("");
  }
};
var output_schema45279_45798 = $APP.schema.core.Any, input_schema45281_45799 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, cljs$cst$2210$arg0)], null), ret__35121__auto___45800 = asami.query.select_planner = function($G__45300_map__45295__$1_p__45294$$) {
  $G__45300_map__45295__$1_p__45294$$ = $APP.cljs.core.__destructure_map($G__45300_map__45295__$1_p__45294$$);
  $G__45300_map__45295__$1_p__45294$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__45300_map__45295__$1_p__45294$$, cljs$cst$2404$planner);
  switch($G__45300_map__45295__$1_p__45294$$ instanceof $APP.cljs.core.Keyword ? $G__45300_map__45295__$1_p__45294$$.fqn : null) {
    case "user":
      return asami.planner.user_plan;
    case "min":
      return asami.planner.plan_path;
    default:
      return asami.planner.plan_path;
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.select_planner), $APP.schema.core.__GT_FnSchema(output_schema45279_45798, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45281_45799], null)));
var output_schema45305_45804 = $APP.schema.core.Any, input_schema45306_45805 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[asami.planner.PatternOrBindings], null), cljs$cst$2328$arg1)], null), ret__35121__auto___45806 = asami.query.run_simple_query = function($graph$$, $p__45337_part_result$$) {
  var $seq__45341_seq__45341__$1$$ = $APP.cljs.core.seq($p__45337_part_result$$), $first__45342_proc_patterns_vec__45344$$ = $APP.cljs.core.first($seq__45341_seq__45341__$1$$);
  $seq__45341_seq__45341__$1$$ = $APP.cljs.core.next($seq__45341_seq__45341__$1$$);
  $first__45342_proc_patterns_vec__45344$$ = asami.planner.bindings_QMARK_($first__45342_proc_patterns_vec__45344$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$first__45342_proc_patterns_vec__45344$$, $seq__45341_seq__45341__$1$$], null) : asami.projection.epv_pattern_QMARK_($first__45342_proc_patterns_vec__45344$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta(asami.graph.resolve_pattern($graph$$, 
  $first__45342_proc_patterns_vec__45344$$), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $APP.cljs.core.vec(asami.query.plain_vars($first__45342_proc_patterns_vec__45344$$))], null)), $seq__45341_seq__45341__$1$$], null) : new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.query.identity_binding, $p__45337_part_result$$], null);
  $p__45337_part_result$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($first__45342_proc_patterns_vec__45344$$, 0, null);
  $first__45342_proc_patterns_vec__45344$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($first__45342_proc_patterns_vec__45344$$, 1, null);
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($p1__45303_SHARP_$$, $p2__45302_SHARP_$$) {
    return asami.query.left_join($p2__45302_SHARP_$$, $p1__45303_SHARP_$$, $graph$$);
  }, $p__45337_part_result$$, $first__45342_proc_patterns_vec__45344$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.run_simple_query), $APP.schema.core.__GT_FnSchema(output_schema45305_45804, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45306_45805], null)));
var output_schema45355_45811 = $APP.schema.core.Any, input_schema45356_45812 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[zuko.schema.Pattern], null), $APP.cljs.core.with_meta($APP.cljs$cst$2357$constraints, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2213$Pattern], null)], null)))], null), ret__35121__auto___45815 = asami.query.gate_fn = function($graph$$, $G__45365__$1_constraints$$) {
  if ($APP.cljs.core.not($APP.cljs.core.seq($G__45365__$1_constraints$$))) {
    return $APP.cljs.core.identity;
  }
  var $first__45405_seq__45367_seq__45370_vec__45406$$ = $APP.cljs.core.seq($G__45365__$1_constraints$$), $first__45368_patterns__$1$$ = $APP.cljs.core.first($first__45405_seq__45367_seq__45370_vec__45406$$);
  $APP.cljs.core.next($first__45405_seq__45367_seq__45370_vec__45406$$);
  $first__45405_seq__45367_seq__45370_vec__45406$$ = $APP.cljs.core.seq($first__45368_patterns__$1$$);
  $APP.cljs.core.first($first__45405_seq__45367_seq__45370_vec__45406$$);
  for ($APP.cljs.core.next($first__45405_seq__45367_seq__45370_vec__45406$$);;) {
    $G__45365__$1_constraints$$ = $APP.cljs.core.seq($G__45365__$1_constraints$$);
    $first__45405_seq__45367_seq__45370_vec__45406$$ = $APP.cljs.core.first($G__45365__$1_constraints$$);
    $G__45365__$1_constraints$$ = $APP.cljs.core.next($G__45365__$1_constraints$$);
    $first__45368_patterns__$1$$ = $APP.cljs.core.seq($first__45405_seq__45367_seq__45370_vec__45406$$);
    $APP.cljs.core.first($first__45368_patterns__$1$$);
    $first__45368_patterns__$1$$ = $APP.cljs.core.next($first__45368_patterns__$1$$);
    if ($APP.cljs.core.not($first__45405_seq__45367_seq__45370_vec__45406$$)) {
      return $APP.cljs.core.identity;
    }
    if ($APP.cljs.core.seq(asami.query.run_simple_query($graph$$, $first__45368_patterns__$1$$))) {
      return $APP.cljs.core.constantly($APP.cljs.core.PersistentVector.EMPTY);
    }
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.gate_fn), $APP.schema.core.__GT_FnSchema(output_schema45355_45811, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45356_45812], null)));
asami.query.Plan = $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Keyword, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null)]);
asami.query.AuditableResults = $APP.schema.core.if$($APP.cljs.core.map_QMARK_, asami.query.Plan, asami.projection.Results);
var output_schema45417_45823 = asami.query.AuditableResults, input_schema45418_45824 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[zuko.schema.Pattern], null), $APP.cljs.core.with_meta(cljs$cst$2303$patterns, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2213$Pattern], null)], null))), $APP.schema.core.one($APP.schema.core.maybe(asami.planner.Bindings), $APP.cljs.core.with_meta($APP.cljs$cst$375$bindings, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, 
cljs$cst$2395$Bindings)], null))), $APP.schema.core.one($APP.schema.core.Any, cljs$cst$2405$arg3)], null), ret__35121__auto___45825 = asami.query.join_patterns = function($G__45430_graph$$, $all_patterns$jscomp$1_first__45425_patterns$$, $bindings$$, $p__45421_query_plan_result_gate$$) {
  var $map__45422__$1_path_SINGLEQUOTE__vec__45423$$ = $APP.cljs.core.__destructure_map($p__45421_query_plan_result_gate$$);
  $p__45421_query_plan_result_gate$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45422__$1_path_SINGLEQUOTE__vec__45423$$, cljs$cst$2406$query_plan);
  $all_patterns$jscomp$1_first__45425_patterns$$ = $APP.cljs.core.seq($bindings$$) ? $APP.cljs.core.cons($bindings$$, $all_patterns$jscomp$1_first__45425_patterns$$) : $all_patterns$jscomp$1_first__45425_patterns$$;
  $bindings$$ = asami.query.select_planner($map__45422__$1_path_SINGLEQUOTE__vec__45423$$);
  $map__45422__$1_path_SINGLEQUOTE__vec__45423$$ = $bindings$$.cljs$core$IFn$_invoke$arity$3 ? $bindings$$.cljs$core$IFn$_invoke$arity$3($G__45430_graph$$, $all_patterns$jscomp$1_first__45425_patterns$$, $map__45422__$1_path_SINGLEQUOTE__vec__45423$$) : $bindings$$.call(null, $G__45430_graph$$, $all_patterns$jscomp$1_first__45425_patterns$$, $map__45422__$1_path_SINGLEQUOTE__vec__45423$$);
  $bindings$$ = $APP.cljs.core.seq($map__45422__$1_path_SINGLEQUOTE__vec__45423$$);
  $all_patterns$jscomp$1_first__45425_patterns$$ = $APP.cljs.core.first($bindings$$);
  $bindings$$ = $APP.cljs.core.next($bindings$$);
  if ($APP.cljs.core.truth_($p__45421_query_plan_result_gate$$)) {
    return new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2407$plan, $map__45422__$1_path_SINGLEQUOTE__vec__45423$$], null);
  }
  if ($APP.cljs.core.not($bindings$$)) {
    return asami.planner.bindings_QMARK_($all_patterns$jscomp$1_first__45425_patterns$$) ? $all_patterns$jscomp$1_first__45425_patterns$$ : asami.projection.epv_pattern_QMARK_($all_patterns$jscomp$1_first__45425_patterns$$) ? $APP.cljs.core.with_meta(asami.graph.resolve_pattern($G__45430_graph$$, $all_patterns$jscomp$1_first__45425_patterns$$), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $APP.cljs.core.vec(asami.query.plain_vars($all_patterns$jscomp$1_first__45425_patterns$$))], 
    null)) : asami.query.run_simple_query($G__45430_graph$$, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$all_patterns$jscomp$1_first__45425_patterns$$], null));
  }
  $p__45421_query_plan_result_gate$$ = asami.query.gate_fn($G__45430_graph$$, $APP.cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(asami.planner.not_operation_QMARK_, $map__45422__$1_path_SINGLEQUOTE__vec__45423$$));
  $map__45422__$1_path_SINGLEQUOTE__vec__45423$$ = $APP.cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(asami.planner.not_operation_QMARK_, $map__45422__$1_path_SINGLEQUOTE__vec__45423$$);
  $G__45430_graph$$ = asami.query.run_simple_query($G__45430_graph$$, $map__45422__$1_path_SINGLEQUOTE__vec__45423$$);
  return $p__45421_query_plan_result_gate$$.cljs$core$IFn$_invoke$arity$1 ? $p__45421_query_plan_result_gate$$.cljs$core$IFn$_invoke$arity$1($G__45430_graph$$) : $p__45421_query_plan_result_gate$$.call(null, $G__45430_graph$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.join_patterns), $APP.schema.core.__GT_FnSchema(output_schema45417_45823, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45418_45824], null)));
asami.query.query_keys = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$2408$find, null, $APP.cljs$cst$2409$where, null, $APP.cljs$cst$2410$with, null, $APP.cljs$cst$1825$in, null], null), null);
asami.query.extended_query_keys = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2(asami.query.query_keys, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$365$all, $APP.cljs$cst$1919$distinct], null));
var output_schema45431_45837 = $APP.schema.core.Any, input_schema45432_45838 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2411$query, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___45840 = asami.query.query_map = function($query$$) {
  var $map__45439_map__45439__$1$$ = $APP.cljs.core.map_QMARK_($query$$) ? $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$3($query$$, $APP.cljs$cst$2409$where, $APP.cljs.core.seq) : typeof $query$$ === "string" ? function() {
    var $G__45444$$ = $APP.cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1($query$$);
    return asami.query.query_map.cljs$core$IFn$_invoke$arity$1 ? asami.query.query_map.cljs$core$IFn$_invoke$arity$1($G__45444$$) : asami.query.query_map.call(null, $G__45444$$);
  }() : $APP.cljs.core.sequential_QMARK_($query$$) ? $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p__45445_v$$) {
    var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45445_v$$, 0, null);
    $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($k$$, 0, null);
    $p__45445_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45445_v$$, 1, null);
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, $p__45445_v$$], null);
  }, $APP.cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, $APP.cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(asami.query.query_keys, $query$$)))) : null;
  $map__45439_map__45439__$1$$ = $APP.cljs.core.__destructure_map($map__45439_map__45439__$1$$);
  var $find_find_SINGLEQUOTE_$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45439_map__45439__$1$$, $APP.cljs$cst$2408$find), $all$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$365$all, $APP.cljs.core.first($find_find_SINGLEQUOTE_$$)) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.rest($find_find_SINGLEQUOTE_$$), !0], null) : new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1919$distinct, null], null), null), $find_find_SINGLEQUOTE_$$), !1], null);
  $find_find_SINGLEQUOTE_$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($all$$, 0, null);
  $all$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($all$$, 1, null);
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic($map__45439_map__45439__$1$$, $APP.cljs$cst$2408$find, $find_find_SINGLEQUOTE_$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$365$all, $all$$], 0));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.query_map), $APP.schema.core.__GT_FnSchema(output_schema45431_45837, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45432_45838], null)));
var output_schema45457_45848 = $APP.schema.core.Str, input_schema45458_45849 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.maybe($APP.schema.core.Str), $APP.cljs.core.with_meta($APP.cljs$cst$14$s, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, cljs$cst$2412$s_SLASH_Str)], null))), $APP.schema.core.Any], null), ret__35121__auto___45851 = 
function() {
  asami.query.newl = function($var_args$$) {
    for (var $args__5755__auto__$jscomp$204_argseq__5756__auto__$$ = [], $len__5749__auto___45852$$ = arguments.length, $i__5750__auto___45853$$ = 0;;) {
      if ($i__5750__auto___45853$$ < $len__5749__auto___45852$$) {
        $args__5755__auto__$jscomp$204_argseq__5756__auto__$$.push(arguments[$i__5750__auto___45853$$]), $i__5750__auto___45853$$ += 1;
      } else {
        break;
      }
    }
    $args__5755__auto__$jscomp$204_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$204_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$204_argseq__5756__auto__$$.slice(1), 0, null) : null;
    return asami.query.newl.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$204_argseq__5756__auto__$$);
  };
  asami.query.newl.cljs$core$IFn$_invoke$arity$variadic = function($s$$, $remaining$$) {
    return $APP.cljs.core.truth_($s$$) ? $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.str, $s$$, "\n", $remaining$$) : $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.str, $remaining$$);
  };
  asami.query.newl.cljs$lang$maxFixedArity = 1;
  asami.query.newl.cljs$lang$applyTo = function($seq45461_seq45461__$1$$) {
    var $G__45462$$ = $APP.cljs.core.first($seq45461_seq45461__$1$$);
    $seq45461_seq45461__$1$$ = $APP.cljs.core.next($seq45461_seq45461__$1$$);
    return this.cljs$core$IFn$_invoke$arity$variadic($G__45462$$, $seq45461_seq45461__$1$$);
  };
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.newl), $APP.schema.core.__GT_FnSchema(output_schema45457_45848, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45458_45849], null)));
asami.query.safe_get_vars = function($x$$) {
  return $APP.cljs.core.transduce.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$1(asami.projection.vartest_QMARK_), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(asami.query.plain_var)), $APP.cljs.core.conj, $APP.cljs.core.PersistentHashSet.EMPTY, $APP.cljs.core.tree_seq($APP.cljs.core.coll_QMARK_, $APP.cljs.core.seq, $x$$));
};
var output_schema45463_45855 = $APP.schema.core.Any, input_schema45465_45856 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Keyword, $APP.schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.schema.core.Bool, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.schema.core.Any], null)], 0))]), cljs$cst$2210$arg0)], null), ret__35121__auto___45857 = asami.query.query_validator = function($map__45469__$1_p__45468$$) {
  $map__45469__$1_p__45468$$ = $APP.cljs.core.__destructure_map($map__45469__$1_p__45468$$);
  var $G__45472__$2$jscomp$inline_4980_find$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45469__$1_p__45468$$, $APP.cljs$cst$2408$find), $in$$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45469__$1_p__45468$$, $APP.cljs$cst$1825$in), $G__45472__$3$jscomp$inline_4981_where$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45469__$1_p__45468$$, $APP.cljs$cst$2409$where), $G__45472__$1$$ = $APP.cljs.core.seq($APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(asami.query.extended_query_keys, 
  $APP.cljs.core.keys($map__45469__$1_p__45468$$))), $G__45472__$4$$ = $APP.cljs.core.seq($APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.sequential_QMARK_, $G__45472__$3$jscomp$inline_4981_where$$));
  $in$$$ = $APP.clojure.set.difference.cljs$core$IFn$_invoke$arity$2(asami.query.safe_get_vars($G__45472__$2$jscomp$inline_4980_find$$), $APP.clojure.set.union.cljs$core$IFn$_invoke$arity$2(asami.query.safe_get_vars($in$$$), asami.query.safe_get_vars($G__45472__$3$jscomp$inline_4981_where$$)));
  $G__45472__$1$$ = $G__45472__$1$$ ? asami.query.newl.cljs$core$IFn$_invoke$arity$variadic(null, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Unknown clauses: ", $G__45472__$1$$], 0)) : null;
  $G__45472__$2$jscomp$inline_4980_find$$ = $APP.cljs.core.empty_QMARK_($G__45472__$2$jscomp$inline_4980_find$$) ? asami.query.newl.cljs$core$IFn$_invoke$arity$variadic($G__45472__$1$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Missing ':find' clause"], 0)) : $G__45472__$1$$;
  $G__45472__$3$jscomp$inline_4981_where$$ = $APP.cljs.core.empty_QMARK_($G__45472__$3$jscomp$inline_4981_where$$) ? asami.query.newl.cljs$core$IFn$_invoke$arity$variadic($G__45472__$2$jscomp$inline_4980_find$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Missing ':where' clause"], 0)) : $G__45472__$2$jscomp$inline_4980_find$$;
  $G__45472__$4$$ = $G__45472__$4$$ ? asami.query.newl.cljs$core$IFn$_invoke$arity$variadic($G__45472__$3$jscomp$inline_4981_where$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Invalid ':where' statements: ", $G__45472__$4$$], 0)) : $G__45472__$3$jscomp$inline_4981_where$$;
  $G__45472__$4$$ = $APP.cljs.core.seq($in$$$) ? asami.query.newl.cljs$core$IFn$_invoke$arity$variadic($G__45472__$4$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Unbound variables in ':find' clause: ", $in$$$], 0)) : $G__45472__$4$$;
  if ($APP.cljs.core.truth_($G__45472__$4$$)) {
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2($G__45472__$4$$, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2339$query, $map__45469__$1_p__45468$$], null));
  }
  return $map__45469__$1_p__45468$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.query_validator), $APP.schema.core.__GT_FnSchema(output_schema45463_45855, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45465_45856], null)));
var output_schema45481_45863 = $APP.schema.core.Any, input_schema45482_45865 = new $APP.cljs.core.PersistentVector(null, 6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2358$selection, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2357$constraints, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$375$bindings, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], 
null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2413$project_fn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, cljs$cst$2414$arg5)], null), ret__35121__auto___45866 = asami.query.execute_query = function($selection$$, $constraints$$, $bindings$jscomp$194_resolved$$, $graph$$, $project_fn$$, $p__45485_query_plan$$) {
  var $map__45492__$1$$ = $APP.cljs.core.__destructure_map($p__45485_query_plan$$);
  $p__45485_query_plan$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45492__$1$$, cljs$cst$2406$query_plan);
  5 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$2223$debug, "asami.query", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["executing selection: ", $APP.cljs.core.seq($selection$$), " where: ", $constraints$$], 0));
  5 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$2223$debug, "asami.query", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["bindings: ", $bindings$jscomp$194_resolved$$], 0));
  var $top_conjunction$$ = $APP.cljs.core.seq_QMARK_($constraints$$) ? function() {
    var $seq__45495_seq__45495__$1$$ = $APP.cljs.core.seq($constraints$$), $first__45496$$ = $APP.cljs.core.first($seq__45495_seq__45495__$1$$);
    $seq__45495_seq__45495__$1$$ = $APP.cljs.core.next($seq__45495_seq__45495__$1$$);
    if ($APP.cljs.core.vector_QMARK_($first__45496$$)) {
      return $constraints$$;
    }
    var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
    var $JSCompiler_inline_result$jscomp$859_fexpr__45500$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$408$and, null, cljs$cst$2206$AND, null], null), null);
    $JSCompiler_inline_result$jscomp$859_fexpr__45500$$ = $JSCompiler_inline_result$jscomp$859_fexpr__45500$$.cljs$core$IFn$_invoke$arity$1 ? $JSCompiler_inline_result$jscomp$859_fexpr__45500$$.cljs$core$IFn$_invoke$arity$1($first__45496$$) : $JSCompiler_inline_result$jscomp$859_fexpr__45500$$.call(null, $first__45496$$);
    if ($JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$859_fexpr__45500$$)) {
      return $seq__45495_seq__45495__$1$$;
    }
    if ($APP.cljs.core.truth_(asami.query.operators.cljs$core$IFn$_invoke$arity$1 ? asami.query.operators.cljs$core$IFn$_invoke$arity$1($first__45496$$) : asami.query.operators.call(null, $first__45496$$))) {
      return new $APP.cljs.core.List(null, $constraints$$, null, 1, null);
    }
    if ($APP.cljs.core.seq_QMARK_($first__45496$$)) {
      return $constraints$$;
    }
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Unknown constraint format", new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2356$constraint, $constraints$$], null));
  }() : new $APP.cljs.core.List(null, $constraints$$, null, 1, null), $select_distinct$$ = function($xs$$) {
    if ($APP.cljs.core.coll_QMARK_($xs$$) && !$APP.cljs.core.vector_QMARK_($xs$$)) {
      var $m$$ = $APP.cljs.core.meta($xs$$);
      return $APP.cljs.core.with_meta(asami.query._STAR_select_distinct_STAR_.call(null, $xs$$), $m$$);
    }
    return $xs$$;
  };
  $bindings$jscomp$194_resolved$$ = asami.query.join_patterns($graph$$, $top_conjunction$$, $bindings$jscomp$194_resolved$$, $map__45492__$1$$);
  6 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$144$trace, "asami.query", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["results: ", $bindings$jscomp$194_resolved$$], 0));
  return $APP.cljs.core.truth_($p__45485_query_plan$$) ? $bindings$jscomp$194_resolved$$ : $select_distinct$$($project_fn$$.cljs$core$IFn$_invoke$arity$2 ? $project_fn$$.cljs$core$IFn$_invoke$arity$2($selection$$, $bindings$jscomp$194_resolved$$) : $project_fn$$.call(null, $selection$$, $bindings$jscomp$194_resolved$$));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.execute_query), $APP.schema.core.__GT_FnSchema(output_schema45481_45863, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45482_45865], null)));
var output_schema45505_45888 = $APP.schema.core.Any, input_schema45506_45889 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2415$element, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(zuko.schema.Pattern, $APP.cljs.core.with_meta($APP.cljs$cst$2203$pattern, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2213$Pattern], null)))], null), ret__35121__auto___45890 = asami.query.prepend = function($element$$, $pattern$$) {
  var $seq__45510_seq__45510__$1$$ = $APP.cljs.core.seq($pattern$$), $first__45511$$ = $APP.cljs.core.first($seq__45510_seq__45510__$1$$);
  $seq__45510_seq__45510__$1$$ = $APP.cljs.core.next($seq__45510_seq__45510__$1$$);
  $APP.cljs.core.vector_QMARK_($first__45511$$) && $APP.cljs.core.cons($element$$, $pattern$$);
  var $fexpr__45512_45892$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$408$and, null, cljs$cst$2206$AND, null], null), null);
  $fexpr__45512_45892$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__45512_45892$$.cljs$core$IFn$_invoke$arity$1($first__45511$$) : $fexpr__45512_45892$$.call(null, $first__45511$$);
  $APP.cljs.core.cons($element$$, $seq__45510_seq__45510__$1$$);
  return new $APP.cljs.core.List(null, $element$$, new $APP.cljs.core.List(null, $pattern$$, null, 1, null), 2, null);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.prepend), $APP.schema.core.__GT_FnSchema(output_schema45505_45888, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45506_45889], null)));
asami.query.split_with_STAR_ = function($pred$$, $G__45894_coll$$) {
  var $allr__$1_tw_tw__$1_vec__45529$$ = $APP.cljs.core.PersistentVector.EMPTY, $G__45520__$1_G__45895_first__45531_r__$1_seq__45524$$ = $APP.cljs.core.seq($G__45894_coll$$);
  $APP.cljs.core.first($G__45520__$1_G__45895_first__45531_r__$1_seq__45524$$);
  $APP.cljs.core.next($G__45520__$1_G__45895_first__45531_r__$1_seq__45524$$);
  for ($G__45520__$1_G__45895_first__45531_r__$1_seq__45524$$ = $G__45894_coll$$;;) {
    $G__45894_coll$$ = $allr__$1_tw_tw__$1_vec__45529$$;
    $allr__$1_tw_tw__$1_vec__45529$$ = $G__45520__$1_G__45895_first__45531_r__$1_seq__45524$$;
    var $rs__$1_seq__45530_seq__45530__$1$$ = $APP.cljs.core.seq($allr__$1_tw_tw__$1_vec__45529$$);
    $G__45520__$1_G__45895_first__45531_r__$1_seq__45524$$ = $APP.cljs.core.first($rs__$1_seq__45530_seq__45530__$1$$);
    $rs__$1_seq__45530_seq__45530__$1$$ = $APP.cljs.core.next($rs__$1_seq__45530_seq__45530__$1$$);
    if ($APP.cljs.core.not($APP.cljs.core.seq($allr__$1_tw_tw__$1_vec__45529$$))) {
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__45894_coll$$, null], null);
    }
    if ($APP.cljs.core.truth_($pred$$.cljs$core$IFn$_invoke$arity$1 ? $pred$$.cljs$core$IFn$_invoke$arity$1($G__45520__$1_G__45895_first__45531_r__$1_seq__45524$$) : $pred$$.call(null, $G__45520__$1_G__45895_first__45531_r__$1_seq__45524$$))) {
      $G__45894_coll$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($G__45894_coll$$, $G__45520__$1_G__45895_first__45531_r__$1_seq__45524$$), $G__45520__$1_G__45895_first__45531_r__$1_seq__45524$$ = $rs__$1_seq__45530_seq__45530__$1$$, $allr__$1_tw_tw__$1_vec__45529$$ = $G__45894_coll$$;
    } else {
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__45894_coll$$, $allr__$1_tw_tw__$1_vec__45529$$], null);
    }
  }
};
asami.query.seq_group_by = function($group_select$$, $xs$$) {
  return function $asami$query$seq_group_by_$_groups$$($p__45548_vec__45552$$) {
    var $grp$$ = $APP.cljs.core.seq($p__45548_vec__45552$$), $first__45551$$ = $APP.cljs.core.first($grp$$);
    $grp$$ = $APP.cljs.core.next($grp$$);
    if ($APP.cljs.core.seq($p__45548_vec__45552$$)) {
      var $g$$ = $group_select$$.cljs$core$IFn$_invoke$arity$1 ? $group_select$$.cljs$core$IFn$_invoke$arity$1($first__45551$$) : $group_select$$.call(null, $first__45551$$);
      $p__45548_vec__45552$$ = asami.query.split_with_STAR_(function($r$$) {
        return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($g$$, $group_select$$.cljs$core$IFn$_invoke$arity$1 ? $group_select$$.cljs$core$IFn$_invoke$arity$1($r$$) : $group_select$$.call(null, $r$$));
      }, $grp$$);
      $grp$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45548_vec__45552$$, 0, null);
      var $rmdr$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45548_vec__45552$$, 1, null);
      return $APP.cljs.core.cons($APP.cljs.core.cons($first__45551$$, $grp$$), new $APP.cljs.core.LazySeq(null, function() {
        return $asami$query$seq_group_by_$_groups$$($rmdr$$);
      }, null, null));
    }
    return null;
  }($xs$$);
};
var output_schema45559_45900 = $APP.schema.core.Any, input_schema45560_45901 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([asami.projection.Var]), $APP.cljs.core.with_meta(cljs$cst$2416$grouping_vars, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2308$Var, "null"], null), null)], null))), $APP.schema.core.one(asami.projection.Results, $APP.cljs.core.with_meta($APP.cljs$cst$2417$context, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2368$Results], null))), $APP.schema.core.one(zuko.schema.Pattern, cljs$cst$2405$arg3)], null), ret__35121__auto___45905 = 
asami.query.context_execute_query = function($graph$$, $grouping_vars$$, $context$$, $p__45563$$) {
  var $seq__45565_seq__45565__$1$$ = $APP.cljs.core.seq($p__45563$$), $first__45566$$ = $APP.cljs.core.first($seq__45565_seq__45565__$1$$);
  $seq__45565_seq__45565__$1$$ = $APP.cljs.core.next($seq__45565_seq__45565__$1$$);
  var $context_cols$$ = $APP.cljs.core.meta($context$$), $colnumbers$$ = $APP.cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(function($n$$, $col$$) {
    return $APP.cljs.core.truth_($grouping_vars$$.cljs$core$IFn$_invoke$arity$1 ? $grouping_vars$$.cljs$core$IFn$_invoke$arity$1($col$$) : $grouping_vars$$.call(null, $col$$)) ? $n$$ : null;
  }, cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($context_cols$$)), $ljoin$$ = function($p1__45557_SHARP_$$, $p2__45556_SHARP_$$) {
    return asami.query.left_join($p2__45556_SHARP_$$, $p1__45557_SHARP_$$, $graph$$);
  }, $where__$1$$ = $APP.cljs.core.truth_(function() {
    var $fexpr__45567$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$408$and, null, cljs$cst$2206$AND, null], null), null);
    return $fexpr__45567$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__45567$$.cljs$core$IFn$_invoke$arity$1($first__45566$$) : $fexpr__45567$$.call(null, $first__45566$$);
  }()) ? $seq__45565_seq__45565__$1$$ : new $APP.cljs.core.List(null, $p__45563$$, null, 1, null);
  return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($grp$$) {
    return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($ljoin$$, $grp$$, $where__$1$$);
  }, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__45558_SHARP_$$) {
    return $APP.cljs.core.with_meta($p1__45558_SHARP_$$, $context_cols$$);
  }, asami.query.seq_group_by(function($row$$) {
    return $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function($p1__45555_SHARP_$$) {
      return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row$$, $p1__45555_SHARP_$$);
    }, $colnumbers$$);
  }, $context$$)));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.context_execute_query), $APP.schema.core.__GT_FnSchema(output_schema45559_45900, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45560_45901], null)));
asami.query.aggregate_fns = new $APP.cljs.core.PersistentArrayMap(null, 8, [$APP.cljs$cst$2343$sum, $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.apply, $APP.cljs.core._PLUS_), $APP.cljs$cst$25$count, $APP.cljs.core.count, $APP.cljs$cst$2348$count_distinct, $APP.cljs.core.count, $APP.cljs$cst$2349$avg, function($p1__45569_SHARP_$$) {
  return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._PLUS_, $p1__45569_SHARP_$$) / $APP.cljs.core.count($p1__45569_SHARP_$$);
}, $APP.cljs$cst$695$max, $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.apply, $APP.cljs.core.max), $APP.cljs$cst$651$min, $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.apply, $APP.cljs.core.min), $APP.cljs$cst$23$first, $APP.cljs.core.first, $APP.cljs$cst$898$last, $APP.cljs.core.last], null);
var output_schema45570_45908 = $APP.schema.core.Symbol, input_schema45571_45909 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, cljs$cst$2210$arg0)], null), ret__35121__auto___45910 = asami.query.agg_label = function($p__45574_v$$) {
  var $op$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45574_v$$, 0, null);
  $p__45574_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45574_v$$, 1, null);
  var $short_name_temp__5823__auto__$$ = $APP.cljs.core.namespace($p__45574_v$$);
  $short_name_temp__5823__auto__$$ = $APP.cljs.core.truth_($short_name_temp__5823__auto__$$) ? [$APP.cljs.core.subs.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.namespace($p__45574_v$$), 1), "_", $APP.cljs.core.name($p__45574_v$$)].join("") : $APP.cljs.core.subs.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.name($p__45574_v$$), 1);
  return $APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(["?", $APP.cljs.core.name($op$$), "-", $APP.cljs.core.truth_(asami.planner.wildcard_QMARK_($p__45574_v$$)) ? "all" : $short_name_temp__5823__auto__$$].join(""));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.agg_label), $APP.schema.core.__GT_FnSchema(output_schema45570_45908, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45571_45909], null)));
var output_schema45578_45912 = $APP.schema.core.Symbol, input_schema45579_45913 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1242$e, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___45914 = asami.query.result_label = function($e$$) {
  if (asami.projection.vartest_QMARK_($e$$)) {
    return $e$$;
  }
  if ($APP.cljs.core.seq_QMARK_($e$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $APP.cljs.core.count($e$$))) {
    return asami.query.agg_label($e$$);
  }
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Bad selection in :find clause with aggregates", new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2091$element, $e$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.result_label), $APP.schema.core.__GT_FnSchema(output_schema45578_45912, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45579_45913], null)));
asami.query.distinct_fn = function($op$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2348$count_distinct, $op$$) ? $APP.cljs.core.identity : asami.query._STAR_select_distinct_STAR_;
};
var output_schema45586_45919 = $APP.schema.core.Any, input_schema45587_45920 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta(cljs$cst$2358$selection, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$2204$s_SLASH_Any], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Var], null), $APP.cljs.core.with_meta($APP.cljs$cst$2418$with, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2308$Var], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.projection.Results], null), $APP.cljs.core.with_meta(cljs$cst$2419$partial_results, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2368$Results], null)], null)))], null), ret__35121__auto___45922 = asami.query.aggregate_over = function($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$, $selected_selection_count_vec__45625_with$$$, 
$G__45628_G__45629_col_data_partial_results_result$$) {
  $selected_selection_count_vec__45625_with$$$ = $APP.cljs.core.count($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$);
  var $get_selectors$$ = function($idxs$$, $selected$$) {
    return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($s$$) {
      if (asami.projection.vartest_QMARK_($s$$)) {
        return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.first, function($p1__45582_SHARP_$$) {
          return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($p1__45582_SHARP_$$, $idxs$$.cljs$core$IFn$_invoke$arity$1 ? $idxs$$.cljs$core$IFn$_invoke$arity$1($s$$) : $idxs$$.call(null, $s$$));
        }, asami.query._STAR_select_distinct_STAR_], null);
      }
      var $op$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($s$$, 0, null), $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($s$$, 1, null), $dedup_fn$$ = asami.query.distinct_fn($op$$), $temp__5823__auto__$$ = asami.query.aggregate_fns.cljs$core$IFn$_invoke$arity$1 ? asami.query.aggregate_fns.cljs$core$IFn$_invoke$arity$1($op$$) : asami.query.aggregate_fns.call(null, $op$$);
      if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
        return $APP.cljs.core.truth_(asami.planner.wildcard_QMARK_($v$$)) ? new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$temp__5823__auto__$$, $APP.cljs.core.identity, $dedup_fn$$], null) : new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$temp__5823__auto__$$, function($p1__45583_SHARP_$$) {
          return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($p1__45583_SHARP_$$, $idxs$$.cljs$core$IFn$_invoke$arity$1 ? $idxs$$.cljs$core$IFn$_invoke$arity$1($v$$) : $idxs$$.call(null, $v$$));
        }, $dedup_fn$$], null);
      }
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown operation: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($op$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$327$expr, $s$$], null));
    }, $selected$$);
  }, $project_aggregate_vec__45633$$ = function($selected$$, $result$$) {
    var $var_index$$ = asami.query.index_vars(cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($result$$)));
    return function $asami$query$aggregate_over_$_project_aggregate_$_iter__45613$$($s__45614$$) {
      return new $APP.cljs.core.LazySeq(null, function() {
        for (;;) {
          var $s__45614__$2_temp__5825__auto__$$ = $APP.cljs.core.seq($s__45614$$);
          if ($s__45614__$2_temp__5825__auto__$$) {
            if ($APP.cljs.core.chunked_seq_QMARK_($s__45614__$2_temp__5825__auto__$$)) {
              var $c__5501__auto__$$ = $APP.cljs.core.chunk_first($s__45614__$2_temp__5825__auto__$$), $size__5502__auto__$$ = $APP.cljs.core.count($c__5501__auto__$$), $b__45616$$ = $APP.cljs.core.chunk_buffer($size__5502__auto__$$);
              return function() {
                for (var $i__45615$$ = 0;;) {
                  if ($i__45615$$ < $size__5502__auto__$$) {
                    var $JSCompiler_temp_const$$ = $APP.cljs.core._nth($c__5501__auto__$$, $i__45615$$), $JSCompiler_inline_result$jscomp$863_col_fn$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$$, 0, null), $G__45620$jscomp$inline_4990_col_data$jscomp$inline_4989_col_selector$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$$, 1, null), $dfn$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$$, 2, null);
                    $JSCompiler_temp_const$$ = $APP.cljs.core;
                    var $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.chunk_append, $JSCompiler_temp_const$jscomp$1$$ = $b__45616$$;
                    $G__45620$jscomp$inline_4990_col_data$jscomp$inline_4989_col_selector$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($G__45620$jscomp$inline_4990_col_data$jscomp$inline_4989_col_selector$$, $result$$);
                    $G__45620$jscomp$inline_4990_col_data$jscomp$inline_4989_col_selector$$ = $dfn$$.cljs$core$IFn$_invoke$arity$1 ? $dfn$$.cljs$core$IFn$_invoke$arity$1($G__45620$jscomp$inline_4990_col_data$jscomp$inline_4989_col_selector$$) : $dfn$$.call(null, $G__45620$jscomp$inline_4990_col_data$jscomp$inline_4989_col_selector$$);
                    $JSCompiler_inline_result$jscomp$863_col_fn$$ = $JSCompiler_inline_result$jscomp$863_col_fn$$.cljs$core$IFn$_invoke$arity$1 ? $JSCompiler_inline_result$jscomp$863_col_fn$$.cljs$core$IFn$_invoke$arity$1($G__45620$jscomp$inline_4990_col_data$jscomp$inline_4989_col_selector$$) : $JSCompiler_inline_result$jscomp$863_col_fn$$.call(null, $G__45620$jscomp$inline_4990_col_data$jscomp$inline_4989_col_selector$$);
                    $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_temp_const$jscomp$1$$, $JSCompiler_inline_result$jscomp$863_col_fn$$);
                    $i__45615$$ += 1;
                  } else {
                    return !0;
                  }
                }
              }() ? $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__45616$$), $asami$query$aggregate_over_$_project_aggregate_$_iter__45613$$($APP.cljs.core.chunk_rest($s__45614__$2_temp__5825__auto__$$))) : $APP.cljs.core.chunk_cons($APP.cljs.core.chunk($b__45616$$), null);
            }
            var $vec__45621$$ = $APP.cljs.core.first($s__45614__$2_temp__5825__auto__$$), $col_fn$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__45621$$, 0, null), $col_selector$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__45621$$, 1, null), $dfn$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__45621$$, 2, null);
            return $APP.cljs.core.cons(function() {
              var $G__45624_col_data$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($col_selector$$, $result$$);
              $G__45624_col_data$$ = $dfn$$.cljs$core$IFn$_invoke$arity$1 ? $dfn$$.cljs$core$IFn$_invoke$arity$1($G__45624_col_data$$) : $dfn$$.call(null, $G__45624_col_data$$);
              return $col_fn$$.cljs$core$IFn$_invoke$arity$1 ? $col_fn$$.cljs$core$IFn$_invoke$arity$1($G__45624_col_data$$) : $col_fn$$.call(null, $G__45624_col_data$$);
            }(), $asami$query$aggregate_over_$_project_aggregate_$_iter__45613$$($APP.cljs.core.rest($s__45614__$2_temp__5825__auto__$$)));
          }
          return null;
        }
      }, null, null);
    }($get_selectors$$($var_index$$, $selected$$));
  };
  if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $selected_selection_count_vec__45625_with$$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$165$_DOT_, $APP.cljs.core.second($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$))) {
    $selected_selection_count_vec__45625_with$$$ = $APP.cljs.core.first($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$);
    $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($selected_selection_count_vec__45625_with$$$, 0, null);
    var $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($selected_selection_count_vec__45625_with$$$, 1, null);
    $G__45628_G__45629_col_data_partial_results_result$$ = $APP.cljs.core.first($G__45628_G__45629_col_data_partial_results_result$$);
    var $col_fn$$ = asami.query.aggregate_fns.cljs$core$IFn$_invoke$arity$1 ? asami.query.aggregate_fns.cljs$core$IFn$_invoke$arity$1($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$) : asami.query.aggregate_fns.call(null, $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$), $dfn$$ = asami.query.distinct_fn($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$);
    if ($APP.cljs.core.truth_(asami.planner.wildcard_QMARK_($v$$))) {
      return $G__45628_G__45629_col_data_partial_results_result$$ = $dfn$$.cljs$core$IFn$_invoke$arity$1 ? $dfn$$.cljs$core$IFn$_invoke$arity$1($G__45628_G__45629_col_data_partial_results_result$$) : $dfn$$.call(null, $G__45628_G__45629_col_data_partial_results_result$$), $col_fn$$.cljs$core$IFn$_invoke$arity$1 ? $col_fn$$.cljs$core$IFn$_invoke$arity$1($G__45628_G__45629_col_data_partial_results_result$$) : $col_fn$$.call(null, $G__45628_G__45629_col_data_partial_results_result$$);
    }
    $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$ = asami.query.index_vars(cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($G__45628_G__45629_col_data_partial_results_result$$)));
    var $col$$ = $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$.cljs$core$IFn$_invoke$arity$1 ? $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$.cljs$core$IFn$_invoke$arity$1($v$$) : $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$.call(null, $v$$);
    $G__45628_G__45629_col_data_partial_results_result$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__45584_SHARP_$$) {
      return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($p1__45584_SHARP_$$, $col$$);
    }, $G__45628_G__45629_col_data_partial_results_result$$);
    $G__45628_G__45629_col_data_partial_results_result$$ = $dfn$$.cljs$core$IFn$_invoke$arity$1 ? $dfn$$.cljs$core$IFn$_invoke$arity$1($G__45628_G__45629_col_data_partial_results_result$$) : $dfn$$.call(null, $G__45628_G__45629_col_data_partial_results_result$$);
    return $col_fn$$.cljs$core$IFn$_invoke$arity$1 ? $col_fn$$.cljs$core$IFn$_invoke$arity$1($G__45628_G__45629_col_data_partial_results_result$$) : $col_fn$$.call(null, $G__45628_G__45629_col_data_partial_results_result$$);
  }
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $selected_selection_count_vec__45625_with$$$) && $APP.cljs.core.vector_QMARK_($APP.cljs.core.first($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$)) ? ($selected_selection_count_vec__45625_with$$$ = $APP.cljs.core.first($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$), $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1481$_DOT__DOT__DOT_, $APP.cljs.core.second($selected_selection_count_vec__45625_with$$$)) ? 
  ($project_aggregate_vec__45633$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($selected_selection_count_vec__45625_with$$$, 0, null), $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($project_aggregate_vec__45633$$, 0, null), $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($project_aggregate_vec__45633$$, 1, null), $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($selected_selection_count_vec__45625_with$$$, 1, null), $col_fn$$ = 
  asami.query.aggregate_fns.cljs$core$IFn$_invoke$arity$1 ? asami.query.aggregate_fns.cljs$core$IFn$_invoke$arity$1($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$) : asami.query.aggregate_fns.call(null, $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$), $dfn$$ = asami.query.distinct_fn($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$), $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$ = $APP.cljs.core.truth_(asami.planner.wildcard_QMARK_($v$$)) ? function($G__45636_result$$) {
    $G__45636_result$$ = $dfn$$.cljs$core$IFn$_invoke$arity$1 ? $dfn$$.cljs$core$IFn$_invoke$arity$1($G__45636_result$$) : $dfn$$.call(null, $G__45636_result$$);
    return $col_fn$$.cljs$core$IFn$_invoke$arity$1 ? $col_fn$$.cljs$core$IFn$_invoke$arity$1($G__45636_result$$) : $col_fn$$.call(null, $G__45636_result$$);
  } : function($G__45637_col_data$jscomp$3_result$$) {
    var $var_index$$ = asami.query.index_vars(cljs$cst$2299$cols.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($G__45637_col_data$jscomp$3_result$$))), $col$$ = $var_index$$.cljs$core$IFn$_invoke$arity$1 ? $var_index$$.cljs$core$IFn$_invoke$arity$1($v$$) : $var_index$$.call(null, $v$$);
    $G__45637_col_data$jscomp$3_result$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__45585_SHARP_$$) {
      return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($p1__45585_SHARP_$$, $col$$);
    }, $G__45637_col_data$jscomp$3_result$$);
    $G__45637_col_data$jscomp$3_result$$ = $dfn$$.cljs$core$IFn$_invoke$arity$1 ? $dfn$$.cljs$core$IFn$_invoke$arity$1($G__45637_col_data$jscomp$3_result$$) : $dfn$$.call(null, $G__45637_col_data$jscomp$3_result$$);
    return $col_fn$$.cljs$core$IFn$_invoke$arity$1 ? $col_fn$$.cljs$core$IFn$_invoke$arity$1($G__45637_col_data$jscomp$3_result$$) : $col_fn$$.call(null, $G__45637_col_data$jscomp$3_result$$);
  }, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$, $G__45628_G__45629_col_data_partial_results_result$$)) : $project_aggregate_vec__45633$$($APP.cljs.core.first($op$jscomp$29_selection$jscomp$5_single_agg_var_index$$), $APP.cljs.core.first($G__45628_G__45629_col_data_partial_results_result$$))) : $APP.cljs.core.with_meta($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($project_aggregate_vec__45633$$, 
  $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$), $G__45628_G__45629_col_data_partial_results_result$$), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2299$cols, $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(asami.query.result_label, $op$jscomp$29_selection$jscomp$5_single_agg_var_index$$)], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.aggregate_over), $APP.schema.core.__GT_FnSchema(output_schema45586_45919, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45587_45920], null)));
asami.query.aggregate_query = function($find$$, $bindings$$, $with$$$, $where$$, $graph$$, $project_fn$$, $p__45638_query_plan$$) {
  var $map__45639__$1$$ = $APP.cljs.core.__destructure_map($p__45638_query_plan$$);
  $p__45638_query_plan$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45639__$1$$, cljs$cst$2406$query_plan);
  5 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$2223$debug, "asami.query", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["aggregate query. plan only\x3d", $p__45638_query_plan$$], 0));
  var $_STAR_select_distinct_STAR__orig_val__45640$$ = asami.query._STAR_select_distinct_STAR_;
  asami.query._STAR_select_distinct_STAR_ = $APP.cljs.core.distinct;
  try {
    var $simplified$$ = asami.planner.simplify_algebra.cljs$core$IFn$_invoke$arity$1($where$$), $normalized$$ = asami.planner.normalize_sum_of_products($simplified$$), $vec__45642$$ = asami.planner.split_aggregate_terms($normalized$$, $find$$, $with$$$), $outer_wheres$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__45642$$, 0, null), $inner_wheres$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__45642$$, 1, null), $agg_vars$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__45642$$, 
    2, null);
    5 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$2223$debug, "asami.query", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["inner query:", $APP.cljs.core.seq($inner_wheres$$)], 0));
    5 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$2223$debug, "asami.query", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["outer query:", $APP.cljs.core.seq($outer_wheres$$)], 0));
    var $find_vars$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(asami.projection.vartest_QMARK_, $find$$), $find_var_set$$ = $APP.cljs.core.set($find_vars$$), $with_set$$ = $APP.cljs.core.set($with$$$), $outer_results$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$3(function($ow$$, $JSCompiler_inline_result$jscomp$868_inner_var_set$$) {
      if ($APP.cljs.core.seq($ow$$)) {
        var $JSCompiler_temp_const$$ = $APP.cljs.core.concat, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$variadic, $JSCompiler_temp_const$jscomp$1$$ = $APP.cljs.core.prim_seq, $JSCompiler_temp_const$jscomp$2$$ = $JSCompiler_temp_const$jscomp$1$$.cljs$core$IFn$_invoke$arity$2;
        $JSCompiler_inline_result$jscomp$868_inner_var_set$$ = $APP.cljs.core.set(asami.planner.get_vars($JSCompiler_inline_result$jscomp$868_inner_var_set$$));
        $JSCompiler_inline_result$jscomp$868_inner_var_set$$ = $APP.cljs.core.sequence.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$1($find_var_set$$), $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$1($with_set$$), $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$1($agg_vars$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$1($JSCompiler_inline_result$jscomp$868_inner_var_set$$)], 
        0)), asami.planner.get_vars($ow$$));
        $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $find_vars$$, $with$$$, $JSCompiler_temp_const$jscomp$2$$.call($JSCompiler_temp_const$jscomp$1$$, [$JSCompiler_inline_result$jscomp$868_inner_var_set$$], 0));
        return asami.query.execute_query($JSCompiler_temp_const$$, $ow$$, $bindings$$, $graph$$, $project_fn$$, $map__45639__$1$$);
      }
      return asami.query.identity_binding;
    }, $outer_wheres$$, $inner_wheres$$);
    5 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$2223$debug, "asami.query", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["outer results: ", $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentVector.EMPTY, $outer_results$$)], 0));
    if ($APP.cljs.core.truth_($p__45638_query_plan$$)) {
      return new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$139$type, cljs$cst$2420$aggregate, cljs$cst$2421$outer_queries, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$cst$2407$plan, $outer_results$$), cljs$cst$2422$inner_queries, $inner_wheres$$], null);
    }
    var $grouping_vars$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($find_var_set$$, $with_set$$);
    5 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$2223$debug, "asami.query", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["grouping vars: ", $grouping_vars$$], 0));
    var $inner_results$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.seq, $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$3(asami.query.context_execute_query, $graph$$, $grouping_vars$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$outer_results$$, $inner_wheres$$], 0)));
    5 <= zuko.logging._STAR_level_STAR_ && zuko.logging.log_STAR_.cljs$core$IFn$_invoke$arity$variadic(zuko.logging._STAR_output_STAR_, $APP.cljs$cst$2223$debug, "asami.query", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["inner results: ", $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentVector.EMPTY, $inner_results$$)], 0));
    return asami.query.aggregate_over($find$$, $with$$$, $inner_results$$);
  } finally {
    asami.query._STAR_select_distinct_STAR_ = $_STAR_select_distinct_STAR__orig_val__45640$$;
  }
};
asami.query.fresh = function() {
  return $APP.cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("?__");
};
asami.query.map_epv = function($f$$, $map__45646__$1_p__45645$$) {
  $map__45646__$1_p__45645$$ = $APP.cljs.core.__destructure_map($map__45646__$1_p__45645$$);
  var $where$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45646__$1_p__45645$$, $APP.cljs$cst$2409$where);
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($map__45646__$1_p__45645$$, $APP.cljs$cst$2409$where, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function $asami$query$map_epv_$_opf$$($constraint$$) {
    return asami.projection.epv_pattern_QMARK_($constraint$$) ? $f$$.cljs$core$IFn$_invoke$arity$1 ? $f$$.cljs$core$IFn$_invoke$arity$1($constraint$$) : $f$$.call(null, $constraint$$) : zuko.schema.op_pattern_QMARK_($constraint$$) ? $APP.cljs.core.cons($APP.cljs.core.first($constraint$$), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($asami$query$map_epv_$_opf$$, $APP.cljs.core.rest($constraint$$))) : $constraint$$;
  }, $where$$));
};
var output_schema45647_45935 = $APP.schema.core.Any, input_schema45648_45936 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, cljs$cst$2210$arg0)], null), ret__35121__auto___45937 = asami.query.rewrite_wildcards = function($map__45652__$1_p__45651$$) {
  $map__45652__$1_p__45651$$ = $APP.cljs.core.__destructure_map($map__45652__$1_p__45651$$);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45652__$1_p__45651$$, $APP.cljs$cst$2409$where);
  return asami.query.map_epv(function($epv$$) {
    return $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function($x$$) {
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($x$$, $APP.cljs$cst$312$_) ? asami.query.fresh() : $x$$;
    }, $epv$$);
  }, $map__45652__$1_p__45651$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.rewrite_wildcards), $APP.schema.core.__GT_FnSchema(output_schema45647_45935, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45648_45936], null)));
var output_schema45653_45938 = $APP.schema.core.Any, input_schema45654_45939 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, cljs$cst$2210$arg0)], null), ret__35121__auto___45940 = asami.query.expand_shortened_pattern_constraints = function($map__45658__$1_p__45657$$) {
  $map__45658__$1_p__45657$$ = $APP.cljs.core.__destructure_map($map__45658__$1_p__45657$$);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45658__$1_p__45657$$, $APP.cljs$cst$2409$where);
  return asami.query.map_epv(function($epv$$) {
    return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($epv$$, $APP.cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(3 - $APP.cljs.core.count($epv$$), asami.query.fresh));
  }, $map__45658__$1_p__45657$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.expand_shortened_pattern_constraints), $APP.schema.core.__GT_FnSchema(output_schema45653_45938, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45654_45939], null)));
var output_schema45659_45941 = $APP.schema.core.Any, input_schema45660_45942 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1237$x, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___45943 = asami.query.parse = function($x$$) {
  return asami.query.expand_shortened_pattern_constraints(asami.query.rewrite_wildcards(asami.query.query_validator(asami.query.query_map($x$$))));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.parse), $APP.schema.core.__GT_FnSchema(output_schema45659_45941, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45660_45942], null)));
var output_schema45663_45944 = $APP.schema.core.Any, input_schema45664_45945 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2411$query, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2423$empty_graph, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2424$inputs, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2425$plan_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], 
null)))], null), ret__35121__auto___45948 = asami.query.query_entry = function($find$jscomp$3_map__45667_query$$, $empty_graph_graph$$, $inputs$jscomp$5_inputs__$1_or__5025__auto__$$, $options__$1$$) {
  $find$jscomp$3_map__45667_query$$ = asami.query.parse($find$jscomp$3_map__45667_query$$);
  var $map__45667__$1_where$$ = $APP.cljs.core.__destructure_map($find$jscomp$3_map__45667_query$$);
  $find$jscomp$3_map__45667_query$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45667__$1_where$$, $APP.cljs$cst$2408$find);
  var $_STAR_select_distinct_STAR__temp_val__45675_all$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45667__$1_where$$, $APP.cljs$cst$365$all), $bindings$jscomp$196_in$$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45667__$1_where$$, $APP.cljs$cst$1825$in), $_STAR_select_distinct_STAR__orig_val__45674_with$$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45667__$1_where$$, $APP.cljs$cst$2410$with);
  $map__45667__$1_where$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45667__$1_where$$, $APP.cljs$cst$2409$where);
  var $options$$ = $APP.cljs.core.seq($bindings$jscomp$196_in$$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.take.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count($bindings$jscomp$196_in$$$), $inputs$jscomp$5_inputs__$1_or__5025__auto__$$), $APP.cljs.core.drop.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count($bindings$jscomp$196_in$$$), $inputs$jscomp$5_inputs__$1_or__5025__auto__$$)], null) : new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.first($inputs$jscomp$5_inputs__$1_or__5025__auto__$$)], null), $APP.cljs.core.rest($inputs$jscomp$5_inputs__$1_or__5025__auto__$$)], null);
  $inputs$jscomp$5_inputs__$1_or__5025__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($options$$, 0, null);
  $options$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($options$$, 1, null);
  $options__$1$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.hash_map, $options$$), cljs$cst$2406$query_plan, $options__$1$$);
  $inputs$jscomp$5_inputs__$1_or__5025__auto__$$ = asami.query.create_bindings($bindings$jscomp$196_in$$$, $inputs$jscomp$5_inputs__$1_or__5025__auto__$$);
  $bindings$jscomp$196_in$$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($inputs$jscomp$5_inputs__$1_or__5025__auto__$$, 0, null);
  $inputs$jscomp$5_inputs__$1_or__5025__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($inputs$jscomp$5_inputs__$1_or__5025__auto__$$, 1, null);
  $empty_graph_graph$$ = $APP.cljs.core.truth_($inputs$jscomp$5_inputs__$1_or__5025__auto__$$) ? $inputs$jscomp$5_inputs__$1_or__5025__auto__$$ : $empty_graph_graph$$;
  if ($APP.cljs.core.seq($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(asami.planner.aggregate_form_QMARK_, $find$jscomp$3_map__45667_query$$))) {
    return asami.query.aggregate_query($find$jscomp$3_map__45667_query$$, $bindings$jscomp$196_in$$$, $_STAR_select_distinct_STAR__orig_val__45674_with$$$, $map__45667__$1_where$$, $empty_graph_graph$$, asami.projection.project, $options__$1$$);
  }
  $_STAR_select_distinct_STAR__orig_val__45674_with$$$ = asami.query._STAR_select_distinct_STAR_;
  $_STAR_select_distinct_STAR__temp_val__45675_all$$ = $APP.cljs.core.truth_($_STAR_select_distinct_STAR__temp_val__45675_all$$) ? $APP.cljs.core.identity : $APP.cljs.core.distinct;
  asami.query._STAR_select_distinct_STAR_ = $_STAR_select_distinct_STAR__temp_val__45675_all$$;
  try {
    return asami.query.execute_query($find$jscomp$3_map__45667_query$$, $map__45667__$1_where$$, $bindings$jscomp$196_in$$$, $empty_graph_graph$$, asami.projection.project, $options__$1$$);
  } finally {
    asami.query._STAR_select_distinct_STAR_ = $_STAR_select_distinct_STAR__orig_val__45674_with$$$;
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.query.query_entry), $APP.schema.core.__GT_FnSchema(output_schema45663_45944, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45664_45945], null)));
var naga = {store:{}};
naga.store.Storage = function() {
};
var naga$store$Storage$start_tx$dyn_44543 = function($store$$) {
  var $m__5372__auto__$jscomp$219_m__5374__auto__$$ = naga.store.start_tx[$APP.goog.typeOf($store$$ == null ? null : $store$$)];
  if ($m__5372__auto__$jscomp$219_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$219_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$219_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($store$$) : $m__5372__auto__$jscomp$219_m__5374__auto__$$.call(null, $store$$);
  }
  $m__5372__auto__$jscomp$219_m__5374__auto__$$ = naga.store.start_tx._;
  if ($m__5372__auto__$jscomp$219_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$219_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$219_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($store$$) : $m__5372__auto__$jscomp$219_m__5374__auto__$$.call(null, $store$$);
  }
  throw $APP.cljs.core.missing_protocol("Storage.start-tx", $store$$);
};
naga.store.start_tx = function($store$$) {
  return $store$$ != null && $store$$.naga$store$Storage$start_tx$arity$1 != null ? $store$$.naga$store$Storage$start_tx$arity$1($store$$) : naga$store$Storage$start_tx$dyn_44543($store$$);
};
var naga$store$Storage$commit_tx$dyn_44545 = function($store$$) {
  var $m__5372__auto__$jscomp$220_m__5374__auto__$$ = naga.store.commit_tx[$APP.goog.typeOf($store$$ == null ? null : $store$$)];
  if ($m__5372__auto__$jscomp$220_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$220_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$220_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($store$$) : $m__5372__auto__$jscomp$220_m__5374__auto__$$.call(null, $store$$);
  }
  $m__5372__auto__$jscomp$220_m__5374__auto__$$ = naga.store.commit_tx._;
  if ($m__5372__auto__$jscomp$220_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$220_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$220_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($store$$) : $m__5372__auto__$jscomp$220_m__5374__auto__$$.call(null, $store$$);
  }
  throw $APP.cljs.core.missing_protocol("Storage.commit-tx", $store$$);
};
naga.store.commit_tx = function($store$$) {
  return $store$$ != null && $store$$.naga$store$Storage$commit_tx$arity$1 != null ? $store$$.naga$store$Storage$commit_tx$arity$1($store$$) : naga$store$Storage$commit_tx$dyn_44545($store$$);
};
var naga$store$Storage$deltas$dyn_44549 = function($store$$) {
  var $m__5372__auto__$jscomp$221_m__5374__auto__$$ = naga.store.deltas[$APP.goog.typeOf($store$$ == null ? null : $store$$)];
  if ($m__5372__auto__$jscomp$221_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$221_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$221_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($store$$) : $m__5372__auto__$jscomp$221_m__5374__auto__$$.call(null, $store$$);
  }
  $m__5372__auto__$jscomp$221_m__5374__auto__$$ = naga.store.deltas._;
  if ($m__5372__auto__$jscomp$221_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$221_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$221_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($store$$) : $m__5372__auto__$jscomp$221_m__5374__auto__$$.call(null, $store$$);
  }
  throw $APP.cljs.core.missing_protocol("Storage.deltas", $store$$);
};
naga.store.deltas = function($store$$) {
  return $store$$ != null && $store$$.naga$store$Storage$deltas$arity$1 != null ? $store$$.naga$store$Storage$deltas$arity$1($store$$) : naga$store$Storage$deltas$dyn_44549($store$$);
};
var naga$store$Storage$resolve_pattern$dyn_44550 = function($store$$, $pattern$$) {
  var $m__5372__auto__$jscomp$222_m__5374__auto__$$ = naga.store.resolve_pattern[$APP.goog.typeOf($store$$ == null ? null : $store$$)];
  if ($m__5372__auto__$jscomp$222_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$222_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$222_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($store$$, $pattern$$) : $m__5372__auto__$jscomp$222_m__5374__auto__$$.call(null, $store$$, $pattern$$);
  }
  $m__5372__auto__$jscomp$222_m__5374__auto__$$ = naga.store.resolve_pattern._;
  if ($m__5372__auto__$jscomp$222_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$222_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$222_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($store$$, $pattern$$) : $m__5372__auto__$jscomp$222_m__5374__auto__$$.call(null, $store$$, $pattern$$);
  }
  throw $APP.cljs.core.missing_protocol("Storage.resolve-pattern", $store$$);
};
naga.store.resolve_pattern = function($store$$, $pattern$$) {
  return $store$$ != null && $store$$.naga$store$Storage$resolve_pattern$arity$2 != null ? $store$$.naga$store$Storage$resolve_pattern$arity$2($store$$, $pattern$$) : naga$store$Storage$resolve_pattern$dyn_44550($store$$, $pattern$$);
};
var naga$store$Storage$count_pattern$dyn_44554 = function($store$$, $pattern$$) {
  var $m__5372__auto__$jscomp$223_m__5374__auto__$$ = naga.store.count_pattern[$APP.goog.typeOf($store$$ == null ? null : $store$$)];
  if ($m__5372__auto__$jscomp$223_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$223_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$223_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($store$$, $pattern$$) : $m__5372__auto__$jscomp$223_m__5374__auto__$$.call(null, $store$$, $pattern$$);
  }
  $m__5372__auto__$jscomp$223_m__5374__auto__$$ = naga.store.count_pattern._;
  if ($m__5372__auto__$jscomp$223_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$223_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$223_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($store$$, $pattern$$) : $m__5372__auto__$jscomp$223_m__5374__auto__$$.call(null, $store$$, $pattern$$);
  }
  throw $APP.cljs.core.missing_protocol("Storage.count-pattern", $store$$);
};
naga.store.count_pattern = function($store$$, $pattern$$) {
  return $store$$ != null && $store$$.naga$store$Storage$count_pattern$arity$2 != null ? $store$$.naga$store$Storage$count_pattern$arity$2($store$$, $pattern$$) : naga$store$Storage$count_pattern$dyn_44554($store$$, $pattern$$);
};
var naga$store$Storage$query$dyn_44559 = function($store$$, $output_pattern$$, $patterns$$) {
  var $m__5372__auto__$jscomp$224_m__5374__auto__$$ = naga.store.query[$APP.goog.typeOf($store$$ == null ? null : $store$$)];
  if ($m__5372__auto__$jscomp$224_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$224_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$224_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($store$$, $output_pattern$$, $patterns$$) : $m__5372__auto__$jscomp$224_m__5374__auto__$$.call(null, $store$$, $output_pattern$$, $patterns$$);
  }
  $m__5372__auto__$jscomp$224_m__5374__auto__$$ = naga.store.query._;
  if ($m__5372__auto__$jscomp$224_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$224_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$224_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($store$$, $output_pattern$$, $patterns$$) : $m__5372__auto__$jscomp$224_m__5374__auto__$$.call(null, $store$$, $output_pattern$$, $patterns$$);
  }
  throw $APP.cljs.core.missing_protocol("Storage.query", $store$$);
};
naga.store.query = function($store$$, $output_pattern$$, $patterns$$) {
  return $store$$ != null && $store$$.naga$store$Storage$query$arity$3 != null ? $store$$.naga$store$Storage$query$arity$3($store$$, $output_pattern$$, $patterns$$) : naga$store$Storage$query$dyn_44559($store$$, $output_pattern$$, $patterns$$);
};
var naga$store$Storage$assert_data$dyn_44560 = function($store$$, $data$$) {
  var $m__5372__auto__$jscomp$225_m__5374__auto__$$ = naga.store.assert_data[$APP.goog.typeOf($store$$ == null ? null : $store$$)];
  if ($m__5372__auto__$jscomp$225_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$225_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$225_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($store$$, $data$$) : $m__5372__auto__$jscomp$225_m__5374__auto__$$.call(null, $store$$, $data$$);
  }
  $m__5372__auto__$jscomp$225_m__5374__auto__$$ = naga.store.assert_data._;
  if ($m__5372__auto__$jscomp$225_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$225_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$225_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($store$$, $data$$) : $m__5372__auto__$jscomp$225_m__5374__auto__$$.call(null, $store$$, $data$$);
  }
  throw $APP.cljs.core.missing_protocol("Storage.assert-data", $store$$);
};
naga.store.assert_data = function($store$$, $data$$) {
  return $store$$ != null && $store$$.naga$store$Storage$assert_data$arity$2 != null ? $store$$.naga$store$Storage$assert_data$arity$2($store$$, $data$$) : naga$store$Storage$assert_data$dyn_44560($store$$, $data$$);
};
var naga$store$Storage$retract_data$dyn_44563 = function($store$$, $data$$) {
  var $m__5372__auto__$jscomp$226_m__5374__auto__$$ = naga.store.retract_data[$APP.goog.typeOf($store$$ == null ? null : $store$$)];
  if ($m__5372__auto__$jscomp$226_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$226_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$226_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($store$$, $data$$) : $m__5372__auto__$jscomp$226_m__5374__auto__$$.call(null, $store$$, $data$$);
  }
  $m__5372__auto__$jscomp$226_m__5374__auto__$$ = naga.store.retract_data._;
  if ($m__5372__auto__$jscomp$226_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$226_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$226_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($store$$, $data$$) : $m__5372__auto__$jscomp$226_m__5374__auto__$$.call(null, $store$$, $data$$);
  }
  throw $APP.cljs.core.missing_protocol("Storage.retract-data", $store$$);
};
naga.store.retract_data = function($store$$, $data$$) {
  return $store$$ != null && $store$$.naga$store$Storage$retract_data$arity$2 != null ? $store$$.naga$store$Storage$retract_data$arity$2($store$$, $data$$) : naga$store$Storage$retract_data$dyn_44563($store$$, $data$$);
};
var naga$store$Storage$assert_schema_opts$dyn_44564 = function($store$$, $schema__$1$$, $opts$$) {
  var $m__5372__auto__$jscomp$227_m__5374__auto__$$ = naga.store.assert_schema_opts[$APP.goog.typeOf($store$$ == null ? null : $store$$)];
  if ($m__5372__auto__$jscomp$227_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$227_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$227_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($store$$, $schema__$1$$, $opts$$) : $m__5372__auto__$jscomp$227_m__5374__auto__$$.call(null, $store$$, $schema__$1$$, $opts$$);
  }
  $m__5372__auto__$jscomp$227_m__5374__auto__$$ = naga.store.assert_schema_opts._;
  if ($m__5372__auto__$jscomp$227_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$227_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$227_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($store$$, $schema__$1$$, $opts$$) : $m__5372__auto__$jscomp$227_m__5374__auto__$$.call(null, $store$$, $schema__$1$$, $opts$$);
  }
  throw $APP.cljs.core.missing_protocol("Storage.assert-schema-opts", $store$$);
};
naga.store.assert_schema_opts = function($store$$, $schema__$1$$, $opts$$) {
  return $store$$ != null && $store$$.naga$store$Storage$assert_schema_opts$arity$3 != null ? $store$$.naga$store$Storage$assert_schema_opts$arity$3($store$$, $schema__$1$$, $opts$$) : naga$store$Storage$assert_schema_opts$dyn_44564($store$$, $schema__$1$$, $opts$$);
};
var naga$store$Storage$query_insert$dyn_44569 = function($store$$, $assertion_patterns$$, $patterns$$) {
  var $m__5372__auto__$jscomp$228_m__5374__auto__$$ = naga.store.query_insert[$APP.goog.typeOf($store$$ == null ? null : $store$$)];
  if ($m__5372__auto__$jscomp$228_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$228_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$228_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($store$$, $assertion_patterns$$, $patterns$$) : $m__5372__auto__$jscomp$228_m__5374__auto__$$.call(null, $store$$, $assertion_patterns$$, $patterns$$);
  }
  $m__5372__auto__$jscomp$228_m__5374__auto__$$ = naga.store.query_insert._;
  if ($m__5372__auto__$jscomp$228_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$228_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$228_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($store$$, $assertion_patterns$$, $patterns$$) : $m__5372__auto__$jscomp$228_m__5374__auto__$$.call(null, $store$$, $assertion_patterns$$, $patterns$$);
  }
  throw $APP.cljs.core.missing_protocol("Storage.query-insert", $store$$);
};
naga.store.query_insert = function($store$$, $assertion_patterns$$, $patterns$$) {
  return $store$$ != null && $store$$.naga$store$Storage$query_insert$arity$3 != null ? $store$$.naga$store$Storage$query_insert$arity$3($store$$, $assertion_patterns$$, $patterns$$) : naga$store$Storage$query_insert$dyn_44569($store$$, $assertion_patterns$$, $patterns$$);
};
naga.store.StorageType = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(function($p1__44516_SHARP_$$) {
  return $p1__44516_SHARP_$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $p1__44516_SHARP_$$.naga$store$Storage$ ? !0 : $p1__44516_SHARP_$$.cljs$lang$protocol_mask$partition$ ? !1 : $APP.cljs.core.native_satisfies_QMARK_(naga.store.Storage, $p1__44516_SHARP_$$) : $APP.cljs.core.native_satisfies_QMARK_(naga.store.Storage, $p1__44516_SHARP_$$);
});
naga.store.ConnectionStore = function() {
};
var naga$store$ConnectionStore$as_store$dyn_44571 = function($c$$) {
  var $m__5372__auto__$jscomp$229_m__5374__auto__$$ = naga.store.as_store[$APP.goog.typeOf($c$$ == null ? null : $c$$)];
  if ($m__5372__auto__$jscomp$229_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$229_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$229_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($c$$) : $m__5372__auto__$jscomp$229_m__5374__auto__$$.call(null, $c$$);
  }
  $m__5372__auto__$jscomp$229_m__5374__auto__$$ = naga.store.as_store._;
  if ($m__5372__auto__$jscomp$229_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$229_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$229_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($c$$) : $m__5372__auto__$jscomp$229_m__5374__auto__$$.call(null, $c$$);
  }
  throw $APP.cljs.core.missing_protocol("ConnectionStore.as-store", $c$$);
};
naga.store.as_store = function($c$$) {
  return $c$$ != null && $c$$.naga$store$ConnectionStore$as_store$arity$1 != null ? $c$$.naga$store$ConnectionStore$as_store$arity$1($c$$) : naga$store$ConnectionStore$as_store$dyn_44571($c$$);
};
naga.store.ConnectionStore.object = !0;
naga.store.as_store.object = function($c$$) {
  return null;
};
naga.store.assert_schema = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$205_argseq__5756__auto__$$ = [], $len__5749__auto___44577$$ = arguments.length, $i__5750__auto___44578$$ = 0;;) {
    if ($i__5750__auto___44578$$ < $len__5749__auto___44577$$) {
      $args__5755__auto__$jscomp$205_argseq__5756__auto__$$.push(arguments[$i__5750__auto___44578$$]), $i__5750__auto___44578$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$205_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$205_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$205_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return naga.store.assert_schema.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$205_argseq__5756__auto__$$);
};
naga.store.assert_schema.cljs$core$IFn$_invoke$arity$variadic = function($store$$, $schema__$1$$, $map__44538__$1_p__44537$$) {
  $map__44538__$1_p__44537$$ = $APP.cljs.core.__destructure_map($map__44538__$1_p__44537$$);
  return naga.store.assert_schema.cljs$core$IFn$_invoke$arity$variadic($store$$, $schema__$1$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$map__44538__$1_p__44537$$], 0));
};
naga.store.assert_schema.cljs$lang$maxFixedArity = 2;
naga.store.assert_schema.cljs$lang$applyTo = function($G__44530_seq44528$$) {
  var $G__44529$$ = $APP.cljs.core.first($G__44530_seq44528$$), $seq44528__$1_seq44528__$2$$ = $APP.cljs.core.next($G__44530_seq44528$$);
  $G__44530_seq44528$$ = $APP.cljs.core.first($seq44528__$1_seq44528__$2$$);
  $seq44528__$1_seq44528__$2$$ = $APP.cljs.core.next($seq44528__$1_seq44528__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__44529$$, $G__44530_seq44528$$, $seq44528__$1_seq44528__$2$$);
};
naga.store.retrieve_contents = function($store$$) {
  return naga.store.resolve_pattern($store$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2426$_QMARK_entity, cljs$cst$2427$_QMARK_attribute, cljs$cst$2428$_QMARK_value], null));
};
asami.entities = {};
asami.entities.general = {};
asami.entities.general.a_ns = "a";
asami.entities.general.KeyValue = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, "Key"), $APP.schema.core.one($APP.schema.core.Any, "Value")], null);
asami.entities.general.EntityMap = $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.schema.core.Any]);
asami.entities.general.Result = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, "first"), $APP.schema.core.optional($APP.schema.core.Any, "second"), $APP.schema.core.optional($APP.schema.core.Any, "third")], null);
asami.entities.general.Pattern = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, "entity"), $APP.schema.core.one($APP.schema.core.Any, "attribute"), $APP.schema.core.one($APP.schema.core.Any, "value")], null);
asami.entities.general.ResolverFn = $APP.schema.core.make_fn_schema(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.general.Result], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.general.Pattern], 
null), cljs$cst$2210$arg0)], null)], null));
asami.entities.general.GraphType = $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(function($p1__44570_SHARP_$$) {
  return $p1__44570_SHARP_$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $p1__44570_SHARP_$$.zuko$node$NodeAPI$ ? !0 : $p1__44570_SHARP_$$.cljs$lang$protocol_mask$partition$ ? !1 : $APP.cljs.core.native_satisfies_QMARK_(zuko.node.NodeAPI, $p1__44570_SHARP_$$) : $APP.cljs.core.native_satisfies_QMARK_(zuko.node.NodeAPI, $p1__44570_SHARP_$$);
});
asami.entities.reader = {};
asami.entities.reader.MapOrList = $APP.schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([asami.entities.general.EntityMap, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null)], 0));
asami.entities.reader.NodeType = $APP.schema.core.Any;
asami.entities.reader.get_a_first = function($struct$$) {
  return $APP.cljs.core.some(function($p__44605$$) {
    var $and__5023__auto____$2$jscomp$12_k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44605$$, 0, null);
    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44605$$, 1, null);
    var $and__5023__auto__$jscomp$187_and__5023__auto____$1$$ = $and__5023__auto____$2$jscomp$12_k$$ instanceof $APP.cljs.core.Keyword;
    return $and__5023__auto__$jscomp$187_and__5023__auto____$1$$ ? ($and__5023__auto__$jscomp$187_and__5023__auto____$1$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(asami.entities.general.a_ns, $APP.cljs.core.namespace($and__5023__auto____$2$jscomp$12_k$$))) ? ($and__5023__auto____$2$jscomp$12_k$$ = $APP.clojure.string.starts_with_QMARK_($APP.cljs.core.name($and__5023__auto____$2$jscomp$12_k$$), "first")) ? $p__44605$$ : $and__5023__auto____$2$jscomp$12_k$$ : $and__5023__auto__$jscomp$187_and__5023__auto____$1$$ : 
    $and__5023__auto__$jscomp$187_and__5023__auto____$1$$;
  }, $struct$$);
};
var output_schema44612_44819 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.general.KeyValue], null), input_schema44613_44820 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.schema.core.Any, 
$APP.cljs.core.with_meta($APP.cljs$cst$2429$entity, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null)))], null), ret__35121__auto___44821 = asami.entities.reader.property_values = function($graph$$, $entity$$) {
  return $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function($p1__44611_SHARP_$$) {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2430$a_SLASH_owns, $APP.cljs.core.first($p1__44611_SHARP_$$));
  }, zuko.node.find_triple($graph$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$entity$$, $APP.cljs$cst$2221$_QMARK_p, cljs$cst$2222$_QMARK_o], null)));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.reader.property_values), $APP.schema.core.__GT_FnSchema(output_schema44612_44819, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44613_44820], null)));
var output_schema44620_44822 = $APP.schema.core.maybe(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.general.KeyValue], null)), input_schema44621_44823 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], 
null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2431$prop, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$57$v, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null)))], null), ret__35121__auto___44824 = asami.entities.reader.check_structure = function($graph$$, 
$JSCompiler_inline_result$jscomp$871_prop$$, $v$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.not, $fexpr__44629$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2432$db_SLASH_id, null, $APP.cljs$cst$2374$db_SLASH_ident, null], null), null);
  $JSCompiler_inline_result$jscomp$871_prop$$ = $fexpr__44629$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__44629$$.cljs$core$IFn$_invoke$arity$1($JSCompiler_inline_result$jscomp$871_prop$$) : $fexpr__44629$$.call(null, $JSCompiler_inline_result$jscomp$871_prop$$);
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$871_prop$$) && asami.graph.broad_node_type_QMARK_($v$$) ? $APP.cljs.core.seq(asami.entities.reader.property_values($graph$$, $v$$)) : null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.reader.check_structure), $APP.schema.core.__GT_FnSchema(output_schema44620_44822, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44621_44823], null)));
var output_schema44630_44833 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), input_schema44631_44834 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([asami.entities.reader.NodeType]), 
$APP.cljs.core.with_meta($APP.cljs$cst$88$seen, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2433$NodeType, "null"], null), null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.general.KeyValue], null), $APP.cljs.core.with_meta(cljs$cst$2434$pairs, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2435$KeyValue], null)], null)))], null), ret__35121__auto___44836 = asami.entities.reader.build_list = function($JSCompiler_inline_result$jscomp$874_graph$$, $seen$$, $G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$) {
  $G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$);
  var $first_elt_head_elt_temp__5823__auto__$$ = asami.entities.reader.get_a_first($G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$);
  if ($APP.cljs.core.truth_($first_elt_head_elt_temp__5823__auto__$$)) {
    $G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$ = cljs$cst$2436$a_SLASH_rest.cljs$core$IFn$_invoke$arity$1($G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$);
    $first_elt_head_elt_temp__5823__auto__$$ = asami.entities.reader.recurse_node.cljs$core$IFn$_invoke$arity$3 ? asami.entities.reader.recurse_node.cljs$core$IFn$_invoke$arity$3($JSCompiler_inline_result$jscomp$874_graph$$, $seen$$, $first_elt_head_elt_temp__5823__auto__$$) : asami.entities.reader.recurse_node.call(null, $JSCompiler_inline_result$jscomp$874_graph$$, $seen$$, $first_elt_head_elt_temp__5823__auto__$$);
    $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($first_elt_head_elt_temp__5823__auto__$$, 0, null);
    $first_elt_head_elt_temp__5823__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($first_elt_head_elt_temp__5823__auto__$$, 1, null);
    $first_elt_head_elt_temp__5823__auto__$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2437$a_SLASH_nil, $first_elt_head_elt_temp__5823__auto__$$) ? null : $first_elt_head_elt_temp__5823__auto__$$;
    if ($APP.cljs.core.truth_($G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$)) {
      var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cons;
      $G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$ = asami.entities.reader.property_values($JSCompiler_inline_result$jscomp$874_graph$$, $G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$);
      $JSCompiler_inline_result$jscomp$874_graph$$ = asami.entities.reader.build_list.cljs$core$IFn$_invoke$arity$3 ? asami.entities.reader.build_list.cljs$core$IFn$_invoke$arity$3($JSCompiler_inline_result$jscomp$874_graph$$, $seen$$, $G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$) : asami.entities.reader.build_list.call(null, $JSCompiler_inline_result$jscomp$874_graph$$, $seen$$, $G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$);
      return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $first_elt_head_elt_temp__5823__auto__$$, $JSCompiler_inline_result$jscomp$874_graph$$);
    }
    return new $APP.cljs.core.List(null, $first_elt_head_elt_temp__5823__auto__$$, null, 1, null);
  }
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2438$a_SLASH_list, cljs$cst$2439$a_SLASH_type.cljs$core$IFn$_invoke$arity$1($G__44647$jscomp$inline_5002_pairs$jscomp$4_remaining$jscomp$7_st$$)) ? $APP.cljs.core.PersistentVector.EMPTY : null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.reader.build_list), $APP.schema.core.__GT_FnSchema(output_schema44630_44833, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44631_44834], null)));
var output_schema44651_44841 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), input_schema44652_44842 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([asami.entities.reader.NodeType]), 
$APP.cljs.core.with_meta($APP.cljs$cst$88$seen, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2433$NodeType, "null"], null), null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.general.KeyValue], null), $APP.cljs.core.with_meta(cljs$cst$2434$pairs, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2435$KeyValue], null)], null)))], null), ret__35121__auto___44844 = asami.entities.reader.vbuild_list = function($graph$jscomp$61_l$$, $seen$$, $pairs$$) {
  $graph$jscomp$61_l$$ = asami.entities.reader.build_list($graph$jscomp$61_l$$, $seen$$, $pairs$$);
  return $APP.cljs.core.seq_QMARK_($graph$jscomp$61_l$$) ? $APP.cljs.core.vec($graph$jscomp$61_l$$) : $graph$jscomp$61_l$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.reader.vbuild_list), $APP.schema.core.__GT_FnSchema(output_schema44651_44841, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44652_44842], null)));
asami.entities.reader._STAR_nested_structs_STAR_ = !1;
var output_schema44668_44845 = $APP.schema.core.Any, input_schema44669_44846 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([asami.entities.reader.NodeType]), $APP.cljs.core.with_meta($APP.cljs$cst$88$seen, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2433$NodeType, "null"], null), null)], null))), $APP.schema.core.one(asami.entities.general.KeyValue, cljs$cst$2390$arg2)], null), ret__35121__auto___44853 = asami.entities.reader.recurse_node = function($graph$$, $seen$$, $p__44672$$) {
  var $prop$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44672$$, 0, null), $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44672$$, 1, null), $temp__5823__auto__$$ = asami.entities.reader.check_structure($graph$$, $prop$$, $v$$);
  if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
    if ($APP.cljs.core.truth_(function() {
      var $and__5023__auto__$jscomp$188_or__5025__auto__$$ = $seen$$.cljs$core$IFn$_invoke$arity$1 ? $seen$$.cljs$core$IFn$_invoke$arity$1($v$$) : $seen$$.call(null, $v$$);
      return $APP.cljs.core.truth_($and__5023__auto__$jscomp$188_or__5025__auto__$$) ? $and__5023__auto__$jscomp$188_or__5025__auto__$$ : ($and__5023__auto__$jscomp$188_or__5025__auto__$$ = $APP.cljs.core.not(asami.entities.reader._STAR_nested_structs_STAR_)) ? $APP.cljs.core.some(function($p1__44663_SHARP_$$) {
        return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2377$a_SLASH_entity, $APP.cljs.core.first($p1__44663_SHARP_$$));
      }, $temp__5823__auto__$$) : $and__5023__auto__$jscomp$188_or__5025__auto__$$;
    }())) {
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$prop$$, function() {
        var $ident$jscomp$2_temp__5823__auto____$1$$ = $APP.cljs.core.some(function($p__44680_v__$1$$) {
          var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44680_v__$1$$, 0, null);
          $p__44680_v__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44680_v__$1$$, 1, null);
          var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
          var $JSCompiler_inline_result$jscomp$877_fexpr__44684$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$396$id, null, $APP.cljs$cst$2374$db_SLASH_ident, null], null), null);
          $JSCompiler_inline_result$jscomp$877_fexpr__44684$$ = $JSCompiler_inline_result$jscomp$877_fexpr__44684$$.cljs$core$IFn$_invoke$arity$1 ? $JSCompiler_inline_result$jscomp$877_fexpr__44684$$.cljs$core$IFn$_invoke$arity$1($k$$) : $JSCompiler_inline_result$jscomp$877_fexpr__44684$$.call(null, $k$$);
          return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$877_fexpr__44684$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, $p__44680_v__$1$$], null) : null;
        }, $temp__5823__auto__$$);
        if ($APP.cljs.core.truth_($ident$jscomp$2_temp__5823__auto____$1$$)) {
          var $idd$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($ident$jscomp$2_temp__5823__auto____$1$$, 0, null);
          $ident$jscomp$2_temp__5823__auto____$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($ident$jscomp$2_temp__5823__auto____$1$$, 1, null);
          return $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$idd$$, $ident$jscomp$2_temp__5823__auto____$1$$]);
        }
        return new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2432$db_SLASH_id, $v$$], null);
      }()], null);
    }
    var $next_seen$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($seen$$, $v$$);
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$prop$$, function() {
      var $or__5025__auto__$$ = asami.entities.reader.vbuild_list($graph$$, $next_seen$$, $temp__5823__auto__$$);
      return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : asami.entities.reader.pairs__GT_struct.cljs$core$IFn$_invoke$arity$3 ? asami.entities.reader.pairs__GT_struct.cljs$core$IFn$_invoke$arity$3($graph$$, $temp__5823__auto__$$, $next_seen$$) : asami.entities.reader.pairs__GT_struct.call(null, $graph$$, $temp__5823__auto__$$, $next_seen$$);
    }()], null);
  }
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2440$a_SLASH_empty_list, $v$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$prop$$, $APP.cljs.core.PersistentVector.EMPTY], null) : $APP.cljs.core.truth_(zuko.node.node_type_QMARK_($graph$$, $prop$$, $v$$)) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$prop$$, $APP.cljs.core.PersistentArrayMap.EMPTY], null) : $p__44672$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.reader.recurse_node), $APP.schema.core.__GT_FnSchema(output_schema44668_44845, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44669_44846], null)));
var output_schema44696_44854 = $APP.schema.core.Any, input_schema44697_44855 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$113$xform, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, "Key"), $APP.schema.core.one($APP.schema.core.Any, "Value")], null)], null), $APP.cljs.core.with_meta($APP.cljs$cst$2441$kvs, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.cljs.core.list(cljs$cst$2442$s_SLASH_one, cljs$cst$2204$s_SLASH_Any, "Key"), $APP.cljs.core.list(cljs$cst$2442$s_SLASH_one, cljs$cst$2204$s_SLASH_Any, "Value")], null)], null)], null)))], null), ret__35121__auto___44856 = asami.entities.reader.into_multimap = function($xform$$, $kvs$$) {
  return $APP.cljs.core.transduce.cljs$core$IFn$_invoke$arity$4($xform$$, function() {
    var $G__44857$$ = null, $G__44857__1$$ = function($m$$) {
      return $APP.cljs.core.persistent_BANG_($m$$);
    }, $G__44857__2$$ = function($m$$, $JSCompiler_temp_const$jscomp$0$$) {
      var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$0$$, 0, null), $JSCompiler_inline_result$jscomp$9321_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$0$$, 1, null);
      $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.assoc_BANG_;
      var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$0$$.cljs$core$IFn$_invoke$arity$3, $vm$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($m$$, $k$$, cljs$cst$2443$asami_DOT_entities_DOT_reader_SLASH_null);
      $JSCompiler_inline_result$jscomp$9321_v$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2443$asami_DOT_entities_DOT_reader_SLASH_null, $vm$$) ? $JSCompiler_inline_result$jscomp$9321_v$$ : $APP.cljs.core.set_QMARK_($vm$$) ? $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($vm$$, $JSCompiler_inline_result$jscomp$9321_v$$) : $APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$vm$$, $JSCompiler_inline_result$jscomp$9321_v$$]);
      return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$0$$, $m$$, $k$$, $JSCompiler_inline_result$jscomp$9321_v$$);
    };
    $G__44857$$ = function($m$$, $p__44701$$) {
      switch(arguments.length) {
        case 1:
          return $G__44857__1$$.call(this, $m$$);
        case 2:
          return $G__44857__2$$.call(this, $m$$, $p__44701$$);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    $G__44857$$.cljs$core$IFn$_invoke$arity$1 = $G__44857__1$$;
    $G__44857$$.cljs$core$IFn$_invoke$arity$2 = $G__44857__2$$;
    return $G__44857$$;
  }(), $APP.cljs.core.transient$($APP.cljs.core.PersistentArrayMap.EMPTY), $kvs$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.reader.into_multimap), $APP.schema.core.__GT_FnSchema(output_schema44696_44854, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44697_44855], null)));
var output_schema44705_44858 = asami.entities.general.EntityMap, input_schema44706_44859 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[asami.entities.general.KeyValue], null), $APP.cljs.core.with_meta(cljs$cst$2444$prop_vals, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2435$KeyValue], null)], null)))], null), input_schema44709_44860 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.general.KeyValue], null), $APP.cljs.core.with_meta(cljs$cst$2444$prop_vals, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2435$KeyValue], 
null)], null))), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([asami.entities.reader.NodeType]), $APP.cljs.core.with_meta($APP.cljs$cst$88$seen, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2433$NodeType, "null"], null), null)], null)))], null), ret__35121__auto___44861 = function() {
  asami.entities.reader.pairs__GT_struct = function($var_args$$) {
    switch(arguments.length) {
      case 2:
        return asami.entities.reader.pairs__GT_struct.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      case 3:
        return asami.entities.reader.pairs__GT_struct.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  asami.entities.reader.pairs__GT_struct.cljs$core$IFn$_invoke$arity$2 = function($graph$$, $prop_vals$$) {
    return asami.entities.reader.pairs__GT_struct.cljs$core$IFn$_invoke$arity$3($graph$$, $prop_vals$$, $APP.cljs.core.PersistentHashSet.EMPTY);
  };
  asami.entities.reader.pairs__GT_struct.cljs$core$IFn$_invoke$arity$3 = function($graph$$, $prop_vals$$, $seen$$) {
    return $APP.cljs.core.truth_($APP.cljs.core.some(function($p__44714$$) {
      var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44714$$, 0, null);
      $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44714$$, 1, null);
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2237$a_SLASH_first, $k$$);
    }, $prop_vals$$)) ? asami.entities.reader.vbuild_list($graph$$, $seen$$, $prop_vals$$) : asami.entities.reader.into_multimap($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$2432$db_SLASH_id, null, $APP.cljs$cst$2374$db_SLASH_ident, null, cljs$cst$2377$a_SLASH_entity, null], null), 
    null), $APP.cljs.core.first)), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p__44718$$) {
      var $a$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44718$$, 0, null), $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44718$$, 1, null);
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2437$a_SLASH_nil, $v$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$a$$, null], null) : $p__44718$$;
    }), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$3(asami.entities.reader.recurse_node, $graph$$, $seen$$)), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p__44722$$) {
      var $a$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44722$$, 0, null), $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__44722$$, 1, null);
      return $APP.cljs.core.seq_QMARK_($v$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$a$$, $APP.cljs.core.vec($v$$)], null) : $p__44722$$;
    })], 0)), $prop_vals$$);
  };
  asami.entities.reader.pairs__GT_struct.cljs$lang$maxFixedArity = 3;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.reader.pairs__GT_struct), $APP.schema.core.make_fn_schema(output_schema44705_44858, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44706_44859, input_schema44709_44860], null)));
var output_schema44746_44869 = asami.entities.general.EntityMap, input_schema44747_44870 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2445$entity_id, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null)))], null), input_schema44750_44871 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2445$entity_id, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Bool, $APP.cljs.core.with_meta(cljs$cst$2446$nested_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2351$s_SLASH_Bool], null)))], null), input_schema44753_44872 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, 
$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2445$entity_id, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Bool, $APP.cljs.core.with_meta(cljs$cst$2446$nested_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2351$s_SLASH_Bool], null))), $APP.schema.core.one($APP.schema.core.maybe($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$APP.schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.schema.core.Keyword, $APP.schema.core.Str], 0))])), $APP.cljs.core.with_meta(cljs$cst$2447$exclusions, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, 
new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs.core.list(cljs$cst$2294$s_SLASH_cond_pre, cljs$cst$2295$s_SLASH_Keyword, cljs$cst$2412$s_SLASH_Str), "null"], null), null))], null)))], null), ret__35121__auto___44873 = function() {
  asami.entities.reader.ref__GT_entity = function($var_args$$) {
    switch(arguments.length) {
      case 2:
        return asami.entities.reader.ref__GT_entity.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      case 3:
        return asami.entities.reader.ref__GT_entity.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      case 4:
        return asami.entities.reader.ref__GT_entity.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  asami.entities.reader.ref__GT_entity.cljs$core$IFn$_invoke$arity$2 = function($graph$$, $entity_id$$) {
    return asami.entities.reader.ref__GT_entity.cljs$core$IFn$_invoke$arity$4($graph$$, $entity_id$$, !1, null);
  };
  asami.entities.reader.ref__GT_entity.cljs$core$IFn$_invoke$arity$3 = function($graph$$, $entity_id$$, $nested_QMARK_$$) {
    return asami.entities.reader.ref__GT_entity.cljs$core$IFn$_invoke$arity$4($graph$$, $entity_id$$, $nested_QMARK_$$, null);
  };
  asami.entities.reader.ref__GT_entity.cljs$core$IFn$_invoke$arity$4 = function($graph$$, $entity_id$$, $nested_QMARK_$$, $exclusions$$) {
    var $_STAR_nested_structs_STAR__orig_val__44770$$ = asami.entities.reader._STAR_nested_structs_STAR_;
    asami.entities.reader._STAR_nested_structs_STAR_ = $nested_QMARK_$$;
    try {
      var $prop_vals$$ = asami.entities.reader.property_values($graph$$, $entity_id$$), $pvs$$ = $APP.cljs.core.seq($exclusions$$) ? $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($exclusions$$, $APP.cljs.core.first), $prop_vals$$) : $prop_vals$$;
      return asami.entities.reader.pairs__GT_struct.cljs$core$IFn$_invoke$arity$3($graph$$, $pvs$$, $APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$entity_id$$]));
    } finally {
      asami.entities.reader._STAR_nested_structs_STAR_ = $_STAR_nested_structs_STAR__orig_val__44770$$;
    }
  };
  asami.entities.reader.ref__GT_entity.cljs$lang$maxFixedArity = 4;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.reader.ref__GT_entity), $APP.schema.core.make_fn_schema(output_schema44746_44869, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44747_44870, input_schema44750_44871, input_schema44753_44872], null)));
var output_schema44772_44879 = asami.entities.general.EntityMap, input_schema44773_44880 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2448$ident, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null)))], null), input_schema44776_44881 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2448$ident, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Bool, $APP.cljs.core.with_meta(cljs$cst$2446$nested_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2351$s_SLASH_Bool], null)))], null), ret__35121__auto___44882 = function() {
  asami.entities.reader.ident__GT_entity = function($var_args$$) {
    switch(arguments.length) {
      case 2:
        return asami.entities.reader.ident__GT_entity.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      case 3:
        return asami.entities.reader.ident__GT_entity.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  asami.entities.reader.ident__GT_entity.cljs$core$IFn$_invoke$arity$2 = function($graph$$, $ident$$) {
    return asami.entities.reader.ident__GT_entity.cljs$core$IFn$_invoke$arity$3($graph$$, $ident$$, !1);
  };
  asami.entities.reader.ident__GT_entity.cljs$core$IFn$_invoke$arity$3 = function($graph$$, $ident$jscomp$4_temp__5825__auto__$$, $nested_QMARK_$$) {
    var $and__5023__auto__$jscomp$inline_9810_or__5025__auto__$jscomp$inline_9809_or__5025__auto____$1$$ = ($and__5023__auto__$jscomp$inline_9810_or__5025__auto__$jscomp$inline_9809_or__5025__auto____$1$$ = $APP.cljs.core.seq(zuko.node.find_triple($graph$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$ident$jscomp$4_temp__5825__auto__$$, $APP.cljs$cst$2244$_QMARK_a, cljs$cst$2245$_QMARK_v], null)))) ? $ident$jscomp$4_temp__5825__auto__$$ : $and__5023__auto__$jscomp$inline_9810_or__5025__auto__$jscomp$inline_9809_or__5025__auto____$1$$;
    $APP.cljs.core.truth_($and__5023__auto__$jscomp$inline_9810_or__5025__auto__$jscomp$inline_9809_or__5025__auto____$1$$) ? $ident$jscomp$4_temp__5825__auto__$$ = $and__5023__auto__$jscomp$inline_9810_or__5025__auto__$jscomp$inline_9809_or__5025__auto____$1$$ : ($and__5023__auto__$jscomp$inline_9810_or__5025__auto__$jscomp$inline_9809_or__5025__auto____$1$$ = $APP.cljs.core.ffirst(zuko.node.find_triple($graph$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
    [cljs$cst$2449$_QMARK_eid, $APP.cljs$cst$2374$db_SLASH_ident, $ident$jscomp$4_temp__5825__auto__$$], null))), $ident$jscomp$4_temp__5825__auto__$$ = $APP.cljs.core.truth_($and__5023__auto__$jscomp$inline_9810_or__5025__auto__$jscomp$inline_9809_or__5025__auto____$1$$) ? $and__5023__auto__$jscomp$inline_9810_or__5025__auto__$jscomp$inline_9809_or__5025__auto____$1$$ : $APP.cljs.core.ffirst(zuko.node.find_triple($graph$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
    [cljs$cst$2449$_QMARK_eid, $APP.cljs$cst$396$id, $ident$jscomp$4_temp__5825__auto__$$], null))));
    return $APP.cljs.core.truth_($ident$jscomp$4_temp__5825__auto__$$) ? asami.entities.reader.ref__GT_entity.cljs$core$IFn$_invoke$arity$3($graph$$, $ident$jscomp$4_temp__5825__auto__$$, $nested_QMARK_$$) : null;
  };
  asami.entities.reader.ident__GT_entity.cljs$lang$maxFixedArity = 3;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.reader.ident__GT_entity), $APP.schema.core.make_fn_schema(output_schema44772_44879, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44773_44880, input_schema44776_44881], null)));
var output_schema44794_44888 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.general.EntityMap], null), input_schema44795_44889 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null)))], 
null), input_schema44798_44890 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.schema.core.Bool, $APP.cljs.core.with_meta(cljs$cst$2446$nested_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
cljs$cst$2351$s_SLASH_Bool], null)))], null), input_schema44801_44891 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.schema.core.Bool, $APP.cljs.core.with_meta(cljs$cst$2446$nested_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2351$s_SLASH_Bool], null))), $APP.schema.core.one($APP.schema.core.maybe($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$APP.schema.core.Keyword])), $APP.cljs.core.with_meta(cljs$cst$2447$exclusions, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2295$s_SLASH_Keyword, "null"], null), 
null))], null)))], null), ret__35121__auto___44892 = function() {
  asami.entities.reader.graph__GT_entities = function($var_args$$) {
    switch(arguments.length) {
      case 1:
        return asami.entities.reader.graph__GT_entities.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      case 2:
        return asami.entities.reader.graph__GT_entities.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      case 3:
        return asami.entities.reader.graph__GT_entities.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  asami.entities.reader.graph__GT_entities.cljs$core$IFn$_invoke$arity$1 = function($graph$$) {
    return asami.entities.reader.graph__GT_entities.cljs$core$IFn$_invoke$arity$3($graph$$, !1, null);
  };
  asami.entities.reader.graph__GT_entities.cljs$core$IFn$_invoke$arity$2 = function($graph$$, $nested_QMARK_$$) {
    return asami.entities.reader.graph__GT_entities.cljs$core$IFn$_invoke$arity$3($graph$$, $nested_QMARK_$$, null);
  };
  asami.entities.reader.graph__GT_entities.cljs$core$IFn$_invoke$arity$3 = function($graph$$, $nested_QMARK_$$, $exclusions$$) {
    return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__44793_SHARP_$$) {
      return asami.entities.reader.ref__GT_entity.cljs$core$IFn$_invoke$arity$4($graph$$, $p1__44793_SHARP_$$, $nested_QMARK_$$, $exclusions$$);
    }, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.first, zuko.node.find_triple($graph$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2375$_QMARK_e, cljs$cst$2377$a_SLASH_entity, !0], null))));
  };
  asami.entities.reader.graph__GT_entities.cljs$lang$maxFixedArity = 3;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.reader.graph__GT_entities), $APP.schema.core.make_fn_schema(output_schema44794_44888, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44795_44889, input_schema44798_44890, input_schema44801_44891], null)));
asami.memory = {};
asami.memory.find_index = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return asami.memory.find_index.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return asami.memory.find_index.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
asami.memory.find_index.cljs$core$IFn$_invoke$arity$2 = function($a$$, $v$$) {
  return asami.memory.find_index.cljs$core$IFn$_invoke$arity$3($a$$, $v$$, $APP.cljs.core.compare);
};
asami.memory.find_index.cljs$core$IFn$_invoke$arity$3 = function($a$$, $v$$, $cmp$$) {
  for (var $low$$ = 0, $G__45916_high$$ = $APP.cljs.core.count($a$$);;) {
    if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($low$$ + 1, $G__45916_high$$)) {
      return $low$$;
    }
    var $mid$$ = ($low$$ + $G__45916_high$$) / 2 | 0, $c$jscomp$267_mv$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($a$$, $mid$$);
    $c$jscomp$267_mv$$ = $cmp$$.cljs$core$IFn$_invoke$arity$2 ? $cmp$$.cljs$core$IFn$_invoke$arity$2($c$jscomp$267_mv$$, $v$$) : $cmp$$.call(null, $c$jscomp$267_mv$$, $v$$);
    if ($c$jscomp$267_mv$$ === 0) {
      return $mid$$;
    }
    if (0 > $c$jscomp$267_mv$$) {
      $low$$ = $mid$$;
    } else {
      if (0 < $c$jscomp$267_mv$$) {
        $G__45916_high$$ = $mid$$;
      } else {
        return null;
      }
    }
  }
};
asami.memory.find_index.cljs$lang$maxFixedArity = 3;
asami.memory.MemoryDatabase = function($graph$$, $history$$, $timestamp$$, $t$$, $__meta$$, $__extmap$$, $__hash$$) {
  this.graph = $graph$$;
  this.history = $history$$;
  this.timestamp = $timestamp$$;
  this.t = $t$$;
  this.__meta = $__meta$$;
  this.__extmap = $__extmap$$;
  this.__hash = $__hash$$;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
asami.memory.MemoryDatabase.prototype.cljs$core$ILookup$_lookup$arity$2 = function($this__5323__auto__$$, $k__5324__auto__$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k__5324__auto__$$, null);
};
asami.memory.MemoryDatabase.prototype.cljs$core$ILookup$_lookup$arity$3 = function($this__5325__auto__$$, $k45679$$, $else__5326__auto__$$) {
  switch($k45679$$ instanceof $APP.cljs.core.Keyword ? $k45679$$.fqn : null) {
    case "graph":
      return this.graph;
    case "history":
      return this.history;
    case "timestamp":
      return this.timestamp;
    case "t":
      return this.t;
    default:
      return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3(this.__extmap, $k45679$$, $else__5326__auto__$$);
  }
};
asami.memory.MemoryDatabase.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function($this__5343__auto__$$, $f__5344__auto__$$, $init__5345__auto__$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($ret__5346__auto__$$, $p__45694_v__5348__auto__$$) {
    var $k__5347__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45694_v__5348__auto__$$, 0, null);
    $p__45694_v__5348__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45694_v__5348__auto__$$, 1, null);
    return $f__5344__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $f__5344__auto__$$.cljs$core$IFn$_invoke$arity$3($ret__5346__auto__$$, $k__5347__auto__$$, $p__45694_v__5348__auto__$$) : $f__5344__auto__$$.call(null, $ret__5346__auto__$$, $k__5347__auto__$$, $p__45694_v__5348__auto__$$);
  }, $init__5345__auto__$$, this);
};
asami.memory.MemoryDatabase.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this__5338__auto__$$, $writer__5339__auto__$$, $opts__5340__auto__$$) {
  return $APP.cljs.core.pr_sequential_writer($writer__5339__auto__$$, function($keyval__5342__auto__$$) {
    return $APP.cljs.core.pr_sequential_writer($writer__5339__auto__$$, $APP.cljs.core.pr_writer, "", " ", "", $opts__5340__auto__$$, $keyval__5342__auto__$$);
  }, "#asami.memory.MemoryDatabase{", ", ", "}", $opts__5340__auto__$$, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2450$graph, this.graph], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2451$history, this.history], null), new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2452$timestamp, this.timestamp], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2227$t, this.t], null)], null), this.__extmap));
};
asami.memory.MemoryDatabase.prototype.cljs$core$IIterable$_iterator$arity$1 = function($G__45678$$) {
  return new $APP.cljs.core.RecordIter(0, this, 4, new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2450$graph, $APP.cljs$cst$2451$history, $APP.cljs$cst$2452$timestamp, $APP.cljs$cst$2227$t], null), $APP.cljs.core.truth_(this.__extmap) ? $APP.cljs.core._iterator(this.__extmap) : $APP.cljs.core.nil_iter());
};
asami.memory.MemoryDatabase.prototype.cljs$core$IMeta$_meta$arity$1 = function($this__5321__auto__$$) {
  return this.__meta;
};
asami.memory.MemoryDatabase.prototype.cljs$core$ICloneable$_clone$arity$1 = function($this__5318__auto__$$) {
  return new asami.memory.MemoryDatabase(this.graph, this.history, this.timestamp, this.t, this.__meta, this.__extmap, this.__hash);
};
asami.memory.MemoryDatabase.prototype.cljs$core$ICounted$_count$arity$1 = function($this__5327__auto__$$) {
  return 4 + $APP.cljs.core.count(this.__extmap);
};
asami.memory.MemoryDatabase.prototype.cljs$core$IHash$_hash$arity$1 = function($h__5134__auto__$jscomp$73_h__5134__auto____$1$jscomp$73_this__5319__auto__$$) {
  $h__5134__auto__$jscomp$73_h__5134__auto____$1$jscomp$73_this__5319__auto__$$ = this.__hash;
  return $h__5134__auto__$jscomp$73_h__5134__auto____$1$jscomp$73_this__5319__auto__$$ != null ? $h__5134__auto__$jscomp$73_h__5134__auto____$1$jscomp$73_this__5319__auto__$$ : this.__hash = $h__5134__auto__$jscomp$73_h__5134__auto____$1$jscomp$73_this__5319__auto__$$ = -2096988140 ^ $APP.cljs.core.hash_unordered_coll(this);
};
asami.memory.MemoryDatabase.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this45680$$, $other45681$$) {
  return $other45681$$ != null && this.constructor === $other45681$$.constructor && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.graph, $other45681$$.graph) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.history, $other45681$$.history) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.timestamp, $other45681$$.timestamp) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.t, $other45681$$.t) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.__extmap, $other45681$$.__extmap);
};
asami.memory.MemoryDatabase.prototype.asami$storage$Database$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.memory.MemoryDatabase.prototype.asami$storage$Database$as_of$arity$2 = function($this$$$, $t__$1$$) {
  return asami.memory.as_of_STAR_.cljs$core$IFn$_invoke$arity$2 ? asami.memory.as_of_STAR_.cljs$core$IFn$_invoke$arity$2(this, $t__$1$$) : asami.memory.as_of_STAR_.call(null, this, $t__$1$$);
};
asami.memory.MemoryDatabase.prototype.asami$storage$Database$as_of_t$arity$1 = function($this$$$) {
  return asami.memory.as_of_t_STAR_.cljs$core$IFn$_invoke$arity$1 ? asami.memory.as_of_t_STAR_.cljs$core$IFn$_invoke$arity$1(this) : asami.memory.as_of_t_STAR_.call(null, this);
};
asami.memory.MemoryDatabase.prototype.asami$storage$Database$as_of_time$arity$1 = function($this$$$) {
  return asami.memory.as_of_time_STAR_.cljs$core$IFn$_invoke$arity$1 ? asami.memory.as_of_time_STAR_.cljs$core$IFn$_invoke$arity$1(this) : asami.memory.as_of_time_STAR_.call(null, this);
};
asami.memory.MemoryDatabase.prototype.asami$storage$Database$since$arity$2 = function($this$$$, $t__$1$$) {
  return asami.memory.since_STAR_.cljs$core$IFn$_invoke$arity$2 ? asami.memory.since_STAR_.cljs$core$IFn$_invoke$arity$2(this, $t__$1$$) : asami.memory.since_STAR_.call(null, this, $t__$1$$);
};
asami.memory.MemoryDatabase.prototype.asami$storage$Database$since_t$arity$1 = function($this$$$) {
  return asami.memory.since_t_STAR_.cljs$core$IFn$_invoke$arity$1 ? asami.memory.since_t_STAR_.cljs$core$IFn$_invoke$arity$1(this) : asami.memory.since_t_STAR_.call(null, this);
};
asami.memory.MemoryDatabase.prototype.asami$storage$Database$graph$arity$1 = function($this$$$) {
  return asami.memory.graph_STAR_.cljs$core$IFn$_invoke$arity$1 ? asami.memory.graph_STAR_.cljs$core$IFn$_invoke$arity$1(this) : asami.memory.graph_STAR_.call(null, this);
};
asami.memory.MemoryDatabase.prototype.asami$storage$Database$entity$arity$3 = function($this$$$, $id$$, $nested_QMARK_$$) {
  return asami.memory.entity_STAR_.cljs$core$IFn$_invoke$arity$3 ? asami.memory.entity_STAR_.cljs$core$IFn$_invoke$arity$3(this, $id$$, $nested_QMARK_$$) : asami.memory.entity_STAR_.call(null, this, $id$$, $nested_QMARK_$$);
};
asami.memory.MemoryDatabase.prototype.cljs$core$IMap$_dissoc$arity$2 = function($this__5333__auto__$$, $k__5334__auto__$$) {
  return $APP.cljs.core.contains_QMARK_(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$2451$history, null, cljs$cst$2450$graph, null, $APP.cljs$cst$2227$t, null, $APP.cljs$cst$2452$timestamp, null], null), null), $k__5334__auto__$$) ? $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._with_meta($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), $k__5334__auto__$$) : 
  new asami.memory.MemoryDatabase(this.graph, this.history, this.timestamp, this.t, this.__meta, $APP.cljs.core.not_empty($APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.__extmap, $k__5334__auto__$$)), null);
};
asami.memory.MemoryDatabase.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($this__5330__auto__$$, $k45679$$) {
  switch($k45679$$ instanceof $APP.cljs.core.Keyword ? $k45679$$.fqn : null) {
    case "graph":
    case "history":
    case "timestamp":
    case "t":
      return !0;
    default:
      return $APP.cljs.core.contains_QMARK_(this.__extmap, $k45679$$);
  }
};
asami.memory.MemoryDatabase.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($pred__45719_this__5331__auto__$$, $k__5332__auto__$$, $G__45678$$) {
  $pred__45719_this__5331__auto__$$ = $APP.cljs.core.keyword_identical_QMARK_;
  return $APP.cljs.core.truth_($pred__45719_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__45719_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2(cljs$cst$2450$graph, $k__5332__auto__$$) : $pred__45719_this__5331__auto__$$.call(null, cljs$cst$2450$graph, $k__5332__auto__$$)) ? new asami.memory.MemoryDatabase($G__45678$$, this.history, this.timestamp, this.t, this.__meta, this.__extmap, null) : $APP.cljs.core.truth_($pred__45719_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__45719_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2451$history, 
  $k__5332__auto__$$) : $pred__45719_this__5331__auto__$$.call(null, $APP.cljs$cst$2451$history, $k__5332__auto__$$)) ? new asami.memory.MemoryDatabase(this.graph, $G__45678$$, this.timestamp, this.t, this.__meta, this.__extmap, null) : $APP.cljs.core.truth_($pred__45719_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__45719_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2452$timestamp, $k__5332__auto__$$) : $pred__45719_this__5331__auto__$$.call(null, $APP.cljs$cst$2452$timestamp, 
  $k__5332__auto__$$)) ? new asami.memory.MemoryDatabase(this.graph, this.history, $G__45678$$, this.t, this.__meta, this.__extmap, null) : $APP.cljs.core.truth_($pred__45719_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__45719_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2227$t, $k__5332__auto__$$) : $pred__45719_this__5331__auto__$$.call(null, $APP.cljs$cst$2227$t, $k__5332__auto__$$)) ? new asami.memory.MemoryDatabase(this.graph, this.history, this.timestamp, $G__45678$$, 
  this.__meta, this.__extmap, null) : new asami.memory.MemoryDatabase(this.graph, this.history, this.timestamp, this.t, this.__meta, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.__extmap, $k__5332__auto__$$, $G__45678$$), null);
};
asami.memory.MemoryDatabase.prototype.cljs$core$ISeqable$_seq$arity$1 = function($this__5336__auto__$$) {
  return $APP.cljs.core.seq($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.MapEntry(cljs$cst$2450$graph, this.graph, null), new $APP.cljs.core.MapEntry($APP.cljs$cst$2451$history, this.history, null), new $APP.cljs.core.MapEntry($APP.cljs$cst$2452$timestamp, this.timestamp, null), new $APP.cljs.core.MapEntry($APP.cljs$cst$2227$t, this.t, null)], null), this.__extmap));
};
asami.memory.MemoryDatabase.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($this__5322__auto__$$, $G__45678$$) {
  return new asami.memory.MemoryDatabase(this.graph, this.history, this.timestamp, this.t, $G__45678$$, this.__extmap, this.__hash);
};
asami.memory.MemoryDatabase.prototype.cljs$core$ICollection$_conj$arity$2 = function($this__5328__auto__$$, $entry__5329__auto__$$) {
  return $APP.cljs.core.vector_QMARK_($entry__5329__auto__$$) ? this.cljs$core$IAssociative$_assoc$arity$3(null, $APP.cljs.core._nth($entry__5329__auto__$$, 0), $APP.cljs.core._nth($entry__5329__auto__$$, 1)) : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($APP.cljs.core._conj, this, $entry__5329__auto__$$);
};
asami.memory.MemoryDatabase.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2218$graph, $APP.cljs$cst$2453$history, $APP.cljs$cst$2454$timestamp, $APP.cljs$cst$1235$t], null);
};
asami.memory.MemoryDatabase.cljs$lang$type = !0;
asami.memory.MemoryDatabase.cljs$lang$ctorPrSeq = function($this__5369__auto__$$) {
  return new $APP.cljs.core.List(null, "asami.memory/MemoryDatabase", null, 1, null);
};
asami.memory.MemoryDatabase.cljs$lang$ctorPrWriter = function($this__5369__auto__$$, $writer__5370__auto__$$) {
  return $APP.cljs.core._write($writer__5370__auto__$$, "asami.memory/MemoryDatabase");
};
asami.memory.__GT_MemoryDatabase = function($graph$$, $history$$, $timestamp$$, $t$$) {
  return new asami.memory.MemoryDatabase($graph$$, $history$$, $timestamp$$, $t$$, null, null, null);
};
asami.memory.map__GT_MemoryDatabase = function($G__45684$$) {
  var $G__45725$jscomp$inline_5008_extmap__5365__auto__$$ = $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic($G__45684$$, cljs$cst$2450$graph, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$2451$history, $APP.cljs$cst$2452$timestamp, $APP.cljs$cst$2227$t], 0));
  $G__45725$jscomp$inline_5008_extmap__5365__auto__$$ = $APP.cljs.core.record_QMARK_($G__45684$$) ? $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $G__45725$jscomp$inline_5008_extmap__5365__auto__$$) : $G__45725$jscomp$inline_5008_extmap__5365__auto__$$;
  return new asami.memory.MemoryDatabase(cljs$cst$2450$graph.cljs$core$IFn$_invoke$arity$1($G__45684$$), $APP.cljs$cst$2451$history.cljs$core$IFn$_invoke$arity$1($G__45684$$), $APP.cljs$cst$2452$timestamp.cljs$core$IFn$_invoke$arity$1($G__45684$$), $APP.cljs$cst$2227$t.cljs$core$IFn$_invoke$arity$1($G__45684$$), null, $APP.cljs.core.not_empty($G__45725$jscomp$inline_5008_extmap__5365__auto__$$), null);
};
asami.memory.MemoryConnection = function($name$$, $state$$, $__meta$$, $__extmap$$, $__hash$$) {
  this.name = $name$$;
  this.state = $state$$;
  this.__meta = $__meta$$;
  this.__extmap = $__extmap$$;
  this.__hash = $__hash$$;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
asami.memory.MemoryConnection.prototype.cljs$core$ILookup$_lookup$arity$2 = function($this__5323__auto__$$, $k__5324__auto__$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k__5324__auto__$$, null);
};
asami.memory.MemoryConnection.prototype.cljs$core$ILookup$_lookup$arity$3 = function($this__5325__auto__$$, $k45730$$, $else__5326__auto__$$) {
  switch($k45730$$ instanceof $APP.cljs.core.Keyword ? $k45730$$.fqn : null) {
    case "name":
      return this.name;
    case "state":
      return this.state;
    default:
      return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3(this.__extmap, $k45730$$, $else__5326__auto__$$);
  }
};
asami.memory.MemoryConnection.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function($this__5343__auto__$$, $f__5344__auto__$$, $init__5345__auto__$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($ret__5346__auto__$$, $p__45738_v__5348__auto__$$) {
    var $k__5347__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45738_v__5348__auto__$$, 0, null);
    $p__45738_v__5348__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45738_v__5348__auto__$$, 1, null);
    return $f__5344__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $f__5344__auto__$$.cljs$core$IFn$_invoke$arity$3($ret__5346__auto__$$, $k__5347__auto__$$, $p__45738_v__5348__auto__$$) : $f__5344__auto__$$.call(null, $ret__5346__auto__$$, $k__5347__auto__$$, $p__45738_v__5348__auto__$$);
  }, $init__5345__auto__$$, this);
};
asami.memory.MemoryConnection.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this__5338__auto__$$, $writer__5339__auto__$$, $opts__5340__auto__$$) {
  return $APP.cljs.core.pr_sequential_writer($writer__5339__auto__$$, function($keyval__5342__auto__$$) {
    return $APP.cljs.core.pr_sequential_writer($writer__5339__auto__$$, $APP.cljs.core.pr_writer, "", " ", "", $opts__5340__auto__$$, $keyval__5342__auto__$$);
  }, "#asami.memory.MemoryConnection{", ", ", "}", $opts__5340__auto__$$, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$272$name, this.name], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2455$state, this.state], null)], null), 
  this.__extmap));
};
asami.memory.MemoryConnection.prototype.cljs$core$IIterable$_iterator$arity$1 = function($G__45729$$) {
  return new $APP.cljs.core.RecordIter(0, this, 2, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$272$name, $APP.cljs$cst$2455$state], null), $APP.cljs.core.truth_(this.__extmap) ? $APP.cljs.core._iterator(this.__extmap) : $APP.cljs.core.nil_iter());
};
asami.memory.MemoryConnection.prototype.cljs$core$IMeta$_meta$arity$1 = function($this__5321__auto__$$) {
  return this.__meta;
};
asami.memory.MemoryConnection.prototype.cljs$core$ICloneable$_clone$arity$1 = function($this__5318__auto__$$) {
  return new asami.memory.MemoryConnection(this.name, this.state, this.__meta, this.__extmap, this.__hash);
};
asami.memory.MemoryConnection.prototype.cljs$core$ICounted$_count$arity$1 = function($this__5327__auto__$$) {
  return 2 + $APP.cljs.core.count(this.__extmap);
};
asami.memory.MemoryConnection.prototype.cljs$core$IHash$_hash$arity$1 = function($h__5134__auto__$jscomp$74_h__5134__auto____$1$jscomp$74_this__5319__auto__$$) {
  $h__5134__auto__$jscomp$74_h__5134__auto____$1$jscomp$74_this__5319__auto__$$ = this.__hash;
  return $h__5134__auto__$jscomp$74_h__5134__auto____$1$jscomp$74_this__5319__auto__$$ != null ? $h__5134__auto__$jscomp$74_h__5134__auto____$1$jscomp$74_this__5319__auto__$$ : this.__hash = $h__5134__auto__$jscomp$74_h__5134__auto____$1$jscomp$74_this__5319__auto__$$ = -3634599 ^ $APP.cljs.core.hash_unordered_coll(this);
};
asami.memory.MemoryConnection.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this45731$$, $other45732$$) {
  return $other45732$$ != null && this.constructor === $other45732$$.constructor && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.name, $other45732$$.name) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.state, $other45732$$.state) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.__extmap, $other45732$$.__extmap);
};
asami.memory.MemoryConnection.prototype.cljs$core$IMap$_dissoc$arity$2 = function($this__5333__auto__$$, $k__5334__auto__$$) {
  return $APP.cljs.core.contains_QMARK_(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$272$name, null, $APP.cljs$cst$2455$state, null], null), null), $k__5334__auto__$$) ? $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._with_meta($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), $k__5334__auto__$$) : new asami.memory.MemoryConnection(this.name, this.state, this.__meta, 
  $APP.cljs.core.not_empty($APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.__extmap, $k__5334__auto__$$)), null);
};
asami.memory.MemoryConnection.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($this__5330__auto__$$, $k45730$$) {
  switch($k45730$$ instanceof $APP.cljs.core.Keyword ? $k45730$$.fqn : null) {
    case "name":
    case "state":
      return !0;
    default:
      return $APP.cljs.core.contains_QMARK_(this.__extmap, $k45730$$);
  }
};
asami.memory.MemoryConnection.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($pred__45752_this__5331__auto__$$, $k__5332__auto__$$, $G__45729$$) {
  $pred__45752_this__5331__auto__$$ = $APP.cljs.core.keyword_identical_QMARK_;
  return $APP.cljs.core.truth_($pred__45752_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__45752_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$272$name, $k__5332__auto__$$) : $pred__45752_this__5331__auto__$$.call(null, $APP.cljs$cst$272$name, $k__5332__auto__$$)) ? new asami.memory.MemoryConnection($G__45729$$, this.state, this.__meta, this.__extmap, null) : $APP.cljs.core.truth_($pred__45752_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $pred__45752_this__5331__auto__$$.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2455$state, 
  $k__5332__auto__$$) : $pred__45752_this__5331__auto__$$.call(null, $APP.cljs$cst$2455$state, $k__5332__auto__$$)) ? new asami.memory.MemoryConnection(this.name, $G__45729$$, this.__meta, this.__extmap, null) : new asami.memory.MemoryConnection(this.name, this.state, this.__meta, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.__extmap, $k__5332__auto__$$, $G__45729$$), null);
};
asami.memory.MemoryConnection.prototype.cljs$core$ISeqable$_seq$arity$1 = function($this__5336__auto__$$) {
  return $APP.cljs.core.seq($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.MapEntry($APP.cljs$cst$272$name, this.name, null), new $APP.cljs.core.MapEntry($APP.cljs$cst$2455$state, this.state, null)], null), this.__extmap));
};
asami.memory.MemoryConnection.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($this__5322__auto__$$, $G__45729$$) {
  return new asami.memory.MemoryConnection(this.name, this.state, $G__45729$$, this.__extmap, this.__hash);
};
asami.memory.MemoryConnection.prototype.cljs$core$ICollection$_conj$arity$2 = function($this__5328__auto__$$, $entry__5329__auto__$$) {
  return $APP.cljs.core.vector_QMARK_($entry__5329__auto__$$) ? this.cljs$core$IAssociative$_assoc$arity$3(null, $APP.cljs.core._nth($entry__5329__auto__$$, 0), $APP.cljs.core._nth($entry__5329__auto__$$, 1)) : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($APP.cljs.core._conj, this, $entry__5329__auto__$$);
};
asami.memory.MemoryConnection.prototype.asami$storage$Connection$ = $APP.cljs.core.PROTOCOL_SENTINEL;
asami.memory.MemoryConnection.prototype.asami$storage$Connection$delete_database$arity$1 = function($this$$$) {
  return asami.memory.delete_database_STAR_.cljs$core$IFn$_invoke$arity$1 ? asami.memory.delete_database_STAR_.cljs$core$IFn$_invoke$arity$1(this) : asami.memory.delete_database_STAR_.call(null, this);
};
asami.memory.MemoryConnection.prototype.asami$storage$Connection$next_tx$arity$1 = function($this$$$) {
  return asami.memory.next_tx_STAR_.cljs$core$IFn$_invoke$arity$1 ? asami.memory.next_tx_STAR_.cljs$core$IFn$_invoke$arity$1(this) : asami.memory.next_tx_STAR_.call(null, this);
};
asami.memory.MemoryConnection.prototype.asami$storage$Connection$get_name$arity$1 = function($this$$$) {
  return this.name;
};
asami.memory.MemoryConnection.prototype.asami$storage$Connection$get_url$arity$1 = function($this$$$) {
  return asami.memory.get_url_STAR_.cljs$core$IFn$_invoke$arity$1 ? asami.memory.get_url_STAR_.cljs$core$IFn$_invoke$arity$1(this) : asami.memory.get_url_STAR_.call(null, this);
};
asami.memory.MemoryConnection.prototype.asami$storage$Connection$db$arity$1 = function($this$$$) {
  return asami.memory.db_STAR_.cljs$core$IFn$_invoke$arity$1 ? asami.memory.db_STAR_.cljs$core$IFn$_invoke$arity$1(this) : asami.memory.db_STAR_.call(null, this);
};
asami.memory.MemoryConnection.prototype.asami$storage$Connection$transact_update$arity$2 = function($this$$$, $update_fn$$) {
  return asami.memory.transact_update_STAR_.cljs$core$IFn$_invoke$arity$2 ? asami.memory.transact_update_STAR_.cljs$core$IFn$_invoke$arity$2(this, $update_fn$$) : asami.memory.transact_update_STAR_.call(null, this, $update_fn$$);
};
asami.memory.MemoryConnection.prototype.asami$storage$Connection$release$arity$1 = function($this$$$) {
  return null;
};
asami.memory.MemoryConnection.prototype.asami$storage$Connection$transact_data$arity$4 = function($this$$$, $updates_BANG_$$, $asserts$$, $retracts$$) {
  return asami.memory.transact_data_STAR_.cljs$core$IFn$_invoke$arity$4 ? asami.memory.transact_data_STAR_.cljs$core$IFn$_invoke$arity$4(this, $updates_BANG_$$, $asserts$$, $retracts$$) : asami.memory.transact_data_STAR_.call(null, this, $updates_BANG_$$, $asserts$$, $retracts$$);
};
asami.memory.MemoryConnection.prototype.asami$storage$Connection$transact_data$arity$3 = function($this$$$, $updates_BANG_$$, $generator_fn$$) {
  return asami.memory.transact_data_STAR_.cljs$core$IFn$_invoke$arity$3 ? asami.memory.transact_data_STAR_.cljs$core$IFn$_invoke$arity$3(this, $updates_BANG_$$, $generator_fn$$) : asami.memory.transact_data_STAR_.call(null, this, $updates_BANG_$$, $generator_fn$$);
};
asami.memory.MemoryConnection.prototype.asami$storage$Connection$open_QMARK_$arity$1 = function($this$$$) {
  return !0;
};
asami.memory.MemoryConnection.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$7$name, $APP.cljs$cst$44$state], null);
};
asami.memory.MemoryConnection.cljs$lang$type = !0;
asami.memory.MemoryConnection.cljs$lang$ctorPrSeq = function($this__5369__auto__$$) {
  return new $APP.cljs.core.List(null, "asami.memory/MemoryConnection", null, 1, null);
};
asami.memory.MemoryConnection.cljs$lang$ctorPrWriter = function($this__5369__auto__$$, $writer__5370__auto__$$) {
  return $APP.cljs.core._write($writer__5370__auto__$$, "asami.memory/MemoryConnection");
};
asami.memory.__GT_MemoryConnection = function($name$$, $state$$) {
  return new asami.memory.MemoryConnection($name$$, $state$$, null, null, null);
};
asami.memory.map__GT_MemoryConnection = function($G__45733$$) {
  var $G__45761$jscomp$inline_5010_extmap__5365__auto__$$ = $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic($G__45733$$, $APP.cljs$cst$272$name, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$2455$state], 0));
  $G__45761$jscomp$inline_5010_extmap__5365__auto__$$ = $APP.cljs.core.record_QMARK_($G__45733$$) ? $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $G__45761$jscomp$inline_5010_extmap__5365__auto__$$) : $G__45761$jscomp$inline_5010_extmap__5365__auto__$$;
  return new asami.memory.MemoryConnection($APP.cljs$cst$272$name.cljs$core$IFn$_invoke$arity$1($G__45733$$), $APP.cljs$cst$2455$state.cljs$core$IFn$_invoke$arity$1($G__45733$$), null, $APP.cljs.core.not_empty($G__45761$jscomp$inline_5010_extmap__5365__auto__$$), null);
};
asami.memory.empty_graph = asami.index.empty_graph;
asami.memory.empty_multi_graph = asami.multi_graph.empty_multi_graph;
var output_schema45762_45946 = asami.storage.ConnectionType, input_schema45763_45947 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Str, $APP.cljs.core.with_meta($APP.cljs$cst$7$name, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null))), $APP.schema.core.one(asami.graph.GraphType, $APP.cljs.core.with_meta(cljs$cst$2456$gr, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null)))], null), ret__35121__auto___45949 = asami.memory.new_connection = function($name$$, $db$jscomp$2_gr$$) {
  $db$jscomp$2_gr$$ = asami.memory.__GT_MemoryDatabase($db$jscomp$2_gr$$, $APP.cljs.core.PersistentVector.EMPTY, asami.internal.now(), 0);
  return asami.memory.__GT_MemoryConnection($name$$, $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2457$db, $db$jscomp$2_gr$$, $APP.cljs$cst$2451$history, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$db$jscomp$2_gr$$], null)], null)));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.new_connection), $APP.schema.core.__GT_FnSchema(output_schema45762_45946, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45763_45947], null)));
var output_schema45773_45950 = $APP.schema.core.Str, input_schema45774_45951 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.ConnectionType, cljs$cst$2210$arg0)], null), ret__35121__auto___45952 = asami.memory.get_url_STAR_ = function($name$$) {
  var $first_graph_gtype_map__45779__$1_state$$ = $APP.cljs.core.__destructure_map($name$$);
  $name$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($first_graph_gtype_map__45779__$1_state$$, $APP.cljs$cst$272$name);
  $first_graph_gtype_map__45779__$1_state$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($first_graph_gtype_map__45779__$1_state$$, $APP.cljs$cst$2455$state);
  $first_graph_gtype_map__45779__$1_state$$ = cljs$cst$2450$graph.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.first($APP.cljs$cst$2451$history.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.deref($first_graph_gtype_map__45779__$1_state$$))));
  var $pred__45780$$ = $APP.cljs.core._EQ_;
  if ($APP.cljs.core.truth_($pred__45780$$.cljs$core$IFn$_invoke$arity$2 ? $pred__45780$$.cljs$core$IFn$_invoke$arity$2(asami.memory.empty_graph, $first_graph_gtype_map__45779__$1_state$$) : $pred__45780$$.call(null, asami.memory.empty_graph, $first_graph_gtype_map__45779__$1_state$$))) {
    $first_graph_gtype_map__45779__$1_state$$ = "mem";
  } else {
    if ($APP.cljs.core.truth_($pred__45780$$.cljs$core$IFn$_invoke$arity$2 ? $pred__45780$$.cljs$core$IFn$_invoke$arity$2(asami.memory.empty_multi_graph, $first_graph_gtype_map__45779__$1_state$$) : $pred__45780$$.call(null, asami.memory.empty_multi_graph, $first_graph_gtype_map__45779__$1_state$$))) {
      $first_graph_gtype_map__45779__$1_state$$ = "multi";
    } else {
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown graph type:", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.type($first_graph_gtype_map__45779__$1_state$$))].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2450$graph, $first_graph_gtype_map__45779__$1_state$$], null));
    }
  }
  return ["asami:", $first_graph_gtype_map__45779__$1_state$$, "://", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($name$$)].join("");
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.get_url_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45773_45950, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45774_45951], null)));
var output_schema45785_45953 = $APP.schema.core.Num, input_schema45786_45954 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.ConnectionType, $APP.cljs.core.with_meta(cljs$cst$2458$connection, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2459$ConnectionType], null)))], null), ret__35121__auto___45955 = asami.memory.next_tx_STAR_ = function($connection$$) {
  return $APP.cljs.core.count($APP.cljs$cst$2451$history.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.deref($APP.cljs$cst$2455$state.cljs$core$IFn$_invoke$arity$1($connection$$))));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.next_tx_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45785_45953, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45786_45954], null)));
var output_schema45790_45956 = asami.storage.DatabaseType, input_schema45791_45957 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.ConnectionType, $APP.cljs.core.with_meta(cljs$cst$2458$connection, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2459$ConnectionType], null)))], null), ret__35121__auto___45958 = asami.memory.db_STAR_ = function($connection$$) {
  return $APP.cljs$cst$2457$db.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.deref($APP.cljs$cst$2455$state.cljs$core$IFn$_invoke$arity$1($connection$$)));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.db_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45790_45956, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45791_45957], null)));
var output_schema45794_45962 = $APP.schema.core.Bool, input_schema45795_45963 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.ConnectionType, cljs$cst$2210$arg0)], null), ret__35121__auto___45964 = asami.memory.delete_database_STAR_ = function($map__45803__$1_p__45802_state$$) {
  $map__45803__$1_p__45802_state$$ = $APP.cljs.core.__destructure_map($map__45803__$1_p__45802_state$$);
  $map__45803__$1_p__45802_state$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45803__$1_p__45802_state$$, $APP.cljs$cst$2455$state);
  var $db$$ = asami.memory.__GT_MemoryDatabase(cljs$cst$2450$graph.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.first($APP.cljs$cst$2451$history.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.deref($map__45803__$1_p__45802_state$$)))), $APP.cljs.core.PersistentVector.EMPTY, asami.internal.now(), 0);
  $APP.cljs.core.reset_BANG_($map__45803__$1_p__45802_state$$, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2457$db, $db$$, $APP.cljs$cst$2451$history, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$db$$], null)], null));
  return !0;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.delete_database_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45794_45962, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45795_45963], null)));
var output_schema45807_45966 = asami.storage.DatabaseType, input_schema45808_45967 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.graph.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null)))], null), ret__35121__auto___45968 = asami.memory.as_database = function($graph$$) {
  return asami.memory.__GT_MemoryDatabase($graph$$, $APP.cljs.core.PersistentVector.EMPTY, asami.internal.now(), 0);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.as_database), $APP.schema.core.__GT_FnSchema(output_schema45807_45966, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45808_45967], null)));
var output_schema45816_45969 = asami.storage.DatabaseType, input_schema45817_45970 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.DatabaseType, cljs$cst$2210$arg0), $APP.schema.core.one($APP.schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.schema.core.Int, $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(asami.internal.instant_QMARK_)], 0)), $APP.cljs.core.with_meta($APP.cljs$cst$1235$t, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2294$s_SLASH_cond_pre, cljs$cst$2231$s_SLASH_Int, $APP.cljs.core.list(cljs$cst$2460$s_SLASH_pred, cljs$cst$2461$instant_QMARK_))], null)))], null), ret__35121__auto___45971 = asami.memory.as_of_STAR_ = function($map__45821__$1_p__45820$$, $t$$) {
  $map__45821__$1_p__45820$$ = $APP.cljs.core.__destructure_map($map__45821__$1_p__45820$$);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45821__$1_p__45820$$, cljs$cst$2450$graph);
  var $history__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45821__$1_p__45820$$, $APP.cljs$cst$2451$history), $timestamp$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45821__$1_p__45820$$, $APP.cljs$cst$2452$timestamp);
  if ($APP.cljs.core.truth_(asami.internal.instant_QMARK_($t$$))) {
    var $ts$$ = asami.internal.to_timestamp($t$$);
    return $APP.cljs.core.compare($ts$$, $timestamp$$) >= 0 ? $map__45821__$1_p__45820$$ : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($history__$1$$, asami.memory.find_index.cljs$core$IFn$_invoke$arity$3($history__$1$$, $ts$$, function($p1__45813_SHARP_$$, $p2__45814_SHARP_$$) {
      return $APP.cljs.core.compare($APP.cljs$cst$2452$timestamp.cljs$core$IFn$_invoke$arity$1($p1__45813_SHARP_$$), $p2__45814_SHARP_$$);
    }));
  }
  return $APP.cljs.core.int_QMARK_($t$$) ? $t$$ >= $APP.cljs.core.count($history__$1$$) ? $map__45821__$1_p__45820$$ : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($history__$1$$, function() {
    var $x__5113__auto__$$ = $t$$ > 0 ? $t$$ : 0;
    var $y__5114__auto__$$ = $APP.cljs.core.count($history__$1$$) - 1;
    return $x__5113__auto__$$ < $y__5114__auto__$$ ? $x__5113__auto__$$ : $y__5114__auto__$$;
  }()) : null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.as_of_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45816_45969, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45817_45970], null)));
var output_schema45826_45972 = $APP.schema.core.Int, input_schema45827_45973 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.DatabaseType, cljs$cst$2210$arg0)], null), ret__35121__auto___45974 = asami.memory.as_of_t_STAR_ = function($history__$1$$) {
  $history__$1$$ = $APP.cljs.core.__destructure_map($history__$1$$);
  $history__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($history__$1$$, $APP.cljs$cst$2451$history);
  return $APP.cljs.core.truth_($history__$1$$) ? $APP.cljs.core.count($history__$1$$) : $history__$1$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.as_of_t_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45826_45972, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45827_45973], null)));
var output_schema45832_45975 = $APP.schema.core.Int, input_schema45833_45976 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.DatabaseType, cljs$cst$2210$arg0)], null), ret__35121__auto___45977 = asami.memory.as_of_time_STAR_ = function($map__45839__$1_p__45836$$) {
  $map__45839__$1_p__45836$$ = $APP.cljs.core.__destructure_map($map__45839__$1_p__45836$$);
  return $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45839__$1_p__45836$$, $APP.cljs$cst$2452$timestamp);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.as_of_time_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45832_45975, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45833_45976], null)));
var output_schema45843_45978 = $APP.schema.core.maybe(asami.storage.DatabaseType), input_schema45844_45979 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.DatabaseType, cljs$cst$2210$arg0), $APP.schema.core.one($APP.schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.schema.core.Int, $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1(asami.internal.instant_QMARK_)], 
0)), $APP.cljs.core.with_meta($APP.cljs$cst$1235$t, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2294$s_SLASH_cond_pre, cljs$cst$2231$s_SLASH_Int, $APP.cljs.core.list(cljs$cst$2460$s_SLASH_pred, cljs$cst$2461$instant_QMARK_))], null)))], null), ret__35121__auto___45980 = asami.memory.since_STAR_ = function($map__45850__$1_p__45847$$, $t$$) {
  $map__45850__$1_p__45847$$ = $APP.cljs.core.__destructure_map($map__45850__$1_p__45847$$);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45850__$1_p__45847$$, cljs$cst$2450$graph);
  var $history__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45850__$1_p__45847$$, $APP.cljs$cst$2451$history), $timestamp$jscomp$4_tx$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45850__$1_p__45847$$, $APP.cljs$cst$2452$timestamp);
  if ($APP.cljs.core.truth_(asami.internal.instant_QMARK_($t$$))) {
    var $ts$$ = asami.internal.to_timestamp($t$$);
    if ($APP.cljs.core.compare($ts$$, $timestamp$jscomp$4_tx$$) > 0) {
      return null;
    }
    if ($APP.cljs.core.compare($ts$$, $APP.cljs$cst$2452$timestamp.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.first($history__$1$$))) < 0) {
      return $APP.cljs.core.first($history__$1$$);
    }
    $timestamp$jscomp$4_tx$$ = asami.memory.find_index.cljs$core$IFn$_invoke$arity$3($history__$1$$, $ts$$, function($p1__45841_SHARP_$$, $p2__45842_SHARP_$$) {
      return $APP.cljs.core.compare($APP.cljs$cst$2452$timestamp.cljs$core$IFn$_invoke$arity$1($p1__45841_SHARP_$$), $p2__45842_SHARP_$$);
    }) + 1;
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($timestamp$jscomp$4_tx$$, $APP.cljs.core.count($history__$1$$)) ? $map__45850__$1_p__45847$$ : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($history__$1$$, $timestamp$jscomp$4_tx$$);
  }
  return $APP.cljs.core.int_QMARK_($t$$) ? $t$$ >= $APP.cljs.core.count($history__$1$$) ? null : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count($history__$1$$), $t$$ + 1) ? $map__45850__$1_p__45847$$ : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($history__$1$$, function() {
    var $x__5110__auto__$jscomp$inline_5018_x__5113__auto__$$ = $t$$ + 1;
    $x__5110__auto__$jscomp$inline_5018_x__5113__auto__$$ = $x__5110__auto__$jscomp$inline_5018_x__5113__auto__$$ > 0 ? $x__5110__auto__$jscomp$inline_5018_x__5113__auto__$$ : 0;
    var $y__5114__auto__$$ = $APP.cljs.core.count($history__$1$$) - 1;
    return $x__5110__auto__$jscomp$inline_5018_x__5113__auto__$$ < $y__5114__auto__$$ ? $x__5110__auto__$jscomp$inline_5018_x__5113__auto__$$ : $y__5114__auto__$$;
  }()) : null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.since_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45843_45978, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45844_45979], null)));
var output_schema45858_45982 = $APP.schema.core.Int, input_schema45859_45983 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.DatabaseType, cljs$cst$2210$arg0)], null), ret__35121__auto___45984 = asami.memory.since_t_STAR_ = function($history__$1$$) {
  $history__$1$$ = $APP.cljs.core.__destructure_map($history__$1$$);
  $history__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($history__$1$$, $APP.cljs$cst$2451$history);
  return $APP.cljs.core.not($APP.cljs.core.seq($history__$1$$)) ? 0 : $APP.cljs.core.count($history__$1$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.since_t_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45858_45982, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45859_45983], null)));
var output_schema45867_45985 = asami.graph.GraphType, input_schema45868_45986 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.DatabaseType, $APP.cljs.core.with_meta(cljs$cst$2462$database, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2463$DatabaseType], null)))], null), ret__35121__auto___45987 = asami.memory.graph_STAR_ = function($database$$) {
  return cljs$cst$2450$graph.cljs$core$IFn$_invoke$arity$1($database$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.graph_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45867_45985, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45868_45986], null)));
asami.memory.DBsBeforeAfter = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.DatabaseType, "The database before an operation"), $APP.schema.core.one(asami.storage.DatabaseType, "The database after an operation")], null);
var output_schema45871_45994 = asami.memory.DBsBeforeAfter, input_schema45872_45995 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.ConnectionType, $APP.cljs.core.with_meta($APP.cljs$cst$2464$conn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2459$ConnectionType], null))), $APP.schema.core.one($APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.fn_QMARK_), $APP.cljs.core.with_meta($APP.cljs$cst$2465$update_fn, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2460$s_SLASH_pred, $APP.cljs$cst$1141$fn_QMARK_)], null)))], null), ret__35121__auto___45996 = asami.memory.transact_update_STAR_ = function($conn_db_before_map__45878_map__45878__$1$$, $update_fn$$) {
  var $map__45879_map__45879__$1_vec__45875$$ = $APP.cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2455$state.cljs$core$IFn$_invoke$arity$1($conn_db_before_map__45878_map__45878__$1$$), function($next_graph_next_tx_state$$) {
    var $db_after$$ = $APP.cljs$cst$2457$db.cljs$core$IFn$_invoke$arity$1($next_graph_next_tx_state$$);
    $db_after$$ = $APP.cljs.core.__destructure_map($db_after$$);
    var $graph$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($db_after$$, cljs$cst$2450$graph);
    $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($db_after$$, $APP.cljs$cst$2457$db);
    var $history__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($db_after$$, $APP.cljs$cst$2451$history), $t$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($db_after$$, $APP.cljs$cst$2227$t);
    $next_graph_next_tx_state$$ = $APP.cljs.core.count($APP.cljs$cst$2451$history.cljs$core$IFn$_invoke$arity$1($next_graph_next_tx_state$$));
    $next_graph_next_tx_state$$ = $update_fn$$.cljs$core$IFn$_invoke$arity$2 ? $update_fn$$.cljs$core$IFn$_invoke$arity$2($graph$$, $next_graph_next_tx_state$$) : $update_fn$$.call(null, $graph$$, $next_graph_next_tx_state$$);
    $db_after$$ = asami.memory.__GT_MemoryDatabase($next_graph_next_tx_state$$, $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($history__$1$$, $db_after$$), asami.internal.now(), $t$$ + 1);
    return new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2457$db, $db_after$$, $APP.cljs$cst$2451$history, $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($db_after$$.history, $db_after$$)], null);
  });
  $conn_db_before_map__45878_map__45878__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($map__45879_map__45879__$1_vec__45875$$, 0, null);
  $conn_db_before_map__45878_map__45878__$1$$ = $APP.cljs.core.__destructure_map($conn_db_before_map__45878_map__45878__$1$$);
  $conn_db_before_map__45878_map__45878__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($conn_db_before_map__45878_map__45878__$1$$, $APP.cljs$cst$2457$db);
  $map__45879_map__45879__$1_vec__45875$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($map__45879_map__45879__$1_vec__45875$$, 1, null);
  $map__45879_map__45879__$1_vec__45875$$ = $APP.cljs.core.__destructure_map($map__45879_map__45879__$1_vec__45875$$);
  var $db_after$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45879_map__45879__$1_vec__45875$$, $APP.cljs$cst$2457$db);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45879_map__45879__$1_vec__45875$$, cljs$cst$2466$adjunct);
  return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$conn_db_before_map__45878_map__45878__$1$$, $db_after$$], null);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.transact_update_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45871_45994, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45872_45995], null)));
var output_schema45881_45997 = asami.memory.DBsBeforeAfter, input_schema45882_45998 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.ConnectionType, $APP.cljs.core.with_meta($APP.cljs$cst$2464$conn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2459$ConnectionType], null))), $APP.schema.core.one(asami.storage.UpdateData, $APP.cljs.core.with_meta(cljs$cst$2467$updates_BANG_, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2468$UpdateData], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.Triple], null), $APP.cljs.core.with_meta(cljs$cst$2469$asserts, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2470$Triple], null)], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [zuko.schema.Triple], null), $APP.cljs.core.with_meta(cljs$cst$2471$retracts, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2470$Triple], null)], null)))], null), input_schema45885_45999 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.ConnectionType, 
$APP.cljs.core.with_meta($APP.cljs$cst$2464$conn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2459$ConnectionType], null))), $APP.schema.core.one(asami.storage.UpdateData, $APP.cljs.core.with_meta(cljs$cst$2467$updates_BANG_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2468$UpdateData], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2472$generator_fn, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___46001 = function() {
  asami.memory.transact_data_STAR_ = function($var_args$$) {
    switch(arguments.length) {
      case 4:
        return asami.memory.transact_data_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      case 3:
        return asami.memory.transact_data_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  asami.memory.transact_data_STAR_.cljs$core$IFn$_invoke$arity$4 = function($conn$$, $updates_BANG_$$, $asserts$$, $retracts$$) {
    return asami.memory.transact_update_STAR_($conn$$, function($graph$$, $tx_id$$) {
      return asami.graph.graph_transact($graph$$, $tx_id$$, $asserts$$, $retracts$$, $updates_BANG_$$);
    });
  };
  asami.memory.transact_data_STAR_.cljs$core$IFn$_invoke$arity$3 = function($conn$$, $updates_BANG_$$, $generator_fn$$) {
    return asami.memory.transact_update_STAR_($conn$$, function($graph$$, $tx_id$$) {
      var $retracts$$ = $generator_fn$$.cljs$core$IFn$_invoke$arity$1 ? $generator_fn$$.cljs$core$IFn$_invoke$arity$1($graph$$) : $generator_fn$$.call(null, $graph$$), $asserts$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($retracts$$, 0, null);
      $retracts$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($retracts$$, 1, null);
      return asami.graph.graph_transact($graph$$, $tx_id$$, $asserts$$, $retracts$$, $updates_BANG_$$);
    });
  };
  asami.memory.transact_data_STAR_.cljs$lang$maxFixedArity = 4;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.transact_data_STAR_), $APP.schema.core.make_fn_schema(output_schema45881_45997, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45882_45998, input_schema45885_45999], null)));
var output_schema45899_46009 = $APP.schema.core.maybe($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.schema.core.Any])), input_schema45902_46010 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, cljs$cst$2210$arg0), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$1850$id, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2446$nested_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___46011 = asami.memory.entity_STAR_ = function($graph$$, $id$$, $nested_QMARK_$$) {
  $graph$$ = $APP.cljs.core.__destructure_map($graph$$);
  $graph$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($graph$$, cljs$cst$2450$graph);
  return asami.entities.reader.ident__GT_entity.cljs$core$IFn$_invoke$arity$3($graph$$, $id$$, $nested_QMARK_$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.memory.entity_STAR_), $APP.schema.core.__GT_FnSchema(output_schema45899_46009, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45902_46010], null)));
asami.entities.writer = {};
asami.entities.writer._STAR_current_graph_STAR_ = null;
asami.entities.writer._STAR_id_map_STAR_ = null;
asami.entities.writer._STAR_triples_STAR_ = null;
asami.entities.writer._STAR_limit_STAR_ = null;
asami.entities.writer._STAR_current_entity_STAR_ = null;
asami.entities.writer._STAR_top_level_entities_STAR_ = null;
asami.entities.writer.Triple = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, "Entity"), $APP.schema.core.one($APP.schema.core.Any, "attribute"), $APP.schema.core.one($APP.schema.core.Any, "value")], null);
asami.entities.writer.identity_prop_QMARK_ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$396$id, null, $APP.cljs$cst$2374$db_SLASH_ident, null], null), null);
asami.entities.writer.add_triples_BANG_ = function($op$$, $data$$) {
  $APP.cljs.core._vreset_BANG_(asami.entities.writer._STAR_triples_STAR_, function() {
    var $G__44964$$ = $APP.cljs.core._deref(asami.entities.writer._STAR_triples_STAR_);
    return $op$$.cljs$core$IFn$_invoke$arity$2 ? $op$$.cljs$core$IFn$_invoke$arity$2($G__44964$$, $data$$) : $op$$.call(null, $G__44964$$, $data$$);
  }());
  if ($APP.cljs.core.truth_(function() {
    var $and__5023__auto__$$ = asami.entities.writer._STAR_limit_STAR_;
    return $APP.cljs.core.truth_($and__5023__auto__$$) ? $APP.cljs.core.count($APP.cljs.core.deref(asami.entities.writer._STAR_triples_STAR_)) > asami.entities.writer._STAR_limit_STAR_ : $and__5023__auto__$$;
  }())) {
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("overflow", new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2473$overflow, !0], null));
  }
  return null;
};
asami.entities.writer.list_triples = function($G__45187_list_ref__$2_or__5025__auto__$$) {
  if ($APP.cljs.core.seq($G__45187_list_ref__$2_or__5025__auto__$$)) {
    var $first__44980_value_nodes_value_nodes__$1_vs__$1$$ = $APP.cljs.core.PersistentVector.EMPTY, $list_ref__$1_seq__44973_value_nodes__$2$$ = $APP.cljs.core.seq($G__45187_list_ref__$2_or__5025__auto__$$);
    $APP.cljs.core.first($list_ref__$1_seq__44973_value_nodes__$2$$);
    $APP.cljs.core.next($list_ref__$1_seq__44973_value_nodes__$2$$);
    for (var $last_ref__$1_last_ref__$2_value_ref$$ = $list_ref__$1_seq__44973_value_nodes__$2$$ = null, $G__44971__$1_G__45188_node_ref_vec__44978$$ = $G__45187_list_ref__$2_or__5025__auto__$$;;) {
      $G__45187_list_ref__$2_or__5025__auto__$$ = $list_ref__$1_seq__44973_value_nodes__$2$$;
      $list_ref__$1_seq__44973_value_nodes__$2$$ = $first__44980_value_nodes_value_nodes__$1_vs__$1$$;
      var $G__45189_seq__44979_v__$1$$ = $APP.cljs.core.seq($G__44971__$1_G__45188_node_ref_vec__44978$$);
      $first__44980_value_nodes_value_nodes__$1_vs__$1$$ = $APP.cljs.core.first($G__45189_seq__44979_v__$1$$);
      var $G__45190_seq__44979__$1$$ = $APP.cljs.core.next($G__45189_seq__44979_v__$1$$);
      $G__45189_seq__44979_v__$1$$ = $first__44980_value_nodes_value_nodes__$1_vs__$1$$;
      $first__44980_value_nodes_value_nodes__$1_vs__$1$$ = $G__45190_seq__44979__$1$$;
      if ($APP.cljs.core.not($APP.cljs.core.seq($G__44971__$1_G__45188_node_ref_vec__44978$$))) {
        return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__45187_list_ref__$2_or__5025__auto__$$, $list_ref__$1_seq__44973_value_nodes__$2$$], null);
      }
      $G__44971__$1_G__45188_node_ref_vec__44978$$ = zuko.node.new_node(asami.entities.writer._STAR_current_graph_STAR_);
      $APP.cljs.core.truth_($last_ref__$1_last_ref__$2_value_ref$$) && asami.entities.writer.add_triples_BANG_($APP.cljs.core.conj, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$last_ref__$1_last_ref__$2_value_ref$$, cljs$cst$2436$a_SLASH_rest, $G__44971__$1_G__45188_node_ref_vec__44978$$], null));
      $last_ref__$1_last_ref__$2_value_ref$$ = asami.entities.writer.value_triples.cljs$core$IFn$_invoke$arity$1 ? asami.entities.writer.value_triples.cljs$core$IFn$_invoke$arity$1($G__45189_seq__44979_v__$1$$) : asami.entities.writer.value_triples.call(null, $G__45189_seq__44979_v__$1$$);
      asami.entities.writer.add_triples_BANG_($APP.cljs.core.conj, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__44971__$1_G__45188_node_ref_vec__44978$$, zuko.node.data_attribute(asami.entities.writer._STAR_current_graph_STAR_, $last_ref__$1_last_ref__$2_value_ref$$), $last_ref__$1_last_ref__$2_value_ref$$], null));
      $G__45187_list_ref__$2_or__5025__auto__$$ = $APP.cljs.core.truth_($G__45187_list_ref__$2_or__5025__auto__$$) ? $G__45187_list_ref__$2_or__5025__auto__$$ : $G__44971__$1_G__45188_node_ref_vec__44978$$;
      $G__45189_seq__44979_v__$1$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($list_ref__$1_seq__44973_value_nodes__$2$$, $last_ref__$1_last_ref__$2_value_ref$$);
      $G__45190_seq__44979__$1$$ = $first__44980_value_nodes_value_nodes__$1_vs__$1$$;
      $list_ref__$1_seq__44973_value_nodes__$2$$ = $G__45187_list_ref__$2_or__5025__auto__$$;
      $last_ref__$1_last_ref__$2_value_ref$$ = $G__44971__$1_G__45188_node_ref_vec__44978$$;
      $first__44980_value_nodes_value_nodes__$1_vs__$1$$ = $G__45189_seq__44979_v__$1$$;
      $G__44971__$1_G__45188_node_ref_vec__44978$$ = $G__45190_seq__44979__$1$$;
    }
  } else {
    return null;
  }
};
var output_schema44981_45191 = $APP.schema.core.Any, input_schema44982_45192 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta(cljs$cst$2474$vlist, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$2204$s_SLASH_Any], null)], null)))], null), ret__35121__auto___45193 = asami.entities.writer.value_triples_list = function($node$jscomp$202_vlist$$) {
  if ($APP.cljs.core.seq($node$jscomp$202_vlist$$)) {
    var $c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$ = asami.entities.writer.list_triples($node$jscomp$202_vlist$$);
    $node$jscomp$202_vlist$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$, 0, null);
    $c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$, 1, null);
    $c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$ = $APP.cljs.core.seq($c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$);
    for (var $G__45207_chunk__44989_45195_seq__44988_45204__$1$$ = null, $G__45208_count__44990_45196$$ = 0, $G__45206_i__44991_45197$$ = 0;;) {
      if ($G__45206_i__44991_45197$$ < $G__45208_count__44990_45196$$) {
        var $vn_45198$$ = $G__45207_chunk__44989_45195_seq__44988_45204__$1$$.cljs$core$IIndexed$_nth$arity$2(null, $G__45206_i__44991_45197$$);
        asami.entities.writer.add_triples_BANG_($APP.cljs.core.conj, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$node$jscomp$202_vlist$$, zuko.node.container_attribute(asami.entities.writer._STAR_current_graph_STAR_, $vn_45198$$), $vn_45198$$], null));
        $G__45206_i__44991_45197$$ += 1;
      } else {
        if ($c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$ = $APP.cljs.core.seq($c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$)) {
          $G__45207_chunk__44989_45195_seq__44988_45204__$1$$ = $c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$, $APP.cljs.core.chunked_seq_QMARK_($G__45207_chunk__44989_45195_seq__44988_45204__$1$$) ? ($c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$ = $APP.cljs.core.chunk_first($G__45207_chunk__44989_45195_seq__44988_45204__$1$$), $G__45206_i__44991_45197$$ = $APP.cljs.core.chunk_rest($G__45207_chunk__44989_45195_seq__44988_45204__$1$$), 
          $G__45207_chunk__44989_45195_seq__44988_45204__$1$$ = $c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$, $G__45208_count__44990_45196$$ = $APP.cljs.core.count($c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$), $c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$ = $G__45206_i__44991_45197$$) : ($c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$ = $APP.cljs.core.first($G__45207_chunk__44989_45195_seq__44988_45204__$1$$), 
          asami.entities.writer.add_triples_BANG_($APP.cljs.core.conj, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$node$jscomp$202_vlist$$, zuko.node.container_attribute(asami.entities.writer._STAR_current_graph_STAR_, $c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$), $c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$], null)), $c__5548__auto___45205_seq__44988_45194_temp__5825__auto___45203_value_nodes$$ = 
          $APP.cljs.core.next($G__45207_chunk__44989_45195_seq__44988_45204__$1$$), $G__45207_chunk__44989_45195_seq__44988_45204__$1$$ = null, $G__45208_count__44990_45196$$ = 0), $G__45206_i__44991_45197$$ = 0;
        } else {
          break;
        }
      }
    }
    return $node$jscomp$202_vlist$$;
  }
  return cljs$cst$2440$a_SLASH_empty_list;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.writer.value_triples_list), $APP.schema.core.__GT_FnSchema(output_schema44981_45191, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema44982_45192], null)));
asami.entities.writer.lookup_ref_QMARK_ = function($i$$) {
  return $APP.cljs.core.vector_QMARK_($i$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $APP.cljs.core.count($i$$)) && $APP.cljs.core.first($i$$) instanceof $APP.cljs.core.Keyword;
};
asami.entities.writer.resolve_ref = function($id$$) {
  var $prop$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($id$$, 0, null);
  $id$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($id$$, 1, null);
  var $and__5023__auto__$jscomp$inline_5023_or__5025__auto__$$ = ($and__5023__auto__$jscomp$inline_5023_or__5025__auto__$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2432$db_SLASH_id, $prop$$)) ? $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.deref(asami.entities.writer._STAR_id_map_STAR_), $id$$, $id$$) : $and__5023__auto__$jscomp$inline_5023_or__5025__auto__$$;
  return $APP.cljs.core.truth_($and__5023__auto__$jscomp$inline_5023_or__5025__auto__$$) ? $and__5023__auto__$jscomp$inline_5023_or__5025__auto__$$ : $APP.cljs.core.ffirst(zuko.node.find_triple(asami.entities.writer._STAR_current_graph_STAR_, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2475$_QMARK_n, $prop$$, $id$$], null)));
};
asami.entities.writer.top_level_entity_QMARK_ = function($node$$) {
  return $APP.cljs.core.seq(zuko.node.find_triple(asami.entities.writer._STAR_current_graph_STAR_, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$node$$, cljs$cst$2377$a_SLASH_entity, !0], null)));
};
asami.entities.writer.add_subentity_relationship = function($node$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
  var $JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($node$$, asami.entities.writer._STAR_current_entity_STAR_);
  $JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$ || ($JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$ = $APP.cljs.core.deref(asami.entities.writer._STAR_top_level_entities_STAR_), $JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$ = $JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$.cljs$core$IFn$_invoke$arity$1 ? 
  $JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$.cljs$core$IFn$_invoke$arity$1($node$$) : $JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$.call(null, $node$$), $JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$) ? 
  $JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$ : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($node$$, cljs$cst$2440$a_SLASH_empty_list));
  $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$9324_fexpr__45015$jscomp$inline_9816_or__5025__auto__$jscomp$inline_9814_or__5025__auto____$1$$) || asami.entities.writer.add_triples_BANG_($APP.cljs.core.conj, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.writer._STAR_current_entity_STAR_, cljs$cst$2430$a_SLASH_owns, $node$$], null));
  return $node$$;
};
asami.entities.writer.value_triples = function($v$$) {
  if (asami.entities.writer.lookup_ref_QMARK_($v$$)) {
    var $or__5025__auto__$$ = asami.entities.writer.resolve_ref($v$$);
    return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : asami.entities.writer.value_triples_list($v$$);
  }
  return $APP.cljs.core.sequential_QMARK_($v$$) ? asami.entities.writer.add_subentity_relationship(asami.entities.writer.value_triples_list($v$$)) : $APP.cljs.core.set_QMARK_($v$$) ? asami.entities.writer.value_triples_list($APP.cljs.core.seq($v$$)) : $APP.cljs.core.map_QMARK_($v$$) ? asami.entities.writer.add_subentity_relationship(asami.entities.writer.map__GT_triples.cljs$core$IFn$_invoke$arity$1 ? asami.entities.writer.map__GT_triples.cljs$core$IFn$_invoke$arity$1($v$$) : asami.entities.writer.map__GT_triples.call(null, 
  $v$$)) : $v$$ == null ? cljs$cst$2437$a_SLASH_nil : $v$$;
};
var output_schema45016_45222 = $APP.schema.core.Any, input_schema45017_45223 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2476$entity_ref, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))), $APP.schema.core.one(asami.entities.general.KeyValue, cljs$cst$2328$arg1)], null), ret__35121__auto___45224 = asami.entities.writer.property_vals = 
function($entity_ref$$, $G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$) {
  var $property$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$, 0, null);
  $G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$, 1, null);
  if ($APP.cljs.core.truth_(asami.entities.writer.identity_prop_QMARK_.cljs$core$IFn$_invoke$arity$1 ? asami.entities.writer.identity_prop_QMARK_.cljs$core$IFn$_invoke$arity$1($property$$) : asami.entities.writer.identity_prop_QMARK_.call(null, $property$$))) {
    return asami.entities.writer.add_triples_BANG_($APP.cljs.core.conj, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$entity_ref$$, $property$$, $G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$], null));
  }
  if ($APP.cljs.core.set_QMARK_($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$)) {
    $G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$ = $APP.cljs.core.seq($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$);
    for (var $G__45231_chunk__45025_vr_45234$$ = null, $G__45232_c__5548__auto__$$ = 0, $i__45027$$ = 0;;) {
      if ($i__45027$$ < $G__45232_c__5548__auto__$$) {
        var $v$$ = $G__45231_chunk__45025_vr_45234$$.cljs$core$IIndexed$_nth$arity$2(null, $i__45027$$);
        $v$$ = asami.entities.writer.value_triples($v$$);
        asami.entities.writer.add_triples_BANG_($APP.cljs.core.conj, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$entity_ref$$, $property$$, $v$$], null));
        $i__45027$$ += 1;
      } else {
        if ($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$ = $APP.cljs.core.seq($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$)) {
          $APP.cljs.core.chunked_seq_QMARK_($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$) ? ($G__45232_c__5548__auto__$$ = $APP.cljs.core.chunk_first($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$), $G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$ = $APP.cljs.core.chunk_rest($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$), $G__45231_chunk__45025_vr_45234$$ = 
          $G__45232_c__5548__auto__$$, $G__45232_c__5548__auto__$$ = $APP.cljs.core.count($G__45232_c__5548__auto__$$)) : ($v$$ = $APP.cljs.core.first($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$), $G__45231_chunk__45025_vr_45234$$ = asami.entities.writer.value_triples($v$$), asami.entities.writer.add_triples_BANG_($APP.cljs.core.conj, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$entity_ref$$, $property$$, $G__45231_chunk__45025_vr_45234$$], 
          null)), $G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$ = $APP.cljs.core.next($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$), $G__45231_chunk__45025_vr_45234$$ = null, $G__45232_c__5548__auto__$$ = 0), $i__45027$$ = 0;
        } else {
          return null;
        }
      }
    }
  } else {
    return $v$$ = asami.entities.writer.value_triples($G__45230_p__45020_seq__45024_seq__45024__$1_temp__5825__auto__$jscomp$269_value$$), asami.entities.writer.add_triples_BANG_($APP.cljs.core.conj, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$entity_ref$$, $property$$, $v$$], null));
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.writer.property_vals), $APP.schema.core.__GT_FnSchema(output_schema45016_45222, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45017_45223], null)));
asami.entities.writer.new_node = function($JSCompiler_inline_result$jscomp$884_id$$) {
  var $next_id$$ = zuko.node.new_node(asami.entities.writer._STAR_current_graph_STAR_);
  if ($APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$884_id$$)) {
    var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$._vreset_BANG_, $JSCompiler_temp_const$jscomp$1$$ = asami.entities.writer._STAR_id_map_STAR_, $JSCompiler_temp_const$jscomp$2$$ = $APP.cljs.core.assoc, $JSCompiler_temp_const$jscomp$3$$ = $JSCompiler_temp_const$jscomp$2$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$4$$ = $APP.cljs.core._deref(asami.entities.writer._STAR_id_map_STAR_);
    $JSCompiler_inline_result$jscomp$884_id$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$884_id$$) ? $JSCompiler_inline_result$jscomp$884_id$$ : $next_id$$;
    $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_temp_const$jscomp$1$$, $JSCompiler_temp_const$jscomp$3$$.call($JSCompiler_temp_const$jscomp$2$$, $JSCompiler_temp_const$jscomp$4$$, $JSCompiler_inline_result$jscomp$884_id$$, $next_id$$));
  }
  return $next_id$$;
};
var output_schema45033_45239 = $APP.schema.core.Any, input_schema45034_45240 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.EntityMap, cljs$cst$2210$arg0)], null), ret__35121__auto___45241 = asami.entities.writer.get_ref = function($ident$jscomp$5_lookup$$) {
  var $ident2_map__45038__$1$$ = $APP.cljs.core.__destructure_map($ident$jscomp$5_lookup$$), $id$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($ident2_map__45038__$1$$, $APP.cljs$cst$2432$db_SLASH_id);
  $ident$jscomp$5_lookup$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($ident2_map__45038__$1$$, $APP.cljs$cst$2374$db_SLASH_ident);
  $ident2_map__45038__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($ident2_map__45038__$1$$, $APP.cljs$cst$396$id);
  var $temp__5823__auto__$jscomp$189_temp__5823__auto____$1$$ = function() {
    var $fexpr__45039$$ = $APP.cljs.core.deref(asami.entities.writer._STAR_id_map_STAR_);
    return $fexpr__45039$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__45039$$.cljs$core$IFn$_invoke$arity$1($id$$) : $fexpr__45039$$.call(null, $id$$);
  }();
  if ($APP.cljs.core.truth_($temp__5823__auto__$jscomp$189_temp__5823__auto____$1$$)) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$temp__5823__auto__$jscomp$189_temp__5823__auto____$1$$, !1], null);
  }
  var $idd$$ = $APP.cljs.core.truth_($ident$jscomp$5_lookup$$) ? $ident$jscomp$5_lookup$$ : $ident2_map__45038__$1$$;
  if (typeof $id$$ === "number" && $id$$ < 0) {
    return $ident$jscomp$5_lookup$$ = asami.entities.writer.new_node($id$$), $APP.cljs.core.truth_($idd$$) && $APP.cljs.core._vreset_BANG_(asami.entities.writer._STAR_id_map_STAR_, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($APP.cljs.core._deref(asami.entities.writer._STAR_id_map_STAR_), $idd$$, $ident$jscomp$5_lookup$$)), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$ident$jscomp$5_lookup$$, !1], null);
  }
  if ($APP.cljs.core.truth_($id$$)) {
    if ($APP.cljs.core.truth_(zuko.node.node_type_QMARK_(asami.entities.writer._STAR_current_graph_STAR_, $APP.cljs$cst$2432$db_SLASH_id, $id$$))) {
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$id$$, !1], null);
    }
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(":db/id must be a value node type", new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2432$db_SLASH_id, $id$$], null));
  }
  if ($APP.cljs.core.truth_($idd$$)) {
    $temp__5823__auto__$jscomp$189_temp__5823__auto____$1$$ = function() {
      var $fexpr__45044$$ = $APP.cljs.core.deref(asami.entities.writer._STAR_id_map_STAR_);
      return $fexpr__45044$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__45044$$.cljs$core$IFn$_invoke$arity$1($idd$$) : $fexpr__45044$$.call(null, $idd$$);
    }();
    if ($APP.cljs.core.truth_($temp__5823__auto__$jscomp$189_temp__5823__auto____$1$$)) {
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$temp__5823__auto__$jscomp$189_temp__5823__auto____$1$$, !0], null);
    }
    $ident$jscomp$5_lookup$$ = $APP.cljs.core.truth_($ident$jscomp$5_lookup$$) ? zuko.node.find_triple(asami.entities.writer._STAR_current_graph_STAR_, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2475$_QMARK_n, $APP.cljs$cst$2374$db_SLASH_ident, $ident$jscomp$5_lookup$$], null)) : zuko.node.find_triple(asami.entities.writer._STAR_current_graph_STAR_, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
    [$APP.cljs$cst$2475$_QMARK_n, $APP.cljs$cst$396$id, $ident2_map__45038__$1$$], null));
    return $APP.cljs.core.seq($ident$jscomp$5_lookup$$) ? ($ident$jscomp$5_lookup$$ = $APP.cljs.core.ffirst($ident$jscomp$5_lookup$$), asami.entities.writer.top_level_entity_QMARK_($ident$jscomp$5_lookup$$) && $APP.cljs.core._vreset_BANG_(asami.entities.writer._STAR_top_level_entities_STAR_, $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._deref(asami.entities.writer._STAR_top_level_entities_STAR_), $ident$jscomp$5_lookup$$)), $APP.cljs.core._vreset_BANG_(asami.entities.writer._STAR_id_map_STAR_, 
    $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($APP.cljs.core._deref(asami.entities.writer._STAR_id_map_STAR_), $idd$$, $ident$jscomp$5_lookup$$)), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$ident$jscomp$5_lookup$$, !0], null)) : new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.writer.new_node($idd$$), !1], null);
  }
  return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.writer.new_node(null), !1], null);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.writer.get_ref), $APP.schema.core.__GT_FnSchema(output_schema45033_45239, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45034_45240], null)));
var output_schema45045_45242 = $APP.schema.core.Any, input_schema45046_45243 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.EntityMap, $APP.cljs.core.with_meta($APP.cljs$cst$380$data, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2477$EntityMap], null)))], null), ret__35121__auto___45244 = asami.entities.writer.map__GT_triples = function($_STAR_current_entity_STAR__orig_val__45060_45266_data$jscomp$128_data__$1$$) {
  var $chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$ = asami.entities.writer.get_ref($_STAR_current_entity_STAR__orig_val__45060_45266_data$jscomp$128_data__$1$$), $entity_ref$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$, 0, null);
  $chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$, 1, null);
  $_STAR_current_entity_STAR__orig_val__45060_45266_data$jscomp$128_data__$1$$ = $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($_STAR_current_entity_STAR__orig_val__45060_45266_data$jscomp$128_data__$1$$, $APP.cljs$cst$2432$db_SLASH_id);
  $chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$ = $APP.cljs.core.truth_($chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$) ? $APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($_STAR_current_entity_STAR__orig_val__45060_45266_data$jscomp$128_data__$1$$, $APP.cljs$cst$2374$db_SLASH_ident) : $_STAR_current_entity_STAR__orig_val__45060_45266_data$jscomp$128_data__$1$$;
  if ($APP.cljs.core.truth_(asami.entities.writer._STAR_current_entity_STAR_)) {
    for (var $c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$ = $APP.cljs.core.seq($chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$), $G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$ = null, $G__45259_count__45058_45247_temp__5825__auto___45278$$ = 0, $G__45257_c__5548__auto___45284_i__45059_45248$$ = 0;;) {
      if ($G__45257_c__5548__auto___45284_i__45059_45248$$ < $G__45259_count__45058_45247_temp__5825__auto___45278$$) {
        var $G__45285_d_45249$$ = $G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$.cljs$core$IIndexed$_nth$arity$2(null, $G__45257_c__5548__auto___45284_i__45059_45248$$);
        asami.entities.writer.property_vals($entity_ref$$, $G__45285_d_45249$$);
        $G__45257_c__5548__auto___45284_i__45059_45248$$ += 1;
      } else {
        if ($c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$ = $APP.cljs.core.seq($c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$)) {
          $G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$ = $c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$, $APP.cljs.core.chunked_seq_QMARK_($G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$) ? ($c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$ = $APP.cljs.core.chunk_first($G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$), $G__45257_c__5548__auto___45284_i__45059_45248$$ = $APP.cljs.core.chunk_rest($G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$), 
          $G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$ = $c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$, $G__45259_count__45058_45247_temp__5825__auto___45278$$ = $APP.cljs.core.count($c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$), $c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$ = $G__45257_c__5548__auto___45284_i__45059_45248$$) : ($c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$ = 
          $APP.cljs.core.first($G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$), asami.entities.writer.property_vals($entity_ref$$, $c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$), $c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$ = $APP.cljs.core.next($G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$), $G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$ = null, $G__45259_count__45058_45247_temp__5825__auto___45278$$ = 
          0), $G__45257_c__5548__auto___45284_i__45059_45248$$ = 0;
        } else {
          break;
        }
      }
    }
  } else {
    $_STAR_current_entity_STAR__orig_val__45060_45266_data$jscomp$128_data__$1$$ = asami.entities.writer._STAR_current_entity_STAR_;
    asami.entities.writer._STAR_current_entity_STAR_ = $entity_ref$$;
    try {
      $APP.cljs.core._vreset_BANG_(asami.entities.writer._STAR_top_level_entities_STAR_, $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._deref(asami.entities.writer._STAR_top_level_entities_STAR_), $entity_ref$$));
      $c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$ = $APP.cljs.core.seq($chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$);
      $chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$ = null;
      for (var $count__45064_45271$$ = 0, $i__45065_45272$$ = 0;;) {
        if ($i__45065_45272$$ < $count__45064_45271$$) {
          $G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$ = $chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$.cljs$core$IIndexed$_nth$arity$2(null, $i__45065_45272$$), asami.entities.writer.property_vals($entity_ref$$, $G__45258_chunk__45057_45246_d_45273_seq__45056_45255__$1$$), $i__45065_45272$$ += 1;
        } else {
          if ($G__45259_count__45058_45247_temp__5825__auto___45278$$ = $APP.cljs.core.seq($c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$)) {
            var $G__45286_seq__45062_45280__$1$$ = $G__45259_count__45058_45247_temp__5825__auto___45278$$;
            if ($APP.cljs.core.chunked_seq_QMARK_($G__45286_seq__45062_45280__$1$$)) {
              $G__45257_c__5548__auto___45284_i__45059_45248$$ = $APP.cljs.core.chunk_first($G__45286_seq__45062_45280__$1$$);
              $G__45285_d_45249$$ = $APP.cljs.core.chunk_rest($G__45286_seq__45062_45280__$1$$);
              $G__45286_seq__45062_45280__$1$$ = $G__45257_c__5548__auto___45284_i__45059_45248$$;
              var $G__45287$$ = $APP.cljs.core.count($G__45257_c__5548__auto___45284_i__45059_45248$$);
              $c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$ = $G__45285_d_45249$$;
              $chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$ = $G__45286_seq__45062_45280__$1$$;
              $count__45064_45271$$ = $G__45287$$;
            } else {
              var $d_45289$$ = $APP.cljs.core.first($G__45286_seq__45062_45280__$1$$);
              asami.entities.writer.property_vals($entity_ref$$, $d_45289$$);
              $c__5548__auto___45256_d_45261_seq__45056_45245_seq__45062_45269_temp__5825__auto___45254$$ = $APP.cljs.core.next($G__45286_seq__45062_45280__$1$$);
              $chunk__45063_45270_data__$2_ident_QMARK__vec__45053$$ = null;
              $count__45064_45271$$ = 0;
            }
            $i__45065_45272$$ = 0;
          } else {
            break;
          }
        }
      }
    } finally {
      asami.entities.writer._STAR_current_entity_STAR_ = $_STAR_current_entity_STAR__orig_val__45060_45266_data$jscomp$128_data__$1$$;
    }
  }
  return $entity_ref$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.writer.map__GT_triples), $APP.schema.core.__GT_FnSchema(output_schema45045_45242, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45046_45243], null)));
asami.entities.writer.name_for = function($id$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
  var $JSCompiler_inline_result$jscomp$887_or__5025__auto__$$ = ($JSCompiler_inline_result$jscomp$887_or__5025__auto__$$ = $id$$ instanceof $APP.cljs.core.Keyword) ? $JSCompiler_inline_result$jscomp$887_or__5025__auto__$$ : zuko.node.node_type_QMARK_(asami.entities.writer._STAR_current_graph_STAR_, $APP.cljs$cst$2432$db_SLASH_id, $id$$);
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$887_or__5025__auto__$$) ? $id$$ : zuko.node.node_label(asami.entities.writer._STAR_current_graph_STAR_, $id$$);
};
var output_schema45076_45296 = $APP.schema.core.Any, input_schema45077_45297 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one(asami.entities.general.EntityMap, $APP.cljs.core.with_meta($APP.cljs$cst$2478$j, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2477$EntityMap], null)))], null), input_schema45081_45298 = new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one(asami.entities.general.EntityMap, $APP.cljs.core.with_meta($APP.cljs$cst$2478$j, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2477$EntityMap], null))), $APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.schema.core.Any]), $APP.cljs.core.with_meta(cljs$cst$2479$id_map, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2204$s_SLASH_Any, cljs$cst$2204$s_SLASH_Any], null)], null))), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$APP.schema.core.Any]), 
$APP.cljs.core.with_meta(cljs$cst$2480$top_level_ids, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2204$s_SLASH_Any, "null"], null), null)], null))), $APP.schema.core.one($APP.schema.core.maybe($APP.schema.core.Num), $APP.cljs.core.with_meta($APP.cljs$cst$2187$limit, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, 
cljs$cst$2302$s_SLASH_Num)], null)))], null), input_schema45084_45299 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.EntityMap, $APP.cljs.core.with_meta($APP.cljs$cst$2478$j, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2477$EntityMap], null)))], null), ret__35121__auto___45301 = function() {
  asami.entities.writer.ident_map__GT_triples = function($var_args$$) {
    switch(arguments.length) {
      case 2:
        return asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      case 5:
        return asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      case 1:
        return asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$2 = function($graph$$, $j$$) {
    return asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$5($graph$$, $j$$, $APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.PersistentHashSet.EMPTY, null);
  };
  asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$5 = function($graph$$, $j$$, $_STAR_id_map_STAR__temp_val__45098_id_map$$, $_STAR_top_level_entities_STAR__temp_val__45101_top_level_ids$$, $limit$$) {
    var $_STAR_current_graph_STAR__orig_val__45092$$ = asami.entities.writer._STAR_current_graph_STAR_, $_STAR_id_map_STAR__orig_val__45093$$ = asami.entities.writer._STAR_id_map_STAR_, $_STAR_triples_STAR__orig_val__45094$$ = asami.entities.writer._STAR_triples_STAR_, $_STAR_limit_STAR__orig_val__45095$$ = asami.entities.writer._STAR_limit_STAR_, $_STAR_top_level_entities_STAR__orig_val__45096$$ = asami.entities.writer._STAR_top_level_entities_STAR_;
    $_STAR_id_map_STAR__temp_val__45098_id_map$$ = $APP.cljs.core.volatile_BANG_($_STAR_id_map_STAR__temp_val__45098_id_map$$);
    var $_STAR_triples_STAR__temp_val__45099$$ = $APP.cljs.core.volatile_BANG_($APP.cljs.core.PersistentVector.EMPTY);
    $_STAR_top_level_entities_STAR__temp_val__45101_top_level_ids$$ = $APP.cljs.core.volatile_BANG_($_STAR_top_level_entities_STAR__temp_val__45101_top_level_ids$$);
    asami.entities.writer._STAR_current_graph_STAR_ = $graph$$;
    asami.entities.writer._STAR_id_map_STAR_ = $_STAR_id_map_STAR__temp_val__45098_id_map$$;
    asami.entities.writer._STAR_triples_STAR_ = $_STAR_triples_STAR__temp_val__45099$$;
    asami.entities.writer._STAR_limit_STAR_ = $limit$$;
    asami.entities.writer._STAR_top_level_entities_STAR_ = $_STAR_top_level_entities_STAR__temp_val__45101_top_level_ids$$;
    try {
      var $derefed_id_map$$ = asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$1($j$$);
      return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.deref(asami.entities.writer._STAR_triples_STAR_), $derefed_id_map$$, $APP.cljs.core.deref(asami.entities.writer._STAR_top_level_entities_STAR_)], null);
    } finally {
      asami.entities.writer._STAR_top_level_entities_STAR_ = $_STAR_top_level_entities_STAR__orig_val__45096$$, asami.entities.writer._STAR_limit_STAR_ = $_STAR_limit_STAR__orig_val__45095$$, asami.entities.writer._STAR_triples_STAR_ = $_STAR_triples_STAR__orig_val__45094$$, asami.entities.writer._STAR_id_map_STAR_ = $_STAR_id_map_STAR__orig_val__45093$$, asami.entities.writer._STAR_current_graph_STAR_ = $_STAR_current_graph_STAR__orig_val__45092$$;
    }
  };
  asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$1 = function($j$$) {
    var $node_ref$$ = asami.entities.writer.map__GT_triples($j$$);
    $APP.cljs.core.truth_($APP.cljs$cst$2374$db_SLASH_ident.cljs$core$IFn$_invoke$arity$1($j$$)) ? asami.entities.writer.add_triples_BANG_($APP.cljs.core.conj, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$node_ref$$, cljs$cst$2377$a_SLASH_entity, !0], null)) : asami.entities.writer.add_triples_BANG_($APP.cljs.core.into, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 
    3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$node_ref$$, $APP.cljs$cst$2374$db_SLASH_ident, asami.entities.writer.name_for($node_ref$$)], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$node_ref$$, cljs$cst$2377$a_SLASH_entity, !0], null)], null));
    return $APP.cljs.core.deref(asami.entities.writer._STAR_id_map_STAR_);
  };
  asami.entities.writer.ident_map__GT_triples.cljs$lang$maxFixedArity = 5;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.writer.ident_map__GT_triples), $APP.schema.core.make_fn_schema(output_schema45076_45296, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45077_45297, input_schema45081_45298, input_schema45084_45299], null)));
asami.entities.writer.backtrack_unlink_top_entities = function($top_entities$$, $triples$$) {
  return $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function($G__45104_p1__45102_SHARP_$$) {
    var $and__5023__auto__$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2430$a_SLASH_owns, $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($G__45104_p1__45102_SHARP_$$, 1));
    return $and__5023__auto__$$ ? ($G__45104_p1__45102_SHARP_$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($G__45104_p1__45102_SHARP_$$, 2), $top_entities$$.cljs$core$IFn$_invoke$arity$1 ? $top_entities$$.cljs$core$IFn$_invoke$arity$1($G__45104_p1__45102_SHARP_$$) : $top_entities$$.call(null, $G__45104_p1__45102_SHARP_$$)) : $and__5023__auto__$$;
  }, $triples$$);
};
var output_schema45105_45311 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.writer.Triple], null), input_schema45106_45312 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.general.EntityMap], null), $APP.cljs.core.with_meta(cljs$cst$2481$entities, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2477$EntityMap], null)], null)))], null), input_schema45109_45313 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, 
$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.general.EntityMap], null), $APP.cljs.core.with_meta(cljs$cst$2481$entities, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$2477$EntityMap], null)], null))), $APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.schema.core.Any]), $APP.cljs.core.with_meta(cljs$cst$2479$id_map, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2204$s_SLASH_Any, cljs$cst$2204$s_SLASH_Any], null)], null)))], null), ret__35121__auto___45314 = function() {
  asami.entities.writer.entities__GT_triples = function($var_args$$) {
    switch(arguments.length) {
      case 2:
        return asami.entities.writer.entities__GT_triples.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      case 3:
        return asami.entities.writer.entities__GT_triples.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  asami.entities.writer.entities__GT_triples.cljs$core$IFn$_invoke$arity$2 = function($graph$$, $entities$$) {
    return asami.entities.writer.entities__GT_triples.cljs$core$IFn$_invoke$arity$3($graph$$, $entities$$, $APP.cljs.core.PersistentArrayMap.EMPTY);
  };
  asami.entities.writer.entities__GT_triples.cljs$core$IFn$_invoke$arity$3 = function($chunk__45127_45317_graph$$, $count__45128_45318_entities$$, $_STAR_id_map_STAR__temp_val__45121_i__45129_45319_id_map$$) {
    var $_STAR_current_graph_STAR__orig_val__45115$$ = asami.entities.writer._STAR_current_graph_STAR_, $_STAR_id_map_STAR__orig_val__45116$$ = asami.entities.writer._STAR_id_map_STAR_, $_STAR_triples_STAR__orig_val__45118$$ = asami.entities.writer._STAR_triples_STAR_, $_STAR_top_level_entities_STAR__orig_val__45119$$ = asami.entities.writer._STAR_top_level_entities_STAR_;
    $_STAR_id_map_STAR__temp_val__45121_i__45129_45319_id_map$$ = $APP.cljs.core.volatile_BANG_($_STAR_id_map_STAR__temp_val__45121_i__45129_45319_id_map$$);
    var $G__45329__STAR_triples_STAR__temp_val__45122_seq__45126_45326__$1$$ = $APP.cljs.core.volatile_BANG_($APP.cljs.core.PersistentVector.EMPTY), $_STAR_top_level_entities_STAR__temp_val__45123$$ = $APP.cljs.core.volatile_BANG_($APP.cljs.core.PersistentHashSet.EMPTY);
    asami.entities.writer._STAR_current_graph_STAR_ = $chunk__45127_45317_graph$$;
    asami.entities.writer._STAR_id_map_STAR_ = $_STAR_id_map_STAR__temp_val__45121_i__45129_45319_id_map$$;
    asami.entities.writer._STAR_triples_STAR_ = $G__45329__STAR_triples_STAR__temp_val__45122_seq__45126_45326__$1$$;
    asami.entities.writer._STAR_top_level_entities_STAR_ = $_STAR_top_level_entities_STAR__temp_val__45123$$;
    try {
      var $seq__45126_45316$$ = $APP.cljs.core.seq($count__45128_45318_entities$$);
      $chunk__45127_45317_graph$$ = null;
      for ($_STAR_id_map_STAR__temp_val__45121_i__45129_45319_id_map$$ = $count__45128_45318_entities$$ = 0;;) {
        if ($_STAR_id_map_STAR__temp_val__45121_i__45129_45319_id_map$$ < $count__45128_45318_entities$$) {
          var $e_45320$$ = $chunk__45127_45317_graph$$.cljs$core$IIndexed$_nth$arity$2(null, $_STAR_id_map_STAR__temp_val__45121_i__45129_45319_id_map$$);
          asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$1($e_45320$$);
          $_STAR_id_map_STAR__temp_val__45121_i__45129_45319_id_map$$ += 1;
        } else {
          var $temp__5825__auto___45325$$ = $APP.cljs.core.seq($seq__45126_45316$$);
          if ($temp__5825__auto___45325$$) {
            $G__45329__STAR_triples_STAR__temp_val__45122_seq__45126_45326__$1$$ = $temp__5825__auto___45325$$;
            if ($APP.cljs.core.chunked_seq_QMARK_($G__45329__STAR_triples_STAR__temp_val__45122_seq__45126_45326__$1$$)) {
              var $c__5548__auto___45327$$ = $APP.cljs.core.chunk_first($G__45329__STAR_triples_STAR__temp_val__45122_seq__45126_45326__$1$$), $G__45328$$ = $APP.cljs.core.chunk_rest($G__45329__STAR_triples_STAR__temp_val__45122_seq__45126_45326__$1$$);
              $G__45329__STAR_triples_STAR__temp_val__45122_seq__45126_45326__$1$$ = $c__5548__auto___45327$$;
              var $G__45330$$ = $APP.cljs.core.count($c__5548__auto___45327$$);
              $seq__45126_45316$$ = $G__45328$$;
              $chunk__45127_45317_graph$$ = $G__45329__STAR_triples_STAR__temp_val__45122_seq__45126_45326__$1$$;
              $count__45128_45318_entities$$ = $G__45330$$;
            } else {
              var $e_45332$$ = $APP.cljs.core.first($G__45329__STAR_triples_STAR__temp_val__45122_seq__45126_45326__$1$$);
              asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$1($e_45332$$);
              $seq__45126_45316$$ = $APP.cljs.core.next($G__45329__STAR_triples_STAR__temp_val__45122_seq__45126_45326__$1$$);
              $chunk__45127_45317_graph$$ = null;
              $count__45128_45318_entities$$ = 0;
            }
            $_STAR_id_map_STAR__temp_val__45121_i__45129_45319_id_map$$ = 0;
          } else {
            break;
          }
        }
      }
      return asami.entities.writer.backtrack_unlink_top_entities($APP.cljs.core.deref(asami.entities.writer._STAR_top_level_entities_STAR_), $APP.cljs.core.deref(asami.entities.writer._STAR_triples_STAR_));
    } finally {
      asami.entities.writer._STAR_top_level_entities_STAR_ = $_STAR_top_level_entities_STAR__orig_val__45119$$, asami.entities.writer._STAR_triples_STAR_ = $_STAR_triples_STAR__orig_val__45118$$, asami.entities.writer._STAR_id_map_STAR_ = $_STAR_id_map_STAR__orig_val__45116$$, asami.entities.writer._STAR_current_graph_STAR_ = $_STAR_current_graph_STAR__orig_val__45115$$;
    }
  };
  asami.entities.writer.entities__GT_triples.cljs$lang$maxFixedArity = 3;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.writer.entities__GT_triples), $APP.schema.core.make_fn_schema(output_schema45105_45311, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45106_45312, input_schema45109_45313], null)));
var output_schema45135_45338 = $APP.schema.core.Any, input_schema45136_45339 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2482$node_ref, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, cljs$cst$2390$arg2)], null), ret__35121__auto___45343 = asami.entities.writer.existing_triples = function($graph$$, $node_ref$$, $or__5025__auto__$$) {
  var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($or__5025__auto__$$, 0, null), $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($or__5025__auto__$$, 1, null);
  $or__5025__auto__$$ = function() {
    var $temp__5823__auto__$$ = asami.entities.reader.check_structure($graph$$, $k$$, $v$$);
    return $APP.cljs.core.truth_($temp__5823__auto__$$) ? $APP.cljs.core.not($APP.cljs.core.some(function($p1__45134_SHARP_$$) {
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2377$a_SLASH_entity, $APP.cljs.core.first($p1__45134_SHARP_$$));
    }, $temp__5823__auto__$$)) ? $APP.cljs.core.cons(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$node_ref$$, $k$$, $v$$], null), $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$3(asami.entities.writer.existing_triples, $graph$$, $v$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$temp__5823__auto__$$], 0))) : null : null;
  }();
  return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$node_ref$$, $k$$, $v$$], null)], null);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.writer.existing_triples), $APP.schema.core.__GT_FnSchema(output_schema45135_45338, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45136_45339], null)));
var output_schema45143_45352 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.writer.Triple], null), "assertions"), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.writer.Triple], null), "retractions")], null), input_schema45144_45353 = new $APP.cljs.core.PersistentVector(null, 
3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))), $APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta(cljs$cst$2482$node_ref, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null))), $APP.schema.core.one($APP.schema.core.Any, 
$APP.cljs.core.with_meta($APP.cljs$cst$2429$entity, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], null)))], null), ret__35121__auto___45354 = asami.entities.writer.entity_update__GT_triples = function($graph$$, $node_ref$$, $entity$$) {
  var $_STAR_current_graph_STAR__orig_val__45153$$ = asami.entities.writer._STAR_current_graph_STAR_, $_STAR_id_map_STAR__orig_val__45154$$ = asami.entities.writer._STAR_id_map_STAR_, $_STAR_id_map_STAR__temp_val__45156$$ = $APP.cljs.core.volatile_BANG_($APP.cljs.core.PersistentArrayMap.EMPTY);
  asami.entities.writer._STAR_current_graph_STAR_ = $graph$$;
  asami.entities.writer._STAR_id_map_STAR_ = $_STAR_id_map_STAR__temp_val__45156$$;
  try {
    var $pvs$$ = asami.entities.reader.property_values($graph$$, $node_ref$$), $old_struct$$ = asami.entities.reader.pairs__GT_struct.cljs$core$IFn$_invoke$arity$2($graph$$, $pvs$$), $to_remove$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function($p__45157_v$$) {
      var $k$jscomp$459_temp__5823__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45157_v$$, 0, null);
      $p__45157_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45157_v$$, 1, null);
      $k$jscomp$459_temp__5823__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($entity$$, $k$jscomp$459_temp__5823__auto__$$);
      return $APP.cljs.core.truth_($k$jscomp$459_temp__5823__auto__$$) ? $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($p__45157_v$$, $k$jscomp$459_temp__5823__auto__$$) : null;
    }, $old_struct$$), $pvs_to_remove$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.first, $to_remove$$)), $APP.cljs.core.first), $pvs$$), $triples_to_remove$$ = $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$3(asami.entities.writer.existing_triples, $graph$$, $node_ref$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$pvs_to_remove$$], 
    0)), $to_add$$ = $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function($p__45161_v$$) {
      var $k$jscomp$460_temp__5825__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45161_v$$, 0, null);
      $p__45161_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45161_v$$, 1, null);
      $k$jscomp$460_temp__5825__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($old_struct$$, $k$jscomp$460_temp__5825__auto__$$);
      return $APP.cljs.core.truth_($k$jscomp$460_temp__5825__auto__$$) ? $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($k$jscomp$460_temp__5825__auto__$$, $p__45161_v$$) : null;
    }, $entity$$), $triples_to_add$$ = function() {
      var $_STAR_triples_STAR__orig_val__45165$$ = asami.entities.writer._STAR_triples_STAR_, $_STAR_top_level_entities_STAR__orig_val__45166$$ = asami.entities.writer._STAR_top_level_entities_STAR_, $_STAR_current_entity_STAR__orig_val__45167$$ = asami.entities.writer._STAR_current_entity_STAR_, $_STAR_triples_STAR__temp_val__45168_chunk__45176_45377$$ = $APP.cljs.core.volatile_BANG_($APP.cljs.core.PersistentVector.EMPTY), $_STAR_top_level_entities_STAR__temp_val__45169_count__45177_45378$$ = $APP.cljs.core.volatile_BANG_($APP.cljs.core.PersistentHashSet.EMPTY);
      asami.entities.writer._STAR_triples_STAR_ = $_STAR_triples_STAR__temp_val__45168_chunk__45176_45377$$;
      asami.entities.writer._STAR_top_level_entities_STAR_ = $_STAR_top_level_entities_STAR__temp_val__45169_count__45177_45378$$;
      asami.entities.writer._STAR_current_entity_STAR_ = $node_ref$$;
      try {
        var $seq__45175_45376$$ = $APP.cljs.core.seq($to_add$$);
        $_STAR_triples_STAR__temp_val__45168_chunk__45176_45377$$ = null;
        for (var $i__45178_45379$$ = $_STAR_top_level_entities_STAR__temp_val__45169_count__45177_45378$$ = 0;;) {
          if ($i__45178_45379$$ < $_STAR_top_level_entities_STAR__temp_val__45169_count__45177_45378$$) {
            var $pvs_45380__$1$$ = $_STAR_triples_STAR__temp_val__45168_chunk__45176_45377$$.cljs$core$IIndexed$_nth$arity$2(null, $i__45178_45379$$);
            asami.entities.writer.property_vals($node_ref$$, $pvs_45380__$1$$);
            $i__45178_45379$$ += 1;
          } else {
            var $temp__5825__auto___45385$$ = $APP.cljs.core.seq($seq__45175_45376$$);
            if ($temp__5825__auto___45385$$) {
              var $G__45389_seq__45175_45386__$1$$ = $temp__5825__auto___45385$$;
              if ($APP.cljs.core.chunked_seq_QMARK_($G__45389_seq__45175_45386__$1$$)) {
                var $c__5548__auto___45387$$ = $APP.cljs.core.chunk_first($G__45389_seq__45175_45386__$1$$), $G__45388$$ = $APP.cljs.core.chunk_rest($G__45389_seq__45175_45386__$1$$);
                $G__45389_seq__45175_45386__$1$$ = $c__5548__auto___45387$$;
                var $G__45390$$ = $APP.cljs.core.count($c__5548__auto___45387$$);
                $seq__45175_45376$$ = $G__45388$$;
                $_STAR_triples_STAR__temp_val__45168_chunk__45176_45377$$ = $G__45389_seq__45175_45386__$1$$;
                $_STAR_top_level_entities_STAR__temp_val__45169_count__45177_45378$$ = $G__45390$$;
              } else {
                var $pvs_45392__$1$$ = $APP.cljs.core.first($G__45389_seq__45175_45386__$1$$);
                asami.entities.writer.property_vals($node_ref$$, $pvs_45392__$1$$);
                $seq__45175_45376$$ = $APP.cljs.core.next($G__45389_seq__45175_45386__$1$$);
                $_STAR_triples_STAR__temp_val__45168_chunk__45176_45377$$ = null;
                $_STAR_top_level_entities_STAR__temp_val__45169_count__45177_45378$$ = 0;
              }
              $i__45178_45379$$ = 0;
            } else {
              break;
            }
          }
        }
        return asami.entities.writer.backtrack_unlink_top_entities($APP.cljs.core.deref(asami.entities.writer._STAR_top_level_entities_STAR_), $APP.cljs.core.deref(asami.entities.writer._STAR_triples_STAR_));
      } finally {
        asami.entities.writer._STAR_current_entity_STAR_ = $_STAR_current_entity_STAR__orig_val__45167$$, asami.entities.writer._STAR_top_level_entities_STAR_ = $_STAR_top_level_entities_STAR__orig_val__45166$$, asami.entities.writer._STAR_triples_STAR_ = $_STAR_triples_STAR__orig_val__45165$$;
      }
    }();
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$triples_to_add$$, $triples_to_remove$$], null);
  } finally {
    asami.entities.writer._STAR_id_map_STAR_ = $_STAR_id_map_STAR__orig_val__45154$$, asami.entities.writer._STAR_current_graph_STAR_ = $_STAR_current_graph_STAR__orig_val__45153$$;
  }
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.writer.entity_update__GT_triples), $APP.schema.core.__GT_FnSchema(output_schema45143_45352, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45144_45353], null)));
asami.entities.format = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$206_argseq__5756__auto__$$ = [], $len__5749__auto___45516$$ = arguments.length, $i__5750__auto___45521$$ = 0;;) {
    if ($i__5750__auto___45521$$ < $len__5749__auto___45516$$) {
      $args__5755__auto__$jscomp$206_argseq__5756__auto__$$.push(arguments[$i__5750__auto___45521$$]), $i__5750__auto___45521$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$206_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$206_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$206_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return asami.entities.format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$206_argseq__5756__auto__$$);
};
asami.entities.format.cljs$core$IFn$_invoke$arity$variadic = function($s$$, $args$$) {
  return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.str, $APP.cljs.core.interleave.cljs$core$IFn$_invoke$arity$2($APP.clojure.string.split.cljs$core$IFn$_invoke$arity$2($s$$, /%[sd]/), $args$$));
};
asami.entities.format.cljs$lang$maxFixedArity = 1;
asami.entities.format.cljs$lang$applyTo = function($seq45309_seq45309__$1$$) {
  var $G__45310$$ = $APP.cljs.core.first($seq45309_seq45309__$1$$);
  $seq45309_seq45309__$1$$ = $APP.cljs.core.next($seq45309_seq45309__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__45310$$, $seq45309_seq45309__$1$$);
};
asami.entities.annotated_attribute_QMARK_ = function($c$$, $a$$) {
  var $and__5023__auto__$$ = $APP.cljs.core.keyword.cljs$core$IFn$_invoke$arity$1($a$$);
  return $APP.cljs.core.truth_($and__5023__auto__$$) ? $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($c$$, $APP.cljs.core.last($APP.cljs.core.name($a$$))) : $and__5023__auto__$$;
};
asami.entities.update_attribute_QMARK_ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2(asami.entities.annotated_attribute_QMARK_, "'");
asami.entities.append_attribute_QMARK_ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2(asami.entities.annotated_attribute_QMARK_, "+");
asami.entities.normalize_attribute = function($a$$) {
  if ($a$$ instanceof $APP.cljs.core.Keyword) {
    var $n$$ = $APP.cljs.core.name($a$$);
    return $APP.cljs.core.keyword.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.namespace($a$$), $APP.cljs.core.subs.cljs$core$IFn$_invoke$arity$3($n$$, 0, $n$$.length - 1));
  }
  return $a$$;
};
var output_schema45348_45532 = $APP.schema.core.Any, input_schema45349_45533 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.schema.core.Any]), $APP.cljs.core.with_meta($APP.cljs$cst$177$obj, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2204$s_SLASH_Any, cljs$cst$2204$s_SLASH_Any], 
null)], null)))], null), ret__35121__auto___45534 = asami.entities.contains_updates_QMARK_ = function($obj$$) {
  var $obj_keys_or__5025__auto____$1$$ = $APP.cljs.core.keys($obj$$), $or__5025__auto__$$ = $APP.cljs.core.some(asami.entities.update_attribute_QMARK_, $obj_keys_or__5025__auto____$1$$);
  if ($APP.cljs.core.truth_($or__5025__auto__$$)) {
    return $or__5025__auto__$$;
  }
  $obj_keys_or__5025__auto____$1$$ = $APP.cljs.core.some(asami.entities.append_attribute_QMARK_, $obj_keys_or__5025__auto____$1$$);
  return $APP.cljs.core.truth_($obj_keys_or__5025__auto____$1$$) ? $obj_keys_or__5025__auto____$1$$ : $APP.cljs.core.some(function($p1__45347_SHARP_$$) {
    var $and__5023__auto__$$ = $APP.cljs.core.map_QMARK_($p1__45347_SHARP_$$);
    return $and__5023__auto__$$ ? asami.entities.contains_updates_QMARK_.cljs$core$IFn$_invoke$arity$1 ? asami.entities.contains_updates_QMARK_.cljs$core$IFn$_invoke$arity$1($p1__45347_SHARP_$$) : asami.entities.contains_updates_QMARK_.call(null, $p1__45347_SHARP_$$) : $and__5023__auto__$$;
  }, $APP.cljs.core.vals($obj$$));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.contains_updates_QMARK_), $APP.schema.core.__GT_FnSchema(output_schema45348_45532, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45349_45533], null)));
var output_schema45372_45535 = $APP.schema.core.maybe($APP.schema.core.Num), input_schema45373_45536 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.maybe($APP.schema.core.Num), $APP.cljs.core.with_meta($APP.cljs$cst$2187$limit, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, cljs$cst$2302$s_SLASH_Num)], null))), $APP.schema.core.one($APP.schema.core.Num, 
$APP.cljs.core.with_meta($APP.cljs$cst$2483$n, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2302$s_SLASH_Num], null)))], null), ret__35121__auto___45537 = asami.entities.minus = function($limit$$, $n$$) {
  return $APP.cljs.core.truth_($limit$$) ? $limit$$ - $n$$ : null;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.minus), $APP.schema.core.__GT_FnSchema(output_schema45372_45535, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45373_45536], null)));
var output_schema45399_45542 = new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.writer.Triple], null), "New triples"), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.writer.Triple], null), "Retractions"), $APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, 
$APP.schema.core.Any]), "New list of ID mappings"), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$APP.schema.core.Any]), "Running total set of top-level IDs")], null), input_schema45400_45543 = new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.entities.general.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], 
null))), $APP.schema.core.one(asami.entities.general.EntityMap, cljs$cst$2328$arg1), $APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, $APP.schema.core.Any]), $APP.cljs.core.with_meta(cljs$cst$2484$existing_ids, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2204$s_SLASH_Any, cljs$cst$2204$s_SLASH_Any], null)], null))), $APP.schema.core.one($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$APP.schema.core.Any]), 
$APP.cljs.core.with_meta(cljs$cst$2485$top_ids, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2204$s_SLASH_Any, "null"], null), null)], null))), $APP.schema.core.one($APP.schema.core.maybe($APP.schema.core.Num), $APP.cljs.core.with_meta($APP.cljs$cst$2187$limit, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, 
cljs$cst$2302$s_SLASH_Num)], null)))], null), ret__35121__auto___45547 = asami.entities.entity_triples = function($graph$$, $p__45409_removals$$, $existing_ids_ids$$, $top_ids_triples$$, $limit$$) {
  var $map__45410__$1$$ = $APP.cljs.core.__destructure_map($p__45409_removals$$), $id$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45410__$1$$, $APP.cljs$cst$2432$db_SLASH_id), $ident$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45410__$1$$, $APP.cljs$cst$2374$db_SLASH_ident), $ident2$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45410__$1$$, $APP.cljs$cst$396$id), $additions_vec__45411$$ = $APP.cljs.core.truth_(asami.entities.contains_updates_QMARK_($map__45410__$1$$)) ? 
  function() {
    if (!$APP.cljs.core.truth_($APP.cljs.core.truth_($id$$) ? $id$$ : $APP.cljs.core.truth_($ident$$) ? $ident$$ : $ident2$$)) {
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Nodes to be updated must be identified with :db/id or :db/ident", $map__45410__$1$$);
    }
    var $node_ref$jscomp$4_removals$$ = $APP.cljs.core.truth_($id$$) ? function() {
      var $and__5023__auto__$$ = $APP.cljs.core.seq(asami.graph.resolve_triple($graph$$, $id$$, $APP.cljs$cst$2244$_QMARK_a, cljs$cst$2245$_QMARK_v));
      return $and__5023__auto__$$ ? $id$$ : $and__5023__auto__$$;
    }() : $APP.cljs.core.truth_($ident$$) ? $APP.cljs.core.ffirst(asami.graph.resolve_triple($graph$$, $APP.cljs$cst$2486$_QMARK_r, $APP.cljs$cst$2374$db_SLASH_ident, $ident$$)) : $APP.cljs.core.truth_($ident2$$) ? $APP.cljs.core.ffirst(asami.graph.resolve_triple($graph$$, $APP.cljs$cst$2486$_QMARK_r, $APP.cljs$cst$396$id, $ident2$$)) : null;
    if (!$APP.cljs.core.truth_($node_ref$jscomp$4_removals$$)) {
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Cannot update a non-existent node", $APP.cljs.core.select_keys($map__45410__$1$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2432$db_SLASH_id, $APP.cljs$cst$2374$db_SLASH_ident, $APP.cljs$cst$396$id], null)));
    }
    var $append_attributes_new_obj$jscomp$2_obj_keys$$ = $APP.cljs.core.keys($map__45410__$1$$), $update_attributes$$ = $APP.cljs.core.set($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(asami.entities.update_attribute_QMARK_, $append_attributes_new_obj$jscomp$2_obj_keys$$));
    $append_attributes_new_obj$jscomp$2_obj_keys$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(asami.entities.append_attribute_QMARK_, $append_attributes_new_obj$jscomp$2_obj_keys$$);
    var $attribute_map$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($a$$) {
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$a$$, asami.entities.normalize_attribute($a$$)], null);
    }, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($update_attributes$$, $append_attributes_new_obj$jscomp$2_obj_keys$$))), $append_triples_clean_obj$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.keep.cljs$core$IFn$_invoke$arity$2(function($p__45426$$) {
      var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45426$$, 0, null), $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45426$$, 1, null), $temp__5823__auto__$$ = $attribute_map$$.cljs$core$IFn$_invoke$arity$1 ? $attribute_map$$.cljs$core$IFn$_invoke$arity$1($k$$) : $attribute_map$$.call(null, $k$$);
      return $APP.cljs.core.truth_($temp__5823__auto__$$) ? $APP.cljs.core.truth_($update_attributes$$.cljs$core$IFn$_invoke$arity$1 ? $update_attributes$$.cljs$core$IFn$_invoke$arity$1($k$$) : $update_attributes$$.call(null, $k$$)) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$temp__5823__auto__$$, $v$$], null) : null : $p__45426$$;
    }, $map__45410__$1$$)), $attr_heads_entity_av_pairs$$ = asami.graph.resolve_triple($graph$$, $node_ref$jscomp$4_removals$$, $APP.cljs$cst$2244$_QMARK_a, cljs$cst$2245$_QMARK_v), $append_attrs_remaining_attrs_removal_pairs_update_attrs$$ = $APP.cljs.core.set($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($attribute_map$$, $update_attributes$$));
    $append_attrs_remaining_attrs_removal_pairs_update_attrs$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($append_attrs_remaining_attrs_removal_pairs_update_attrs$$, $APP.cljs.core.first), $attr_heads_entity_av_pairs$$);
    $node_ref$jscomp$4_removals$$ = $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$3(asami.entities.writer.existing_triples, $graph$$, $node_ref$jscomp$4_removals$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$append_attrs_remaining_attrs_removal_pairs_update_attrs$$], 0));
    $append_attrs_remaining_attrs_removal_pairs_update_attrs$$ = $APP.cljs.core.set($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($attribute_map$$, $append_attributes_new_obj$jscomp$2_obj_keys$$));
    $attr_heads_entity_av_pairs$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function($p1__45397_SHARP_$$) {
      return $APP.cljs.core.seq(asami.graph.resolve_triple($graph$$, $APP.cljs.core.second($p1__45397_SHARP_$$), cljs$cst$2237$a_SLASH_first, cljs$cst$2245$_QMARK_v));
    }, $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($append_attrs_remaining_attrs_removal_pairs_update_attrs$$, $APP.cljs.core.first), $attr_heads_entity_av_pairs$$));
    $append_attrs_remaining_attrs_removal_pairs_update_attrs$$ = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($attrs$$, $p__45435$$) {
      var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45435$$, 0, null);
      $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__45435$$, 1, null);
      return $APP.cljs.core.disj.cljs$core$IFn$_invoke$arity$2($attrs$$, $k$$);
    }, $append_attrs_remaining_attrs_removal_pairs_update_attrs$$, $attr_heads_entity_av_pairs$$);
    var $append__GT_annotate$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($a$$) {
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$attribute_map$$.cljs$core$IFn$_invoke$arity$1 ? $attribute_map$$.cljs$core$IFn$_invoke$arity$1($a$$) : $attribute_map$$.call(null, $a$$), $a$$], null);
    }, $append_attributes_new_obj$jscomp$2_obj_keys$$));
    $append_attributes_new_obj$jscomp$2_obj_keys$$ = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($o$$, $a$$) {
      var $JSCompiler_temp_const$$ = $APP.cljs.core.assoc, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$1$$ = $APP.cljs.core.PersistentVector, $JSCompiler_temp_const$jscomp$2$$ = $APP.cljs.core.PersistentVector.EMPTY_NODE;
      var $G__45443$jscomp$inline_5032_JSCompiler_inline_result$$ = $append__GT_annotate$$.cljs$core$IFn$_invoke$arity$1 ? $append__GT_annotate$$.cljs$core$IFn$_invoke$arity$1($a$$) : $append__GT_annotate$$.call(null, $a$$);
      $G__45443$jscomp$inline_5032_JSCompiler_inline_result$$ = $map__45410__$1$$.cljs$core$IFn$_invoke$arity$1 ? $map__45410__$1$$.cljs$core$IFn$_invoke$arity$1($G__45443$jscomp$inline_5032_JSCompiler_inline_result$$) : $map__45410__$1$$.call(null, $G__45443$jscomp$inline_5032_JSCompiler_inline_result$$);
      return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $o$$, $a$$, new $JSCompiler_temp_const$jscomp$1$$(null, 1, 5, $JSCompiler_temp_const$jscomp$2$$, [$G__45443$jscomp$inline_5032_JSCompiler_inline_result$$], null));
    }, $append_triples_clean_obj$$, $append_attrs_remaining_attrs_removal_pairs_update_attrs$$);
    $append_triples_clean_obj$$ = $APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function($head$$) {
      var $G__45456$jscomp$inline_5034_attr$jscomp$6_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($head$$, 0, null);
      $head$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($head$$, 1, null);
      $G__45456$jscomp$inline_5034_attr$jscomp$6_v$$ = $append__GT_annotate$$.cljs$core$IFn$_invoke$arity$1 ? $append__GT_annotate$$.cljs$core$IFn$_invoke$arity$1($G__45456$jscomp$inline_5034_attr$jscomp$6_v$$) : $append__GT_annotate$$.call(null, $G__45456$jscomp$inline_5034_attr$jscomp$6_v$$);
      $G__45456$jscomp$inline_5034_attr$jscomp$6_v$$ = $map__45410__$1$$.cljs$core$IFn$_invoke$arity$1 ? $map__45410__$1$$.cljs$core$IFn$_invoke$arity$1($G__45456$jscomp$inline_5034_attr$jscomp$6_v$$) : $map__45410__$1$$.call(null, $G__45456$jscomp$inline_5034_attr$jscomp$6_v$$);
      var $new_node$$ = zuko.node.new_node($graph$$), $JSCompiler_temp_const$$ = $APP.cljs.core.PersistentVector, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.PersistentVector.EMPTY_NODE, $JSCompiler_temp_const$jscomp$1$$ = $APP.cljs.core.PersistentVector, $JSCompiler_temp_const$jscomp$2$$ = $APP.cljs.core.PersistentVector.EMPTY_NODE, $JSCompiler_inline_result$jscomp$9329_node$$;
      a: {
        for ($JSCompiler_inline_result$jscomp$9329_node$$ = $head$$;;) {
          var $temp__5823__auto__$$ = $APP.cljs.core.ffirst(asami.graph.resolve_triple($graph$$, $JSCompiler_inline_result$jscomp$9329_node$$, cljs$cst$2436$a_SLASH_rest, $APP.cljs$cst$2486$_QMARK_r));
          if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
            $JSCompiler_inline_result$jscomp$9329_node$$ = $temp__5823__auto__$$;
          } else {
            break a;
          }
        }
        $JSCompiler_inline_result$jscomp$9329_node$$ = void 0;
      }
      return new $JSCompiler_temp_const$$(null, 3, 5, $JSCompiler_temp_const$jscomp$0$$, [new $JSCompiler_temp_const$jscomp$1$$(null, 3, 5, $JSCompiler_temp_const$jscomp$2$$, [$JSCompiler_inline_result$jscomp$9329_node$$, cljs$cst$2436$a_SLASH_rest, $new_node$$], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$new_node$$, cljs$cst$2237$a_SLASH_first, $G__45456$jscomp$inline_5034_attr$jscomp$6_v$$], null), new $APP.cljs.core.PersistentVector(null, 
      3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$head$$, cljs$cst$2238$a_SLASH_contains, $G__45456$jscomp$inline_5034_attr$jscomp$6_v$$], null)], null);
    }, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$attr_heads_entity_av_pairs$$], 0));
    if ($APP.cljs.core.truth_($APP.cljs.core.truth_($limit$$) ? $APP.cljs.core.count($append_triples_clean_obj$$) > $limit$$ : $limit$$)) {
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Limit reached", new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2473$overflow, !0], null));
    }
    return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$append_attributes_new_obj$jscomp$2_obj_keys$$, $node_ref$jscomp$4_removals$$, $append_triples_clean_obj$$], null);
  }() : new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$map__45410__$1$$, null, null], null), $new_obj$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($additions_vec__45411$$, 0, null);
  $p__45409_removals$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($additions_vec__45411$$, 1, null);
  $additions_vec__45411$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($additions_vec__45411$$, 2, null);
  var $new_top_ids_vec__45414$$ = asami.entities.writer.ident_map__GT_triples.cljs$core$IFn$_invoke$arity$5($graph$$, $new_obj$$, $existing_ids_ids$$, $top_ids_triples$$, asami.entities.minus($limit$$, $APP.cljs.core.count($additions_vec__45411$$)));
  $top_ids_triples$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($new_top_ids_vec__45414$$, 0, null);
  $existing_ids_ids$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($new_top_ids_vec__45414$$, 1, null);
  $new_top_ids_vec__45414$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($new_top_ids_vec__45414$$, 2, null);
  $new_obj$$ = $APP.cljs.core.seq($p__45409_removals$$) || $APP.cljs.core.seq($additions_vec__45411$$) || $map__45410__$1$$ !== $new_obj$$ ? $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function($p1__45398_SHARP_$$) {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$2377$a_SLASH_entity, $APP.cljs.core.second($p1__45398_SHARP_$$));
  }, $top_ids_triples$$) : $top_ids_triples$$;
  return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($new_obj$$, $additions_vec__45411$$), $p__45409_removals$$, $existing_ids_ids$$, $new_top_ids_vec__45414$$], null);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.entity_triples), $APP.schema.core.__GT_FnSchema(output_schema45399_45542, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45400_45543], null)));
asami.entities.vec_rest = function($s$$) {
  return $APP.cljs.core.vec($APP.cljs.core.rest($s$$));
};
asami.entities.temp_id_QMARK_ = function($i$$) {
  return typeof $i$$ === "number" && $i$$ < 0;
};
asami.entities.resolve_lookup_refs = function($graph$jscomp$89_or__5025__auto__$$, $i$$) {
  var $and__5023__auto__$$ = asami.entities.writer.lookup_ref_QMARK_($i$$);
  $graph$jscomp$89_or__5025__auto__$$ = $and__5023__auto__$$ ? $APP.cljs.core.ffirst(asami.graph.resolve_triple($graph$jscomp$89_or__5025__auto__$$, $APP.cljs$cst$2486$_QMARK_r, $APP.cljs.core.first($i$$), $APP.cljs.core.second($i$$))) : $and__5023__auto__$$;
  return $APP.cljs.core.truth_($graph$jscomp$89_or__5025__auto__$$) ? $graph$jscomp$89_or__5025__auto__$$ : $i$$;
};
var output_schema45471_45590 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.writer.Triple], null), "Data to be asserted"), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [asami.entities.writer.Triple], null), "Data to be retracted"), $APP.schema.core.one($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.Any, 
$APP.schema.core.Any]), "ID map of created objects")], null), input_schema45473_45591 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.graph.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2487$gr_SLASH_GraphType], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$380$data, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2204$s_SLASH_Any], null)], null)))], null), input_schema45476_45592 = new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.graph.GraphType, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2487$gr_SLASH_GraphType], null))), $APP.schema.core.one(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.cljs.core.with_meta($APP.cljs$cst$380$data, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2204$s_SLASH_Any], 
null)], null))), $APP.schema.core.one($APP.schema.core.maybe($APP.schema.core.Num), $APP.cljs.core.with_meta($APP.cljs$cst$2187$limit, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2307$s_SLASH_maybe, cljs$cst$2302$s_SLASH_Num)], null)))], null), ret__35121__auto___45593 = function() {
  asami.entities.build_triples = function($var_args$$) {
    switch(arguments.length) {
      case 2:
        return asami.entities.build_triples.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      case 3:
        return asami.entities.build_triples.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  asami.entities.build_triples.cljs$core$IFn$_invoke$arity$2 = function($graph$$, $data$$) {
    return asami.entities.build_triples.cljs$core$IFn$_invoke$arity$3($graph$$, $data$$, null);
  };
  asami.entities.build_triples.cljs$core$IFn$_invoke$arity$3 = function($graph$$, $data$jscomp$130_retract_stmts_retractions$$, $limit$$) {
    var $id_map$$ = zuko.util.divide_SINGLEQUOTE_(function($p1__45464_SHARP_$$) {
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2194$db_SLASH_retract, $APP.cljs.core.first($p1__45464_SHARP_$$));
    }, $data$jscomp$130_retract_stmts_retractions$$);
    $data$jscomp$130_retract_stmts_retractions$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($id_map$$, 0, null);
    $id_map$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($id_map$$, 1, null);
    var $ref__GT_id$$ = $APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2(asami.entities.resolve_lookup_refs, $graph$$);
    $data$jscomp$130_retract_stmts_retractions$$ = $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.partial.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.mapv, $ref__GT_id$$), $APP.cljs.core.rest), $data$jscomp$130_retract_stmts_retractions$$);
    var $top_level_ids$$ = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$, $obj$$) {
      var $acc$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$, 0, null), $racc$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$, 1, null), $ids$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$, 2, null), $top_ids$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$, 
      3, null);
      if ($APP.cljs.core.truth_($APP.cljs.core.truth_($limit$$) ? $APP.cljs.core.count($acc$$) > $limit$$ : $limit$$)) {
        return $APP.cljs.core.reduced($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$);
      }
      if ($APP.cljs.core.map_QMARK_($obj$$)) {
        try {
          var $e$$ = asami.entities.entity_triples($graph$$, $obj$$, $ids$$, $top_ids$$, asami.entities.minus($limit$$, $APP.cljs.core.count($acc$$))), $temp__5823__auto__$jscomp$194_triples$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($e$$, 0, null), $rtriples$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($e$$, 1, null), $new_ids$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($e$$, 2, null), $new_top_ids$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($e$$, 3, null);
          return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($acc$$, $temp__5823__auto__$jscomp$194_triples$$), $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($racc$$, $rtriples$$), $new_ids$$, $new_top_ids$$], null);
        } catch ($e45501$$) {
          $e$$ = $e45501$$;
          $temp__5823__auto__$jscomp$194_triples$$ = cljs$cst$2473$overflow.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.ex_data($e$$));
          if ($APP.cljs.core.truth_($temp__5823__auto__$jscomp$194_triples$$)) {
            return $APP.cljs.core.reduced($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$);
          }
          throw $e$$;
        }
      } else {
        if ($APP.cljs.core.seqable_QMARK_($obj$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(4, $APP.cljs.core.count($obj$$)) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2193$db_SLASH_add, $APP.cljs.core.first($obj$$))) {
          var $entity$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($obj$$, 1), $attribute$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($obj$$, 2);
          $or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$ = function() {
            var $temp__5825__auto__$$ = function() {
              var $and__5023__auto__$jscomp$200_and__5023__auto____$1$$ = asami.entities.writer.lookup_ref_QMARK_($entity$$);
              return $and__5023__auto__$jscomp$200_and__5023__auto____$1$$ ? ($and__5023__auto__$jscomp$200_and__5023__auto____$1$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.first($entity$$), $attribute$$)) ? $entity$$ : $and__5023__auto__$jscomp$200_and__5023__auto____$1$$ : $and__5023__auto__$jscomp$200_and__5023__auto____$1$$;
            }();
            if ($APP.cljs.core.truth_($temp__5825__auto__$$)) {
              var $new_id$$ = function() {
                var $or__5025__auto__$$ = $ids$$.cljs$core$IFn$_invoke$arity$1 ? $ids$$.cljs$core$IFn$_invoke$arity$1($temp__5825__auto__$$) : $ids$$.call(null, $temp__5825__auto__$$);
                return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : zuko.node.new_node($graph$$);
              }();
              return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($acc$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(asami.entities.vec_rest($obj$$), 0, $new_id$$)), $racc$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($ids$$, $temp__5825__auto__$$, $new_id$$), $top_ids$$], null);
            }
            return null;
          }();
          if ($APP.cljs.core.truth_($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$)) {
            return $or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$;
          }
          $or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($attribute$$, $APP.cljs$cst$2432$db_SLASH_id) ? function() {
            var $id$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($obj$$, 3);
            if (asami.entities.temp_id_QMARK_($id$$)) {
              if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($entity$$, $id$$)) {
                var $new_id$$ = function() {
                  var $or__5025__auto____$1$$ = $ids$$.cljs$core$IFn$_invoke$arity$1 ? $ids$$.cljs$core$IFn$_invoke$arity$1($id$$) : $ids$$.call(null, $id$$);
                  return $APP.cljs.core.truth_($or__5025__auto____$1$$) ? $or__5025__auto____$1$$ : zuko.node.new_node($graph$$);
                }(), $eid$jscomp$2_triple$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(asami.entities.vec_rest($obj$$), 0, $new_id$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([2, $new_id$$], 0)), $new_ids$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($ids$$, $id$$, $new_id$$);
              } else {
                if (asami.entities.temp_id_QMARK_($entity$$)) {
                  $eid$jscomp$2_triple$$ = $ids$$.cljs$core$IFn$_invoke$arity$1 ? $ids$$.cljs$core$IFn$_invoke$arity$1($entity$$) : $ids$$.call(null, $entity$$);
                  $new_ids$$ = $ids$$.cljs$core$IFn$_invoke$arity$1 ? $ids$$.cljs$core$IFn$_invoke$arity$1($id$$) : $ids$$.call(null, $id$$);
                  if ($APP.cljs.core.truth_($APP.cljs.core.truth_($eid$jscomp$2_triple$$) ? $APP.cljs.core.truth_($new_ids$$) ? $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2($eid$jscomp$2_triple$$, $new_ids$$) : $new_ids$$ : $eid$jscomp$2_triple$$)) {
                    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(asami.entities.format.cljs$core$IFn$_invoke$arity$variadic("Entity %s being identified as two separate existing entities [%s] [%s]", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($entity$$), $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($eid$jscomp$2_triple$$), $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($new_ids$$)], 0)), new $APP.cljs.core.PersistentArrayMap(null, 
                    3, [$APP.cljs$cst$2488$entity, $entity$$, cljs$cst$2489$tmp1, $eid$jscomp$2_triple$$, cljs$cst$2490$tmp2, $new_ids$$], null));
                  }
                  $new_id$$ = $APP.cljs.core.truth_($eid$jscomp$2_triple$$) ? $eid$jscomp$2_triple$$ : $APP.cljs.core.truth_($new_ids$$) ? $new_ids$$ : zuko.node.new_node($graph$$);
                  $new_ids$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic($ids$$, $entity$$, $new_id$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$id$$, $new_id$$], 0));
                  $eid$jscomp$2_triple$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(asami.entities.vec_rest($obj$$), 0, $new_id$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([2, $new_id$$], 0));
                } else {
                  $new_id$$ = $ids$$.cljs$core$IFn$_invoke$arity$1 ? $ids$$.cljs$core$IFn$_invoke$arity$1($id$$) : $ids$$.call(null, $id$$);
                  if ($APP.cljs.core.truth_(function() {
                    var $and__5023__auto__$$ = $new_id$$;
                    return $APP.cljs.core.truth_($and__5023__auto__$$) ? $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2($entity$$, $new_id$$) : $and__5023__auto__$$;
                  }())) {
                    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(asami.entities.format.cljs$core$IFn$_invoke$arity$variadic("Entity %s being identified as another entity: %s", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($entity$$), $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($new_id$$)], 0)), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2488$entity, $entity$$, cljs$cst$2491$tmp, $new_id$$], null));
                  }
                  $new_ids$$ = $APP.cljs.core.truth_($new_id$$) ? $ids$$ : $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($ids$$, $id$$, $entity$$);
                  $eid$jscomp$2_triple$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(asami.entities.vec_rest($obj$$), 2, $entity$$);
                }
              }
              return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($acc$$, $eid$jscomp$2_triple$$), $racc$$, $new_ids$$, $top_ids$$], null);
            }
            return null;
          }() : null;
          if ($APP.cljs.core.truth_($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$)) {
            return $or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$;
          }
          $or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$ = asami.entities.temp_id_QMARK_($entity$$) ? function() {
            var $new_id$jscomp$3_temp__5823__auto__$$ = $ids$$.cljs$core$IFn$_invoke$arity$1 ? $ids$$.cljs$core$IFn$_invoke$arity$1($entity$$) : $ids$$.call(null, $entity$$);
            if ($APP.cljs.core.truth_($new_id$jscomp$3_temp__5823__auto__$$)) {
              return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$new_id$jscomp$3_temp__5823__auto__$$, $ids$$], null);
            }
            $new_id$jscomp$3_temp__5823__auto__$$ = zuko.node.new_node($graph$$);
            return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$new_id$jscomp$3_temp__5823__auto__$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($ids$$, $entity$$, $new_id$jscomp$3_temp__5823__auto__$$)], null);
          }() : new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$entity$$, $ids$$], null);
          $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$, 0, null);
          $new_ids$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$, 1, null);
          $or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$ = $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function($p1__45470_SHARP_$$) {
            var $or__5025__auto____$2$$ = $new_ids$$.cljs$core$IFn$_invoke$arity$1 ? $new_ids$$.cljs$core$IFn$_invoke$arity$1($p1__45470_SHARP_$$) : $new_ids$$.call(null, $p1__45470_SHARP_$$);
            return $APP.cljs.core.truth_($or__5025__auto____$2$$) ? $or__5025__auto____$2$$ : $ref__GT_id$$($p1__45470_SHARP_$$);
          }, $APP.cljs.core.rest($obj$$));
          return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($acc$$, $or__5025__auto__$jscomp$374_or__5025__auto____$1$jscomp$67_p__45493_triple$$), $racc$$, $new_ids$$, $top_ids$$], null);
        }
        throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Bad data in transaction: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($obj$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$142$data, $obj$$], null));
      }
    }, new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY, $data$jscomp$130_retract_stmts_retractions$$, $APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.PersistentHashSet.EMPTY], null), $id_map$$), $triples$jscomp$3_triples__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($top_level_ids$$, 0, null);
    $data$jscomp$130_retract_stmts_retractions$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($top_level_ids$$, 1, null);
    $id_map$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($top_level_ids$$, 2, null);
    $top_level_ids$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($top_level_ids$$, 3, null);
    $triples$jscomp$3_triples__$1$$ = asami.entities.writer.backtrack_unlink_top_entities($top_level_ids$$, $triples$jscomp$3_triples__$1$$);
    return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$triples$jscomp$3_triples__$1$$, $data$jscomp$130_retract_stmts_retractions$$, $id_map$$], null);
  };
  asami.entities.build_triples.cljs$lang$maxFixedArity = 3;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.entities.build_triples), $APP.schema.core.make_fn_schema(output_schema45471_45590, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45473_45591, input_schema45476_45592], null)));
asami.core = {};
asami.core.connections = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY);
asami.core.shutdown = function() {
  for (var $c__5548__auto__$jscomp$21_seq__45926_temp__5825__auto__$$ = $APP.cljs.core.seq($APP.cljs.core.vals($APP.cljs.core.deref(asami.core.connections))), $G__46081_chunk__45927_seq__45926__$1$$ = null, $G__46080_count__45928$$ = 0, $i__45929$$ = 0;;) {
    if ($i__45929$$ < $G__46080_count__45928$$) {
      var $G__46082_connection$$ = $G__46081_chunk__45927_seq__45926__$1$$.cljs$core$IIndexed$_nth$arity$2(null, $i__45929$$);
      asami.storage.release($G__46082_connection$$);
      $APP.cljs.core.reset_BANG_(asami.core.connections, $APP.cljs.core.PersistentArrayMap.EMPTY);
      $i__45929$$ += 1;
    } else {
      if ($c__5548__auto__$jscomp$21_seq__45926_temp__5825__auto__$$ = $APP.cljs.core.seq($c__5548__auto__$jscomp$21_seq__45926_temp__5825__auto__$$)) {
        $G__46081_chunk__45927_seq__45926__$1$$ = $c__5548__auto__$jscomp$21_seq__45926_temp__5825__auto__$$, $APP.cljs.core.chunked_seq_QMARK_($G__46081_chunk__45927_seq__45926__$1$$) ? ($c__5548__auto__$jscomp$21_seq__45926_temp__5825__auto__$$ = $APP.cljs.core.chunk_first($G__46081_chunk__45927_seq__45926__$1$$), $G__46080_count__45928$$ = $APP.cljs.core.chunk_rest($G__46081_chunk__45927_seq__45926__$1$$), $G__46081_chunk__45927_seq__45926__$1$$ = $c__5548__auto__$jscomp$21_seq__45926_temp__5825__auto__$$, 
        $G__46082_connection$$ = $APP.cljs.core.count($c__5548__auto__$jscomp$21_seq__45926_temp__5825__auto__$$), $c__5548__auto__$jscomp$21_seq__45926_temp__5825__auto__$$ = $G__46080_count__45928$$, $G__46080_count__45928$$ = $G__46082_connection$$) : ($G__46082_connection$$ = $APP.cljs.core.first($G__46081_chunk__45927_seq__45926__$1$$), asami.storage.release($G__46082_connection$$), $APP.cljs.core.reset_BANG_(asami.core.connections, $APP.cljs.core.PersistentArrayMap.EMPTY), $c__5548__auto__$jscomp$21_seq__45926_temp__5825__auto__$$ = 
        $APP.cljs.core.next($G__46081_chunk__45927_seq__45926__$1$$), $G__46081_chunk__45927_seq__45926__$1$$ = null, $G__46080_count__45928$$ = 0), $i__45929$$ = 0;
      } else {
        return null;
      }
    }
  }
};
var output_schema45931_46088 = new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$139$type, $APP.schema.core.Str, $APP.cljs$cst$272$name, $APP.schema.core.Str], null), input_schema45932_46089 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, $APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2205$schema_DOT_core_SLASH_Any], 
null)))], null), ret__35121__auto___46090 = asami.core.parse_uri = function($db_type_uri$$) {
  if ($APP.cljs.core.map_QMARK_($db_type_uri$$)) {
    return $db_type_uri$$;
  }
  var $db_name_temp__5823__auto__$$ = $APP.cljs.core.re_find(/asami:([^:]+):\/\/(.+)/, $db_type_uri$$);
  if ($APP.cljs.core.truth_($db_name_temp__5823__auto__$$)) {
    return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($db_name_temp__5823__auto__$$, 0, null), $db_type_uri$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($db_name_temp__5823__auto__$$, 1, null), $db_name_temp__5823__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($db_name_temp__5823__auto__$$, 2, null), new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$139$type, $db_type_uri$$, $APP.cljs$cst$272$name, $db_name_temp__5823__auto__$$], null);
  }
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Invalid URI: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($db_type_uri$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2493$uri, $db_type_uri$$], null));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.core.parse_uri), $APP.schema.core.__GT_FnSchema(output_schema45931_46088, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45932_46089], null)));
asami.core.connection_for = function($uri$$) {
  var $map__45965_type$$ = asami.core.parse_uri($uri$$), $map__45965__$1_name$$ = $APP.cljs.core.__destructure_map($map__45965_type$$);
  $map__45965_type$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45965__$1_name$$, $APP.cljs$cst$139$type);
  $map__45965__$1_name$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45965__$1_name$$, $APP.cljs$cst$272$name);
  switch($map__45965_type$$) {
    case "mem":
      return asami.memory.new_connection($map__45965__$1_name$$, asami.memory.empty_graph);
    case "multi":
      return asami.memory.new_connection($map__45965__$1_name$$, asami.memory.empty_multi_graph);
    case "local":
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Local storage not available", new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1827$reason, $APP.cljs$cst$763$cljs], null));
    default:
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown graph URI schema", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($map__45965_type$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$2493$uri, $uri$$, $APP.cljs$cst$139$type, $map__45965_type$$, $APP.cljs$cst$272$name, $map__45965__$1_name$$], null));
  }
};
asami.core.db_exists_QMARK_ = function($uri$$) {
  var $map__45988_type$$ = asami.core.parse_uri($uri$$), $map__45988__$1_name$$ = $APP.cljs.core.__destructure_map($map__45988_type$$);
  $map__45988_type$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45988__$1_name$$, $APP.cljs$cst$139$type);
  $map__45988__$1_name$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__45988__$1_name$$, $APP.cljs$cst$272$name);
  switch($map__45988_type$$) {
    case "mem":
      return !1;
    case "multi":
      return !1;
    case "local":
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Local storage not available", new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1827$reason, $APP.cljs$cst$763$cljs], null));
    default:
      throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Unknown graph URI schema", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($map__45988_type$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$2493$uri, $uri$$, $APP.cljs$cst$139$type, $map__45988_type$$, $APP.cljs$cst$272$name, $map__45988__$1_name$$], null));
  }
};
var output_schema45990_46093 = $APP.schema.core.Bool, input_schema45991_46094 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Str, $APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null)))], null), ret__35121__auto___46095 = asami.core.create_database = function($uri$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.boolean$, $JSCompiler_temp_const$jscomp$1$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$2$$ = $JSCompiler_temp_const$jscomp$1$$.truth_;
  var $JSCompiler_inline_result$jscomp$900_fexpr__46000$$ = $APP.cljs.core.deref(asami.core.connections);
  $JSCompiler_inline_result$jscomp$900_fexpr__46000$$ = $JSCompiler_inline_result$jscomp$900_fexpr__46000$$.cljs$core$IFn$_invoke$arity$1 ? $JSCompiler_inline_result$jscomp$900_fexpr__46000$$.cljs$core$IFn$_invoke$arity$1($uri$$) : $JSCompiler_inline_result$jscomp$900_fexpr__46000$$.call(null, $uri$$);
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_temp_const$jscomp$2$$.call($JSCompiler_temp_const$jscomp$1$$, $JSCompiler_inline_result$jscomp$900_fexpr__46000$$) ? null : $APP.cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(asami.core.connections, $APP.cljs.core.assoc, $uri$$, asami.core.connection_for($uri$$)));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.core.create_database), $APP.schema.core.__GT_FnSchema(output_schema45990_46093, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema45991_46094], null)));
var output_schema46003_46096 = asami.storage.ConnectionType, input_schema46004_46097 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Str, $APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null)))], null), ret__35121__auto___46098 = asami.core.connect = function($uri$$) {
  var $fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$ = $APP.cljs.core.deref(asami.core.connections);
  $fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$ = $fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$1($uri$$) : $fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$.call(null, $uri$$);
  if ($APP.cljs.core.truth_($fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$)) {
    return $fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$;
  }
  asami.core.create_database($uri$$);
  $fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$ = $APP.cljs.core.deref(asami.core.connections);
  return $fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$1($uri$$) : $fexpr__46007$jscomp$inline_5042_fexpr__46008_temp__5823__auto__$$.call(null, $uri$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.core.connect), $APP.schema.core.__GT_FnSchema(output_schema46003_46096, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema46004_46097], null)));
var output_schema46012_46099 = $APP.schema.core.Bool, input_schema46013_46100 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Str, $APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null)))], null), ret__35121__auto___46101 = asami.core.delete_database = function($uri$$) {
  var $temp__5823__auto__$$ = function() {
    var $fexpr__46016$$ = $APP.cljs.core.deref(asami.core.connections);
    return $fexpr__46016$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__46016$$.cljs$core$IFn$_invoke$arity$1($uri$$) : $fexpr__46016$$.call(null, $uri$$);
  }();
  return $APP.cljs.core.truth_($temp__5823__auto__$$) ? ($APP.cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(asami.core.connections, $APP.cljs.core.dissoc, $uri$$), asami.storage.delete_database($temp__5823__auto__$$)) : $APP.cljs.core.boolean$($APP.cljs.core.truth_(asami.core.db_exists_QMARK_($uri$$)) ? function() {
    var $temp__5823__auto____$1$$ = asami.core.connection_for($uri$$);
    return $APP.cljs.core.truth_($temp__5823__auto____$1$$) ? asami.storage.delete_database($temp__5823__auto____$1$$) : null;
  }() : null);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.core.delete_database), $APP.schema.core.__GT_FnSchema(output_schema46012_46099, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema46013_46100], null)));
asami.core.StringOrConnection = $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4($APP.schema.core.schema_with_name($APP.schema.core.if$($APP.cljs.core.string_QMARK_, $APP.schema.core.Str, asami.storage.ConnectionType), cljs$cst$2494$StringOrConnection), $APP.cljs.core.assoc, $APP.cljs$cst$176$ns, $APP.cljs.core.with_meta(cljs$cst$2495$asami_DOT_core, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$256$doc, "A storage implementation over in-memory indexing. Includes full query engine.", 
cljs$cst$2496$author, "Paula Gearon"], null)));
var output_schema46017_46102 = $APP.schema.core.Any, input_schema46018_46103 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.core.StringOrConnection, $APP.cljs.core.with_meta($APP.cljs$cst$2464$conn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2494$StringOrConnection], null)))], null), ret__35121__auto___46104 = asami.core.release = function($conn$$) {
  if (typeof $conn$$ === "string") {
    var $temp__5825__auto__$$ = function() {
      var $fexpr__46021$$ = $APP.cljs.core.deref(asami.core.connections);
      return $fexpr__46021$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__46021$$.cljs$core$IFn$_invoke$arity$1($conn$$) : $fexpr__46021$$.call(null, $conn$$);
    }();
    return $APP.cljs.core.truth_($temp__5825__auto__$$) ? ($APP.cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(asami.core.connections, $APP.cljs.core.dissoc, $conn$$), asami.storage.release($temp__5825__auto__$$)) : null;
  }
  var $temp__5825__auto___46105$$ = asami.storage.get_url($conn$$);
  $APP.cljs.core.truth_($temp__5825__auto___46105$$) && ($APP.cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(asami.core.connections, $APP.cljs.core.dissoc, $temp__5825__auto___46105$$), $temp__5825__auto__$$ = function() {
    var $fexpr__46022$$ = $APP.cljs.core.deref(asami.core.connections);
    return $fexpr__46022$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__46022$$.cljs$core$IFn$_invoke$arity$1($temp__5825__auto___46105$$) : $fexpr__46022$$.call(null, $temp__5825__auto___46105$$);
  }(), $APP.cljs.core.truth_($temp__5825__auto__$$) && $temp__5825__auto__$$ !== $conn$$ && asami.storage.release($temp__5825__auto__$$));
  return asami.storage.release($conn$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.core.release), $APP.schema.core.__GT_FnSchema(output_schema46017_46102, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema46018_46103], null)));
var output_schema46023_46109 = $APP.schema.core.Any, input_schema46024_46110 = $APP.cljs.core.PersistentVector.EMPTY, ret__35121__auto___46111 = asami.core.get_database_names = function() {
  return $APP.cljs.core.keys($APP.cljs.core.deref(asami.core.connections));
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.core.get_database_names), $APP.schema.core.__GT_FnSchema(output_schema46023_46109, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema46024_46110], null)));
asami.core.Graphable = $APP.schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([asami.entities.general.GraphType, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2450$graph, asami.entities.general.GraphType], null)], 0));
asami.core.as_graph = function($d$$) {
  if ($d$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $d$$.asami$graph$Graph$ || ($d$$.cljs$lang$protocol_mask$partition$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_(asami.graph.Graph, $d$$)) : $APP.cljs.core.native_satisfies_QMARK_(asami.graph.Graph, $d$$)) {
    return $d$$;
  }
  var $g$$ = cljs$cst$2450$graph.cljs$core$IFn$_invoke$arity$1($d$$);
  return ($g$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $g$$.asami$graph$Graph$ || ($g$$.cljs$lang$protocol_mask$partition$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_(asami.graph.Graph, $g$$)) : $APP.cljs.core.native_satisfies_QMARK_(asami.graph.Graph, $g$$)) ? $g$$ : ($d$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $d$$.asami$storage$Database$ || ($d$$.cljs$lang$protocol_mask$partition$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Database, $d$$)) : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Database, 
  $d$$)) ? asami.storage.graph($d$$) : ($d$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $d$$.asami$storage$Connection$ || ($d$$.cljs$lang$protocol_mask$partition$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Connection, $d$$)) : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Connection, $d$$)) ? asami.storage.graph(asami.storage.db($d$$)) : $d$$;
};
var output_schema46031_46112 = asami.storage.ConnectionType, input_schema46032_46113 = new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.core.Graphable, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2497$Graphable], null)))], null), input_schema46035_46114 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.schema.core.one(asami.core.Graphable, $APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2497$Graphable], null))), $APP.schema.core.one($APP.schema.core.Str, $APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null)))], null), ret__35121__auto___46115 = function() {
  asami.core.as_connection = function($var_args$$) {
    switch(arguments.length) {
      case 1:
        return asami.core.as_connection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      case 2:
        return asami.core.as_connection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
  asami.core.as_connection.cljs$core$IFn$_invoke$arity$1 = function($graph$$) {
    return asami.core.as_connection.cljs$core$IFn$_invoke$arity$2($graph$$, $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("asami:mem://internal")));
  };
  asami.core.as_connection.cljs$core$IFn$_invoke$arity$2 = function($c$jscomp$270_graph$$, $uri$$) {
    var $map__46040_map__46040__$1_name$$ = asami.core.parse_uri($uri$$);
    $map__46040_map__46040__$1_name$$ = $APP.cljs.core.__destructure_map($map__46040_map__46040__$1_name$$);
    $map__46040_map__46040__$1_name$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__46040_map__46040__$1_name$$, $APP.cljs$cst$272$name);
    $c$jscomp$270_graph$$ = asami.memory.new_connection($map__46040_map__46040__$1_name$$, asami.core.as_graph($c$jscomp$270_graph$$));
    $APP.cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(asami.core.connections, $APP.cljs.core.assoc, $uri$$, $c$jscomp$270_graph$$);
    return $c$jscomp$270_graph$$;
  };
  asami.core.as_connection.cljs$lang$maxFixedArity = 2;
  return null;
}();
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.core.as_connection), $APP.schema.core.make_fn_schema(output_schema46031_46112, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema46032_46113, input_schema46035_46114], null)));
asami.core.check_attachment = function($connection$$) {
  if (!$APP.cljs.core.truth_(asami.storage.open_QMARK_($connection$$))) {
    throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Database closed", new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2498$open, !1], null));
  }
  var $url$$ = asami.storage.get_url($connection$$);
  var $c$jscomp$271_fexpr__46041$$ = $APP.cljs.core.deref(asami.core.connections);
  $c$jscomp$271_fexpr__46041$$ = $c$jscomp$271_fexpr__46041$$.cljs$core$IFn$_invoke$arity$1 ? $c$jscomp$271_fexpr__46041$$.cljs$core$IFn$_invoke$arity$1($url$$) : $c$jscomp$271_fexpr__46041$$.call(null, $url$$);
  if ($c$jscomp$271_fexpr__46041$$ == null) {
    return $APP.cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(asami.core.connections, $APP.cljs.core.assoc, $url$$, $connection$$), !1;
  }
  if ($c$jscomp$271_fexpr__46041$$ === $connection$$) {
    return null;
  }
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Updating a detached connection", new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2499$url, $url$$], null));
};
asami.core.db = asami.storage.db;
asami.core.as_of = asami.storage.as_of;
asami.core.as_of_t = asami.storage.as_of_t;
asami.core.as_of_time = asami.storage.as_of_time;
asami.core.since = asami.storage.since;
asami.core.since_t = asami.storage.since_t;
asami.core.graph = asami.storage.graph;
asami.core.now = asami.internal.now;
asami.core.instant = asami.internal.instant;
asami.core.instant_QMARK_ = asami.internal.instant_QMARK_;
asami.core.long_time = asami.internal.long_time;
asami.core.TransactData = $APP.schema.core.if$($APP.cljs.core.map_QMARK_, $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$APP.schema.core.optional_key($APP.cljs$cst$2500$tx_data), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null), $APP.schema.core.optional_key(cljs$cst$2501$tx_triples), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 
3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one($APP.schema.core.Any, "entity"), $APP.schema.core.one($APP.schema.core.Any, "attribute"), $APP.schema.core.one($APP.schema.core.Any, "value")], null)], null), $APP.schema.core.optional_key(cljs$cst$2502$executor), $APP.schema.core.Any, $APP.schema.core.optional_key(cljs$cst$2503$update_fn), $APP.schema.core.pred.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.fn_QMARK_), $APP.schema.core.optional_key(cljs$cst$2504$input_limit), 
$APP.schema.core.Num]), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.Any], null));
var output_schema46042_46121 = $APP.schema.core.Any, input_schema46043_46122 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.ConnectionType, cljs$cst$2210$arg0), $APP.schema.core.one(asami.core.TransactData, $APP.cljs.core.with_meta(cljs$cst$2505$tx_info, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2506$TransactData], null)))], null), ret__35121__auto___46123 = asami.core.transact_async = 
function($d$$, $tx_info$$) {
  var $map__46047__$1$$ = $APP.cljs.core.__destructure_map($d$$);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__46047__$1$$, $APP.cljs$cst$272$name);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__46047__$1$$, $APP.cljs$cst$2455$state);
  asami.core.check_attachment($map__46047__$1$$);
  $d$$ = $APP.cljs.core.map_QMARK_($tx_info$$) ? $tx_info$$ : $APP.cljs.core.PersistentArrayMap.EMPTY;
  $d$$ = $APP.cljs.core.__destructure_map($d$$);
  var $tx_data$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($d$$, $APP.cljs$cst$2500$tx_data), $tx_triples$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($d$$, cljs$cst$2501$tx_triples);
  $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($d$$, cljs$cst$2502$executor);
  var $update_fn$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($d$$, cljs$cst$2503$update_fn), $input_limit$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($d$$, cljs$cst$2504$input_limit), $op$$ = $APP.cljs.core.truth_($update_fn$$) ? function() {
    var $db_after$$ = asami.storage.transact_update($map__46047__$1$$, $update_fn$$), $db_before$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($db_after$$, 0, null);
    $db_after$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($db_after$$, 1, null);
    return new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2507$db_before, $db_before$$, $APP.cljs$cst$2508$db_after, $db_after$$], null);
  } : function() {
    asami.storage.db($map__46047__$1$$);
    var $seq_wrapper$$ = function($x$$) {
      return $APP.cljs.core.map_QMARK_($x$$) ? new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$x$$], null) : $x$$;
    }, $vtempids$$ = $APP.cljs.core.volatile_BANG_($APP.cljs.core.PersistentArrayMap.EMPTY), $generated_data$jscomp$3_triples$$ = $APP.cljs.core.volatile_BANG_(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.PersistentVector.EMPTY], null)), $db_after$$ = $APP.cljs.core.truth_($tx_triples$$) ? asami.storage.transact_data($map__46047__$1$$, $generated_data$jscomp$3_triples$$, $seq_wrapper$$($tx_triples$$), 
    null) : asami.storage.transact_data($map__46047__$1$$, $generated_data$jscomp$3_triples$$, function($graph$$) {
      var $JSCompiler_temp_const$jscomp$902_tempids$$ = asami.entities.build_triples, $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$902_tempids$$.cljs$core$IFn$_invoke$arity$3;
      var $JSCompiler_inline_result$$ = $APP.cljs.core.truth_($tx_data$$) ? $tx_data$$ : $tx_info$$;
      $graph$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$902_tempids$$, $graph$$, $seq_wrapper$$($JSCompiler_inline_result$$), $input_limit$$);
      $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($graph$$, 0, null);
      $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($graph$$, 1, null);
      $JSCompiler_temp_const$jscomp$902_tempids$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($graph$$, 2, null);
      $APP.cljs.core.vreset_BANG_($vtempids$$, $JSCompiler_temp_const$jscomp$902_tempids$$);
      return $graph$$;
    }), $db_before$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($db_after$$, 0, null);
    $db_after$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($db_after$$, 1, null);
    var $retracts$$ = $APP.cljs.core.deref($generated_data$jscomp$3_triples$$);
    $generated_data$jscomp$3_triples$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($retracts$$, 0, null);
    $retracts$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($retracts$$, 1, null);
    return new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$2507$db_before, $db_before$$, $APP.cljs$cst$2508$db_after, $db_after$$, $APP.cljs$cst$2500$tx_data, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($retracts$$, $generated_data$jscomp$3_triples$$), $APP.cljs$cst$2509$tempids, $APP.cljs.core.deref($vtempids$$)], null);
  };
  $d$$ = new $APP.cljs.core.Delay(function() {
    return $op$$();
  }, null);
  $APP.cljs.core.force($d$$);
  return $d$$;
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.core.transact_async), $APP.schema.core.__GT_FnSchema(output_schema46042_46121, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema46043_46122], null)));
var output_schema46061_46127 = $APP.schema.core.Any, input_schema46062_46128 = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.schema.core.one(asami.storage.ConnectionType, $APP.cljs.core.with_meta(cljs$cst$2458$connection, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2459$ConnectionType], null))), $APP.schema.core.one(asami.core.TransactData, $APP.cljs.core.with_meta(cljs$cst$2505$tx_info, new $APP.cljs.core.PersistentArrayMap(null, 
1, [$APP.cljs$cst$1410$schema, cljs$cst$2506$TransactData], null)))], null), ret__35121__auto___46132 = asami.core.transact = function($connection$$, $tx_info$$) {
  return asami.core.transact_async($connection$$, $tx_info$$);
};
$APP.schema.utils.declare_class_schema_BANG_($APP.schema.utils.fn_schema_bearer(asami.core.transact), $APP.schema.core.__GT_FnSchema(output_schema46061_46127, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [input_schema46062_46128], null)));
asami.core.graphs_of = function($inputs$$) {
  return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($d$$) {
    return ($d$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $d$$.asami$storage$Database$ || ($d$$.cljs$lang$protocol_mask$partition$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Database, $d$$)) : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Database, $d$$)) ? asami.storage.graph($d$$) : asami.core.as_graph($d$$);
  }, $inputs$$);
};
asami.core.q = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$207_argseq__5756__auto__$$ = [], $len__5749__auto___46133$$ = arguments.length, $i__5750__auto___46134$$ = 0;;) {
    if ($i__5750__auto___46134$$ < $len__5749__auto___46133$$) {
      $args__5755__auto__$jscomp$207_argseq__5756__auto__$$.push(arguments[$i__5750__auto___46134$$]), $i__5750__auto___46134$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$207_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$207_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$207_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return asami.core.q.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$207_argseq__5756__auto__$$);
};
asami.core.q.cljs$core$IFn$_invoke$arity$variadic = function($query$$, $inputs$$) {
  return asami.query.query_entry($query$$, asami.memory.empty_graph, asami.core.graphs_of($inputs$$), !1);
};
asami.core.q.cljs$lang$maxFixedArity = 1;
asami.core.q.cljs$lang$applyTo = function($seq46066_seq46066__$1$$) {
  var $G__46067$$ = $APP.cljs.core.first($seq46066_seq46066__$1$$);
  $seq46066_seq46066__$1$$ = $APP.cljs.core.next($seq46066_seq46066__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__46067$$, $seq46066_seq46066__$1$$);
};
asami.core.show_plan = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$208_argseq__5756__auto__$$ = [], $len__5749__auto___46136$$ = arguments.length, $i__5750__auto___46137$$ = 0;;) {
    if ($i__5750__auto___46137$$ < $len__5749__auto___46136$$) {
      $args__5755__auto__$jscomp$208_argseq__5756__auto__$$.push(arguments[$i__5750__auto___46137$$]), $i__5750__auto___46137$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$208_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$208_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$208_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return asami.core.show_plan.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$208_argseq__5756__auto__$$);
};
asami.core.show_plan.cljs$core$IFn$_invoke$arity$variadic = function($query$$, $inputs$$) {
  return asami.query.query_entry($query$$, asami.memory.empty_graph, asami.core.graphs_of($inputs$$), !0);
};
asami.core.show_plan.cljs$lang$maxFixedArity = 1;
asami.core.show_plan.cljs$lang$applyTo = function($seq46068_seq46068__$1$$) {
  var $G__46069$$ = $APP.cljs.core.first($seq46068_seq46068__$1$$);
  $seq46068_seq46068__$1$$ = $APP.cljs.core.next($seq46068_seq46068__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__46069$$, $seq46068_seq46068__$1$$);
};
asami.core.export_data = function($database$jscomp$1_g$$) {
  $database$jscomp$1_g$$ = ($database$jscomp$1_g$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $database$jscomp$1_g$$.asami$storage$Database$ || ($database$jscomp$1_g$$.cljs$lang$protocol_mask$partition$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Database, $database$jscomp$1_g$$)) : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Database, $database$jscomp$1_g$$)) ? asami.storage.graph($database$jscomp$1_g$$) : asami.core.as_graph($database$jscomp$1_g$$);
  return asami.graph.resolve_pattern($database$jscomp$1_g$$, new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2375$_QMARK_e, $APP.cljs$cst$2244$_QMARK_a, cljs$cst$2245$_QMARK_v, cljs$cst$2510$_QMARK_t], null));
};
asami.core.entity = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return asami.core.entity.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return asami.core.entity.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
asami.core.entity.cljs$core$IFn$_invoke$arity$2 = function($d$$, $id$$) {
  return asami.core.entity.cljs$core$IFn$_invoke$arity$3($d$$, $id$$, !1);
};
asami.core.entity.cljs$core$IFn$_invoke$arity$3 = function($d$jscomp$189_database$$, $id$$, $nested_QMARK_$$) {
  $d$jscomp$189_database$$ = ($d$jscomp$189_database$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $d$jscomp$189_database$$.asami$storage$Database$ || ($d$jscomp$189_database$$.cljs$lang$protocol_mask$partition$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Database, $d$jscomp$189_database$$)) : $APP.cljs.core.native_satisfies_QMARK_(asami.storage.Database, $d$jscomp$189_database$$)) ? $d$jscomp$189_database$$ : asami.core.db.cljs$core$IFn$_invoke$arity$1 ? asami.core.db.cljs$core$IFn$_invoke$arity$1($d$jscomp$189_database$$) : 
  asami.core.db.call(null, $d$jscomp$189_database$$);
  return asami.storage.entity($d$jscomp$189_database$$, $id$$, $nested_QMARK_$$);
};
asami.core.entity.cljs$lang$maxFixedArity = 3;
asami.core.export_str = function($database$$) {
  return $APP.cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([asami.core.export_data($database$$)], 0));
};
asami.core.import_data = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return asami.core.import_data.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return asami.core.import_data.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
asami.core.import_data.cljs$core$IFn$_invoke$arity$2 = function($connection$$, $data$$) {
  return asami.core.import_data.cljs$core$IFn$_invoke$arity$3($connection$$, $APP.cljs.core.PersistentArrayMap.EMPTY, $data$$);
};
asami.core.import_data.cljs$core$IFn$_invoke$arity$3 = function($connection$$, $opts$$, $data$$) {
  var $user_readers$$ = $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([asami.graph.node_reader, $APP.cljs$cst$250$readers.cljs$core$IFn$_invoke$arity$1($opts$$)], 0));
  $opts$$ = typeof $data$$ === "string" ? $APP.cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$opts$$, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$250$readers, $user_readers$$], null)], 0)), $data$$) : $data$$;
  return asami.core.transact($connection$$, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$2501$tx_triples, $opts$$], null));
};
asami.core.import_data.cljs$lang$maxFixedArity = 3;
$APP.scittle.asami = {};
$APP.scittle.asami.init = function() {
  return $APP.scittle.core.register_plugin_BANG_(cljs$cst$2511$scittle_DOT_asami_SLASH_asami, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$398$namespaces, new $APP.cljs.core.PersistentArrayMap(null, 2, [cljs$cst$2495$asami_DOT_core, $APP.sci.core._copy_ns($APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs.core.with_meta(cljs$cst$2512$release, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema, 
  cljs$cst$2514$output_schema46017, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2515$input_schema46018], null)), cljs$cst$2516$raw_arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2464$conn, $APP.cljs$cst$2517$_, cljs$cst$2494$StringOrConnection], null))), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2464$conn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2494$StringOrConnection], null))], null))), $APP.cljs$cst$256$doc, "Inputs: [conn :- StringOrConnection]"], null)), $APP.cljs.core.with_meta(cljs$cst$2518$transact, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema, 
  cljs$cst$2519$output_schema46061, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2520$input_schema46062], null)), cljs$cst$2516$raw_arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2458$connection, $APP.cljs$cst$2517$_, cljs$cst$2459$ConnectionType, cljs$cst$2505$tx_info, $APP.cljs$cst$2517$_, cljs$cst$2506$TransactData], 
  null))), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta(cljs$cst$2458$connection, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2459$ConnectionType], null)), $APP.cljs.core.with_meta(cljs$cst$2505$tx_info, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2506$TransactData], 
  null))], null))), $APP.cljs$cst$256$doc, "Inputs: [connection :- ConnectionType tx-info :- TransactData]\n\n  This is a thin wrapper around the transact-async function.\n      TODO: convert this to a promise-based approach for the async implementation\n      See the documentation for transact-async for full details on arguments.\n      returns a deref'able object that derefs to a map of:\n       :db-before database value before the transaction\n       :db-after database value after the transaction\n       :tx-data a sequence of the transacted datom operations\n       :tempids a map of temporary id values and the db identifiers that were allocated for them}"], 
  null)), $APP.cljs.core.with_meta($APP.cljs$cst$2429$entity, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2521$d, $APP.cljs$cst$1850$id], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2521$d, $APP.cljs$cst$1850$id, cljs$cst$2446$nested_QMARK_], 
  null))), $APP.cljs$cst$256$doc, "Wrapper around the storage/entity function so that connections can be asked for entities.\n  d: a connection or database\n  id: an identifier for an entity", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 3, $APP.cljs$cst$1379$max_fixed_arity, 3, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2521$d, $APP.cljs$cst$1850$id], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2521$d, $APP.cljs$cst$1850$id, cljs$cst$2446$nested_QMARK_], null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2521$d, $APP.cljs$cst$1850$id], 
  null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2521$d, $APP.cljs$cst$1850$id, cljs$cst$2446$nested_QMARK_], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$2522$shutdown, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY)), $APP.cljs$cst$256$doc, 
  "Releases all connection resources for a clean shutdown.\n  This should only be called during shutdown, and not if further database access is desired."], null)), $APP.cljs.core.with_meta($APP.cljs$cst$2523$q, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query, $APP.cljs$cst$148$_AMPERSAND_, 
  cljs$cst$2424$inputs], null))), $APP.cljs$cst$256$doc, "Execute a query against the provided inputs.\n   The query can be a map, a seq, or a string.\n   See the documentation at https://github.com/quoll/asami/wiki/6.-Querying\n   for a full description of queries.\n   The end of the parameters may include a series of key/value pairs for query options.\n   The only recognized option for now is:\n     `:planner :user`\n   This ensures that a query is executed in user-specified order, and not the order calculated by the optimizing planner.", 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 1, $APP.cljs$cst$1379$max_fixed_arity, 1, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$2411$query, cljs$cst$2424$inputs)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$2411$query, $APP.cljs$cst$148$_AMPERSAND_, cljs$cst$2424$inputs], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), cljs$cst$2524$long_time, $APP.cljs.core.with_meta(cljs$cst$2525$export_str, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2462$database], 
  null))), $APP.cljs$cst$256$doc, "A wrapper on export-data to serialize to a string"], null)), cljs$cst$2497$Graphable, $APP.cljs.core.with_meta(cljs$cst$2526$get_database_names, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema, cljs$cst$2527$output_schema46023, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2528$input_schema46024], null)), cljs$cst$2516$raw_arglists, 
  $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY)), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY)), $APP.cljs$cst$256$doc, "Inputs: []\n\n  Returns a seq of database names that this instance is aware of."], null)), cljs$cst$2494$StringOrConnection, cljs$cst$2529$since, cljs$cst$2506$TransactData, cljs$cst$2461$instant_QMARK_, $APP.cljs.core.with_meta(cljs$cst$2530$show_plan, 
  new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query, $APP.cljs$cst$148$_AMPERSAND_, cljs$cst$2424$inputs], null))), $APP.cljs$cst$256$doc, "Return a query plan and do not execute the query.\n   All parameters are identical to the `q` function.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 
  6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 1, $APP.cljs$cst$1379$max_fixed_arity, 1, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$2411$query, cljs$cst$2424$inputs)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query, $APP.cljs$cst$148$_AMPERSAND_, 
  cljs$cst$2424$inputs], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), cljs$cst$2531$as_of_t, $APP.cljs.core.with_meta(cljs$cst$2532$check_attachment, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2458$connection], null))), $APP.cljs$cst$256$doc, "Checks if a connection is attached to the connections map.\n   If not, then reconnect if still open. Returns the connection if previously connected,\n   false if it needed to be reconnected.\n   Throws an exception if the graph is closed."], 
  null)), $APP.cljs.core.with_meta(cljs$cst$2533$import_data, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2458$connection, $APP.cljs$cst$380$data], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2458$connection, $APP.cljs$cst$309$opts, $APP.cljs$cst$380$data], 
  null))), $APP.cljs$cst$256$doc, "Loads raw statements into a connection. This does no checking of existing contents of storage.\n  Accepts either a seq of tuples, or an EDN string which contains a seq of tuples.\n  Optionally accepts options for reading a string (will be ignored if the data is not a string).\n  These options are the same as for clojure.edn/read and cljs.reader/read.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, 
  !1, $APP.cljs$cst$553$fixed_arity, 3, $APP.cljs$cst$1379$max_fixed_arity, 3, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2458$connection, $APP.cljs$cst$380$data], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2458$connection, $APP.cljs$cst$309$opts, $APP.cljs$cst$380$data], 
  null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2458$connection, $APP.cljs$cst$380$data], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2458$connection, $APP.cljs$cst$309$opts, $APP.cljs$cst$380$data], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], null)], null)), cljs$cst$2534$since_t, cljs$cst$2535$connections, 
  cljs$cst$2536$as_of_time, cljs$cst$2537$now, cljs$cst$2538$instant, $APP.cljs.core.with_meta($APP.cljs$cst$2539$connect, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema, cljs$cst$2540$output_schema46003, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2541$input_schema46004], null)), cljs$cst$2516$raw_arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2492$uri, $APP.cljs$cst$2517$_, cljs$cst$2412$s_SLASH_Str], null))), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
  cljs$cst$2412$s_SLASH_Str], null))], null))), $APP.cljs$cst$256$doc, "Inputs: [uri :- s/Str]\n  Returns: ConnectionType\n\n  Connects to the specified database, returning a Connection.\n  In-memory databases get created if they do not exist already.\n  Memory graphs:\n  asami:mem://dbname    A standard graph\n  asami:multi://dbname  A multigraph"], null)), $APP.cljs$cst$2542$db, $APP.cljs.core.with_meta(cljs$cst$2543$transact_async, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1410$schema, 
  $APP.cljs.core.list(cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema, cljs$cst$2544$output_schema46042, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2545$input_schema46043], null)), cljs$cst$2516$raw_arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, 
  new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$7$name, $APP.cljs$cst$44$state], null), $APP.cljs$cst$265$as, cljs$cst$2458$connection], null), $APP.cljs$cst$2517$_, cljs$cst$2459$ConnectionType, cljs$cst$2505$tx_info, $APP.cljs$cst$2517$_, cljs$cst$2506$TransactData], null))), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs.core.with_meta(new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$7$name, $APP.cljs$cst$44$state], null), $APP.cljs$cst$265$as, cljs$cst$2458$connection], null), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2459$ConnectionType], null)), $APP.cljs.core.with_meta(cljs$cst$2505$tx_info, new $APP.cljs.core.PersistentArrayMap(null, 
  1, [$APP.cljs$cst$1410$schema, cljs$cst$2506$TransactData], null))], null))), $APP.cljs$cst$256$doc, "Inputs: [{:keys [name state], :as connection} :- ConnectionType tx-info :- TransactData]\n\n  Updates a database.\n   connection: The connection to the database to be updated.\n   tx-info: This is either a seq of items to be transacted, or a map.\n            If this is a map, then a :tx-data value will contain the same type of seq that tx-info may have.\n            Each item to be transacted is one of:\n            - vector of the form: [:db/add entity attribute value] - creates a datom\n            - vector of the form: [:db/retract entity attribute value] - removes a datom\n            - map: an entity to be inserted/updated.\n            Alternatively, a map may have a :tx-triples key. If so, then this is a seq of 3 element vectors.\n            Each vector in a :tx-triples seq will contain the raw values for [entity attribute value]\n            :executor An optional value in the tx-info containing an executor to be used to run the CompletableFuture\n            :input-limit contains an optional maximum number of statements to insert (approx)\n  Entities and assertions may have attributes that are keywords with a trailing ' character.\n  When these appear an existing attribute without that character will be replaced. This only occurs for the top level\n  entity, and is not applied to attributes appearing in nested structures.\n  Entities can be assigned a :db/id value. If this is a negative number, then it is considered a temporary value and\n  will be mapped to a system-allocated ID. Other entities can reference such an entity using that ID.\n  Entities can be provided a :db/ident value of any type. This will be considered unique, and can be used to identify\n  entities for updates in subsequent transactions.\n\n  Returns a future/delay object that will hold a map containing the following:\n  :db-before    database value before the transaction\n  :db-after     database value after the transaction\n  :tx-data      sequence of datoms produced by the transaction\n  :tempids      mapping of the temporary IDs in entities to the allocated nodes"], 
  null)), $APP.cljs.core.with_meta(cljs$cst$2546$as_connection, new $APP.cljs.core.PersistentArrayMap(null, 5, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2547$schema_DOT_core_SLASH_make_fn_schema, cljs$cst$2548$output_schema46031, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2549$input_schema46032, cljs$cst$2550$input_schema46035], null)), $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, 
  !1, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2497$Graphable], null))], null), new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2497$Graphable], null)), $APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null))], null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2497$Graphable], null))], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2497$Graphable], null)), $APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 
  1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null))], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], null), cljs$cst$2516$raw_arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2218$graph, $APP.cljs$cst$2517$_, cljs$cst$2497$Graphable], null), new $APP.cljs.core.PersistentVector(null, 6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$2218$graph, $APP.cljs$cst$2517$_, cljs$cst$2497$Graphable, $APP.cljs$cst$2492$uri, $APP.cljs$cst$2517$_, cljs$cst$2412$s_SLASH_Str], null))), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2497$Graphable], null))], 
  null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2497$Graphable], null)), $APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null))], null))), $APP.cljs$cst$256$doc, "Inputs: ([graph :- Graphable] [graph :- Graphable uri :- s/Str])\n  Returns: ConnectionType\n\n  Creates a Database/Connection around an existing Graph.\n   graph: The graph or graph wrapper to build a database around.\n   uri: The uri of the database."], 
  null)), $APP.cljs.core.with_meta(cljs$cst$2551$export_data, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2462$database], null))), $APP.cljs$cst$256$doc, "Returns a simplified data structures of all statements in a database"], null)), $APP.cljs$cst$2218$graph, $APP.cljs.core.with_meta(cljs$cst$2552$create_database, 
  new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema, cljs$cst$2553$output_schema45990, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2554$input_schema45991], null)), cljs$cst$2516$raw_arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$2492$uri, $APP.cljs$cst$2517$_, cljs$cst$2412$s_SLASH_Str], null))), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null))], null))), $APP.cljs$cst$256$doc, "Inputs: [uri :- s/Str]\n  Returns: s/Bool\n\n  Creates database specified by uri. Returns true if the\n   database was created, false if it already exists."], 
  null)), cljs$cst$2555$as_of, $APP.cljs.core.with_meta(cljs$cst$2556$delete_database, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema, cljs$cst$2557$output_schema46012, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2558$input_schema46013], null)), cljs$cst$2516$raw_arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2492$uri, $APP.cljs$cst$2517$_, cljs$cst$2412$s_SLASH_Str], null))), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null))], null))), $APP.cljs$cst$256$doc, 
  "Inputs: [uri :- s/Str]\n  Returns: s/Bool\n\n  Deletes the database specified by the URI.\n   Returns true if the delete occurred."], null))], [new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2559$asami_DOT_core_SLASH_release, $APP.cljs$cst$108$val, asami.core.release, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs.core.with_meta($APP.cljs$cst$2464$conn, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2494$StringOrConnection], null))], null)), $APP.cljs$cst$256$doc, "Inputs: [conn :- StringOrConnection]"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2560$asami_DOT_core_SLASH_transact, $APP.cljs$cst$108$val, asami.core.transact, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta(cljs$cst$2458$connection, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2459$ConnectionType], null)), $APP.cljs.core.with_meta(cljs$cst$2505$tx_info, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2506$TransactData], null))], null)), $APP.cljs$cst$256$doc, "Inputs: [connection :- ConnectionType tx-info :- TransactData]\n\n  This is a thin wrapper around the transact-async function.\n      TODO: convert this to a promise-based approach for the async implementation\n      See the documentation for transact-async for full details on arguments.\n      returns a deref'able object that derefs to a map of:\n       :db-before database value before the transaction\n       :db-after database value after the transaction\n       :tx-data a sequence of the transacted datom operations\n       :tempids a map of temporary id values and the db identifiers that were allocated for them}"], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2561$asami_DOT_core_SLASH_entity, $APP.cljs$cst$108$val, asami.core.entity, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2521$d, $APP.cljs$cst$1850$id], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$2521$d, $APP.cljs$cst$1850$id, cljs$cst$2446$nested_QMARK_], null)), $APP.cljs$cst$256$doc, "Wrapper around the storage/entity function so that connections can be asked for entities.\n  d: a connection or database\n  id: an identifier for an entity"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2562$asami_DOT_core_SLASH_shutdown, $APP.cljs$cst$108$val, asami.core.shutdown, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY), $APP.cljs$cst$256$doc, "Releases all connection resources for a clean shutdown.\n  This should only be called during shutdown, and not if further database access is desired."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2563$asami_DOT_core_SLASH_q, $APP.cljs$cst$108$val, asami.core.q, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, 
  [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query, $APP.cljs$cst$148$_AMPERSAND_, cljs$cst$2424$inputs], null)), $APP.cljs$cst$256$doc, "Execute a query against the provided inputs.\n   The query can be a map, a seq, or a string.\n   See the documentation at https://github.com/quoll/asami/wiki/6.-Querying\n   for a full description of queries.\n   The end of the parameters may include a series of key/value pairs for query options.\n   The only recognized option for now is:\n     `:planner :user`\n   This ensures that a query is executed in user-specified order, and not the order calculated by the optimizing planner."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2564$asami_DOT_core_SLASH_long_time, $APP.cljs$cst$108$val, asami.core.long_time, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2565$asami_DOT_core_SLASH_export_str, $APP.cljs$cst$108$val, asami.core.export_str, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2462$database], null)), $APP.cljs$cst$256$doc, "A wrapper on export-data to serialize to a string"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2566$asami_DOT_core_SLASH_Graphable, $APP.cljs$cst$108$val, asami.core.Graphable, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$272$name, cljs$cst$2567$asami_DOT_core_SLASH_get_database_names, $APP.cljs$cst$108$val, asami.core.get_database_names, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY), $APP.cljs$cst$256$doc, "Inputs: []\n\n  Returns a seq of database names that this instance is aware of."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2568$asami_DOT_core_SLASH_StringOrConnection, 
  $APP.cljs$cst$108$val, asami.core.StringOrConnection, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2569$asami_DOT_core_SLASH_since, $APP.cljs$cst$108$val, asami.core.since, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2570$asami_DOT_core_SLASH_TransactData, $APP.cljs$cst$108$val, asami.core.TransactData, 
  $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2571$asami_DOT_core_SLASH_instant_QMARK_, $APP.cljs$cst$108$val, asami.core.instant_QMARK_, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2572$asami_DOT_core_SLASH_show_plan, $APP.cljs$cst$108$val, asami.core.show_plan, $APP.cljs$cst$2$meta, 
  new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query, $APP.cljs$cst$148$_AMPERSAND_, cljs$cst$2424$inputs], null)), $APP.cljs$cst$256$doc, "Return a query plan and do not execute the query.\n   All parameters are identical to the `q` function."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2573$asami_DOT_core_SLASH_as_of_t, 
  $APP.cljs$cst$108$val, asami.core.as_of_t, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2574$asami_DOT_core_SLASH_check_attachment, $APP.cljs$cst$108$val, asami.core.check_attachment, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$2458$connection], null)), $APP.cljs$cst$256$doc, "Checks if a connection is attached to the connections map.\n   If not, then reconnect if still open. Returns the connection if previously connected,\n   false if it needed to be reconnected.\n   Throws an exception if the graph is closed."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2575$asami_DOT_core_SLASH_import_data, $APP.cljs$cst$108$val, asami.core.import_data, $APP.cljs$cst$2$meta, 
  new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2458$connection, $APP.cljs$cst$380$data], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2458$connection, $APP.cljs$cst$309$opts, $APP.cljs$cst$380$data], null)), $APP.cljs$cst$256$doc, "Loads raw statements into a connection. This does no checking of existing contents of storage.\n  Accepts either a seq of tuples, or an EDN string which contains a seq of tuples.\n  Optionally accepts options for reading a string (will be ignored if the data is not a string).\n  These options are the same as for clojure.edn/read and cljs.reader/read."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2576$asami_DOT_core_SLASH_since_t, $APP.cljs$cst$108$val, asami.core.since_t, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2577$asami_DOT_core_SLASH_connections, $APP.cljs$cst$108$val, asami.core.connections, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$272$name, cljs$cst$2578$asami_DOT_core_SLASH_as_of_time, $APP.cljs$cst$108$val, asami.core.as_of_time, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2579$asami_DOT_core_SLASH_now, $APP.cljs$cst$108$val, asami.core.now, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2580$asami_DOT_core_SLASH_instant, 
  $APP.cljs$cst$108$val, asami.core.instant, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2581$asami_DOT_core_SLASH_connect, $APP.cljs$cst$108$val, asami.core.connect, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, 
  new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null))], null)), $APP.cljs$cst$256$doc, "Inputs: [uri :- s/Str]\n  Returns: ConnectionType\n\n  Connects to the specified database, returning a Connection.\n  In-memory databases get created if they do not exist already.\n  Memory graphs:\n  asami:mem://dbname    A standard graph\n  asami:multi://dbname  A multigraph"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, 
  cljs$cst$2582$asami_DOT_core_SLASH_db, $APP.cljs$cst$108$val, asami.core.db, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2583$asami_DOT_core_SLASH_transact_async, $APP.cljs$cst$108$val, asami.core.transact_async, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs.core.with_meta(new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$7$name, $APP.cljs$cst$44$state], null), $APP.cljs$cst$265$as, cljs$cst$2458$connection], null), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2459$ConnectionType], null)), $APP.cljs.core.with_meta(cljs$cst$2505$tx_info, new $APP.cljs.core.PersistentArrayMap(null, 
  1, [$APP.cljs$cst$1410$schema, cljs$cst$2506$TransactData], null))], null)), $APP.cljs$cst$256$doc, "Inputs: [{:keys [name state], :as connection} :- ConnectionType tx-info :- TransactData]\n\n  Updates a database.\n   connection: The connection to the database to be updated.\n   tx-info: This is either a seq of items to be transacted, or a map.\n            If this is a map, then a :tx-data value will contain the same type of seq that tx-info may have.\n            Each item to be transacted is one of:\n            - vector of the form: [:db/add entity attribute value] - creates a datom\n            - vector of the form: [:db/retract entity attribute value] - removes a datom\n            - map: an entity to be inserted/updated.\n            Alternatively, a map may have a :tx-triples key. If so, then this is a seq of 3 element vectors.\n            Each vector in a :tx-triples seq will contain the raw values for [entity attribute value]\n            :executor An optional value in the tx-info containing an executor to be used to run the CompletableFuture\n            :input-limit contains an optional maximum number of statements to insert (approx)\n  Entities and assertions may have attributes that are keywords with a trailing ' character.\n  When these appear an existing attribute without that character will be replaced. This only occurs for the top level\n  entity, and is not applied to attributes appearing in nested structures.\n  Entities can be assigned a :db/id value. If this is a negative number, then it is considered a temporary value and\n  will be mapped to a system-allocated ID. Other entities can reference such an entity using that ID.\n  Entities can be provided a :db/ident value of any type. This will be considered unique, and can be used to identify\n  entities for updates in subsequent transactions.\n\n  Returns a future/delay object that will hold a map containing the following:\n  :db-before    database value before the transaction\n  :db-after     database value after the transaction\n  :tx-data      sequence of datoms produced by the transaction\n  :tempids      mapping of the temporary IDs in entities to the allocated nodes"], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2584$asami_DOT_core_SLASH_as_connection, $APP.cljs$cst$108$val, asami.core.as_connection, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, 
  cljs$cst$2497$Graphable], null))], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2497$Graphable], null)), $APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null))], null)), $APP.cljs$cst$256$doc, "Inputs: ([graph :- Graphable] [graph :- Graphable uri :- s/Str])\n  Returns: ConnectionType\n\n  Creates a Database/Connection around an existing Graph.\n   graph: The graph or graph wrapper to build a database around.\n   uri: The uri of the database."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2585$asami_DOT_core_SLASH_export_data, $APP.cljs$cst$108$val, asami.core.export_data, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2462$database], null)), $APP.cljs$cst$256$doc, "Returns a simplified data structures of all statements in a database"], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2586$asami_DOT_core_SLASH_graph, $APP.cljs$cst$108$val, asami.core.graph, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2587$asami_DOT_core_SLASH_create_database, $APP.cljs$cst$108$val, asami.core.create_database, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null))], null)), $APP.cljs$cst$256$doc, "Inputs: [uri :- s/Str]\n  Returns: s/Bool\n\n  Creates database specified by uri. Returns true if the\n   database was created, false if it already exists."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$272$name, cljs$cst$2588$asami_DOT_core_SLASH_as_of, $APP.cljs$cst$108$val, asami.core.as_of, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2589$asami_DOT_core_SLASH_delete_database, $APP.cljs$cst$108$val, asami.core.delete_database, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2492$uri, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2412$s_SLASH_Str], null))], null)), $APP.cljs$cst$256$doc, "Inputs: [uri :- s/Str]\n  Returns: s/Bool\n\n  Deletes the database specified by the URI.\n   Returns true if the delete occurred."], null)], null)]), $APP.sci.core.create_ns.cljs$core$IFn$_invoke$arity$2(cljs$cst$2495$asami_DOT_core, null)), cljs$cst$2590$asami_DOT_analytics, 
  $APP.sci.core._copy_ns(new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs.core.with_meta(cljs$cst$2591$entity_node_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2483$n], null))), $APP.cljs$cst$256$doc, "Returns true if a node represents an entity.\n   No access to the storage type, so look for namespaced keywords."], 
  null)), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2592$asami_DOT_analytics_SLASH_entity_node_QMARK_, $APP.cljs$cst$108$val, asami.analytics.entity_node_QMARK_, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2483$n], null)), $APP.cljs$cst$256$doc, "Returns true if a node represents an entity.\n   No access to the storage type, so look for namespaced keywords."], 
  null)], null), $APP.cljs.core.with_meta(cljs$cst$2593$subgraph_from_node, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema, cljs$cst$2594$output_schema43575, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2595$input_schema43576], null)), cljs$cst$2516$raw_arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2239$spo, $APP.cljs$cst$1607$pos], null), $APP.cljs$cst$265$as, $APP.cljs$cst$2218$graph], null), $APP.cljs$cst$2517$_, cljs$cst$2219$GraphType, $APP.cljs$cst$64$node, $APP.cljs$cst$2517$_, cljs$cst$2204$s_SLASH_Any], null))), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta(new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2239$spo, $APP.cljs$cst$1607$pos], null), $APP.cljs$cst$265$as, $APP.cljs$cst$2218$graph], null), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], 
  null)), $APP.cljs.core.with_meta($APP.cljs$cst$64$node, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))], null))), $APP.cljs$cst$256$doc, "Inputs: [{:keys [spo pos], :as graph} :- GraphType node :- s/Any]\n  Returns: #{s/Any}\n\n  Finds a single subgraph for an index graph. Returns all entity IDs that appear\n   in the same subgraph as the provided node."], null)), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, 
  cljs$cst$2596$asami_DOT_analytics_SLASH_subgraph_from_node, $APP.cljs$cst$108$val, asami.analytics.subgraph_from_node, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta(new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$2239$spo, $APP.cljs$cst$1607$pos], null), $APP.cljs$cst$265$as, $APP.cljs$cst$2218$graph], null), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null)), $APP.cljs.core.with_meta($APP.cljs$cst$64$node, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2204$s_SLASH_Any], null))], null)), $APP.cljs$cst$256$doc, "Inputs: [{:keys [spo pos], :as graph} :- GraphType node :- s/Any]\n  Returns: #{s/Any}\n\n  Finds a single subgraph for an index graph. Returns all entity IDs that appear\n   in the same subgraph as the provided node."], 
  null)], null), $APP.cljs.core.with_meta(cljs$cst$2597$subgraph_entities, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema, cljs$cst$2598$output_schema43589, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2599$input_schema43590], null)), cljs$cst$2516$raw_arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2239$spo], null), $APP.cljs$cst$265$as, $APP.cljs$cst$2218$graph], null), $APP.cljs$cst$2517$_, cljs$cst$2219$GraphType], null))), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs.core.with_meta(new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2239$spo], null), $APP.cljs$cst$265$as, $APP.cljs$cst$2218$graph], null), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))], null))), $APP.cljs$cst$256$doc, "Inputs: [{:keys [spo], :as graph} :- GraphType]\n  Returns: [#{s/Any}]\n\n  Finds subgraph groups for index graphs.\n   Each subgraph group is a seq of entity nodes for the nodes in a subgraph."], 
  null)), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2600$asami_DOT_analytics_SLASH_subgraph_entities, $APP.cljs$cst$108$val, asami.analytics.subgraph_entities, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta(new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, 
  new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2239$spo], null), $APP.cljs$cst$265$as, $APP.cljs$cst$2218$graph], null), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))], null)), $APP.cljs$cst$256$doc, "Inputs: [{:keys [spo], :as graph} :- GraphType]\n  Returns: [#{s/Any}]\n\n  Finds subgraph groups for index graphs.\n   Each subgraph group is a seq of entity nodes for the nodes in a subgraph."], 
  null)], null), $APP.cljs.core.with_meta(cljs$cst$2601$subgraphs, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1410$schema, $APP.cljs.core.list(cljs$cst$2513$schema_DOT_core_SLASH___GT_FnSchema, cljs$cst$2602$output_schema43606, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$2603$input_schema43607], null)), cljs$cst$2516$raw_arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2218$graph, $APP.cljs$cst$2517$_, cljs$cst$2219$GraphType], null))), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))], null))), $APP.cljs$cst$256$doc, 
  "Inputs: [graph :- GraphType]\n  Returns: [GraphType]\n\n  Returns all subgraphs for a given graph"], null)), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$2604$asami_DOT_analytics_SLASH_subgraphs, $APP.cljs$cst$108$val, asami.analytics.subgraphs, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2218$graph, 
  new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1410$schema, cljs$cst$2219$GraphType], null))], null)), $APP.cljs$cst$256$doc, "Inputs: [graph :- GraphType]\n  Returns: [GraphType]\n\n  Returns all subgraphs for a given graph"], null)], null)], null), $APP.sci.core.create_ns.cljs$core$IFn$_invoke$arity$2(cljs$cst$2590$asami_DOT_analytics, null))], null)], null));
};
$APP.scittle.asami.init();

}).call(this);