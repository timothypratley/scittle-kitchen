(function(){
shadow$provide[0]=function(l,L,q){(function(x,r){typeof q==="object"&&typeof L!=="undefined"?r(q):typeof define==="function"&&define.amd?define(["exports"],r):(x=x||self,r(x.JSJoda={}))})(this,function(x){function r(Z,C,w){function c(A){Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=Error().stack;this.message=A;C&&C.apply(this,arguments);this.toString=function(){return this.name+": "+this.message}}w===void 0&&(w=Error);c.prototype=Object.create(w.prototype);c.prototype.name=
Z;return c.prototype.constructor=c}function e(Z,C){Z.prototype=Object.create(C.prototype);Z.prototype.constructor=Z;Z.__proto__=C}function g(Z){if(Z===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return Z}function f(Z,C,w){if(!Z){if(w)throw new w(C);throw Error(C);}}function k(Z,C){if(Z==null)throw new Q(C+" must not be null");return Z}function m(Z,C,w){if(!(Z instanceof C))throw new I(w+" must be an instance of "+(C.name?C.name:C)+(Z&&Z.constructor&&
Z.constructor.name?", but is "+Z.constructor.name:""));return Z}function p(Z){throw new TypeError('abstract method "'+Z+'" is not implemented');}function z(Z,C){var w=function(c){function A(){return c.apply(this,arguments)||this}e(A,c);return A}(Ea);w.prototype.queryFrom=C;return new w(Z)}function t(Z,C){return new cg(Z,C)}function v(Z,C){return new dg(Z,C)}var y=r("DateTimeException",function(Z,C){C===void 0&&(C=null);Z=Z||this.name;C!==null&&C instanceof Error&&(Z+="\n-------\nCaused by: "+C.stack+
"\n-------\n");this.message=Z}),B=r("DateTimeParseException",function(Z,C,w,c){C===void 0&&(C="");w===void 0&&(w=0);c===void 0&&(c=null);Z=Z||this.name;Z+=": "+C+", at index: "+w;c!==null&&c instanceof Error&&(Z+="\n-------\nCaused by: "+c.stack+"\n-------\n");this.message=Z;this.parsedString=function(){return C};this.errorIndex=function(){return w}}),D=r("UnsupportedTemporalTypeException",null,y),G=r("ArithmeticException"),I=r("IllegalArgumentException"),K=r("IllegalStateException"),Q=r("NullPointerException"),
O=Object.freeze({__proto__:null,assert:f,requireNonNull:k,requireInstance:m,abstractMethodFail:p}),J=function(){function Z(){}Z.intDiv=function(C,w){C=Z.roundDown(C/w);return Z.safeZero(C)};Z.intMod=function(C,w){C-=Z.intDiv(C,w)*w;C=Z.roundDown(C);return Z.safeZero(C)};Z.roundDown=function(C){return C<0?Math.ceil(C):Math.floor(C)};Z.floorDiv=function(C,w){return Z.safeZero(Math.floor(C/w))};Z.floorMod=function(C,w){C-=Z.floorDiv(C,w)*w;return Z.safeZero(C)};Z.safeAdd=function(C,w){Z.verifyInt(C);
Z.verifyInt(w);if(C===0)return Z.safeZero(w);if(w===0)return Z.safeZero(C);var c=Z.safeToInt(C+w);if(c===C||c===w)throw new G("Invalid addition beyond MAX_SAFE_INTEGER!");return c};Z.safeSubtract=function(C,w){Z.verifyInt(C);Z.verifyInt(w);return C===0&&w===0?0:C===0?Z.safeZero(-1*w):w===0?Z.safeZero(C):Z.safeToInt(C-w)};Z.safeMultiply=function(C,w){Z.verifyInt(C);Z.verifyInt(w);if(C===1)return Z.safeZero(w);if(w===1)return Z.safeZero(C);if(C===0||w===0)return 0;var c=Z.safeToInt(C*w);if(c/w!==C||
C===-9007199254740991&&w===-1||w===-9007199254740991&&C===-1)throw new G("Multiplication overflows: "+C+" * "+w);return c};Z.parseInt=function(C){function w(c){return C.apply(this,arguments)}w.toString=function(){return C.toString()};return w}(function(C){C=parseInt(C);return Z.safeToInt(C)});Z.safeToInt=function(C){Z.verifyInt(C);return Z.safeZero(C)};Z.verifyInt=function(C){if(C==null)throw new G("Invalid value: '"+C+"', using null or undefined as argument");if(isNaN(C))throw new G("Invalid int value, using NaN as argument");
if(C%1!==0)throw new G("Invalid value: '"+C+"' is a float");if(C>9007199254740991||C<-9007199254740991)throw new G("Calculation overflows an int: "+C);};Z.safeZero=function(C){return C===0?0:+C};Z.compareNumbers=function(C,w){return C<w?-1:C>w?1:0};Z.smi=function(C){return C>>>1&1073741824|C&3221225471};Z.hash=function(C){if(C!==C||C===Infinity)return 0;for(var w=C;C>4294967295;)C/=4294967295,w^=C;return Z.smi(w)};Z.hashCode=function(){for(var C=17,w=arguments.length,c=Array(w),A=0;A<w;A++)c[A]=arguments[A];
for(w=0;w<c.length;w++)C=(C<<5)-C+Z.hash(c[w]);return Z.hash(C)};return Z}();J.MAX_SAFE_INTEGER=9007199254740991;J.MIN_SAFE_INTEGER=-9007199254740991;var W=function(){function Z(w){this._name=w}var C=Z.prototype;C.equals=function(w){return this===w};C.toString=function(){return this._name};C.toJSON=function(){return this.toString()};return Z}(),ba=function(){function Z(){}var C=Z.prototype;C.get=function(w){p("get")};C.units=function(){p("units")};C.addTo=function(w){p("addTo")};C.subtractFrom=function(w){p("subtractFrom")};
return Z}(),Y=function(){function Z(){}var C=Z.prototype;C.duration=function(){p("duration")};C.isDurationEstimated=function(){p("isDurationEstimated")};C.isDateBased=function(){p("isDateBased")};C.isTimeBased=function(){p("isTimeBased")};C.isSupportedBy=function(w){p("isSupportedBy")};C.addTo=function(w,c){p("addTo")};C.between=function(w,c){p("between")};return Z}(),S=function(Z){function C(c,A){var P=Z.call(this)||this;P._seconds=J.safeToInt(c);P._nanos=J.safeToInt(A);return P}e(C,Z);C.ofDays=
function(c){return C._create(J.safeMultiply(c,Ia.SECONDS_PER_DAY),0)};C.ofHours=function(c){return C._create(J.safeMultiply(c,Ia.SECONDS_PER_HOUR),0)};C.ofMinutes=function(c){return C._create(J.safeMultiply(c,Ia.SECONDS_PER_MINUTE),0)};C.ofSeconds=function(c,A){A===void 0&&(A=0);c=J.safeAdd(c,J.floorDiv(A,Ia.NANOS_PER_SECOND));A=J.floorMod(A,Ia.NANOS_PER_SECOND);return C._create(c,A)};C.ofMillis=function(c){var A=J.intDiv(c,1E3);c=J.intMod(c,1E3);c<0&&(c+=1E3,A--);return C._create(A,c*1E6)};C.ofNanos=
function(c){var A=J.intDiv(c,Ia.NANOS_PER_SECOND);c=J.intMod(c,Ia.NANOS_PER_SECOND);c<0&&(c+=Ia.NANOS_PER_SECOND,A--);return this._create(A,c)};C.of=function(c,A){return C.ZERO.plus(c,A)};C.from=function(c){k(c,"amount");m(c,ba);var A=C.ZERO;c.units().forEach(function(P){A=A.plus(c.get(P),P)});return A};C.between=function(c,A){k(c,"startInclusive");k(A,"endExclusive");var P=c.until(A,V.SECONDS),fa=0;if(c.isSupported(N.NANO_OF_SECOND)&&A.isSupported(N.NANO_OF_SECOND))try{var Da=c.getLong(N.NANO_OF_SECOND);
fa=A.getLong(N.NANO_OF_SECOND)-Da;if(P>0&&fa<0)fa+=Ia.NANOS_PER_SECOND;else if(P<0&&fa>0)fa-=Ia.NANOS_PER_SECOND;else if(P===0&&fa!==0){var kb=A.with(N.NANO_OF_SECOND,Da);P=c.until(kb,V.SECONDS)}}catch(zb){}return this.ofSeconds(P,fa)};C.parse=function(c){k(c,"text");var A=RegExp("([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?","i").exec(c);if(A!==null&&"T"===A[3]===!1){var P="-"===A[1],fa=A[2],Da=A[4],kb=A[5],zb=A[6];A=A[7];if(fa!=null||
Da!=null||kb!=null||zb!=null){fa=C._parseNumber(c,fa,Ia.SECONDS_PER_DAY,"days");Da=C._parseNumber(c,Da,Ia.SECONDS_PER_HOUR,"hours");kb=C._parseNumber(c,kb,Ia.SECONDS_PER_MINUTE,"minutes");var Hc=C._parseNumber(c,zb,1,"seconds");zb=zb!=null&&zb.charAt(0)==="-";zb=C._parseFraction(c,A,zb?-1:1);try{return C._create(P,fa,Da,kb,Hc,zb)}catch(Zc){throw new B("Text cannot be parsed to a Duration: overflow",c,0,Zc);}}}throw new B("Text cannot be parsed to a Duration",c,0);};C._parseNumber=function(c,A,P,fa){if(A==
null)return 0;try{return A[0]==="+"&&(A=A.substring(1)),J.safeMultiply(parseFloat(A),P)}catch(Da){throw new B("Text cannot be parsed to a Duration: "+fa,c,0,Da);}};C._parseFraction=function(c,A,P){if(A==null||A.length===0)return 0;A=(A+"000000000").substring(0,9);return parseFloat(A)*P};C._create=function(){return arguments.length<=2?C._createSecondsNanos(arguments[0],arguments[1]):C._createNegateDaysHoursMinutesSecondsNanos(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5])};
C._createNegateDaysHoursMinutesSecondsNanos=function(c,A,P,fa,Da,kb){A=J.safeAdd(A,J.safeAdd(P,J.safeAdd(fa,Da)));return c?C.ofSeconds(A,kb).negated():C.ofSeconds(A,kb)};C._createSecondsNanos=function(c,A){c===void 0&&(c=0);A===void 0&&(A=0);return c===0&&A===0?C.ZERO:new C(c,A)};var w=C.prototype;w.get=function(c){if(c===V.SECONDS)return this._seconds;if(c===V.NANOS)return this._nanos;throw new D("Unsupported unit: "+c);};w.units=function(){return[V.SECONDS,V.NANOS]};w.isZero=function(){return this._seconds===
0&&this._nanos===0};w.isNegative=function(){return this._seconds<0};w.seconds=function(){return this._seconds};w.nano=function(){return this._nanos};w.withSeconds=function(c){return C._create(c,this._nanos)};w.withNanos=function(c){N.NANO_OF_SECOND.checkValidIntValue(c);return C._create(this._seconds,c)};w.plusDuration=function(c){k(c,"duration");return this.plus(c.seconds(),c.nano())};w.plus=function(c,A){return arguments.length===1?this.plusDuration(c):arguments.length===2&&A instanceof Y?this.plusAmountUnit(c,
A):this.plusSecondsNanos(c,A)};w.plusAmountUnit=function(c,A){k(c,"amountToAdd");k(A,"unit");if(A===V.DAYS)return this.plusSecondsNanos(J.safeMultiply(c,Ia.SECONDS_PER_DAY),0);if(A.isDurationEstimated())throw new D("Unit must not have an estimated duration");if(c===0)return this;if(A instanceof V){switch(A){case V.NANOS:return this.plusNanos(c);case V.MICROS:return this.plusSecondsNanos(J.intDiv(c,1E9)*1E3,J.intMod(c,1E9)*1E3);case V.MILLIS:return this.plusMillis(c);case V.SECONDS:return this.plusSeconds(c)}return this.plusSecondsNanos(J.safeMultiply(A.duration().seconds(),
c),0)}c=A.duration().multipliedBy(c);return this.plusSecondsNanos(c.seconds(),c.nano())};w.plusDays=function(c){return this.plusSecondsNanos(J.safeMultiply(c,Ia.SECONDS_PER_DAY),0)};w.plusHours=function(c){return this.plusSecondsNanos(J.safeMultiply(c,Ia.SECONDS_PER_HOUR),0)};w.plusMinutes=function(c){return this.plusSecondsNanos(J.safeMultiply(c,Ia.SECONDS_PER_MINUTE),0)};w.plusSeconds=function(c){return this.plusSecondsNanos(c,0)};w.plusMillis=function(c){return this.plusSecondsNanos(J.intDiv(c,
1E3),J.intMod(c,1E3)*1E6)};w.plusNanos=function(c){return this.plusSecondsNanos(0,c)};w.plusSecondsNanos=function(c,A){k(c,"secondsToAdd");k(A,"nanosToAdd");if(c===0&&A===0)return this;c=J.safeAdd(this._seconds,c);c=J.safeAdd(c,J.intDiv(A,Ia.NANOS_PER_SECOND));A=J.intMod(A,Ia.NANOS_PER_SECOND);A=J.safeAdd(this._nanos,A);return C.ofSeconds(c,A)};w.minus=function(c,A){return arguments.length===1?this.minusDuration(c):this.minusAmountUnit(c,A)};w.minusDuration=function(c){k(c,"duration");var A=c.seconds();
c=c.nano();return A===-9007199254740991?this.plus(9007199254740991,-c):this.plus(-A,-c)};w.minusAmountUnit=function(c,A){k(c,"amountToSubtract");k(A,"unit");return c===-9007199254740991?this.plusAmountUnit(9007199254740991,A):this.plusAmountUnit(-c,A)};w.minusDays=function(c){return c===-9007199254740991?this.plusDays(9007199254740991):this.plusDays(-c)};w.minusHours=function(c){return c===-9007199254740991?this.plusHours(9007199254740991):this.plusHours(-c)};w.minusMinutes=function(c){return c===
-9007199254740991?this.plusMinutes(9007199254740991):this.plusMinutes(-c)};w.minusSeconds=function(c){return c===-9007199254740991?this.plusSeconds(9007199254740991):this.plusSeconds(-c)};w.minusMillis=function(c){return c===-9007199254740991?this.plusMillis(9007199254740991):this.plusMillis(-c)};w.minusNanos=function(c){return c===-9007199254740991?this.plusNanos(9007199254740991):this.plusNanos(-c)};w.multipliedBy=function(c){if(c===0)return C.ZERO;if(c===1)return this;var A=J.safeMultiply(this._seconds,
c);c=J.safeMultiply(this._nanos,c);A+=J.intDiv(c,Ia.NANOS_PER_SECOND);c=J.intMod(c,Ia.NANOS_PER_SECOND);return C.ofSeconds(A,c)};w.dividedBy=function(c){if(c===0)throw new G("Cannot divide by zero");if(c===1)return this;var A=J.intDiv(this._seconds,c),P=J.roundDown((this._seconds/c-A)*Ia.NANOS_PER_SECOND);c=J.intDiv(this._nanos,c);return C.ofSeconds(A,P+c)};w.negated=function(){return this.multipliedBy(-1)};w.abs=function(){return this.isNegative()?this.negated():this};w.addTo=function(c){k(c,"temporal");
this._seconds!==0&&(c=c.plus(this._seconds,V.SECONDS));this._nanos!==0&&(c=c.plus(this._nanos,V.NANOS));return c};w.subtractFrom=function(c){k(c,"temporal");this._seconds!==0&&(c=c.minus(this._seconds,V.SECONDS));this._nanos!==0&&(c=c.minus(this._nanos,V.NANOS));return c};w.toDays=function(){return J.intDiv(this._seconds,Ia.SECONDS_PER_DAY)};w.toHours=function(){return J.intDiv(this._seconds,Ia.SECONDS_PER_HOUR)};w.toMinutes=function(){return J.intDiv(this._seconds,Ia.SECONDS_PER_MINUTE)};w.toMillis=
function(){var c=Math.round(J.safeMultiply(this._seconds,1E3));return c=J.safeAdd(c,J.intDiv(this._nanos,1E6))};w.toNanos=function(){var c=J.safeMultiply(this._seconds,Ia.NANOS_PER_SECOND);return c=J.safeAdd(c,this._nanos)};w.compareTo=function(c){k(c,"otherDuration");m(c,C,"otherDuration");var A=J.compareNumbers(this._seconds,c.seconds());return A!==0?A:this._nanos-c.nano()};w.equals=function(c){return this===c?!0:c instanceof C?this.seconds()===c.seconds()&&this.nano()===c.nano():!1};w.toString=
function(){if(this===C.ZERO)return"PT0S";var c=J.intDiv(this._seconds,Ia.SECONDS_PER_HOUR),A=J.intDiv(J.intMod(this._seconds,Ia.SECONDS_PER_HOUR),Ia.SECONDS_PER_MINUTE),P=J.intMod(this._seconds,Ia.SECONDS_PER_MINUTE),fa="PT";c!==0&&(fa+=c+"H");A!==0&&(fa+=A+"M");if(P===0&&this._nanos===0&&fa.length>2)return fa;fa=P<0&&this._nanos>0?P===-1?fa+"-0":fa+(P+1):fa+P;if(this._nanos>0)for(fa+=".",c=P<0?""+(2*Ia.NANOS_PER_SECOND-this._nanos):""+(Ia.NANOS_PER_SECOND+this._nanos),c=c.slice(1,c.length),fa+=c;fa.charAt(fa.length-
1)==="0";)fa=fa.slice(0,fa.length-1);return fa+"S"};w.toJSON=function(){return this.toString()};return C}(ba),ca=function(){},V=function(Z){function C(c,A){var P=Z.call(this)||this;P._name=c;P._duration=A;return P}e(C,Z);var w=C.prototype;w.duration=function(){return this._duration};w.isDurationEstimated=function(){return this.isDateBased()||this===C.FOREVER};w.isDateBased=function(){return this.compareTo(C.DAYS)>=0&&this!==C.FOREVER};w.isTimeBased=function(){return this.compareTo(C.DAYS)<0};w.isSupportedBy=
function(c){if(this===C.FOREVER)return!1;try{return c.plus(1,this),!0}catch(A){try{return c.plus(-1,this),!0}catch(P){return!1}}};w.addTo=function(c,A){return c.plus(A,this)};w.between=function(c,A){return c.until(A,this)};w.toString=function(){return this._name};w.compareTo=function(c){return this.duration().compareTo(c.duration())};return C}(Y),xa=function(){function Z(){}var C=Z.prototype;C.isDateBased=function(){p("isDateBased")};C.isTimeBased=function(){p("isTimeBased")};C.baseUnit=function(){p("baseUnit")};
C.rangeUnit=function(){p("rangeUnit")};C.range=function(){p("range")};C.rangeRefinedBy=function(w){p("rangeRefinedBy")};C.getFrom=function(w){p("getFrom")};C.adjustInto=function(w,c){p("adjustInto")};C.isSupportedBy=function(w){p("isSupportedBy")};C.displayName=function(){p("displayName")};C.equals=function(w){p("equals")};C.name=function(){p("name")};return Z}(),na=function(){function Z(w,c,A,P){f(!(w>c),"Smallest minimum value '"+w+"' must be less than largest minimum value '"+c+"'",I);f(!(A>P),
"Smallest maximum value '"+A+"' must be less than largest maximum value '"+P+"'",I);f(!(c>P),"Minimum value '"+c+"' must be less than maximum value '"+P+"'",I);this._minSmallest=w;this._minLargest=c;this._maxLargest=P;this._maxSmallest=A}var C=Z.prototype;C.isFixed=function(){return this._minSmallest===this._minLargest&&this._maxSmallest===this._maxLargest};C.minimum=function(){return this._minSmallest};C.largestMinimum=function(){return this._minLargest};C.maximum=function(){return this._maxLargest};
C.smallestMaximum=function(){return this._maxSmallest};C.isValidValue=function(w){return this.minimum()<=w&&w<=this.maximum()};C.checkValidValue=function(w,c){return this.isValidValue(w)?w:(w=c!=null?"Invalid value for "+c+" (valid values "+this.toString()+"): "+w:"Invalid value (valid values "+this.toString()+"): "+w,f(!1,w,y))};C.checkValidIntValue=function(w,c){if(this.isValidIntValue(w)===!1)throw new y("Invalid int value for "+c+": "+w);return w};C.isValidIntValue=function(w){return this.isIntValue()&&
this.isValidValue(w)};C.isIntValue=function(){return this.minimum()>=J.MIN_SAFE_INTEGER&&this.maximum()<=J.MAX_SAFE_INTEGER};C.equals=function(w){return w===this?!0:w instanceof Z?this._minSmallest===w._minSmallest&&this._minLargest===w._minLargest&&this._maxSmallest===w._maxSmallest&&this._maxLargest===w._maxLargest:!1};C.hashCode=function(){return J.hashCode(this._minSmallest,this._minLargest,this._maxSmallest,this._maxLargest)};C.toString=function(){var w=this.minimum()+(this.minimum()!==this.largestMinimum()?
"/"+this.largestMinimum():"");return w=w+" - "+(this.smallestMaximum()+(this.smallestMaximum()!==this.maximum()?"/"+this.maximum():""))};Z.of=function(){return arguments.length===2?new Z(arguments[0],arguments[0],arguments[1],arguments[1]):arguments.length===3?new Z(arguments[0],arguments[0],arguments[1],arguments[2]):arguments.length===4?new Z(arguments[0],arguments[1],arguments[2],arguments[3]):f(!1,"Invalid number of arguments "+arguments.length,I)};return Z}(),N=function(Z){function C(c,A,P,fa){var Da=
Z.call(this)||this;Da._name=c;Da._baseUnit=A;Da._rangeUnit=P;Da._range=fa;return Da}e(C,Z);C.byName=function(c){for(var A in C)if(C[A]&&C[A]instanceof C&&C[A].name()===c)return C[A]};var w=C.prototype;w.name=function(){return this._name};w.baseUnit=function(){return this._baseUnit};w.rangeUnit=function(){return this._rangeUnit};w.range=function(){return this._range};w.displayName=function(){return this.toString()};w.checkValidValue=function(c){return this.range().checkValidValue(c,this)};w.checkValidIntValue=
function(c){return this.range().checkValidIntValue(c,this)};w.isDateBased=function(){return this===C.DAY_OF_WEEK||this===C.ALIGNED_DAY_OF_WEEK_IN_MONTH||this===C.ALIGNED_DAY_OF_WEEK_IN_YEAR||this===C.DAY_OF_MONTH||this===C.DAY_OF_YEAR||this===C.EPOCH_DAY||this===C.ALIGNED_WEEK_OF_MONTH||this===C.ALIGNED_WEEK_OF_YEAR||this===C.MONTH_OF_YEAR||this===C.YEAR_OF_ERA||this===C.YEAR||this===C.ERA};w.isTimeBased=function(){return this===C.NANO_OF_SECOND||this===C.NANO_OF_DAY||this===C.MICRO_OF_SECOND||this===
C.MICRO_OF_DAY||this===C.MILLI_OF_SECOND||this===C.MILLI_OF_DAY||this===C.SECOND_OF_MINUTE||this===C.SECOND_OF_DAY||this===C.MINUTE_OF_HOUR||this===C.MINUTE_OF_DAY||this===C.HOUR_OF_AMPM||this===C.CLOCK_HOUR_OF_AMPM||this===C.HOUR_OF_DAY||this===C.CLOCK_HOUR_OF_DAY||this===C.AMPM_OF_DAY};w.rangeRefinedBy=function(c){return c.range(this)};w.getFrom=function(c){return c.getLong(this)};w.toString=function(){return this.name()};w.equals=function(c){return this===c};w.adjustInto=function(c,A){return c.with(this,
A)};w.isSupportedBy=function(c){return c.isSupported(this)};return C}(xa),pa=function(){function Z(){}Z.zoneId=function(){return Z.ZONE_ID};Z.chronology=function(){return Z.CHRONO};Z.precision=function(){return Z.PRECISION};Z.zone=function(){return Z.ZONE};Z.offset=function(){return Z.OFFSET};Z.localDate=function(){return Z.LOCAL_DATE};Z.localTime=function(){return Z.LOCAL_TIME};return Z}(),ra=function(){function Z(){}var C=Z.prototype;C.query=function(w){return w===pa.zoneId()||w===pa.chronology()||
w===pa.precision()?null:w.queryFrom(this)};C.get=function(w){return this.range(w).checkValidIntValue(this.getLong(w),w)};C.range=function(w){if(w instanceof N){if(this.isSupported(w))return w.range();throw new D("Unsupported field: "+w);}return w.rangeRefinedBy(this)};return Z}(),Ea=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);C.prototype.queryFrom=function(w){p("queryFrom")};return C}(W),Ua=function(Z){function C(c,A){var P=Z.call(this)||this;P._ordinal=c;P._name=A;return P}
e(C,Z);var w=C.prototype;w.ordinal=function(){return this._ordinal};w.name=function(){return this._name};C.values=function(){return jb.slice()};C.valueOf=function(c){var A=0;for(A;A<jb.length&&jb[A].name()!==c;A++);return C.of(A+1)};C.of=function(c){if(c<1||c>7)throw new y("Invalid value for DayOfWeek: "+c);return jb[c-1]};C.from=function(c){f(c!=null,"temporal",Q);if(c instanceof C)return c;try{return C.of(c.get(N.DAY_OF_WEEK))}catch(A){if(A instanceof y)throw new y("Unable to obtain DayOfWeek from TemporalAccessor: "+
c+", type "+(c.constructor!=null?c.constructor.name:""),A);throw A;}};w.value=function(){return this._ordinal+1};w.displayName=function(c,A){throw new I("Pattern using (localized) text not implemented yet!");};w.isSupported=function(c){return c instanceof N?c===N.DAY_OF_WEEK:c!=null&&c.isSupportedBy(this)};w.range=function(c){if(c===N.DAY_OF_WEEK)return c.range();if(c instanceof N)throw new D("Unsupported field: "+c);return c.rangeRefinedBy(this)};w.get=function(c){return c===N.DAY_OF_WEEK?this.value():
this.range(c).checkValidIntValue(this.getLong(c),c)};w.getLong=function(c){if(c===N.DAY_OF_WEEK)return this.value();if(c instanceof N)throw new D("Unsupported field: "+c);return c.getFrom(this)};w.plus=function(c){c=J.floorMod(c,7);return jb[J.floorMod(this._ordinal+(c+7),7)]};w.minus=function(c){return this.plus(-1*J.floorMod(c,7))};w.query=function(c){if(c===pa.precision())return V.DAYS;if(c===pa.localDate()||c===pa.localTime()||c===pa.chronology()||c===pa.zone()||c===pa.zoneId()||c===pa.offset())return null;
f(c!=null,"query",Q);return c.queryFrom(this)};w.adjustInto=function(c){k(c,"temporal");return c.with(N.DAY_OF_WEEK,this.value())};w.equals=function(c){return this===c};w.toString=function(){return this._name};w.compareTo=function(c){k(c,"other");m(c,C,"other");return this._ordinal-c._ordinal};w.toJSON=function(){return this.toString()};return C}(ra),jb,eb=function(Z){function C(c,A){var P=Z.call(this)||this;P._value=J.safeToInt(c);P._name=A;return P}e(C,Z);var w=C.prototype;w.value=function(){return this._value};
w.ordinal=function(){return this._value-1};w.name=function(){return this._name};w.displayName=function(c,A){throw new I("Pattern using (localized) text not implemented yet!");};w.isSupported=function(c){return null===c?!1:c instanceof N?c===N.MONTH_OF_YEAR:c!=null&&c.isSupportedBy(this)};w.get=function(c){return c===N.MONTH_OF_YEAR?this.value():this.range(c).checkValidIntValue(this.getLong(c),c)};w.getLong=function(c){if(c===N.MONTH_OF_YEAR)return this.value();if(c instanceof N)throw new D("Unsupported field: "+
c);return c.getFrom(this)};w.plus=function(c){c=J.intMod(c,12)+12;c=J.intMod(this.value()+c,12);return C.of(c===0?12:c)};w.minus=function(c){return this.plus(-1*J.intMod(c,12))};w.length=function(c){switch(this){case C.FEBRUARY:return c?29:28;case C.APRIL:case C.JUNE:case C.SEPTEMBER:case C.NOVEMBER:return 30;default:return 31}};w.minLength=function(){switch(this){case C.FEBRUARY:return 28;case C.APRIL:case C.JUNE:case C.SEPTEMBER:case C.NOVEMBER:return 30;default:return 31}};w.maxLength=function(){switch(this){case C.FEBRUARY:return 29;
case C.APRIL:case C.JUNE:case C.SEPTEMBER:case C.NOVEMBER:return 30;default:return 31}};w.firstDayOfYear=function(c){c=c?1:0;switch(this){case C.JANUARY:return 1;case C.FEBRUARY:return 32;case C.MARCH:return 60+c;case C.APRIL:return 91+c;case C.MAY:return 121+c;case C.JUNE:return 152+c;case C.JULY:return 182+c;case C.AUGUST:return 213+c;case C.SEPTEMBER:return 244+c;case C.OCTOBER:return 274+c;case C.NOVEMBER:return 305+c;default:return 335+c}};w.firstMonthOfQuarter=function(){switch(this){case C.JANUARY:case C.FEBRUARY:case C.MARCH:return C.JANUARY;
case C.APRIL:case C.MAY:case C.JUNE:return C.APRIL;case C.JULY:case C.AUGUST:case C.SEPTEMBER:return C.JULY;default:return C.OCTOBER}};w.query=function(c){f(c!=null,"query() parameter must not be null",y);return c===pa.chronology()?ac.INSTANCE:c===pa.precision()?V.MONTHS:Z.prototype.query.call(this,c)};w.toString=function(){switch(this){case C.JANUARY:return"JANUARY";case C.FEBRUARY:return"FEBRUARY";case C.MARCH:return"MARCH";case C.APRIL:return"APRIL";case C.MAY:return"MAY";case C.JUNE:return"JUNE";
case C.JULY:return"JULY";case C.AUGUST:return"AUGUST";case C.SEPTEMBER:return"SEPTEMBER";case C.OCTOBER:return"OCTOBER";case C.NOVEMBER:return"NOVEMBER";case C.DECEMBER:return"DECEMBER";default:return"unknown Month, value: "+this.value()}};w.toJSON=function(){return this.toString()};w.adjustInto=function(c){return c.with(N.MONTH_OF_YEAR,this.value())};w.compareTo=function(c){k(c,"other");m(c,C,"other");return this._value-c._value};w.equals=function(c){return this===c};C.valueOf=function(c){var A=
0;for(A;A<se.length&&se[A].name()!==c;A++);return C.of(A+1)};C.values=function(){return se.slice()};C.of=function(c){(c<1||c>12)&&f(!1,"Invalid value for MonthOfYear: "+c,y);return se[c-1]};C.from=function(c){if(c instanceof C)return c;try{return C.of(c.get(N.MONTH_OF_YEAR))}catch(A){throw new y("Unable to obtain Month from TemporalAccessor: "+c+" of type "+(c&&c.constructor!=null?c.constructor.name:""),A);}};return C}(ra),rc=/([-+]?)P(?:([-+]?[0-9]+)Y)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)W)?(?:([-+]?[0-9]+)D)?/,
xb=function(Z){function C(c,A,P){var fa=Z.call(this)||this;c=J.safeToInt(c);A=J.safeToInt(A);P=J.safeToInt(P);if(c===0&&A===0&&P===0)return C.ZERO||(fa._years=c,fa._months=A,fa._days=P,C.ZERO=g(fa)),C.ZERO||g(fa);fa._years=c;fa._months=A;fa._days=P;return fa}e(C,Z);C.ofYears=function(c){return C.create(c,0,0)};C.ofMonths=function(c){return C.create(0,c,0)};C.ofWeeks=function(c){return C.create(0,0,J.safeMultiply(c,7))};C.ofDays=function(c){return C.create(0,0,c)};C.of=function(c,A,P){return C.create(c,
A,P)};C.from=function(c){if(c instanceof C)return c;k(c,"amount");for(var A=0,P=0,fa=0,Da=c.units(),kb=0;kb<Da.length;kb++){var zb=Da[kb],Hc=c.get(zb);if(zb===V.YEARS)A=J.safeToInt(Hc);else if(zb===V.MONTHS)P=J.safeToInt(Hc);else if(zb===V.DAYS)fa=J.safeToInt(Hc);else throw new y("Unit must be Years, Months or Days, but was "+zb);}return C.create(A,P,fa)};C.between=function(c,A){k(c,"startDate");k(A,"endDate");m(c,tb,"startDate");m(A,tb,"endDate");return c.until(A)};C.parse=function(c){k(c,"text");
try{return C._parse(c)}catch(A){if(A instanceof G)throw new B("Text cannot be parsed to a Period",c,0,A);throw A;}};C._parse=function(c){var A=rc.exec(c);if(A!=null){var P="-"===A[1]?-1:1,fa=A[2],Da=A[3],kb=A[4];A=A[5];if(fa!=null||Da!=null||kb!=null||A!=null)return fa=C._parseNumber(c,fa,P),Da=C._parseNumber(c,Da,P),kb=C._parseNumber(c,kb,P),c=C._parseNumber(c,A,P),c=J.safeAdd(c,J.safeMultiply(kb,7)),C.create(fa,Da,c)}throw new B("Text cannot be parsed to a Period",c,0);};C._parseNumber=function(c,
A,P){if(A==null)return 0;c=J.parseInt(A);return J.safeMultiply(c,P)};C.create=function(c,A,P){return new C(c,A,P)};var w=C.prototype;w.units=function(){return[V.YEARS,V.MONTHS,V.DAYS]};w.chronology=function(){return ac.INSTANCE};w.get=function(c){if(c===V.YEARS)return this._years;if(c===V.MONTHS)return this._months;if(c===V.DAYS)return this._days;throw new D("Unsupported unit: "+c);};w.isZero=function(){return this===C.ZERO};w.isNegative=function(){return this._years<0||this._months<0||this._days<
0};w.years=function(){return this._years};w.months=function(){return this._months};w.days=function(){return this._days};w.withYears=function(c){return c===this._years?this:C.create(c,this._months,this._days)};w.withMonths=function(c){return c===this._months?this:C.create(this._years,c,this._days)};w.withDays=function(c){return c===this._days?this:C.create(this._years,this._months,c)};w.plus=function(c){c=C.from(c);return C.create(J.safeAdd(this._years,c._years),J.safeAdd(this._months,c._months),J.safeAdd(this._days,
c._days))};w.plusYears=function(c){return c===0?this:C.create(J.safeToInt(J.safeAdd(this._years,c)),this._months,this._days)};w.plusMonths=function(c){return c===0?this:C.create(this._years,J.safeToInt(J.safeAdd(this._months,c)),this._days)};w.plusDays=function(c){return c===0?this:C.create(this._years,this._months,J.safeToInt(J.safeAdd(this._days,c)))};w.minus=function(c){c=C.from(c);return C.create(J.safeSubtract(this._years,c._years),J.safeSubtract(this._months,c._months),J.safeSubtract(this._days,
c._days))};w.minusYears=function(c){return this.plusYears(-1*c)};w.minusMonths=function(c){return this.plusMonths(-1*c)};w.minusDays=function(c){return this.plusDays(-1*c)};w.multipliedBy=function(c){return this===C.ZERO||c===1?this:C.create(J.safeMultiply(this._years,c),J.safeMultiply(this._months,c),J.safeMultiply(this._days,c))};w.negated=function(){return this.multipliedBy(-1)};w.normalized=function(){var c=this.toTotalMonths(),A=J.intDiv(c,12);c=J.intMod(c,12);return A===this._years&&c===this._months?
this:C.create(J.safeToInt(A),c,this._days)};w.toTotalMonths=function(){return this._years*12+this._months};w.addTo=function(c){k(c,"temporal");this._years!==0?c=this._months!==0?c.plus(this.toTotalMonths(),V.MONTHS):c.plus(this._years,V.YEARS):this._months!==0&&(c=c.plus(this._months,V.MONTHS));this._days!==0&&(c=c.plus(this._days,V.DAYS));return c};w.subtractFrom=function(c){k(c,"temporal");this._years!==0?c=this._months!==0?c.minus(this.toTotalMonths(),V.MONTHS):c.minus(this._years,V.YEARS):this._months!==
0&&(c=c.minus(this._months,V.MONTHS));this._days!==0&&(c=c.minus(this._days,V.DAYS));return c};w.equals=function(c){return this===c?!0:c instanceof C?this._years===c._years&&this._months===c._months&&this._days===c._days:!1};w.hashCode=function(){return J.hashCode(this._years,this._months,this._days)};w.toString=function(){if(this===C.ZERO)return"P0D";var c="P";this._years!==0&&(c+=""+this._years+"Y");this._months!==0&&(c+=""+this._months+"M");this._days!==0&&(c+=""+this._days+"D");return c};w.toJSON=
function(){return this.toString()};return C}(ba),Bb=function(){function Z(w){this._index=w;this._errorIndex=-1}var C=Z.prototype;C.getIndex=function(){return this._index};C.setIndex=function(w){this._index=w};C.getErrorIndex=function(){return this._errorIndex};C.setErrorIndex=function(w){this._errorIndex=w};return Z}(),bc=function(){function Z(){this._map={}}var C=Z.prototype;C.putAll=function(w){for(var c in w._map)this._map[c]=w._map[c];return this};C.containsKey=function(w){return this._map.hasOwnProperty(w.name())&&
this.get(w)!==void 0};C.get=function(w){return this._map[w.name()]};C.put=function(w,c){return this.set(w,c)};C.set=function(w,c){this._map[w.name()]=c;return this};C.retainAll=function(w){for(var c={},A=0;A<w.length;A++){var P=w[A].name();c[P]=this._map[P]}this._map=c;return this};C.remove=function(w){w=w.name();var c=this._map[w];this._map[w]=void 0;return c};C.keySet=function(){return this._map};C.clear=function(){this._map={}};return Z}(),qb=function(Z){function C(){return Z.apply(this,arguments)||
this}e(C,Z);return C}(W);qb.STRICT=new qb("STRICT");qb.SMART=new qb("SMART");qb.LENIENT=new qb("LENIENT");var cc=function(){function Z(){}Z.prototype.adjustInto=function(C){p("adjustInto")};return Z}(),Db=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=C.prototype;w.isSupported=function(c){p("isSupported")};w.minus=function(c,A){return arguments.length<2?this.minusAmount(c):this.minusAmountUnit(c,A)};w.minusAmount=function(c){p("minusAmount")};w.minusAmountUnit=function(c,
A){p("minusAmountUnit")};w.plus=function(c,A){return arguments.length<2?this.plusAmount(c):this.plusAmountUnit(c,A)};w.plusAmount=function(c){p("plusAmount")};w.plusAmountUnit=function(c,A){p("plusAmountUnit")};w.until=function(c,A){p("until")};w.with=function(c,A){return arguments.length<2?this.withAdjuster(c):this.withFieldValue(c,A)};w.withAdjuster=function(c){p("withAdjuster")};w.withFieldValue=function(c,A){p("withFieldValue")};return C}(ra),nc=function(Z){function C(){return Z.apply(this,arguments)||
this}e(C,Z);var w=C.prototype;w.withAdjuster=function(c){k(c,"adjuster");m(c,cc,"adjuster");return c.adjustInto(this)};w.plusAmount=function(c){k(c,"amount");m(c,ba,"amount");return c.addTo(this)};w.minusAmount=function(c){k(c,"amount");m(c,ba,"amount");return c.subtractFrom(this)};w.minusAmountUnit=function(c,A){k(c,"amountToSubtract");k(A,"unit");m(A,Y,"unit");return c===-9007199254740991?this.plusAmountUnit(9007199254740991,A).plusAmountUnit(1,A):this.plusAmount(-c,A)};return C}(Db),Bc=function(Z){function C(){return Z.apply(this,
arguments)||this}e(C,Z);var w=C.prototype;w.isSupported=function(c){return c instanceof N||c instanceof V?c.isDateBased():c!=null&&c.isSupportedBy(this)};w.query=function(c){return c===pa.chronology()?this.chronology():c===pa.precision()?V.DAYS:c===pa.localDate()?tb.ofEpochDay(this.toEpochDay()):c===pa.localTime()||c===pa.zone()||c===pa.zoneId()||c===pa.offset()?null:Z.prototype.query.call(this,c)};w.adjustInto=function(c){return c.with(N.EPOCH_DAY,this.toEpochDay())};w.format=function(c){k(c,"formatter");
m(c,Eb,"formatter");return c.format(this)};return C}(nc),yb=function(){function Z(){}Z.startsWith=function(C,w){return C.indexOf(w)===0};Z.hashCode=function(C){var w=C.length;if(w===0)return 0;for(var c=0,A=0;A<w;A++){var P=C.charCodeAt(A);c=(c<<5)-c+P;c|=0}return J.smi(c)};return Z}(),lb=function(){function Z(){}Z.systemDefault=function(){throw new y("not supported operation");};Z.getAvailableZoneIds=function(){throw new y("not supported operation");};Z.of=function(w){throw new y("not supported operation"+
w);};Z.ofOffset=function(w,c){throw new y("not supported operation"+w+c);};Z.from=function(w){throw new y("not supported operation"+w);};var C=Z.prototype;C.id=function(){p("ZoneId.id")};C.rules=function(){p("ZoneId.rules")};C.normalized=function(){var w=this.rules();return w.isFixedOffset()?w.offset(hc.EPOCH):this};C.equals=function(w){return this===w?!0:w instanceof Z?this.id()===w.id():!1};C.hashCode=function(){return yb.hashCode(this.id())};C.toString=function(){return this.id()};C.toJSON=function(){return this.toString()};
return Z}(),Tb=function(){function Z(){}Z.of=function(w){k(w,"offset");return new yc(w)};var C=Z.prototype;C.isFixedOffset=function(){p("ZoneRules.isFixedOffset")};C.offset=function(w){return w instanceof hc?this.offsetOfInstant(w):this.offsetOfLocalDateTime(w)};C.offsetOfInstant=function(w){p("ZoneRules.offsetInstant")};C.offsetOfEpochMilli=function(w){p("ZoneRules.offsetOfEpochMilli")};C.offsetOfLocalDateTime=function(w){p("ZoneRules.offsetLocalDateTime")};C.validOffsets=function(w){p("ZoneRules.validOffsets")};
C.transition=function(w){p("ZoneRules.transition")};C.standardOffset=function(w){p("ZoneRules.standardOffset")};C.daylightSavings=function(w){p("ZoneRules.daylightSavings")};C.isDaylightSavings=function(w){p("ZoneRules.isDaylightSavings")};C.isValidOffset=function(w,c){p("ZoneRules.isValidOffset")};C.nextTransition=function(w){p("ZoneRules.nextTransition")};C.previousTransition=function(w){p("ZoneRules.previousTransition")};C.transitions=function(){p("ZoneRules.transitions")};C.transitionRules=function(){p("ZoneRules.transitionRules")};
C.toString=function(){p("ZoneRules.toString")};C.toJSON=function(){return this.toString()};return Z}(),yc=function(Z){function C(c){var A=Z.call(this)||this;A._offset=c;return A}e(C,Z);var w=C.prototype;w.isFixedOffset=function(){return!0};w.offsetOfInstant=function(){return this._offset};w.offsetOfEpochMilli=function(){return this._offset};w.offsetOfLocalDateTime=function(){return this._offset};w.validOffsets=function(){return[this._offset]};w.transition=function(){return null};w.standardOffset=
function(){return this._offset};w.daylightSavings=function(){return S.ZERO};w.isDaylightSavings=function(){return!1};w.isValidOffset=function(c,A){return this._offset.equals(A)};w.nextTransition=function(){return null};w.previousTransition=function(){return null};w.transitions=function(){return[]};w.transitionRules=function(){return[]};w.equals=function(c){return this===c?!0:c instanceof C?this._offset.equals(c._offset):!1};w.toString=function(){return"FixedRules:"+this._offset.toString()};return C}(Tb),
Ha={},fb={},ab=function(Z){function C(c){var A=Z.call(this)||this;C._validateTotalSeconds(c);A._totalSeconds=J.safeToInt(c);A._rules=Tb.of(g(A));A._id=C._buildId(c);return A}e(C,Z);var w=C.prototype;w.totalSeconds=function(){return this._totalSeconds};w.id=function(){return this._id};C._buildId=function(c){if(c===0)return"Z";var A=Math.abs(c),P=J.intDiv(A,Ia.SECONDS_PER_HOUR),fa=J.intMod(J.intDiv(A,Ia.SECONDS_PER_MINUTE),Ia.MINUTES_PER_HOUR);c=(c<0?"-":"+")+(P<10?"0":"")+P+(fa<10?":0":":")+fa;A=J.intMod(A,
Ia.SECONDS_PER_MINUTE);A!==0&&(c+=(A<10?":0":":")+A);return c};C._validateTotalSeconds=function(c){if(Math.abs(c)>C.MAX_SECONDS)throw new y("Zone offset not in valid range: -18:00 to +18:00");};C._validate=function(c,A,P){if(c<-18||c>18)throw new y("Zone offset hours not in valid range: value "+c+" is not in the range -18 to 18");if(c>0){if(A<0||P<0)throw new y("Zone offset minutes and seconds must be positive because hours is positive");}else if(c<0){if(A>0||P>0)throw new y("Zone offset minutes and seconds must be negative because hours is negative");
}else if(A>0&&P<0||A<0&&P>0)throw new y("Zone offset minutes and seconds must have the same sign");if(Math.abs(A)>59)throw new y("Zone offset minutes not in valid range: abs(value) "+Math.abs(A)+" is not in the range 0 to 59");if(Math.abs(P)>59)throw new y("Zone offset seconds not in valid range: abs(value) "+Math.abs(P)+" is not in the range 0 to 59");if(Math.abs(c)===18&&(Math.abs(A)>0||Math.abs(P)>0))throw new y("Zone offset not in valid range: -18:00 to +18:00");};C.of=function(c){k(c,"offsetId");
var A=fb[c];if(A!=null)return A;var P;switch(c.length){case 2:c=c[0]+"0"+c[1];case 3:A=C._parseNumber(c,1,!1);var fa=P=0;break;case 5:A=C._parseNumber(c,1,!1);P=C._parseNumber(c,3,!1);fa=0;break;case 6:A=C._parseNumber(c,1,!1);P=C._parseNumber(c,4,!0);fa=0;break;case 7:A=C._parseNumber(c,1,!1);P=C._parseNumber(c,3,!1);fa=C._parseNumber(c,5,!1);break;case 9:A=C._parseNumber(c,1,!1);P=C._parseNumber(c,4,!0);fa=C._parseNumber(c,7,!0);break;default:throw new y("Invalid ID for ZoneOffset, invalid format: "+
c);}var Da=c[0];if(Da!=="+"&&Da!=="-")throw new y("Invalid ID for ZoneOffset, plus/minus not found when expected: "+c);return Da==="-"?C.ofHoursMinutesSeconds(-A,-P,-fa):C.ofHoursMinutesSeconds(A,P,fa)};C._parseNumber=function(c,A,P){if(P&&c[A-1]!==":")throw new y("Invalid ID for ZoneOffset, colon not found when expected: "+c);P=c[A];A=c[A+1];if(P<"0"||P>"9"||A<"0"||A>"9")throw new y("Invalid ID for ZoneOffset, non numeric characters found: "+c);return(P.charCodeAt(0)-48)*10+(A.charCodeAt(0)-48)};
C.ofHours=function(c){return C.ofHoursMinutesSeconds(c,0,0)};C.ofHoursMinutes=function(c,A){return C.ofHoursMinutesSeconds(c,A,0)};C.ofHoursMinutesSeconds=function(c,A,P){C._validate(c,A,P);return C.ofTotalSeconds(c*Ia.SECONDS_PER_HOUR+A*Ia.SECONDS_PER_MINUTE+P)};C.ofTotalMinutes=function(c){return C.ofTotalSeconds(c*Ia.SECONDS_PER_MINUTE)};C.ofTotalSeconds=function(c){if(c%(15*Ia.SECONDS_PER_MINUTE)===0){var A=Ha[c];A==null&&(A=new C(c),Ha[c]=A,fb[A.id()]=A);return A}return new C(c)};w.rules=function(){return this._rules};
w.get=function(c){return this.getLong(c)};w.getLong=function(c){if(c===N.OFFSET_SECONDS)return this._totalSeconds;if(c instanceof N)throw new y("Unsupported field: "+c);return c.getFrom(this)};w.query=function(c){k(c,"query");return c===pa.offset()||c===pa.zone()?this:c===pa.localDate()||c===pa.localTime()||c===pa.precision()||c===pa.chronology()||c===pa.zoneId()?null:c.queryFrom(this)};w.adjustInto=function(c){return c.with(N.OFFSET_SECONDS,this._totalSeconds)};w.compareTo=function(c){k(c,"other");
return c._totalSeconds-this._totalSeconds};w.equals=function(c){return this===c?!0:c instanceof C?this._totalSeconds===c._totalSeconds:!1};w.hashCode=function(){return this._totalSeconds};w.toString=function(){return this._id};return C}(lb),Qb=function(Z){function C(){var c=Z.call(this)||this;c.fieldValues=new bc;c.chrono=null;c.zone=null;c.date=null;c.time=null;c.leapSecond=!1;c.excessDays=null;return c}e(C,Z);C.create=function(c,A){var P=new C;P._addFieldValue(c,A);return P};var w=C.prototype;w.getFieldValue0=
function(c){return this.fieldValues.get(c)};w._addFieldValue=function(c,A){k(c,"field");var P=this.getFieldValue0(c);if(P!=null&&P!==A)throw new y("Conflict found: "+c+" "+P+" differs from "+c+" "+A+": "+this);return this._putFieldValue0(c,A)};w._putFieldValue0=function(c,A){this.fieldValues.put(c,A);return this};w.resolve=function(c,A){A!=null&&this.fieldValues.retainAll(A);this._mergeDate(c);this._mergeTime(c);this._resolveTimeInferZeroes(c);this.excessDays!=null&&this.excessDays.isZero()===!1&&
this.date!=null&&this.time!=null&&(this.date=this.date.plus(this.excessDays),this.excessDays=xb.ZERO);this._resolveInstant();return this};w._mergeDate=function(c){this._checkDate(ac.INSTANCE.resolveDate(this.fieldValues,c))};w._checkDate=function(c){if(c!=null){this._addObject(c);for(var A in this.fieldValues.keySet()){var P=N.byName(A);if(P&&this.fieldValues.get(P)!==void 0&&P.isDateBased()){var fa=void 0;try{fa=c.getLong(P)}catch(kb){if(kb instanceof y)continue;else throw kb;}var Da=this.fieldValues.get(P);
if(fa!==Da)throw new y("Conflict found: Field "+P+" "+fa+" differs from "+P+" "+Da+" derived from "+c);}}}};w._mergeTime=function(c){if(this.fieldValues.containsKey(N.CLOCK_HOUR_OF_DAY)){var A=this.fieldValues.remove(N.CLOCK_HOUR_OF_DAY);c===qb.LENIENT||c===qb.SMART&&A===0||N.CLOCK_HOUR_OF_DAY.checkValidValue(A);this._addFieldValue(N.HOUR_OF_DAY,A===24?0:A)}this.fieldValues.containsKey(N.CLOCK_HOUR_OF_AMPM)&&(A=this.fieldValues.remove(N.CLOCK_HOUR_OF_AMPM),c===qb.LENIENT||c===qb.SMART&&A===0||N.CLOCK_HOUR_OF_AMPM.checkValidValue(A),
this._addFieldValue(N.HOUR_OF_AMPM,A===12?0:A));c!==qb.LENIENT&&(this.fieldValues.containsKey(N.AMPM_OF_DAY)&&N.AMPM_OF_DAY.checkValidValue(this.fieldValues.get(N.AMPM_OF_DAY)),this.fieldValues.containsKey(N.HOUR_OF_AMPM)&&N.HOUR_OF_AMPM.checkValidValue(this.fieldValues.get(N.HOUR_OF_AMPM)));if(this.fieldValues.containsKey(N.AMPM_OF_DAY)&&this.fieldValues.containsKey(N.HOUR_OF_AMPM)){A=this.fieldValues.remove(N.AMPM_OF_DAY);var P=this.fieldValues.remove(N.HOUR_OF_AMPM);this._addFieldValue(N.HOUR_OF_DAY,
A*12+P)}this.fieldValues.containsKey(N.NANO_OF_DAY)&&(A=this.fieldValues.remove(N.NANO_OF_DAY),c!==qb.LENIENT&&N.NANO_OF_DAY.checkValidValue(A),this._addFieldValue(N.SECOND_OF_DAY,J.intDiv(A,1E9)),this._addFieldValue(N.NANO_OF_SECOND,J.intMod(A,1E9)));this.fieldValues.containsKey(N.MICRO_OF_DAY)&&(A=this.fieldValues.remove(N.MICRO_OF_DAY),c!==qb.LENIENT&&N.MICRO_OF_DAY.checkValidValue(A),this._addFieldValue(N.SECOND_OF_DAY,J.intDiv(A,1E6)),this._addFieldValue(N.MICRO_OF_SECOND,J.intMod(A,1E6)));this.fieldValues.containsKey(N.MILLI_OF_DAY)&&
(A=this.fieldValues.remove(N.MILLI_OF_DAY),c!==qb.LENIENT&&N.MILLI_OF_DAY.checkValidValue(A),this._addFieldValue(N.SECOND_OF_DAY,J.intDiv(A,1E3)),this._addFieldValue(N.MILLI_OF_SECOND,J.intMod(A,1E3)));this.fieldValues.containsKey(N.SECOND_OF_DAY)&&(A=this.fieldValues.remove(N.SECOND_OF_DAY),c!==qb.LENIENT&&N.SECOND_OF_DAY.checkValidValue(A),this._addFieldValue(N.HOUR_OF_DAY,J.intDiv(A,3600)),this._addFieldValue(N.MINUTE_OF_HOUR,J.intMod(J.intDiv(A,60),60)),this._addFieldValue(N.SECOND_OF_MINUTE,
J.intMod(A,60)));this.fieldValues.containsKey(N.MINUTE_OF_DAY)&&(A=this.fieldValues.remove(N.MINUTE_OF_DAY),c!==qb.LENIENT&&N.MINUTE_OF_DAY.checkValidValue(A),this._addFieldValue(N.HOUR_OF_DAY,J.intDiv(A,60)),this._addFieldValue(N.MINUTE_OF_HOUR,J.intMod(A,60)));c!==qb.LENIENT&&(this.fieldValues.containsKey(N.MILLI_OF_SECOND)&&N.MILLI_OF_SECOND.checkValidValue(this.fieldValues.get(N.MILLI_OF_SECOND)),this.fieldValues.containsKey(N.MICRO_OF_SECOND)&&N.MICRO_OF_SECOND.checkValidValue(this.fieldValues.get(N.MICRO_OF_SECOND)));
this.fieldValues.containsKey(N.MILLI_OF_SECOND)&&this.fieldValues.containsKey(N.MICRO_OF_SECOND)&&(c=this.fieldValues.remove(N.MILLI_OF_SECOND),A=this.fieldValues.get(N.MICRO_OF_SECOND),this._putFieldValue0(N.MICRO_OF_SECOND,c*1E3+J.intMod(A,1E3)));this.fieldValues.containsKey(N.MICRO_OF_SECOND)&&this.fieldValues.containsKey(N.NANO_OF_SECOND)&&(c=this.fieldValues.get(N.NANO_OF_SECOND),this._putFieldValue0(N.MICRO_OF_SECOND,J.intDiv(c,1E3)),this.fieldValues.remove(N.MICRO_OF_SECOND));this.fieldValues.containsKey(N.MILLI_OF_SECOND)&&
this.fieldValues.containsKey(N.NANO_OF_SECOND)&&(c=this.fieldValues.get(N.NANO_OF_SECOND),this._putFieldValue0(N.MILLI_OF_SECOND,J.intDiv(c,1E6)),this.fieldValues.remove(N.MILLI_OF_SECOND));this.fieldValues.containsKey(N.MICRO_OF_SECOND)?(c=this.fieldValues.remove(N.MICRO_OF_SECOND),this._putFieldValue0(N.NANO_OF_SECOND,c*1E3)):this.fieldValues.containsKey(N.MILLI_OF_SECOND)&&(c=this.fieldValues.remove(N.MILLI_OF_SECOND),this._putFieldValue0(N.NANO_OF_SECOND,c*1E6))};w._resolveTimeInferZeroes=function(c){var A=
this.fieldValues.get(N.HOUR_OF_DAY),P=this.fieldValues.get(N.MINUTE_OF_HOUR),fa=this.fieldValues.get(N.SECOND_OF_MINUTE),Da=this.fieldValues.get(N.NANO_OF_SECOND);A==null||P==null&&(fa!=null||Da!=null)||P!=null&&fa==null&&Da!=null||(c!==qb.LENIENT?A!=null&&(c!==qb.SMART||A!==24||P!=null&&P!==0||fa!=null&&fa!==0||Da!=null&&Da!==0||(A=0,this.excessDays=xb.ofDays(1)),c=N.HOUR_OF_DAY.checkValidIntValue(A),P!=null?(P=N.MINUTE_OF_HOUR.checkValidIntValue(P),fa!=null?(fa=N.SECOND_OF_MINUTE.checkValidIntValue(fa),
Da!=null?(Da=N.NANO_OF_SECOND.checkValidIntValue(Da),this._addObject(Ia.of(c,P,fa,Da))):this._addObject(Ia.of(c,P,fa))):Da==null&&this._addObject(Ia.of(c,P))):fa==null&&Da==null&&this._addObject(Ia.of(c,0))):A!=null&&(c=A,P!=null?fa!=null?(Da==null&&(Da=0),c=J.safeMultiply(c,36E11),c=J.safeAdd(c,J.safeMultiply(P,6E10)),c=J.safeAdd(c,J.safeMultiply(fa,1E9)),c=J.safeAdd(c,Da),Da=J.floorDiv(c,864E11),P=J.floorMod(c,864E11),this._addObject(Ia.ofNanoOfDay(P)),this.excessDays=xb.ofDays(Da)):(Da=J.safeMultiply(c,
3600),Da=J.safeAdd(Da,J.safeMultiply(P,60)),P=J.floorDiv(Da,86400),Da=J.floorMod(Da,86400),this._addObject(Ia.ofSecondOfDay(Da)),this.excessDays=xb.ofDays(P)):(Da=J.safeToInt(J.floorDiv(c,24)),c=J.floorMod(c,24),this._addObject(Ia.of(c,0)),this.excessDays=xb.ofDays(Da))),this.fieldValues.remove(N.HOUR_OF_DAY),this.fieldValues.remove(N.MINUTE_OF_HOUR),this.fieldValues.remove(N.SECOND_OF_MINUTE),this.fieldValues.remove(N.NANO_OF_SECOND))};w._addObject=function(c){c instanceof Bc?this.date=c:c instanceof
Ia&&(this.time=c)};w._resolveInstant=function(){if(this.date!=null&&this.time!=null){var c=this.fieldValues.get(N.OFFSET_SECONDS);c!=null?(c=ab.ofTotalSeconds(c),c=this.date.atTime(this.time).atZone(c).getLong(N.INSTANT_SECONDS),this.fieldValues.put(N.INSTANT_SECONDS,c)):this.zone!=null&&(c=this.date.atTime(this.time).atZone(this.zone).getLong(N.INSTANT_SECONDS),this.fieldValues.put(N.INSTANT_SECONDS,c))}};w.build=function(c){return c.queryFrom(this)};w.isSupported=function(c){return c==null?!1:this.fieldValues.containsKey(c)&&
this.fieldValues.get(c)!==void 0||this.date!=null&&this.date.isSupported(c)||this.time!=null&&this.time.isSupported(c)};w.getLong=function(c){k(c,"field");var A=this.getFieldValue0(c);if(A==null){if(this.date!=null&&this.date.isSupported(c))return this.date.getLong(c);if(this.time!=null&&this.time.isSupported(c))return this.time.getLong(c);throw new y("Field not found: "+c);}return A};w.query=function(c){return c===pa.zoneId()?this.zone:c===pa.chronology()?this.chrono:c===pa.localDate()?this.date!=
null?tb.from(this.date):null:c===pa.localTime()?this.time:c!==pa.zone()&&c!==pa.offset()&&c===pa.precision()?null:c.queryFrom(this)};return C}(ra),fc=function(){function Z(){if(arguments.length===1){if(arguments[0]instanceof Z){this._constructorSelf.apply(this,arguments);return}this._constructorFormatter.apply(this,arguments)}else this._constructorParam.apply(this,arguments);this._strict=this._caseSensitive=!0;this._parsed=[new oc(this)]}var C=Z.prototype;C._constructorParam=function(w,c,A){this._locale=
w;this._symbols=c;this._overrideChronology=A};C._constructorFormatter=function(w){this._locale=w.locale();this._symbols=w.decimalStyle();this._overrideChronology=w.chronology()};C._constructorSelf=function(w){this._locale=w._locale;this._symbols=w._symbols;this._overrideChronology=w._overrideChronology;this._overrideZone=w._overrideZone;this._caseSensitive=w._caseSensitive;this._strict=w._strict;this._parsed=[new oc(this)]};C.copy=function(){return new Z(this)};C.symbols=function(){return this._symbols};
C.isStrict=function(){return this._strict};C.setStrict=function(w){this._strict=w};C.locale=function(){return this._locale};C.setLocale=function(w){this._locale=w};C.startOptional=function(){this._parsed.push(this.currentParsed().copy())};C.endOptional=function(w){w?this._parsed.splice(this._parsed.length-2,1):this._parsed.splice(this._parsed.length-1,1)};C.isCaseSensitive=function(){return this._caseSensitive};C.setCaseSensitive=function(w){this._caseSensitive=w};C.subSequenceEquals=function(w,c,
A,P,fa){if(c+fa>w.length||P+fa>A.length)return!1;this.isCaseSensitive()||(w=w.toLowerCase(),A=A.toLowerCase());for(var Da=0;Da<fa;Da++)if(w[c+Da]!==A[P+Da])return!1;return!0};C.charEquals=function(w,c){return this.isCaseSensitive()?w===c:this.charEqualsIgnoreCase(w,c)};C.charEqualsIgnoreCase=function(w,c){return w===c||w.toLowerCase()===c.toLowerCase()};C.setParsedField=function(w,c,A,P){var fa=this.currentParsed().fieldValues,Da=fa.get(w);fa.set(w,c);return Da!=null&&Da!==c?~A:P};C.setParsedZone=
function(w){k(w,"zone");this.currentParsed().zone=w};C.getParsed=function(w){return this.currentParsed().fieldValues.get(w)};C.toParsed=function(){return this.currentParsed()};C.currentParsed=function(){return this._parsed[this._parsed.length-1]};C.setParsedLeapSecond=function(){this.currentParsed().leapSecond=!0};C.getEffectiveChronology=function(){var w=this.currentParsed().chrono;w==null&&(w=this._overrideChronology,w==null&&(w=ac.INSTANCE));return w};return Z}(),oc=function(Z){function C(c){var A=
Z.call(this)||this;A.chrono=null;A.zone=null;A.fieldValues=new bc;A.leapSecond=!1;A.dateTimeParseContext=c;return A}e(C,Z);var w=C.prototype;w.copy=function(){var c=new C;c.chrono=this.chrono;c.zone=this.zone;c.fieldValues.putAll(this.fieldValues);c.leapSecond=this.leapSecond;c.dateTimeParseContext=this.dateTimeParseContext;return c};w.toString=function(){return this.fieldValues+", "+this.chrono+", "+this.zone};w.isSupported=function(c){return this.fieldValues.containsKey(c)};w.get=function(c){c=
this.fieldValues.get(c);f(c!=null);return c};w.query=function(c){return c===pa.chronology()?this.chrono:c===pa.zoneId()||c===pa.zone()?this.zone:Z.prototype.query.call(this,c)};w.toBuilder=function(){var c=new Qb;c.fieldValues.putAll(this.fieldValues);c.chrono=this.dateTimeParseContext.getEffectiveChronology();c.zone=this.zone!=null?this.zone:this.overrideZone;c.leapSecond=this.leapSecond;c.excessDays=this.excessDays;return c};return C}(Db),Dc=function(){function Z(w,c,A){arguments.length===2&&arguments[1]instanceof
Eb?(this._temporal=Z.adjust(w,c),this._locale=c.locale(),this._symbols=c.decimalStyle()):(this._temporal=w,this._locale=c,this._symbols=A);this._optional=0}Z.adjust=function(w,c){return w};var C=Z.prototype;C.symbols=function(){return this._symbols};C.startOptional=function(){this._optional++};C.endOptional=function(){this._optional--};C.getValueQuery=function(w){w=this._temporal.query(w);if(w==null&&this._optional===0)throw new y("Unable to extract value: "+this._temporal);return w};C.getValue=function(w){try{return this._temporal.getLong(w)}catch(c){if(c instanceof
y&&this._optional>0)return null;throw c;}};C.temporal=function(){return this._temporal};C.locale=function(){return this._locale};C.setDateTime=function(w){this._temporal=w};C.setLocale=function(w){this._locale=w};return Z}(),pc={},Qd=[0,90,181,273,0,91,182,274],Ec=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=C.prototype;w.isDateBased=function(){return!0};w.isTimeBased=function(){return!1};w._isIso=function(){return!0};C._getWeekRangeByLocalDate=function(c){c=C._getWeekBasedYear(c);
return na.of(1,C._getWeekRangeByYear(c))};C._getWeekRangeByYear=function(c){c=tb.of(c,1,1);return c.dayOfWeek()===Ua.THURSDAY||c.dayOfWeek()===Ua.WEDNESDAY&&c.isLeapYear()?53:52};C._getWeek=function(c){var A=c.dayOfWeek().ordinal(),P=c.dayOfYear()-1;A=P+(3-A);var fa=J.intDiv(A,7);A=A-fa*7-3;A<-3&&(A+=7);if(P<A)return C._getWeekRangeByLocalDate(c.withDayOfYear(180).minusYears(1)).maximum();P=J.intDiv(P-A,7)+1;P===53&&(A===-3||A===-2&&c.isLeapYear())===!1&&(P=1);return P};C._getWeekBasedYear=function(c){var A=
c.year(),P=c.dayOfYear();if(P<=3)c=c.dayOfWeek().ordinal(),P-c<-2&&A--;else if(P>=363){var fa=c.dayOfWeek().ordinal();P=P-363-(c.isLeapYear()?1:0);P-fa>=0&&A++}return A};w.displayName=function(){return this.toString()};w.resolve=function(){return null};w.name=function(){return this.toString()};return C}(xa),te=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=C.prototype;w.toString=function(){return"DayOfQuarter"};w.baseUnit=function(){return V.DAYS};w.rangeUnit=function(){return ld};
w.range=function(){return na.of(1,90,92)};w.isSupportedBy=function(c){return c.isSupported(N.DAY_OF_YEAR)&&c.isSupported(N.MONTH_OF_YEAR)&&c.isSupported(N.YEAR)&&this._isIso(c)};w.rangeRefinedBy=function(c){if(c.isSupported(this)===!1)throw new D("Unsupported field: DayOfQuarter");var A=c.getLong(md);return A===1?(c=c.getLong(N.YEAR),ac.isLeapYear(c)?na.of(1,91):na.of(1,90)):A===2?na.of(1,91):A===3||A===4?na.of(1,92):this.range()};w.getFrom=function(c){if(c.isSupported(this)===!1)throw new D("Unsupported field: DayOfQuarter");
var A=c.get(N.DAY_OF_YEAR),P=c.get(N.MONTH_OF_YEAR);c=c.getLong(N.YEAR);return A-Qd[J.intDiv(P-1,3)+(ac.isLeapYear(c)?4:0)]};w.adjustInto=function(c,A){var P=this.getFrom(c);this.range().checkValidValue(A,this);return c.with(N.DAY_OF_YEAR,c.getLong(N.DAY_OF_YEAR)+(A-P))};w.resolve=function(c,A,P){A=c.get(N.YEAR);var fa=c.get(md);if(A==null||fa==null)return null;var Da=N.YEAR.checkValidIntValue(A);A=c.get(Rd);P===qb.LENIENT?(P=tb.of(Da,1,1),P=P.plusMonths(J.safeMultiply(J.safeSubtract(fa,1),3)),P=
P.plusDays(J.safeSubtract(A,1))):(fa=md.range().checkValidIntValue(fa,md),P===qb.STRICT?(P=92,fa===1?P=ac.isLeapYear(Da)?91:90:fa===2&&(P=91),na.of(1,P).checkValidValue(A,this)):this.range().checkValidValue(A,this),P=tb.of(Da,(fa-1)*3+1,1).plusDays(A-1));c.remove(this);c.remove(N.YEAR);c.remove(md);return P};return C}(Ec),ue=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=C.prototype;w.toString=function(){return"QuarterOfYear"};w.baseUnit=function(){return ld};w.rangeUnit=
function(){return V.YEARS};w.range=function(){return na.of(1,4)};w.isSupportedBy=function(c){return c.isSupported(N.MONTH_OF_YEAR)&&this._isIso(c)};w.rangeRefinedBy=function(c){return this.range()};w.getFrom=function(c){if(c.isSupported(this)===!1)throw new D("Unsupported field: QuarterOfYear");c=c.getLong(N.MONTH_OF_YEAR);return J.intDiv(c+2,3)};w.adjustInto=function(c,A){var P=this.getFrom(c);this.range().checkValidValue(A,this);return c.with(N.MONTH_OF_YEAR,c.getLong(N.MONTH_OF_YEAR)+(A-P)*3)};
return C}(Ec),fe=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=C.prototype;w.toString=function(){return"WeekOfWeekBasedYear"};w.baseUnit=function(){return V.WEEKS};w.rangeUnit=function(){return qd};w.range=function(){return na.of(1,52,53)};w.isSupportedBy=function(c){return c.isSupported(N.EPOCH_DAY)&&this._isIso(c)};w.rangeRefinedBy=function(c){if(c.isSupported(this)===!1)throw new D("Unsupported field: WeekOfWeekBasedYear");return Ec._getWeekRangeByLocalDate(tb.from(c))};
w.getFrom=function(c){if(c.isSupported(this)===!1)throw new D("Unsupported field: WeekOfWeekBasedYear");return Ec._getWeek(tb.from(c))};w.adjustInto=function(c,A){this.range().checkValidValue(A,this);return c.plus(J.safeSubtract(A,this.getFrom(c)),V.WEEKS)};w.resolve=function(c,A,P){A=c.get(Ic);var fa=c.get(N.DAY_OF_WEEK);if(A==null||fa==null)return null;A=Ic.range().checkValidIntValue(A,Ic);var Da=c.get(Hd);P===qb.LENIENT?(P=fa,fa=0,P>7?(fa=J.intDiv(P-1,7),P=J.intMod(P-1,7)+1):P<1&&(fa=J.intDiv(P,
7)-1,P=J.intMod(P,7)+7),A=tb.of(A,1,4).plusWeeks(Da-1).plusWeeks(fa).with(N.DAY_OF_WEEK,P)):(fa=N.DAY_OF_WEEK.checkValidIntValue(fa),P===qb.STRICT?(P=tb.of(A,1,4),Ec._getWeekRangeByLocalDate(P).checkValidValue(Da,this)):this.range().checkValidValue(Da,this),A=tb.of(A,1,4).plusWeeks(Da-1).with(N.DAY_OF_WEEK,fa));c.remove(this);c.remove(Ic);c.remove(N.DAY_OF_WEEK);return A};w.displayName=function(){return"Week"};return C}(Ec),ge=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=
C.prototype;w.toString=function(){return"WeekBasedYear"};w.baseUnit=function(){return qd};w.rangeUnit=function(){return V.FOREVER};w.range=function(){return N.YEAR.range()};w.isSupportedBy=function(c){return c.isSupported(N.EPOCH_DAY)&&this._isIso(c)};w.rangeRefinedBy=function(c){return N.YEAR.range()};w.getFrom=function(c){if(c.isSupported(this)===!1)throw new D("Unsupported field: WeekBasedYear");return Ec._getWeekBasedYear(tb.from(c))};w.adjustInto=function(c,A){if(this.isSupportedBy(c)===!1)throw new D("Unsupported field: WeekBasedYear");
var P=this.range().checkValidIntValue(A,Ic),fa=tb.from(c);A=fa.get(N.DAY_OF_WEEK);fa=Ec._getWeek(fa);fa===53&&Ec._getWeekRangeByYear(P)===52&&(fa=52);P=tb.of(P,1,4);A=A-P.get(N.DAY_OF_WEEK)+(fa-1)*7;P=P.plusDays(A);return c.with(P)};return C}(Ec),ve=function(Z){function C(c,A){var P=Z.call(this)||this;P._name=c;P._duration=A;return P}e(C,Z);var w=C.prototype;w.duration=function(){return this._duration};w.isDurationEstimated=function(){return!0};w.isDateBased=function(){return!0};w.isTimeBased=function(){return!1};
w.isSupportedBy=function(c){return c.isSupported(N.EPOCH_DAY)};w.addTo=function(c,A){switch(this){case qd:return A=J.safeAdd(c.get(Ic),A),c.with(Ic,A);case ld:return c.plus(J.intDiv(A,256),V.YEARS).plus(J.intMod(A,256)*3,V.MONTHS);default:throw new K("Unreachable");}};w.between=function(c,A){switch(this){case qd:return J.safeSubtract(A.getLong(Ic),c.getLong(Ic));case ld:return J.intDiv(c.until(A,V.MONTHS),3);default:throw new K("Unreachable");}};w.toString=function(){return name};return C}(Y),Rd=
null,md=null,Hd=null,Ic=null,qd=null,ld=null,ic=function(){function Z(w,c,A,P){this._zeroDigit=w;this._zeroDigitCharCode=w.charCodeAt(0);this._positiveSign=c;this._negativeSign=A;this._decimalSeparator=P}var C=Z.prototype;C.positiveSign=function(){return this._positiveSign};C.withPositiveSign=function(w){return w===this._positiveSign?this:new Z(this._zeroDigit,w,this._negativeSign,this._decimalSeparator)};C.negativeSign=function(){return this._negativeSign};C.withNegativeSign=function(w){return w===
this._negativeSign?this:new Z(this._zeroDigit,this._positiveSign,w,this._decimalSeparator)};C.zeroDigit=function(){return this._zeroDigit};C.withZeroDigit=function(w){return w===this._zeroDigit?this:new Z(w,this._positiveSign,this._negativeSign,this._decimalSeparator)};C.decimalSeparator=function(){return this._decimalSeparator};C.withDecimalSeparator=function(w){return w===this._decimalSeparator?this:new Z(this._zeroDigit,this._positiveSign,this._negativeSign,w)};C.convertToDigit=function(w){w=w.charCodeAt(0)-
this._zeroDigitCharCode;return w>=0&&w<=9?w:-1};C.convertNumberToI18N=function(w){if(this._zeroDigit==="0")return w;for(var c=this._zeroDigitCharCode-48,A="",P=0;P<w.length;P++)A+=String.fromCharCode(w.charCodeAt(P)+c);return A};C.equals=function(w){return this===w?!0:w instanceof Z?this._zeroDigit===w._zeroDigit&&this._positiveSign===w._positiveSign&&this._negativeSign===w._negativeSign&&this._decimalSeparator===w._decimalSeparator:!1};C.hashCode=function(){return this._zeroDigit+this._positiveSign+
this._negativeSign+this._decimalSeparator};C.toString=function(){return"DecimalStyle["+this._zeroDigit+this._positiveSign+this._negativeSign+this._decimalSeparator+"]"};Z.of=function(){throw Error("not yet supported");};Z.availableLocales=function(){throw Error("not yet supported");};return Z}();ic.STANDARD=new ic("0","+","-",".");var Ib=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);C.prototype.parse=function(w,c,A){switch(this){case C.NORMAL:return!w||!c;case C.ALWAYS:case C.EXCEEDS_PAD:return!0;
default:return!c&&!A}};return C}(W);Ib.NORMAL=new Ib("NORMAL");Ib.NEVER=new Ib("NEVER");Ib.ALWAYS=new Ib("ALWAYS");Ib.EXCEEDS_PAD=new Ib("EXCEEDS_PAD");Ib.NOT_NEGATIVE=new Ib("NOT_NEGATIVE");var Rb=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=C.prototype;w.isStandalone=function(){switch(this){case C.FULL_STANDALONE:case C.SHORT_STANDALONE:case C.NARROW_STANDALONE:return!0;default:return!1}};w.asStandalone=function(){switch(this){case C.FULL:return C.FULL_STANDALONE;case C.SHORT:return C.SHORT_STANDALONE;
case C.NARROW:return C.NARROW_STANDALONE;default:return this}};w.asNormal=function(){switch(this){case C.FULL_STANDALONE:return C.FULL;case C.SHORT_STANDALONE:return C.SHORT;case C.NARROW_STANDALONE:return C.NARROW;default:return this}};return C}(W);Rb.FULL=new Rb("FULL");Rb.FULL_STANDALONE=new Rb("FULL_STANDALONE");Rb.SHORT=new Rb("SHORT");Rb.SHORT_STANDALONE=new Rb("SHORT_STANDALONE");Rb.NARROW=new Rb("NARROW");Rb.NARROW_STANDALONE=new Rb("NARROW_STANDALONE");var Sd=function(){function Z(w){if(w.length>
1)throw new I('invalid literal, too long: "'+w+'"');this._literal=w}var C=Z.prototype;C.print=function(w,c){c.append(this._literal);return!0};C.parse=function(w,c,A){if(A===c.length)return~A;c=c.charAt(A);return w.charEquals(this._literal,c)===!1?~A:A+this._literal.length};C.toString=function(){return this._literal==="'"?"''":"'"+this._literal+"'"};return Z}(),Td=function(){function Z(w,c){this._printerParsers=w;this._optional=c}var C=Z.prototype;C.withOptional=function(w){return w===this._optional?
this:new Z(this._printerParsers,w)};C.print=function(w,c){var A=c.length();this._optional&&w.startOptional();try{for(var P=0;P<this._printerParsers.length;P++)if(this._printerParsers[P].print(w,c)===!1){c.setLength(A);break}}finally{this._optional&&w.endOptional()}return!0};C.parse=function(w,c,A){if(this._optional){w.startOptional();for(var P=A,fa=0;fa<this._printerParsers.length;fa++)if(P=this._printerParsers[fa].parse(w,c,P),P<0)return w.endOptional(!1),A;w.endOptional(!0);return P}for(P=0;P<this._printerParsers.length&&
!(A=this._printerParsers[P].parse(w,c,A),A<0);P++);return A};C.toString=function(){var w="";if(this._printerParsers!=null){w+=this._optional?"[":"(";for(var c=0;c<this._printerParsers.length;c++)w+=this._printerParsers[c].toString();w+=this._optional?"]":")"}return w};return Z}(),Id=function(){function Z(w,c,A,P){k(w,"field");if(w.range().isFixed()===!1)throw new I("Field must have a fixed set of values: "+w);if(c<0||c>9)throw new I("Minimum width must be from 0 to 9 inclusive but was "+c);if(A<1||
A>9)throw new I("Maximum width must be from 1 to 9 inclusive but was "+A);if(A<c)throw new I("Maximum width must exceed or equal the minimum width but "+A+" \x3c "+c);this.field=w;this.minWidth=c;this.maxWidth=A;this.decimalPoint=P}var C=Z.prototype;C.print=function(w,c){var A=w.getValue(this.field);if(A===null)return!1;w=w.symbols();if(A===0){if(this.minWidth>0)for(this.decimalPoint&&c.append(w.decimalSeparator()),A=0;A<this.minWidth;A++)c.append(w.zeroDigit())}else{A=this.convertToFraction(A,w.zeroDigit());
A=A.substr(0,Math.min(Math.max(A.length,this.minWidth),this.maxWidth));if(A*1>0)for(;A.length>this.minWidth&&A[A.length-1]==="0";)A=A.substr(0,A.length-1);A=w.convertNumberToI18N(A);this.decimalPoint&&c.append(w.decimalSeparator());c.append(A)}return!0};C.parse=function(w,c,A){var P=w.isStrict()?this.minWidth:0,fa=w.isStrict()?this.maxWidth:9,Da=c.length;if(A===Da)return P>0?~A:A;if(this.decimalPoint){if(c[A]!==w.symbols().decimalSeparator())return P>0?~A:A;A++}P=A+P;if(P>Da)return~A;Da=Math.min(A+
fa,Da);var kb=0;for(fa=A;fa<Da;){var zb=c.charAt(fa++);zb=w.symbols().convertToDigit(zb);if(zb<0){if(fa<P)return~A;fa--;break}kb=kb*10+zb}c=this.convertFromFraction(kb,Math.pow(10,fa-A));return w.setParsedField(this.field,c,A,fa)};C.convertToFraction=function(w,c){var A=this.field.range();A.checkValidValue(w,this.field);var P=A.minimum();A=A.maximum()-P+1;for(w=""+J.intDiv((w-P)*1E9,A);w.length<9;)w=c+w;return w};C.convertFromFraction=function(w,c){var A=this.field.range(),P=A.minimum();A=A.maximum()-
P+1;return J.intDiv(w*A,c)};C.toString=function(){return"Fraction("+this.field+","+this.minWidth+","+this.maxWidth+(this.decimalPoint?",DecimalPoint":"")+")"};return Z}(),rd=[0,10,100,1E3,1E4,1E5,1E6,1E7,1E8,1E9],La=function(){function Z(w,c,A,P,fa){fa===void 0&&(fa=0);this._field=w;this._minWidth=c;this._maxWidth=A;this._signStyle=P;this._subsequentWidth=fa}var C=Z.prototype;C.field=function(){return this._field};C.minWidth=function(){return this._minWidth};C.maxWidth=function(){return this._maxWidth};
C.signStyle=function(){return this._signStyle};C.withFixedWidth=function(){return this._subsequentWidth===-1?this:new Z(this._field,this._minWidth,this._maxWidth,this._signStyle,-1)};C.withSubsequentWidth=function(w){return new Z(this._field,this._minWidth,this._maxWidth,this._signStyle,this._subsequentWidth+w)};C._isFixedWidth=function(){return this._subsequentWidth===-1||this._subsequentWidth>0&&this._minWidth===this._maxWidth&&this._signStyle===Ib.NOT_NEGATIVE};C.print=function(w,c){var A=w.getValue(this._field);
if(A==null)return!1;A=this._getValue(w,A);w=w.symbols();var P=""+Math.abs(A);if(P.length>this._maxWidth)throw new y("Field "+this._field+" cannot be printed as the value "+A+" exceeds the maximum print width of "+this._maxWidth);P=w.convertNumberToI18N(P);if(A>=0)switch(this._signStyle){case Ib.EXCEEDS_PAD:this._minWidth<15&&A>=rd[this._minWidth]&&c.append(w.positiveSign());break;case Ib.ALWAYS:c.append(w.positiveSign())}else switch(this._signStyle){case Ib.NORMAL:case Ib.EXCEEDS_PAD:case Ib.ALWAYS:c.append(w.negativeSign());
break;case Ib.NOT_NEGATIVE:throw new y("Field "+this._field+" cannot be printed as the value "+A+" cannot be negative according to the SignStyle");}for(A=0;A<this._minWidth-P.length;A++)c.append(w.zeroDigit());c.append(P);return!0};C.parse=function(w,c,A){var P=c.length;if(A===P)return~A;f(A>=0&&A<P);var fa=c.charAt(A),Da=!1,kb=!1;if(fa===w.symbols().positiveSign()){if(this._signStyle.parse(!0,w.isStrict(),this._minWidth===this._maxWidth)===!1)return~A;kb=!0;A++}else if(fa===w.symbols().negativeSign()){if(this._signStyle.parse(!1,
w.isStrict(),this._minWidth===this._maxWidth)===!1)return~A;Da=!0;A++}else if(this._signStyle===Ib.ALWAYS&&w.isStrict())return~A;var zb=w.isStrict()||this._isFixedWidth()?this._minWidth:1,Hc=A+zb;if(Hc>P)return~A;var Zc=(w.isStrict()||this._isFixedWidth()?this._maxWidth:9)+Math.max(this._subsequentWidth,0);fa=0;for(var Oc=A,Ud=0;Ud<2;Ud++){for(Zc=Math.min(Oc+Zc,P);Oc<Zc;){var Wc=c.charAt(Oc++);Wc=w.symbols().convertToDigit(Wc);if(Wc<0){Oc--;if(Oc<Hc)return~A;break}if(Oc-A>15)throw new G("number text exceeds length");
fa=fa*10+Wc}if(this._subsequentWidth>0&&Ud===0)Zc=Math.max(zb,Oc-A-this._subsequentWidth),Oc=A,fa=0;else break}if(Da){if(fa===0&&w.isStrict())return~(A-1);fa!==0&&(fa=-fa)}else if(this._signStyle===Ib.EXCEEDS_PAD&&w.isStrict())if(c=Oc-A,kb){if(c<=this._minWidth)return~(A-1)}else if(c>this._minWidth)return~A;return this._setValue(w,fa,A,Oc)};C._getValue=function(w,c){return c};C._setValue=function(w,c,A,P){return w.setParsedField(this._field,c,A,P)};C.toString=function(){return this._minWidth===1&&
this._maxWidth===15&&this._signStyle===Ib.NORMAL?"Value("+this._field+")":this._minWidth===this._maxWidth&&this._signStyle===Ib.NOT_NEGATIVE?"Value("+this._field+","+this._minWidth+")":"Value("+this._field+","+this._minWidth+","+this._maxWidth+","+this._signStyle+")"};return Z}(),sd=function(Z){function C(c,A,P,fa,Da){var kb=Z.call(this,c,A,P,Ib.NOT_NEGATIVE)||this;if(A<1||A>10)throw new I("The width must be from 1 to 10 inclusive but was "+A);if(P<1||P>10)throw new I("The maxWidth must be from 1 to 10 inclusive but was "+
P);if(P<A)throw new I("The maxWidth must be greater than the width");if(Da===null){if(c.range().isValidValue(fa)===!1)throw new I("The base value must be within the range of the field");if(fa+rd[A]>J.MAX_SAFE_INTEGER)throw new y("Unable to add printer-parser as the range exceeds the capacity of an int");}kb._baseValue=fa;kb._baseDate=Da;return kb}e(C,Z);var w=C.prototype;w._getValue=function(c,A){var P=Math.abs(A),fa=this._baseValue;this._baseDate!==null&&(c.temporal(),fa=ac.INSTANCE.date(this._baseDate).get(this._field));
return A>=fa&&A<fa+rd[this._minWidth]?P%rd[this._minWidth]:P%rd[this._maxWidth]};w._setValue=function(c,A,P,fa){var Da=this._baseValue;this._baseDate!=null&&(Da=c.getEffectiveChronology().date(this._baseDate).get(this._field));if(fa-P===this._minWidth&&A>=0){var kb=rd[this._minWidth],zb=Da-Da%kb;A=Da>0?zb+A:zb-A;A<Da&&(A+=kb)}return c.setParsedField(this._field,A,P,fa)};w.withFixedWidth=function(){return this._subsequentWidth===-1?this:new C(this._field,this._minWidth,this._maxWidth,this._baseValue,
this._baseDate,-1)};w.withSubsequentWidth=function(c){return new C(this._field,this._minWidth,this._maxWidth,this._baseValue,this._baseDate,this._subsequentWidth+c)};w.isFixedWidth=function(c){return c.isStrict()===!1?!1:Z.prototype.isFixedWidth.call(this,c)};w.toString=function(){return"ReducedValue("+this._field+","+this._minWidth+","+this._maxWidth+","+(this._baseDate!=null?this._baseDate:this._baseValue)+")"};return C}(La),Wb="+HH +HHmm +HH:mm +HHMM +HH:MM +HHMMss +HH:MM:ss +HHMMSS +HH:MM:SS".split(" "),
Pc=function(){function Z(w,c){k(w,"noOffsetText");k(c,"pattern");this.noOffsetText=w;this.type=this._checkPattern(c)}var C=Z.prototype;C._checkPattern=function(w){for(var c=0;c<Wb.length;c++)if(Wb[c]===w)return c;throw new I("Invalid zone offset pattern: "+w);};C.print=function(w,c){w=w.getValue(N.OFFSET_SECONDS);if(w==null)return!1;w=J.safeToInt(w);if(w===0)c.append(this.noOffsetText);else{var A=Math.abs(J.intMod(J.intDiv(w,3600),100)),P=Math.abs(J.intMod(J.intDiv(w,60),60)),fa=Math.abs(J.intMod(w,
60)),Da=c.length(),kb=A;c.append(w<0?"-":"+").appendChar(J.intDiv(A,10)+"0").appendChar(J.intMod(A,10)+"0");if(this.type>=3||this.type>=1&&P>0)if(c.append(this.type%2===0?":":"").appendChar(J.intDiv(P,10)+"0").appendChar(P%10+"0"),kb+=P,this.type>=7||this.type>=5&&fa>0)c.append(this.type%2===0?":":"").appendChar(J.intDiv(fa,10)+"0").appendChar(fa%10+"0"),kb+=fa;kb===0&&(c.setLength(Da),c.append(this.noOffsetText))}return!0};C.parse=function(w,c,A){var P=c.length,fa=this.noOffsetText.length;if(fa===
0){if(A===P)return w.setParsedField(N.OFFSET_SECONDS,0,A,A)}else{if(A===P)return~A;if(w.subSequenceEquals(c,A,this.noOffsetText,0,fa))return w.setParsedField(N.OFFSET_SECONDS,0,A,A+fa)}P=c[A];if(P==="+"||P==="-"){var Da=P==="-"?-1:1;P=[0,0,0,0];P[0]=A+1;if((this._parseNumber(P,1,c,!0)||this._parseNumber(P,2,c,this.type>=3)||this._parseNumber(P,3,c,!1))===!1)return c=J.safeZero(Da*(P[1]*3600+P[2]*60+P[3])),w.setParsedField(N.OFFSET_SECONDS,c,A,P[0])}return fa===0?w.setParsedField(N.OFFSET_SECONDS,
0,A,A+fa):~A};C._parseNumber=function(w,c,A,P){if((this.type+3)/2<c)return!1;var fa=w[0];if(this.type%2===0&&c>1){if(fa+1>A.length||A[fa]!==":")return P;fa++}if(fa+2>A.length)return P;var Da=A[fa++];A=A[fa++];if(Da<"0"||Da>"9"||A<"0"||A>"9")return P;Da=(Da.charCodeAt(0)-48)*10+(A.charCodeAt(0)-48);if(Da<0||Da>59)return P;w[c]=Da;w[0]=fa;return!1};C.toString=function(){var w=this.noOffsetText.replace("'","''");return"Offset("+Wb[this.type]+",'"+w+"')"};return Z}();Pc.INSTANCE_ID=new Pc("Z","+HH:MM:ss");
Pc.PATTERNS=Wb;var $c=function(){function Z(w,c,A){this._printerParser=w;this._padWidth=c;this._padChar=A}var C=Z.prototype;C.print=function(w,c){var A=c.length();if(this._printerParser.print(w,c)===!1)return!1;w=c.length()-A;if(w>this._padWidth)throw new y("Cannot print as output of "+w+" characters exceeds pad width of "+this._padWidth);for(var P=0;P<this._padWidth-w;P++)c.insert(A,this._padChar);return!0};C.parse=function(w,c,A){var P=w.isStrict(),fa=w.isCaseSensitive();f(!(A>c.length));f(A>=0);
if(A===c.length)return~A;var Da=A+this._padWidth;if(Da>c.length){if(P)return~A;Da=c.length}for(var kb=A;kb<Da&&(fa?c[kb]===this._padChar:w.charEquals(c[kb],this._padChar));)kb++;c=c.substring(0,Da);w=this._printerParser.parse(w,c,kb);return w!==Da&&P?~(A+kb):w};C.toString=function(){return"Pad("+this._printerParser+","+this._padWidth+(this._padChar===" "?")":",'"+this._padChar+"')")};return Z}(),zc=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=C.prototype;w.print=function(){return!0};
w.parse=function(c,A,P){switch(this){case C.SENSITIVE:c.setCaseSensitive(!0);break;case C.INSENSITIVE:c.setCaseSensitive(!1);break;case C.STRICT:c.setStrict(!0);break;case C.LENIENT:c.setStrict(!1)}return P};w.toString=function(){switch(this){case C.SENSITIVE:return"ParseCaseSensitive(true)";case C.INSENSITIVE:return"ParseCaseSensitive(false)";case C.STRICT:return"ParseStrict(true)";case C.LENIENT:return"ParseStrict(false)"}};return C}(W);zc.SENSITIVE=new zc("SENSITIVE");zc.INSENSITIVE=new zc("INSENSITIVE");
zc.STRICT=new zc("STRICT");zc.LENIENT=new zc("LENIENT");var Va=function(){function Z(w){this._literal=w}var C=Z.prototype;C.print=function(w,c){c.append(this._literal);return!0};C.parse=function(w,c,A){f(!(A>c.length||A<0));return w.subSequenceEquals(c,A,this._literal,0,this._literal.length)===!1?~A:A+this._literal.length};C.toString=function(){return"'"+this._literal.replace("'","''")+"'"};return Z}(),uc=function(){function Z(){}Z.getRules=function(C){throw new y("unsupported ZoneId:"+C);};Z.getAvailableZoneIds=
function(){return[]};return Z}(),Ra=function(Z){function C(c,A){var P=Z.call(this)||this;P._id=c;P._rules=A;return P}e(C,Z);C.ofId=function(c){var A=uc.getRules(c);return new C(c,A)};var w=C.prototype;w.id=function(){return this._id};w.rules=function(){return this._rules};return C}(lb),Ab=function(){function Z(w,c){this.query=w;this.description=c}var C=Z.prototype;C.print=function(w,c){w=w.getValueQuery(this.query);if(w==null)return!1;c.append(w.id());return!0};C.parse=function(w,c,A){var P=c.length;
if(A>P||A===P)return~A;var fa=c.charAt(A);if(fa==="+"||fa==="-"){P=w.copy();c=Pc.INSTANCE_ID.parse(P,c,A);if(c<0)return c;A=P.getParsed(N.OFFSET_SECONDS);A=ab.ofTotalSeconds(A);w.setParsedZone(A);return c}if(P>=A+2){var Da=c.charAt(A+1);if(w.charEquals(fa,"U")&&w.charEquals(Da,"T"))return P>=A+3&&w.charEquals(c.charAt(A+2),"C")?this._parsePrefixedOffset(w,c,A,A+3):this._parsePrefixedOffset(w,c,A,A+2);if(w.charEquals(fa,"G")&&P>=A+3&&w.charEquals(Da,"M")&&w.charEquals(c.charAt(A+2),"T"))return this._parsePrefixedOffset(w,
c,A,A+3)}if(c.substr(A,6)==="SYSTEM")return w.setParsedZone(lb.systemDefault()),A+6;if(w.charEquals(fa,"Z"))return w.setParsedZone(ab.UTC),A+1;fa=uc.getAvailableZoneIds();Me.size!==fa.length&&(Me=xc.createTreeMap(fa));P-=A;fa=Me.treeMap;Da=null;for(var kb=0;fa!=null;){var zb=c.substr(A,Math.min(fa.length,P));fa=fa.get(zb);fa!=null&&fa.isLeaf&&(Da=zb,kb=fa.length)}return Da!=null?(w.setParsedZone(Ra.ofId(Da)),A+kb):~A};C._parsePrefixedOffset=function(w,c,A,P){A=c.substring(A,P).toUpperCase();var fa=
w.copy();if(P<c.length&&w.charEquals(c.charAt(P),"Z"))return w.setParsedZone(lb.ofOffset(A,ab.UTC)),P;c=Pc.INSTANCE_ID.parse(fa,c,P);if(c<0)return w.setParsedZone(lb.ofOffset(A,ab.UTC)),P;P=fa.getParsed(N.OFFSET_SECONDS);P=ab.ofTotalSeconds(P);w.setParsedZone(lb.ofOffset(A,P));return c};C.toString=function(){return this.description};return Z}(),xc=function(){function Z(C,w){this.size=C;this.treeMap=w}Z.createTreeMap=function(C){C=C.sort(function(A,P){return A.length-P.length});for(var w=new Jc(C[0].length,
!1),c=0;c<C.length;c++)w.add(C[c]);return new Z(C.length,w)};return Z}(),Jc=function(){function Z(w,c){w===void 0&&(w=0);c===void 0&&(c=!1);this.length=w;this.isLeaf=c;this._treeMap={}}var C=Z.prototype;C.add=function(w){var c=w.length;if(c===this.length)this._treeMap[w]=new Z(c,!0);else if(c>this.length){var A=w.substr(0,this.length),P=this._treeMap[A];P==null&&(P=new Z(c,!1),this._treeMap[A]=P);P.add(w)}};C.get=function(w){return this._treeMap[w]};return Z}(),Me=new xc([]),gc=function(){function Z(){this._active=
this;this._parent=null;this._printerParsers=[];this._optional=!1;this._padNextWidth=0;this._padNextChar=null;this._valueParserIndex=-1}Z._of=function(w,c){k(w,"parent");k(c,"optional");var A=new Z;A._parent=w;A._optional=c;return A};var C=Z.prototype;C.parseCaseSensitive=function(){this._appendInternalPrinterParser(zc.SENSITIVE);return this};C.parseCaseInsensitive=function(){this._appendInternalPrinterParser(zc.INSENSITIVE);return this};C.parseStrict=function(){this._appendInternalPrinterParser(zc.STRICT);
return this};C.parseLenient=function(){this._appendInternalPrinterParser(zc.LENIENT);return this};C.appendValue=function(){return arguments.length===1?this._appendValue1.apply(this,arguments):arguments.length===2?this._appendValue2.apply(this,arguments):this._appendValue4.apply(this,arguments)};C._appendValue1=function(w){k(w);this._appendValuePrinterParser(new La(w,1,15,Ib.NORMAL));return this};C._appendValue2=function(w,c){k(w);if(c<1||c>15)throw new I("The width must be from 1 to 15 inclusive but was "+
c);w=new La(w,c,c,Ib.NOT_NEGATIVE);this._appendValuePrinterParser(w);return this};C._appendValue4=function(w,c,A,P){k(w);k(P);if(c===A&&P===Ib.NOT_NEGATIVE)return this._appendValue2(w,A);if(c<1||c>15)throw new I("The minimum width must be from 1 to 15 inclusive but was "+c);if(A<1||A>15)throw new I("The minimum width must be from 1 to 15 inclusive but was "+A);if(A<c)throw new I("The maximum width must exceed or equal the minimum width but "+A+" \x3c "+c);w=new La(w,c,A,P);this._appendValuePrinterParser(w);
return this};C.appendValueReduced=function(){return arguments.length===4&&arguments[3]instanceof Bc?this._appendValueReducedFieldWidthMaxWidthBaseDate.apply(this,arguments):this._appendValueReducedFieldWidthMaxWidthBaseValue.apply(this,arguments)};C._appendValueReducedFieldWidthMaxWidthBaseValue=function(w,c,A,P){k(w,"field");w=new sd(w,c,A,P,null);this._appendValuePrinterParser(w);return this};C._appendValueReducedFieldWidthMaxWidthBaseDate=function(w,c,A,P){k(w,"field");k(P,"baseDate");m(P,Bc,"baseDate");
w=new sd(w,c,A,0,P);this._appendValuePrinterParser(w);return this};C._appendValuePrinterParser=function(w){f(w!=null);if(this._active._valueParserIndex>=0&&this._active._printerParsers[this._active._valueParserIndex]instanceof La){var c=this._active._valueParserIndex,A=this._active._printerParsers[c];w.minWidth()===w.maxWidth()&&w.signStyle()===Ib.NOT_NEGATIVE?(A=A.withSubsequentWidth(w.maxWidth()),this._appendInternal(w.withFixedWidth()),this._active._valueParserIndex=c):(A=A.withFixedWidth(),this._active._valueParserIndex=
this._appendInternal(w));this._active._printerParsers[c]=A}else this._active._valueParserIndex=this._appendInternal(w);return this};C.appendFraction=function(w,c,A,P){this._appendInternal(new Id(w,c,A,P));return this};C.appendInstant=function(w){w===void 0&&(w=-2);if(w<-2||w>9)throw new I("Invalid fractional digits: "+w);this._appendInternal(new eg(w));return this};C.appendOffsetId=function(){this._appendInternal(Pc.INSTANCE_ID);return this};C.appendOffset=function(w,c){this._appendInternalPrinterParser(new Pc(c,
w));return this};C.appendZoneId=function(){this._appendInternal(new Ab(pa.zoneId(),"ZoneId()"));return this};C.appendPattern=function(w){k(w,"pattern");this._parsePattern(w);return this};C.appendZoneText=function(){throw new I("Pattern using (localized) text not implemented, use js-joda-locale plugin!");};C.appendText=function(){throw new I("Pattern using (localized) text not implemented, use js-joda-locale plugin!");};C.appendLocalizedOffset=function(){throw new I("Pattern using (localized) text not implemented, use js-joda-locale plugin!");
};C.appendWeekField=function(){throw new I("Pattern using (localized) text not implemented, use js-joda-locale plugin!");};C._parsePattern=function(w){for(var c={G:N.ERA,y:N.YEAR_OF_ERA,u:N.YEAR,Q:pc.QUARTER_OF_YEAR,q:pc.QUARTER_OF_YEAR,M:N.MONTH_OF_YEAR,L:N.MONTH_OF_YEAR,D:N.DAY_OF_YEAR,d:N.DAY_OF_MONTH,F:N.ALIGNED_DAY_OF_WEEK_IN_MONTH,E:N.DAY_OF_WEEK,c:N.DAY_OF_WEEK,e:N.DAY_OF_WEEK,a:N.AMPM_OF_DAY,H:N.HOUR_OF_DAY,k:N.CLOCK_HOUR_OF_DAY,K:N.HOUR_OF_AMPM,h:N.CLOCK_HOUR_OF_AMPM,m:N.MINUTE_OF_HOUR,s:N.SECOND_OF_MINUTE,
S:N.NANO_OF_SECOND,A:N.MILLI_OF_DAY,n:N.NANO_OF_SECOND,N:N.NANO_OF_DAY},A=0;A<w.length;A++){var P=w.charAt(A);if(P>="A"&&P<="Z"||P>="a"&&P<="z"){for(var fa=A++;A<w.length&&w.charAt(A)===P;A++);fa=A-fa;if(P==="p"){var Da=0;if(A<w.length&&(P=w.charAt(A),P>="A"&&P<="Z"||P>="a"&&P<="z")){Da=fa;for(fa=A++;A<w.length&&w.charAt(A)===P;A++);fa=A-fa}if(Da===0)throw new I("Pad letter 'p' must be followed by valid pad pattern: "+w);this.padNext(Da)}Da=c[P];if(Da!=null)this._parseField(P,fa,Da);else if(P==="z"){if(fa>
4)throw new I("Too many pattern letters: "+P);fa===4?this.appendZoneText(Rb.FULL):this.appendZoneText(Rb.SHORT)}else if(P==="V"){if(fa!==2)throw new I("Pattern letter count must be 2: "+P);this.appendZoneId()}else if(P==="Z")if(fa<4)this.appendOffset("+HHMM","+0000");else if(fa===4)this.appendLocalizedOffset(Rb.FULL);else if(fa===5)this.appendOffset("+HH:MM:ss","Z");else throw new I("Too many pattern letters: "+P);else if(P==="O")if(fa===1)this.appendLocalizedOffset(Rb.SHORT);else if(fa===4)this.appendLocalizedOffset(Rb.FULL);
else throw new I("Pattern letter count must be 1 or 4: "+P);else if(P==="X"){if(fa>5)throw new I("Too many pattern letters: "+P);this.appendOffset(Pc.PATTERNS[fa+(fa===1?0:1)],"Z")}else if(P==="x"){if(fa>5)throw new I("Too many pattern letters: "+P);this.appendOffset(Pc.PATTERNS[fa+(fa===1?0:1)],fa===1?"+00":fa%2===0?"+0000":"+00:00")}else if(P==="W"){if(fa>1)throw new I("Too many pattern letters: "+P);this.appendWeekField("W",fa)}else if(P==="w"){if(fa>2)throw new I("Too many pattern letters: "+
P);this.appendWeekField("w",fa)}else if(P==="Y")this.appendWeekField("Y",fa);else throw new I("Unknown pattern letter: "+P);A--}else if(P==="'"){for(P=A++;A<w.length;A++)if(w.charAt(A)==="'")if(A+1<w.length&&w.charAt(A+1)==="'")A++;else break;if(A>=w.length)throw new I("Pattern ends with an incomplete string literal: "+w);P=w.substring(P+1,A);P.length===0?this.appendLiteral("'"):this.appendLiteral(P.replace("''","'"))}else if(P==="[")this.optionalStart();else if(P==="]"){if(this._active._parent===
null)throw new I("Pattern invalid as it contains ] without previous [");this.optionalEnd()}else{if(P==="{"||P==="}"||P==="#")throw new I("Pattern includes reserved character: '"+P+"'");this.appendLiteral(P)}}};C._parseField=function(w,c,A){switch(w){case "u":case "y":c===2?this.appendValueReduced(A,2,2,sd.BASE_DATE):c<4?this.appendValue(A,c,15,Ib.NORMAL):this.appendValue(A,c,15,Ib.EXCEEDS_PAD);break;case "M":case "Q":switch(c){case 1:this.appendValue(A);break;case 2:this.appendValue(A,2);break;case 3:this.appendText(A,
Rb.SHORT);break;case 4:this.appendText(A,Rb.FULL);break;case 5:this.appendText(A,Rb.NARROW);break;default:throw new I("Too many pattern letters: "+w);}break;case "L":case "q":switch(c){case 1:this.appendValue(A);break;case 2:this.appendValue(A,2);break;case 3:this.appendText(A,Rb.SHORT_STANDALONE);break;case 4:this.appendText(A,Rb.FULL_STANDALONE);break;case 5:this.appendText(A,Rb.NARROW_STANDALONE);break;default:throw new I("Too many pattern letters: "+w);}break;case "e":switch(c){case 1:case 2:this.appendWeekField("e",
c);break;case 3:this.appendText(A,Rb.SHORT);break;case 4:this.appendText(A,Rb.FULL);break;case 5:this.appendText(A,Rb.NARROW);break;default:throw new I("Too many pattern letters: "+w);}break;case "c":switch(c){case 1:this.appendWeekField("c",c);break;case 2:throw new I("Invalid number of pattern letters: "+w);case 3:this.appendText(A,Rb.SHORT_STANDALONE);break;case 4:this.appendText(A,Rb.FULL_STANDALONE);break;case 5:this.appendText(A,Rb.NARROW_STANDALONE);break;default:throw new I("Too many pattern letters: "+
w);}break;case "a":if(c===1)this.appendText(A,Rb.SHORT);else throw new I("Too many pattern letters: "+w);break;case "E":case "G":switch(c){case 1:case 2:case 3:this.appendText(A,Rb.SHORT);break;case 4:this.appendText(A,Rb.FULL);break;case 5:this.appendText(A,Rb.NARROW);break;default:throw new I("Too many pattern letters: "+w);}break;case "S":this.appendFraction(N.NANO_OF_SECOND,c,c,!1);break;case "F":if(c===1)this.appendValue(A);else throw new I("Too many pattern letters: "+w);break;case "d":case "h":case "H":case "k":case "K":case "m":case "s":if(c===
1)this.appendValue(A);else if(c===2)this.appendValue(A,c);else throw new I("Too many pattern letters: "+w);break;case "D":if(c===1)this.appendValue(A);else if(c<=3)this.appendValue(A,c);else throw new I("Too many pattern letters: "+w);break;default:c===1?this.appendValue(A):this.appendValue(A,c)}};C.padNext=function(){return arguments.length===1?this._padNext1.apply(this,arguments):this._padNext2.apply(this,arguments)};C._padNext1=function(w){return this._padNext2(w," ")};C._padNext2=function(w,c){if(w<
1)throw new I("The pad width must be at least one but was "+w);this._active._padNextWidth=w;this._active._padNextChar=c;this._active._valueParserIndex=-1;return this};C.optionalStart=function(){this._active._valueParserIndex=-1;this._active=Z._of(this._active,!0);return this};C.optionalEnd=function(){if(this._active._parent==null)throw new K("Cannot call optionalEnd() as there was no previous call to optionalStart()");if(this._active._printerParsers.length>0){var w=new Td(this._active._printerParsers,
this._active._optional);this._active=this._active._parent;this._appendInternal(w)}else this._active=this._active._parent;return this};C._appendInternal=function(w){f(w!=null);this._active._padNextWidth>0&&(w!=null&&(w=new $c(w,this._active._padNextWidth,this._active._padNextChar)),this._active._padNextWidth=0,this._active._padNextChar=0);this._active._printerParsers.push(w);this._active._valueParserIndex=-1;return this._active._printerParsers.length-1};C.appendLiteral=function(w){f(w!=null);w.length>
0&&(w.length===1?this._appendInternalPrinterParser(new Sd(w.charAt(0))):this._appendInternalPrinterParser(new Va(w)));return this};C._appendInternalPrinterParser=function(w){f(w!=null);this._active._padNextWidth>0&&(w!=null&&(w=new $c(w,this._active._padNextWidth,this._active._padNextChar)),this._active._padNextWidth=0,this._active._padNextChar=0);this._active._printerParsers.push(w);this._active._valueParserIndex=-1;return this._active._printerParsers.length-1};C.append=function(w){k(w,"formatter");
this._appendInternal(w._toPrinterParser(!1));return this};C.toFormatter=function(w){w===void 0&&(w=qb.SMART);for(;this._active._parent!=null;)this.optionalEnd();var c=new Td(this._printerParsers,!1);return new Eb(c,null,ic.STANDARD,w,null,null,null)};return Z}(),eg=function(){function Z(w){this.fractionalDigits=w}var C=Z.prototype;C.print=function(w,c){var A=w.getValue(N.INSTANT_SECONDS),P=0;w.temporal().isSupported(N.NANO_OF_SECOND)&&(P=w.temporal().getLong(N.NANO_OF_SECOND));if(A==null)return!1;
w=N.NANO_OF_SECOND.checkValidIntValue(P);if(A>=-62167219200)P=A-31556952E4+62167219200,A=J.floorDiv(P,31556952E4)+1,P=J.floorMod(P,31556952E4),P=Yb.ofEpochSecond(P-62167219200,0,ab.UTC),A>0&&c.append("+").append(A),c.append(P),P.second()===0&&c.append(":00");else{P=A+62167219200;A=J.intDiv(P,31556952E4);P=J.intMod(P,31556952E4);var fa=Yb.ofEpochSecond(P-62167219200,0,ab.UTC),Da=c.length();c.append(fa);fa.second()===0&&c.append(":00");A<0&&(fa.year()===-1E4?c.replace(Da,Da+2,""+(A-1)):P===0?c.insert(Da,
A):c.insert(Da+1,Math.abs(A)))}if(this.fractionalDigits===-2)w!==0&&(c.append("."),J.intMod(w,1E6)===0?c.append((""+(J.intDiv(w,1E6)+1E3)).substring(1)):J.intMod(w,1E3)===0?c.append((""+(J.intDiv(w,1E3)+1E6)).substring(1)):c.append((""+(w+1E9)).substring(1)));else if(this.fractionalDigits>0||this.fractionalDigits===-1&&w>0)for(c.append("."),A=1E8,P=0;this.fractionalDigits===-1&&w>0||P<this.fractionalDigits;P++)fa=J.intDiv(w,A),c.append(fa),w-=fa*A,A=J.intDiv(A,10);c.append("Z");return!0};C.parse=
function(w,c,A){var P=w.copy(),fa=this.fractionalDigits<0?0:this.fractionalDigits,Da=this.fractionalDigits<0?9:this.fractionalDigits;c=(new gc).append(Eb.ISO_LOCAL_DATE).appendLiteral("T").appendValue(N.HOUR_OF_DAY,2).appendLiteral(":").appendValue(N.MINUTE_OF_HOUR,2).appendLiteral(":").appendValue(N.SECOND_OF_MINUTE,2).appendFraction(N.NANO_OF_SECOND,fa,Da,!0).appendLiteral("Z").toFormatter()._toPrinterParser(!1).parse(P,c,A);if(c<0)return c;fa=P.getParsed(N.YEAR);Da=P.getParsed(N.MONTH_OF_YEAR);
var kb=P.getParsed(N.DAY_OF_MONTH),zb=P.getParsed(N.HOUR_OF_DAY),Hc=P.getParsed(N.MINUTE_OF_HOUR),Zc=P.getParsed(N.SECOND_OF_MINUTE),Oc=P.getParsed(N.NANO_OF_SECOND);P=Zc!=null?Zc:0;Zc=Oc!=null?Oc:0;Oc=J.intMod(fa,1E4);var Ud=0;zb===24&&Hc===0&&P===0&&Zc===0?(zb=0,Ud=1):zb===23&&Hc===59&&P===60&&(w.setParsedLeapSecond(),P=59);try{var Wc=Yb.of(Oc,Da,kb,zb,Hc,P,0).plusDays(Ud).toEpochSecond(ab.UTC);Wc+=J.safeMultiply(J.intDiv(fa,1E4),31556952E4)}catch(fg){return~A}Wc=w.setParsedField(N.INSTANT_SECONDS,
Wc,A,c);return w.setParsedField(N.NANO_OF_SECOND,Zc,A,Wc)};C.toString=function(){return"Instant()"};return Z}(),qf=function(){function Z(){this._str=""}var C=Z.prototype;C.append=function(w){this._str+=w;return this};C.appendChar=function(w){this._str+=w[0];return this};C.insert=function(w,c){this._str=this._str.slice(0,w)+c+this._str.slice(w);return this};C.replace=function(w,c,A){this._str=this._str.slice(0,w)+A+this._str.slice(c);return this};C.length=function(){return this._str.length};C.setLength=
function(w){this._str=this._str.slice(0,w);return this};C.toString=function(){return this._str};return Z}(),Eb=function(){function Z(w,c,A,P,fa,Da,kb){Da===void 0&&(Da=ac.INSTANCE);f(w!=null);f(A!=null);f(P!=null);this._printerParser=w;this._locale=c;this._decimalStyle=A;this._resolverStyle=P;this._resolverFields=fa;this._chrono=Da;this._zone=kb}Z.parsedExcessDays=function(){return Z.PARSED_EXCESS_DAYS};Z.parsedLeapSecond=function(){return Z.PARSED_LEAP_SECOND};Z.ofPattern=function(w){return(new gc).appendPattern(w).toFormatter()};
var C=Z.prototype;C.locale=function(){return this._locale};C.decimalStyle=function(){return this._decimalStyle};C.chronology=function(){return this._chrono};C.withChronology=function(w){return this._chrono!=null&&this._chrono.equals(w)?this:new Z(this._printerParser,this._locale,this._decimalStyle,this._resolverStyle,this._resolverFields,w,this._zone)};C.withLocale=function(){return this};C.withResolverStyle=function(w){k(w,"resolverStyle");return w.equals(this._resolverStyle)?this:new Z(this._printerParser,
this._locale,this._decimalStyle,w,this._resolverFields,this._chrono,this._zone)};C.format=function(w){var c=new qf(32);this._formatTo(w,c);return c.toString()};C._formatTo=function(w,c){k(w,"temporal");k(c,"appendable");w=new Dc(w,this);this._printerParser.print(w,c)};C.parse=function(w,c){return arguments.length===1?this.parse1(w):this.parse2(w,c)};C.parse1=function(w){k(w,"text");try{return this._parseToBuilder(w,null).resolve(this._resolverStyle,this._resolverFields)}catch(c){if(c instanceof B)throw c;
throw this._createError(w,c);}};C.parse2=function(w,c){k(w,"text");k(c,"type");try{return this._parseToBuilder(w,null).resolve(this._resolverStyle,this._resolverFields).build(c)}catch(A){if(A instanceof B)throw A;throw this._createError(w,A);}};C._createError=function(w,c){var A=w.length>64?w.substring(0,64)+"...":w;return new B("Text '"+A+"' could not be parsed: "+c.message,w,0,c)};C._parseToBuilder=function(w,c){var A=c!=null?c:new Bb(0),P=this._parseUnresolved0(w,A);if(P==null||A.getErrorIndex()>=
0||c==null&&A.getIndex()<w.length){c=w.length>64?w.substr(0,64).toString()+"...":w;if(A.getErrorIndex()>=0)throw new B("Text '"+c+"' could not be parsed at index "+A.getErrorIndex(),w,A.getErrorIndex());throw new B("Text '"+c+"' could not be parsed, unparsed text found at index "+A.getIndex(),w,A.getIndex());}return P.toBuilder()};C.parseUnresolved=function(w,c){return this._parseUnresolved0(w,c)};C._parseUnresolved0=function(w,c){f(w!=null,"text",Q);f(c!=null,"position",Q);var A=new fc(this),P=c.getIndex();
P=this._printerParser.parse(A,w,P);if(P<0)return c.setErrorIndex(~P),null;c.setIndex(P);return A.toParsed()};C._toPrinterParser=function(w){return this._printerParser.withOptional(w)};C.toString=function(){var w=this._printerParser.toString();return w.indexOf("[")===0?w:w.substring(1,w.length-1)};return Z}(),vc=function(Z){function C(c,A){var P=Z.call(this)||this;P._month=J.safeToInt(c);P._day=J.safeToInt(A);return P}e(C,Z);C.now=function(c){return arguments.length===0?C.now0():arguments.length===
1&&c instanceof lb?C.nowZoneId(c):C.nowClock(c)};C.now0=function(){return this.nowClock(dc.systemDefaultZone())};C.nowZoneId=function(c){k(c,"zone");return this.nowClock(dc.system(c))};C.nowClock=function(c){k(c,"clock");c=tb.now(c);return C.of(c.month(),c.dayOfMonth())};C.of=function(c,A){return arguments.length===2&&c instanceof eb?C.ofMonthNumber(c,A):C.ofNumberNumber(c,A)};C.ofMonthNumber=function(c,A){k(c,"month");N.DAY_OF_MONTH.checkValidValue(A);if(A>c.maxLength())throw new y("Illegal value for DayOfMonth field, value "+
A+" is not valid for month "+c.toString());return new C(c.value(),A)};C.ofNumberNumber=function(c,A){k(c,"month");k(A,"dayOfMonth");return C.of(eb.of(c),A)};C.from=function(c){k(c,"temporal");m(c,ra,"temporal");if(c instanceof C)return c;try{return C.of(c.get(N.MONTH_OF_YEAR),c.get(N.DAY_OF_MONTH))}catch(A){throw new y("Unable to obtain MonthDay from TemporalAccessor: "+c+", type "+(c&&c.constructor!=null?c.constructor.name:""));}};C.parse=function(c,A){return arguments.length===1?C.parseString(c):
C.parseStringFormatter(c,A)};C.parseString=function(c){return C.parseStringFormatter(c,Ac)};C.parseStringFormatter=function(c,A){k(c,"text");k(A,"formatter");m(A,Eb,"formatter");return A.parse(c,C.FROM)};var w=C.prototype;w.monthValue=function(){return this._month};w.month=function(){return eb.of(this._month)};w.dayOfMonth=function(){return this._day};w.isSupported=function(c){return c instanceof N?c===N.MONTH_OF_YEAR||c===N.DAY_OF_MONTH:c!=null&&c.isSupportedBy(this)};w.range=function(c){return c===
N.MONTH_OF_YEAR?c.range():c===N.DAY_OF_MONTH?na.of(1,this.month().minLength(),this.month().maxLength()):Z.prototype.range.call(this,c)};w.get=function(c){return this.range(c).checkValidIntValue(this.getLong(c),c)};w.getLong=function(c){k(c,"field");if(c instanceof N){switch(c){case N.DAY_OF_MONTH:return this._day;case N.MONTH_OF_YEAR:return this._month}throw new D("Unsupported field: "+c);}return c.getFrom(this)};w.isValidYear=function(c){return(this._day===29&&this._month===2&&ad.isLeap(c)===!1)===
!1};w.withMonth=function(c){return this.with(eb.of(c))};w.with=function(c){k(c,"month");if(c.value()===this._month)return this;var A=Math.min(this._day,c.maxLength());return new C(c.value(),A)};w.withDayOfMonth=function(c){return c===this._day?this:C.of(this._month,c)};w.query=function(c){k(c,"query");m(c,Ea,"query");return c===pa.chronology()?ac.INSTANCE:Z.prototype.query.call(this,c)};w.adjustInto=function(c){k(c,"temporal");c=c.with(N.MONTH_OF_YEAR,this._month);return c.with(N.DAY_OF_MONTH,Math.min(c.range(N.DAY_OF_MONTH).maximum(),
this._day))};w.atYear=function(c){return tb.of(c,this._month,this.isValidYear(c)?this._day:28)};w.compareTo=function(c){k(c,"other");m(c,C,"other");var A=this._month-c.monthValue();A===0&&(A=this._day-c.dayOfMonth());return A};w.isAfter=function(c){k(c,"other");m(c,C,"other");return this.compareTo(c)>0};w.isBefore=function(c){k(c,"other");m(c,C,"other");return this.compareTo(c)<0};w.equals=function(c){return this===c?!0:c instanceof C?this.monthValue()===c.monthValue()&&this.dayOfMonth()===c.dayOfMonth():
!1};w.toString=function(){return"--"+(this._month<10?"0":"")+this._month+(this._day<10?"-0":"-")+this._day};w.toJSON=function(){return this.toString()};w.format=function(c){k(c,"formatter");m(c,Eb,"formatter");return c.format(this)};return C}(ra),Ac,td=function(Z){function C(c,A){var P=Z.call(this)||this;P._year=J.safeToInt(c);P._month=J.safeToInt(A);return P}e(C,Z);C.now=function(c){return arguments.length===0?C.now0():arguments.length===1&&c instanceof lb?C.nowZoneId(c):C.nowClock(c)};C.now0=function(){return C.nowClock(dc.systemDefaultZone())};
C.nowZoneId=function(c){return C.nowClock(dc.system(c))};C.nowClock=function(c){c=tb.now(c);return C.of(c.year(),c.month())};C.of=function(c,A){return arguments.length===2&&A instanceof eb?C.ofNumberMonth(c,A):C.ofNumberNumber(c,A)};C.ofNumberMonth=function(c,A){k(A,"month");m(A,eb,"month");return C.ofNumberNumber(c,A.value())};C.ofNumberNumber=function(c,A){k(c,"year");k(A,"month");N.YEAR.checkValidValue(c);N.MONTH_OF_YEAR.checkValidValue(A);return new C(c,A)};C.from=function(c){k(c,"temporal");
if(c instanceof C)return c;try{return C.of(c.get(N.YEAR),c.get(N.MONTH_OF_YEAR))}catch(A){throw new y("Unable to obtain YearMonth from TemporalAccessor: "+c+", type "+(c&&c.constructor!=null?c.constructor.name:""));}};C.parse=function(c,A){return arguments.length===1?C.parseString(c):C.parseStringFormatter(c,A)};C.parseString=function(c){return C.parseStringFormatter(c,Ne)};C.parseStringFormatter=function(c,A){k(A,"formatter");return A.parse(c,C.FROM)};var w=C.prototype;w.isSupported=function(c){return arguments.length===
1&&c instanceof xa?this.isSupportedField(c):this.isSupportedUnit(c)};w.isSupportedField=function(c){return c instanceof N?c===N.YEAR||c===N.MONTH_OF_YEAR||c===N.PROLEPTIC_MONTH||c===N.YEAR_OF_ERA||c===N.ERA:c!=null&&c.isSupportedBy(this)};w.isSupportedUnit=function(c){return c instanceof V?c===V.MONTHS||c===V.YEARS||c===V.DECADES||c===V.CENTURIES||c===V.MILLENNIA||c===V.ERAS:c!=null&&c.isSupportedBy(this)};w.range=function(c){return c===N.YEAR_OF_ERA?this.year()<=0?na.of(1,ad.MAX_VALUE+1):na.of(1,
ad.MAX_VALUE):Z.prototype.range.call(this,c)};w.get=function(c){k(c,"field");m(c,xa,"field");return this.range(c).checkValidIntValue(this.getLong(c),c)};w.getLong=function(c){k(c,"field");m(c,xa,"field");if(c instanceof N){switch(c){case N.MONTH_OF_YEAR:return this._month;case N.PROLEPTIC_MONTH:return this._getProlepticMonth();case N.YEAR_OF_ERA:return this._year<1?1-this._year:this._year;case N.YEAR:return this._year;case N.ERA:return this._year<1?0:1}throw new D("Unsupported field: "+c);}return c.getFrom(this)};
w._getProlepticMonth=function(){return J.safeAdd(J.safeMultiply(this._year,12),this._month-1)};w.year=function(){return this._year};w.monthValue=function(){return this._month};w.month=function(){return eb.of(this._month)};w.isLeapYear=function(){return ac.isLeapYear(this._year)};w.isValidDay=function(c){return c>=1&&c<=this.lengthOfMonth()};w.lengthOfMonth=function(){return this.month().length(this.isLeapYear())};w.lengthOfYear=function(){return this.isLeapYear()?366:365};w.with=function(c,A){return arguments.length===
1?this.withAdjuster(c):this.withFieldValue(c,A)};w.withAdjuster=function(c){k(c,"adjuster");return c.adjustInto(this)};w.withFieldValue=function(c,A){k(c,"field");m(c,xa,"field");if(c instanceof N){c.checkValidValue(A);switch(c){case N.MONTH_OF_YEAR:return this.withMonth(A);case N.PROLEPTIC_MONTH:return this.plusMonths(A-this.getLong(N.PROLEPTIC_MONTH));case N.YEAR_OF_ERA:return this.withYear(this._year<1?1-A:A);case N.YEAR:return this.withYear(A);case N.ERA:return this.getLong(N.ERA)===A?this:this.withYear(1-
this._year)}throw new D("Unsupported field: "+c);}return c.adjustInto(this,A)};w.withYear=function(c){N.YEAR.checkValidValue(c);return new C(c,this._month)};w.withMonth=function(c){N.MONTH_OF_YEAR.checkValidValue(c);return new C(this._year,c)};w.plusAmount=function(c){k(c,"amount");m(c,ba,"amount");return c.addTo(this)};w.plusAmountUnit=function(c,A){k(A,"unit");m(A,Y,"unit");if(A instanceof V){switch(A){case V.MONTHS:return this.plusMonths(c);case V.YEARS:return this.plusYears(c);case V.DECADES:return this.plusYears(J.safeMultiply(c,
10));case V.CENTURIES:return this.plusYears(J.safeMultiply(c,100));case V.MILLENNIA:return this.plusYears(J.safeMultiply(c,1E3));case V.ERAS:return this.with(N.ERA,J.safeAdd(this.getLong(N.ERA),c))}throw new D("Unsupported unit: "+A);}return A.addTo(this,c)};w.plusYears=function(c){if(c===0)return this;c=N.YEAR.checkValidIntValue(this._year+c);return this.withYear(c)};w.plusMonths=function(c){if(c===0)return this;var A=this._year*12+(this._month-1)+c;c=N.YEAR.checkValidIntValue(J.floorDiv(A,12));
A=J.floorMod(A,12)+1;return new C(c,A)};w.minusAmount=function(c){k(c,"amount");return c.subtractFrom(this)};w.minusAmountUnit=function(c,A){return c===J.MIN_SAFE_INTEGER?this.plusAmountUnit(J.MAX_SAFE_INTEGER,A).plusAmountUnit(1,A):this.plusAmountUnit(-c,A)};w.minusYears=function(c){return c===J.MIN_SAFE_INTEGER?this.plusYears(J.MIN_SAFE_INTEGER).plusYears(1):this.plusYears(-c)};w.minusMonths=function(c){return c===J.MIN_SAFE_INTEGER?this.plusMonths(Math.MAX_SAFE_INTEGER).plusMonths(1):this.plusMonths(-c)};
w.query=function(c){k(c,"query");m(c,Ea,"query");return c===pa.chronology()?ac.INSTANCE:c===pa.precision()?V.MONTHS:c===pa.localDate()||c===pa.localTime()||c===pa.zone()||c===pa.zoneId()||c===pa.offset()?null:Z.prototype.query.call(this,c)};w.adjustInto=function(c){k(c,"temporal");m(c,Db,"temporal");return c.with(N.PROLEPTIC_MONTH,this._getProlepticMonth())};w.until=function(c,A){k(c,"endExclusive");k(A,"unit");m(c,Db,"endExclusive");m(A,Y,"unit");c=C.from(c);if(A instanceof V){var P=c._getProlepticMonth()-
this._getProlepticMonth();switch(A){case V.MONTHS:return P;case V.YEARS:return P/12;case V.DECADES:return P/120;case V.CENTURIES:return P/1200;case V.MILLENNIA:return P/12E3;case V.ERAS:return c.getLong(N.ERA)-this.getLong(N.ERA)}throw new D("Unsupported unit: "+A);}return A.between(this,c)};w.atDay=function(c){return tb.of(this._year,this._month,c)};w.atEndOfMonth=function(){return tb.of(this._year,this._month,this.lengthOfMonth())};w.compareTo=function(c){k(c,"other");m(c,C,"other");var A=this._year-
c.year();A===0&&(A=this._month-c.monthValue());return A};w.isAfter=function(c){return this.compareTo(c)>0};w.isBefore=function(c){return this.compareTo(c)<0};w.equals=function(c){return this===c?!0:c instanceof C?this.year()===c.year()&&this.monthValue()===c.monthValue():!1};w.toString=function(){return Ne.format(this)};w.toJSON=function(){return this.toString()};w.format=function(c){k(c,"formatter");return c.format(this)};return C}(Db),Ne,ad=function(Z){function C(c){var A=Z.call(this)||this;A._year=
J.safeToInt(c);return A}e(C,Z);var w=C.prototype;w.value=function(){return this._year};C.now=function(c){c===void 0&&(c=void 0);return c===void 0?C.now0():c instanceof lb?C.nowZoneId(c):C.nowClock(c)};C.now0=function(){return C.nowClock(dc.systemDefaultZone())};C.nowZoneId=function(c){k(c,"zone");m(c,lb,"zone");return C.nowClock(dc.system(c))};C.nowClock=function(c){k(c,"clock");m(c,dc,"clock");c=tb.now(c);return C.of(c.year())};C.of=function(c){k(c,"isoYear");N.YEAR.checkValidValue(c);return new C(c)};
C.from=function(c){k(c,"temporal");m(c,ra,"temporal");if(c instanceof C)return c;try{return C.of(c.get(N.YEAR))}catch(A){throw new y("Unable to obtain Year from TemporalAccessor: "+c+", type "+(c&&c.constructor!=null?c.constructor.name:""));}};C.parse=function(c,A){return arguments.length<=1?C.parseText(c):C.parseTextFormatter(c,A)};C.parseText=function(c){k(c,"text");return C.parse(c,Oe)};C.parseTextFormatter=function(c,A){A===void 0&&(A=Oe);k(c,"text");k(A,"formatter");m(A,Eb,"formatter");return A.parse(c,
C.FROM)};C.isLeap=function(c){return J.intMod(c,4)===0&&(J.intMod(c,100)!==0||J.intMod(c,400)===0)};w.isSupported=function(c){return arguments.length===1&&c instanceof xa?this.isSupportedField(c):this.isSupportedUnit(c)};w.isSupportedField=function(c){return c instanceof N?c===N.YEAR||c===N.YEAR_OF_ERA||c===N.ERA:c!=null&&c.isSupportedBy(this)};w.isSupportedUnit=function(c){return c instanceof V?c===V.YEARS||c===V.DECADES||c===V.CENTURIES||c===V.MILLENNIA||c===V.ERAS:c!=null&&c.isSupportedBy(this)};
w.range=function(c){if(this.isSupported(c))return c.range();if(c instanceof N)throw new D("Unsupported field: "+c);return Z.prototype.range.call(this,c)};w.get=function(c){return this.range(c).checkValidIntValue(this.getLong(c),c)};w.getLong=function(c){k(c,"field");if(c instanceof N){switch(c){case N.YEAR_OF_ERA:return this._year<1?1-this._year:this._year;case N.YEAR:return this._year;case N.ERA:return this._year<1?0:1}throw new D("Unsupported field: "+c);}return c.getFrom(this)};w.isLeap=function(){return C.isLeap(this._year)};
w.withAdjuster=function(c){k(c,"adjuster");return c.adjustInto(this)};w.withFieldValue=function(c,A){k(c,"field");m(c,xa,"field");if(c instanceof N){c.checkValidValue(A);switch(c){case N.YEAR_OF_ERA:return C.of(this._year<1?1-A:A);case N.YEAR:return C.of(A);case N.ERA:return this.getLong(N.ERA)===A?this:C.of(1-this._year)}throw new D("Unsupported field: "+c);}return c.adjustInto(this,A)};w.plusAmount=function(c){k(c,"amount");m(c,ba,"amount");return c.addTo(this)};w.plusAmountUnit=function(c,A){k(c,
"amountToAdd");k(A,"unit");m(A,Y,"unit");if(A instanceof V){switch(A){case V.YEARS:return this.plusYears(c);case V.DECADES:return this.plusYears(J.safeMultiply(c,10));case V.CENTURIES:return this.plusYears(J.safeMultiply(c,100));case V.MILLENNIA:return this.plusYears(J.safeMultiply(c,1E3));case V.ERAS:return this.with(N.ERA,J.safeAdd(this.getLong(N.ERA),c))}throw new D("Unsupported unit: "+A);}return A.addTo(this,c)};w.plusYears=function(c){return c===0?this:C.of(N.YEAR.checkValidIntValue(J.safeAdd(this._year,
c)))};w.minusAmount=function(c){k(c,"amount");m(c,ba,"amount");return c.subtractFrom(this)};w.minusAmountUnit=function(c,A){k(c,"amountToSubtract");k(A,"unit");m(A,Y,"unit");return c===J.MIN_SAFE_INTEGER?this.plus(J.MAX_SAFE_INTEGER,A).plus(1,A):this.plus(-c,A)};w.minusYears=function(c){return c===J.MIN_SAFE_INTEGER?this.plusYears(J.MAX_SAFE_INTEGER).plusYears(1):this.plusYears(-c)};w.adjustInto=function(c){k(c,"temporal");return c.with(N.YEAR,this._year)};w.isValidMonthDay=function(c){return c!=
null&&c.isValidYear(this._year)};w.length=function(){return this.isLeap()?366:365};w.atDay=function(c){return tb.ofYearDay(this._year,c)};w.atMonth=function(c){return arguments.length===1&&c instanceof eb?this.atMonthMonth(c):this.atMonthNumber(c)};w.atMonthMonth=function(c){k(c,"month");m(c,eb,"month");return td.of(this._year,c)};w.atMonthNumber=function(c){k(c,"month");return td.of(this._year,c)};w.atMonthDay=function(c){k(c,"monthDay");m(c,vc,"monthDay");return c.atYear(this._year)};w.query=function(c){k(c,
"query()");m(c,Ea,"query()");return c===pa.chronology()?ac.INSTANCE:c===pa.precision()?V.YEARS:c===pa.localDate()||c===pa.localTime()||c===pa.zone()||c===pa.zoneId()||c===pa.offset()?null:Z.prototype.query.call(this,c)};w.compareTo=function(c){k(c,"other");m(c,C,"other");return this._year-c._year};w.isAfter=function(c){k(c,"other");m(c,C,"other");return this._year>c._year};w.isBefore=function(c){k(c,"other");m(c,C,"other");return this._year<c._year};w.format=function(c){k(c,"formatter");m(c,Eb,"formatter");
return c.format(this)};w.equals=function(c){return this===c?!0:c instanceof C?this.value()===c.value():!1};w.toString=function(){return""+this._year};w.toJSON=function(){return this.toString()};w.until=function(c,A){c=C.from(c);if(A instanceof V){var P=c.value()-this.value();switch(A){case V.YEARS:return P;case V.DECADES:return J.intDiv(P,10);case V.CENTURIES:return J.intDiv(P,100);case V.MILLENNIA:return J.intDiv(P,1E3);case V.ERAS:return c.getLong(N.ERA)-this.getLong(N.ERA)}throw new D("Unsupported unit: "+
A);}return A.between(this,c)};return C}(Db),Oe,Qe=function(){function Z(){}Z.firstDayOfMonth=function(){return Fc.FIRST_DAY_OF_MONTH};Z.lastDayOfMonth=function(){return Fc.LAST_DAY_OF_MONTH};Z.firstDayOfNextMonth=function(){return Fc.FIRST_DAY_OF_NEXT_MONTH};Z.firstDayOfYear=function(){return Fc.FIRST_DAY_OF_YEAR};Z.lastDayOfYear=function(){return Fc.LAST_DAY_OF_YEAR};Z.firstDayOfNextYear=function(){return Fc.FIRST_DAY_OF_NEXT_YEAR};Z.firstInMonth=function(C){k(C,"dayOfWeek");return new Pe(1,C)};
Z.lastInMonth=function(C){k(C,"dayOfWeek");return new Pe(-1,C)};Z.dayOfWeekInMonth=function(C,w){k(w,"dayOfWeek");return new Pe(C,w)};Z.next=function(C){return new we(2,C)};Z.nextOrSame=function(C){return new we(0,C)};Z.previous=function(C){return new we(3,C)};Z.previousOrSame=function(C){return new we(1,C)};return Z}(),Fc=function(Z){function C(w){var c=Z.call(this)||this;c._ordinal=w;return c}e(C,Z);C.prototype.adjustInto=function(w){switch(this._ordinal){case 0:return w.with(N.DAY_OF_MONTH,1);
case 1:return w.with(N.DAY_OF_MONTH,w.range(N.DAY_OF_MONTH).maximum());case 2:return w.with(N.DAY_OF_MONTH,1).plus(1,V.MONTHS);case 3:return w.with(N.DAY_OF_YEAR,1);case 4:return w.with(N.DAY_OF_YEAR,w.range(N.DAY_OF_YEAR).maximum());case 5:return w.with(N.DAY_OF_YEAR,1).plus(1,V.YEARS)}throw new K("Unreachable");};return C}(cc);Fc.FIRST_DAY_OF_MONTH=new Fc(0);Fc.LAST_DAY_OF_MONTH=new Fc(1);Fc.FIRST_DAY_OF_NEXT_MONTH=new Fc(2);Fc.FIRST_DAY_OF_YEAR=new Fc(3);Fc.LAST_DAY_OF_YEAR=new Fc(4);Fc.FIRST_DAY_OF_NEXT_YEAR=
new Fc(5);var Pe=function(Z){function C(w,c){var A=Z.call(this)||this;A._ordinal=w;A._dowValue=c.value();return A}e(C,Z);C.prototype.adjustInto=function(w){if(this._ordinal>=0){w=w.with(N.DAY_OF_MONTH,1);var c=w.get(N.DAY_OF_WEEK);c=J.intMod(this._dowValue-c+7,7);c+=(this._ordinal-1)*7;return w.plus(c,V.DAYS)}w=w.with(N.DAY_OF_MONTH,w.range(N.DAY_OF_MONTH).maximum());c=w.get(N.DAY_OF_WEEK);c=this._dowValue-c;c=(c===0?0:c>0?c-7:c)-(-this._ordinal-1)*7;return w.plus(c,V.DAYS)};return C}(cc),we=function(Z){function C(w,
c){var A=Z.call(this)||this;k(c,"dayOfWeek");A._relative=w;A._dowValue=c.value();return A}e(C,Z);C.prototype.adjustInto=function(w){var c=w.get(N.DAY_OF_WEEK);if(this._relative<2&&c===this._dowValue)return w;if((this._relative&1)===0)return c-=this._dowValue,w.plus(c>=0?7-c:-c,V.DAYS);c=this._dowValue-c;return w.minus(c>=0?7-c:-c,V.DAYS)};return C}(cc),ac=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);C.isLeapYear=function(c){return(c&3)===0&&(c%100!==0||c%400===0)};var w=C.prototype;
w._updateResolveMap=function(c,A,P){k(c,"fieldValues");k(A,"field");var fa=c.get(A);if(fa!=null&&fa!==P)throw new y("Invalid state, field: "+A+" "+fa+" conflicts with "+A+" "+P);c.put(A,P)};w.resolveDate=function(c,A){if(c.containsKey(N.EPOCH_DAY))return tb.ofEpochDay(c.remove(N.EPOCH_DAY));var P=c.remove(N.PROLEPTIC_MONTH);P!=null&&(A!==qb.LENIENT&&N.PROLEPTIC_MONTH.checkValidValue(P),this._updateResolveMap(c,N.MONTH_OF_YEAR,J.floorMod(P,12)+1),this._updateResolveMap(c,N.YEAR,J.floorDiv(P,12)));
P=c.remove(N.YEAR_OF_ERA);if(P!=null){A!==qb.LENIENT&&N.YEAR_OF_ERA.checkValidValue(P);var fa=c.remove(N.ERA);if(fa==null)fa=c.get(N.YEAR),A===qb.STRICT?fa!=null?this._updateResolveMap(c,N.YEAR,fa>0?P:J.safeSubtract(1,P)):c.put(N.YEAR_OF_ERA,P):this._updateResolveMap(c,N.YEAR,fa==null||fa>0?P:J.safeSubtract(1,P));else if(fa===1)this._updateResolveMap(c,N.YEAR,P);else if(fa===0)this._updateResolveMap(c,N.YEAR,J.safeSubtract(1,P));else throw new y("Invalid value for era: "+fa);}else c.containsKey(N.ERA)&&
N.ERA.checkValidValue(c.get(N.ERA));if(c.containsKey(N.YEAR)){if(c.containsKey(N.MONTH_OF_YEAR)&&c.containsKey(N.DAY_OF_MONTH)){P=N.YEAR.checkValidIntValue(c.remove(N.YEAR));fa=c.remove(N.MONTH_OF_YEAR);c=c.remove(N.DAY_OF_MONTH);if(A===qb.LENIENT)return A=fa-1,--c,tb.of(P,1,1).plusMonths(A).plusDays(c);A===qb.SMART&&(N.DAY_OF_MONTH.checkValidValue(c),fa===4||fa===6||fa===9||fa===11?c=Math.min(c,30):fa===2&&(c=Math.min(c,eb.FEBRUARY.length(ad.isLeap(P)))));return tb.of(P,fa,c)}if(c.containsKey(N.DAY_OF_YEAR)){P=
N.YEAR.checkValidIntValue(c.remove(N.YEAR));if(A===qb.LENIENT)return A=J.safeSubtract(c.remove(N.DAY_OF_YEAR),1),tb.ofYearDay(P,1).plusDays(A);A=N.DAY_OF_YEAR.checkValidIntValue(c.remove(N.DAY_OF_YEAR));return tb.ofYearDay(P,A)}if(c.containsKey(N.ALIGNED_WEEK_OF_YEAR)){if(c.containsKey(N.ALIGNED_DAY_OF_WEEK_IN_YEAR)){P=N.YEAR.checkValidIntValue(c.remove(N.YEAR));if(A===qb.LENIENT)return A=J.safeSubtract(c.remove(N.ALIGNED_WEEK_OF_YEAR),1),c=J.safeSubtract(c.remove(N.ALIGNED_DAY_OF_WEEK_IN_YEAR),1),
tb.of(P,1,1).plusWeeks(A).plusDays(c);fa=N.ALIGNED_WEEK_OF_YEAR.checkValidIntValue(c.remove(N.ALIGNED_WEEK_OF_YEAR));c=N.ALIGNED_DAY_OF_WEEK_IN_YEAR.checkValidIntValue(c.remove(N.ALIGNED_DAY_OF_WEEK_IN_YEAR));c=tb.of(P,1,1).plusDays((fa-1)*7+(c-1));if(A===qb.STRICT&&c.get(N.YEAR)!==P)throw new y("Strict mode rejected date parsed to a different year");return c}if(c.containsKey(N.DAY_OF_WEEK)){P=N.YEAR.checkValidIntValue(c.remove(N.YEAR));if(A===qb.LENIENT)return A=J.safeSubtract(c.remove(N.ALIGNED_WEEK_OF_YEAR),
1),c=J.safeSubtract(c.remove(N.DAY_OF_WEEK),1),tb.of(P,1,1).plusWeeks(A).plusDays(c);fa=N.ALIGNED_WEEK_OF_YEAR.checkValidIntValue(c.remove(N.ALIGNED_WEEK_OF_YEAR));c=N.DAY_OF_WEEK.checkValidIntValue(c.remove(N.DAY_OF_WEEK));c=tb.of(P,1,1).plusWeeks(fa-1).with(Qe.nextOrSame(Ua.of(c)));if(A===qb.STRICT&&c.get(N.YEAR)!==P)throw new y("Strict mode rejected date parsed to a different month");return c}}}return null};w.date=function(c){return tb.from(c)};return C}(W),nd=function(Z){function C(c,A){var P=
Z.call(this)||this;k(c,"time");m(c,Ia,"time");k(A,"offset");m(A,ab,"offset");P._time=c;P._offset=A;return P}e(C,Z);C.from=function(c){k(c,"temporal");if(c instanceof C)return c;if(c instanceof bd)return c.toOffsetTime();try{var A=Ia.from(c),P=ab.from(c);return new C(A,P)}catch(fa){throw new y("Unable to obtain OffsetTime TemporalAccessor: "+c+", type "+(c.constructor!=null?c.constructor.name:""));}};C.now=function(c){return arguments.length===0?C._now(dc.systemDefaultZone()):c instanceof dc?C._now(c):
C._now(dc.system(c))};C._now=function(c){k(c,"clock");var A=c.instant();return C.ofInstant(A,c.zone().rules().offset(A))};C.of=function(){return arguments.length<=2?C.ofTimeAndOffset.apply(this,arguments):C.ofNumbers.apply(this,arguments)};C.ofNumbers=function(c,A,P,fa,Da){c=Ia.of(c,A,P,fa);return new C(c,Da)};C.ofTimeAndOffset=function(c,A){return new C(c,A)};C.ofInstant=function(c,A){k(c,"instant");m(c,hc,"instant");k(A,"zone");m(A,lb,"zone");A=A.rules().offset(c);var P=c.epochSecond()%Ia.SECONDS_PER_DAY;
P=(P+A.totalSeconds())%Ia.SECONDS_PER_DAY;P<0&&(P+=Ia.SECONDS_PER_DAY);c=Ia.ofSecondOfDay(P,c.nano());return new C(c,A)};C.parse=function(c,A){A===void 0&&(A=Eb.ISO_OFFSET_TIME);k(A,"formatter");return A.parse(c,C.FROM)};var w=C.prototype;w.adjustInto=function(c){return c.with(N.NANO_OF_DAY,this._time.toNanoOfDay()).with(N.OFFSET_SECONDS,this.offset().totalSeconds())};w.atDate=function(c){return bd.of(c,this._time,this._offset)};w.format=function(c){k(c,"formatter");return c.format(this,C.FROM)};
w.get=function(c){return Z.prototype.get.call(this,c)};w.getLong=function(c){return c instanceof N?c===N.OFFSET_SECONDS?this._offset.totalSeconds():this._time.getLong(c):c.getFrom(this)};w.hour=function(){return this._time.hour()};w.minute=function(){return this._time.minute()};w.second=function(){return this._time.second()};w.nano=function(){return this._time.nano()};w.offset=function(){return this._offset};w.isAfter=function(c){k(c,"other");return this._toEpochNano()>c._toEpochNano()};w.isBefore=
function(c){k(c,"other");return this._toEpochNano()<c._toEpochNano()};w.isEqual=function(c){k(c,"other");return this._toEpochNano()===c._toEpochNano()};w.isSupported=function(c){return c instanceof N?c.isTimeBased()||c===N.OFFSET_SECONDS:c instanceof V?c.isTimeBased():c!=null&&c.isSupportedBy(this)};w.minusHours=function(c){return this._withLocalTimeOffset(this._time.minusHours(c),this._offset)};w.minusMinutes=function(c){return this._withLocalTimeOffset(this._time.minusMinutes(c),this._offset)};
w.minusSeconds=function(c){return this._withLocalTimeOffset(this._time.minusSeconds(c),this._offset)};w.minusNanos=function(c){return this._withLocalTimeOffset(this._time.minusNanos(c),this._offset)};w.minusAmount=function(c){k(c);return c.subtractFrom(this)};w.minusAmountUnit=function(c,A){return this.plus(-1*c,A)};w.plusAmount=function(c){k(c);return c.addTo(this)};w.plusAmountUnit=function(c,A){return A instanceof V?this._withLocalTimeOffset(this._time.plus(c,A),this._offset):A.addTo(this,c)};
w.plusHours=function(c){return this._withLocalTimeOffset(this._time.plusHours(c),this._offset)};w.plusMinutes=function(c){return this._withLocalTimeOffset(this._time.plusMinutes(c),this._offset)};w.plusSeconds=function(c){return this._withLocalTimeOffset(this._time.plusSeconds(c),this._offset)};w.plusNanos=function(c){return this._withLocalTimeOffset(this._time.plusNanos(c),this._offset)};w.query=function(c){k(c,"query");return c===pa.precision()?V.NANOS:c===pa.offset()||c===pa.zone()?this.offset():
c===pa.localTime()?this._time:c===pa.chronology()||c===pa.localDate()||c===pa.zoneId()?null:Z.prototype.query.call(this,c)};w.range=function(c){return c instanceof N?c===N.OFFSET_SECONDS?c.range():this._time.range(c):c.rangeRefinedBy(this)};w.toLocalTime=function(){return this._time};w.truncatedTo=function(c){return this._withLocalTimeOffset(this._time.truncatedTo(c),this._offset)};w.until=function(c,A){k(c,"endExclusive");k(A,"unit");c=C.from(c);if(A instanceof V){c=c._toEpochNano()-this._toEpochNano();
switch(A){case V.NANOS:return c;case V.MICROS:return Math.floor(c/1E3);case V.MILLIS:return Math.floor(c/1E6);case V.SECONDS:return Math.floor(c/Ia.NANOS_PER_SECOND);case V.MINUTES:return Math.floor(c/Ia.NANOS_PER_MINUTE);case V.HOURS:return Math.floor(c/Ia.NANOS_PER_HOUR);case V.HALF_DAYS:return Math.floor(c/(12*Ia.NANOS_PER_HOUR))}throw new D("Unsupported unit: "+A);}return A.between(this,c)};w.withHour=function(c){return this._withLocalTimeOffset(this._time.withHour(c),this._offset)};w.withMinute=
function(c){return this._withLocalTimeOffset(this._time.withMinute(c),this._offset)};w.withSecond=function(c){return this._withLocalTimeOffset(this._time.withSecond(c),this._offset)};w.withNano=function(c){return this._withLocalTimeOffset(this._time.withNano(c),this._offset)};w.withOffsetSameInstant=function(c){k(c,"offset");if(c.equals(this._offset))return this;var A=c.totalSeconds()-this._offset.totalSeconds();A=this._time.plusSeconds(A);return new C(A,c)};w.withOffsetSameLocal=function(c){return c!=
null&&c.equals(this._offset)?this:new C(this._time,c)};w._toEpochNano=function(){var c=this._time.toNanoOfDay(),A=this._offset.totalSeconds()*Ia.NANOS_PER_SECOND;return c-A};w.withAdjuster=function(c){k(c,"adjuster");return c instanceof Ia?this._withLocalTimeOffset(c,this._offset):c instanceof ab?this._withLocalTimeOffset(this._time,c):c instanceof C?c:c.adjustInto(this)};w.withFieldValue=function(c,A){k(c,"field");return c instanceof N?c===N.OFFSET_SECONDS?this._withLocalTimeOffset(this._time,ab.ofTotalSeconds(c.checkValidIntValue(A))):
this._withLocalTimeOffset(this._time.with(c,A),this._offset):c.adjustInto(this,A)};w._withLocalTimeOffset=function(c,A){return this._time===c&&this._offset.equals(A)?this:new C(c,A)};w.compareTo=function(c){k(c,"other");m(c,C,"other");if(this._offset.equals(c._offset))return this._time.compareTo(c._time);var A=J.compareNumbers(this._toEpochNano(),c._toEpochNano());return A===0?this._time.compareTo(c._time):A};w.equals=function(c){return this===c?!0:c instanceof C?this._time.equals(c._time)&&this._offset.equals(c._offset):
!1};w.hashCode=function(){return this._time.hashCode()^this._offset.hashCode()};w.toString=function(){return this._time.toString()+this._offset.toString()};w.toJSON=function(){return this.toString()};return C}(nc),Re=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=C.prototype;w.query=function(c){return c===pa.zoneId()||c===pa.zone()?this.zone():c===pa.chronology()?this.toLocalDate().chronology():c===pa.precision()?V.NANOS:c===pa.offset()?this.offset():c===pa.localDate()?
tb.ofEpochDay(this.toLocalDate().toEpochDay()):c===pa.localTime()?this.toLocalTime():Z.prototype.query.call(this,c)};w.format=function(c){k(c,"formatter");return c.format(this)};w.toInstant=function(){return hc.ofEpochSecond(this.toEpochSecond(),this.toLocalTime().nano())};w.toEpochSecond=function(){var c=this.toLocalDate().toEpochDay()*86400+this.toLocalTime().toSecondOfDay();return c-=this.offset().totalSeconds()};w.compareTo=function(c){k(c,"other");var A=J.compareNumbers(this.toEpochSecond(),
c.toEpochSecond());A===0&&(A=this.toLocalTime().nano()-c.toLocalTime().nano(),A===0&&(A=this.toLocalDateTime().compareTo(c.toLocalDateTime()),A===0&&(A=this.zone().id(),c=c.zone().id(),A=A<c?-1:A>c?1:0)));return A};w.isAfter=function(c){k(c,"other");var A=this.toEpochSecond(),P=c.toEpochSecond();return A>P||A===P&&this.toLocalTime().nano()>c.toLocalTime().nano()};w.isBefore=function(c){k(c,"other");var A=this.toEpochSecond(),P=c.toEpochSecond();return A<P||A===P&&this.toLocalTime().nano()<c.toLocalTime().nano()};
w.isEqual=function(c){k(c,"other");return this.toEpochSecond()===c.toEpochSecond()&&this.toLocalTime().nano()===c.toLocalTime().nano()};w.equals=function(c){return this===c?!0:c instanceof C?this.compareTo(c)===0:!1};return C}(nc),cd=function(Z){function C(c,A,P){k(c,"dateTime");k(A,"offset");k(P,"zone");var fa=Z.call(this)||this;fa._dateTime=c;fa._offset=A;fa._zone=P;return fa}e(C,Z);C.now=function(c){c=c instanceof lb?dc.system(c):c==null?dc.systemDefaultZone():c;return C.ofInstant(c.instant(),
c.zone())};C.of=function(){return arguments.length<=2?C.of2.apply(this,arguments):arguments.length===3&&arguments[0]instanceof tb?C.of3.apply(this,arguments):C.of8.apply(this,arguments)};C.of3=function(c,A,P){return C.of2(Yb.of(c,A),P)};C.of2=function(c,A){return C.ofLocal(c,A,null)};C.of8=function(c,A,P,fa,Da,kb,zb,Hc){c=Yb.of(c,A,P,fa,Da,kb,zb);return C.ofLocal(c,Hc,null)};C.ofLocal=function(c,A,P){k(c,"localDateTime");k(A,"zone");if(A instanceof ab)return new C(c,A,A);var fa=null;fa=A.rules();
var Da=fa.validOffsets(c);Da.length===1?fa=Da[0]:Da.length===0?(fa=fa.transition(c),c=c.plusSeconds(fa.duration().seconds()),fa=fa.offsetAfter()):fa=P!=null&&Da.some(function(kb){return kb.equals(P)})?P:k(Da[0],"offset");return new C(c,fa,A)};C.ofInstant=function(){return arguments.length===2?C.ofInstant2.apply(this,arguments):C.ofInstant3.apply(this,arguments)};C.ofInstant2=function(c,A){k(c,"instant");k(A,"zone");return C._create(c.epochSecond(),c.nano(),A)};C.ofInstant3=function(c,A,P){k(c,"localDateTime");
k(A,"offset");k(P,"zone");return C._create(c.toEpochSecond(A),c.nano(),P)};C._create=function(c,A,P){var fa=P.rules(),Da=hc.ofEpochSecond(c,A);fa=fa.offset(Da);c=Yb.ofEpochSecond(c,A,fa);return new C(c,fa,P)};C.ofStrict=function(c,A,P){k(c,"localDateTime");k(A,"offset");k(P,"zone");var fa=P.rules();if(fa.isValidOffset(c,A)===!1){fa=fa.transition(c);if(fa!=null&&fa.isGap())throw new y("LocalDateTime "+c+" does not exist in zone "+P+" due to a gap in the local time-line, typically caused by daylight savings");
throw new y('ZoneOffset "'+A+'" is not valid for LocalDateTime "'+c+'" in zone "'+P+'"');}return new C(c,A,P)};C.ofLenient=function(c,A,P){k(c,"localDateTime");k(A,"offset");k(P,"zone");if(P instanceof ab&&A.equals(P)===!1)throw new I("ZoneId must match ZoneOffset");return new C(c,A,P)};C.from=function(c){k(c,"temporal");if(c instanceof C)return c;var A=lb.from(c);if(c.isSupported(N.INSTANT_SECONDS)){var P=C._from(c,A);if(P!=null)return P}c=Yb.from(c);return C.of2(c,A)};C._from=function(c,A){try{return C.__from(c,
A)}catch(P){if(!(P instanceof y))throw P;}};C.__from=function(c,A){var P=c.getLong(N.INSTANT_SECONDS);c=c.get(N.NANO_OF_SECOND);return C._create(P,c,A)};C.parse=function(c,A){A===void 0&&(A=Eb.ISO_ZONED_DATE_TIME);k(A,"formatter");return A.parse(c,C.FROM)};var w=C.prototype;w._resolveLocal=function(c){k(c,"newDateTime");return C.ofLocal(c,this._zone,this._offset)};w._resolveInstant=function(c){return C.ofInstant3(c,this._offset,this._zone)};w._resolveOffset=function(c){return c.equals(this._offset)===
!1&&this._zone.rules().isValidOffset(this._dateTime,c)?new C(this._dateTime,c,this._zone):this};w.isSupported=function(c){return c instanceof N?!0:c instanceof V?c.isDateBased()||c.isTimeBased():c!=null&&c.isSupportedBy(this)};w.range=function(c){return c instanceof N?c===N.INSTANT_SECONDS||c===N.OFFSET_SECONDS?c.range():this._dateTime.range(c):c.rangeRefinedBy(this)};w.get=function(c){return this.getLong(c)};w.getLong=function(c){if(c instanceof N){switch(c){case N.INSTANT_SECONDS:return this.toEpochSecond();
case N.OFFSET_SECONDS:return this._offset.totalSeconds()}return this._dateTime.getLong(c)}k(c,"field");return c.getFrom(this)};w.offset=function(){return this._offset};w.withEarlierOffsetAtOverlap=function(){var c=this._zone.rules().transition(this._dateTime);return c!=null&&c.isOverlap()&&(c=c.offsetBefore(),c.equals(this._offset)===!1)?new C(this._dateTime,c,this._zone):this};w.withLaterOffsetAtOverlap=function(){var c=this._zone.rules().transition(this.toLocalDateTime());return c!=null&&(c=c.offsetAfter(),
c.equals(this._offset)===!1)?new C(this._dateTime,c,this._zone):this};w.zone=function(){return this._zone};w.withZoneSameLocal=function(c){k(c,"zone");return this._zone.equals(c)?this:C.ofLocal(this._dateTime,c,this._offset)};w.withZoneSameInstant=function(c){k(c,"zone");return this._zone.equals(c)?this:C._create(this._dateTime.toEpochSecond(this._offset),this._dateTime.nano(),c)};w.withFixedOffsetZone=function(){return this._zone.equals(this._offset)?this:new C(this._dateTime,this._offset,this._offset)};
w.year=function(){return this._dateTime.year()};w.monthValue=function(){return this._dateTime.monthValue()};w.month=function(){return this._dateTime.month()};w.dayOfMonth=function(){return this._dateTime.dayOfMonth()};w.dayOfYear=function(){return this._dateTime.dayOfYear()};w.dayOfWeek=function(){return this._dateTime.dayOfWeek()};w.hour=function(){return this._dateTime.hour()};w.minute=function(){return this._dateTime.minute()};w.second=function(){return this._dateTime.second()};w.nano=function(){return this._dateTime.nano()};
w.withAdjuster=function(c){if(c instanceof tb)return this._resolveLocal(Yb.of(c,this._dateTime.toLocalTime()));if(c instanceof Ia)return this._resolveLocal(Yb.of(this._dateTime.toLocalDate(),c));if(c instanceof Yb)return this._resolveLocal(c);if(c instanceof hc)return C._create(c.epochSecond(),c.nano(),this._zone);if(c instanceof ab)return this._resolveOffset(c);k(c,"adjuster");return c.adjustInto(this)};w.withFieldValue=function(c,A){if(c instanceof N){switch(c){case N.INSTANT_SECONDS:return C._create(A,
this.nano(),this._zone);case N.OFFSET_SECONDS:return c=ab.ofTotalSeconds(c.checkValidIntValue(A)),this._resolveOffset(c)}return this._resolveLocal(this._dateTime.with(c,A))}return c.adjustInto(this,A)};w.withYear=function(c){return this._resolveLocal(this._dateTime.withYear(c))};w.withMonth=function(c){return this._resolveLocal(this._dateTime.withMonth(c))};w.withDayOfMonth=function(c){return this._resolveLocal(this._dateTime.withDayOfMonth(c))};w.withDayOfYear=function(c){return this._resolveLocal(this._dateTime.withDayOfYear(c))};
w.withHour=function(c){return this._resolveLocal(this._dateTime.withHour(c))};w.withMinute=function(c){return this._resolveLocal(this._dateTime.withMinute(c))};w.withSecond=function(c){return this._resolveLocal(this._dateTime.withSecond(c))};w.withNano=function(c){return this._resolveLocal(this._dateTime.withNano(c))};w.truncatedTo=function(c){return this._resolveLocal(this._dateTime.truncatedTo(c))};w.plusAmount=function(c){k(c);return c.addTo(this)};w.plusAmountUnit=function(c,A){if(A instanceof
V)return A.isDateBased()?this._resolveLocal(this._dateTime.plus(c,A)):this._resolveInstant(this._dateTime.plus(c,A));k(A,"unit");return A.addTo(this,c)};w.plusYears=function(c){return this._resolveLocal(this._dateTime.plusYears(c))};w.plusMonths=function(c){return this._resolveLocal(this._dateTime.plusMonths(c))};w.plusWeeks=function(c){return this._resolveLocal(this._dateTime.plusWeeks(c))};w.plusDays=function(c){return this._resolveLocal(this._dateTime.plusDays(c))};w.plusHours=function(c){return this._resolveInstant(this._dateTime.plusHours(c))};
w.plusMinutes=function(c){return this._resolveInstant(this._dateTime.plusMinutes(c))};w.plusSeconds=function(c){return this._resolveInstant(this._dateTime.plusSeconds(c))};w.plusNanos=function(c){return this._resolveInstant(this._dateTime.plusNanos(c))};w.minusAmount=function(c){k(c,"amount");return c.subtractFrom(this)};w.minusAmountUnit=function(c,A){return this.plusAmountUnit(-1*c,A)};w.minusYears=function(c){return this.plusYears(-1*c)};w.minusMonths=function(c){return this.plusMonths(-1*c)};
w.minusWeeks=function(c){return this.plusWeeks(-1*c)};w.minusDays=function(c){return this.plusDays(-1*c)};w.minusHours=function(c){return this.plusHours(-1*c)};w.minusMinutes=function(c){return this.plusMinutes(-1*c)};w.minusSeconds=function(c){return this.plusSeconds(-1*c)};w.minusNanos=function(c){return this.plusNanos(-1*c)};w.query=function(c){if(c===pa.localDate())return this.toLocalDate();k(c,"query");return Z.prototype.query.call(this,c)};w.until=function(c,A){c=C.from(c);if(A instanceof V){c=
c.withZoneSameInstant(this._zone);if(A.isDateBased())return this._dateTime.until(c._dateTime,A);var P=this._offset.totalSeconds()-c._offset.totalSeconds();c=c._dateTime.plusSeconds(P);return this._dateTime.until(c,A)}return A.between(this,c)};w.toLocalDateTime=function(){return this._dateTime};w.toLocalDate=function(){return this._dateTime.toLocalDate()};w.toLocalTime=function(){return this._dateTime.toLocalTime()};w.toOffsetDateTime=function(){return bd.of(this._dateTime,this._offset)};w.equals=
function(c){return this===c?!0:c instanceof C?this._dateTime.equals(c._dateTime)&&this._offset.equals(c._offset)&&this._zone.equals(c._zone):!1};w.hashCode=function(){return J.hashCode(this._dateTime.hashCode(),this._offset.hashCode(),this._zone.hashCode())};w.toString=function(){var c=this._dateTime.toString()+this._offset.toString();this._offset!==this._zone&&(c+="["+this._zone.toString()+"]");return c};w.toJSON=function(){return this.toString()};w.format=function(c){return Z.prototype.format.call(this,
c)};return C}(Re),bd=function(Z){function C(c,A){var P=Z.call(this)||this;k(c,"dateTime");m(c,Yb,"dateTime");k(A,"offset");m(A,ab,"offset");P._dateTime=c;P._offset=A;return P}e(C,Z);C.from=function(c){k(c,"temporal");if(c instanceof C)return c;try{var A=ab.from(c);try{var P=Yb.from(c);return C.of(P,A)}catch(Da){var fa=hc.from(c);return C.ofInstant(fa,A)}}catch(Da){throw new y("Unable to obtain OffsetDateTime TemporalAccessor: "+c+", type "+(c.constructor!=null?c.constructor.name:""));}};C.now=function(c){if(arguments.length===
0)return C.now(dc.systemDefaultZone());k(c,"clockOrZone");if(c instanceof lb)return C.now(dc.system(c));if(c instanceof dc){var A=c.instant();return C.ofInstant(A,c.zone().rules().offset(A))}throw new I("clockOrZone must be an instance of ZoneId or Clock");};C.of=function(){return arguments.length<=2?C.ofDateTime.apply(this,arguments):arguments.length===3?C.ofDateAndTime.apply(this,arguments):C.ofNumbers.apply(this,arguments)};C.ofDateTime=function(c,A){return new C(c,A)};C.ofDateAndTime=function(c,
A,P){c=Yb.of(c,A);return new C(c,P)};C.ofNumbers=function(c,A,P,fa,Da,kb,zb,Hc){fa===void 0&&(fa=0);Da===void 0&&(Da=0);kb===void 0&&(kb=0);zb===void 0&&(zb=0);c=Yb.of(c,A,P,fa,Da,kb,zb);return new C(c,Hc)};C.ofInstant=function(c,A){k(c,"instant");k(A,"zone");A=A.rules().offset(c);c=Yb.ofEpochSecond(c.epochSecond(),c.nano(),A);return new C(c,A)};C.parse=function(c,A){A===void 0&&(A=Eb.ISO_OFFSET_DATE_TIME);k(A,"formatter");return A.parse(c,C.FROM)};var w=C.prototype;w.adjustInto=function(c){return c.with(N.EPOCH_DAY,
this.toLocalDate().toEpochDay()).with(N.NANO_OF_DAY,this.toLocalTime().toNanoOfDay()).with(N.OFFSET_SECONDS,this.offset().totalSeconds())};w.until=function(c,A){c=C.from(c);return A instanceof V?(c=c.withOffsetSameInstant(this._offset),this._dateTime.until(c._dateTime,A)):A.between(this,c)};w.atZoneSameInstant=function(c){return cd.ofInstant(this._dateTime,this._offset,c)};w.atZoneSimilarLocal=function(c){return cd.ofLocal(this._dateTime,c,this._offset)};w.query=function(c){k(c,"query");return c===
pa.chronology()?ac.INSTANCE:c===pa.precision()?V.NANOS:c===pa.offset()||c===pa.zone()?this.offset():c===pa.localDate()?this.toLocalDate():c===pa.localTime()?this.toLocalTime():c===pa.zoneId()?null:Z.prototype.query.call(this,c)};w.get=function(c){if(c instanceof N){switch(c){case N.INSTANT_SECONDS:throw new y("Field too large for an int: "+c);case N.OFFSET_SECONDS:return this.offset().totalSeconds()}return this._dateTime.get(c)}return Z.prototype.get.call(this,c)};w.getLong=function(c){if(c instanceof
N){switch(c){case N.INSTANT_SECONDS:return this.toEpochSecond();case N.OFFSET_SECONDS:return this.offset().totalSeconds()}return this._dateTime.getLong(c)}return c.getFrom(this)};w.offset=function(){return this._offset};w.year=function(){return this._dateTime.year()};w.monthValue=function(){return this._dateTime.monthValue()};w.month=function(){return this._dateTime.month()};w.dayOfMonth=function(){return this._dateTime.dayOfMonth()};w.dayOfYear=function(){return this._dateTime.dayOfYear()};w.dayOfWeek=
function(){return this._dateTime.dayOfWeek()};w.hour=function(){return this._dateTime.hour()};w.minute=function(){return this._dateTime.minute()};w.second=function(){return this._dateTime.second()};w.nano=function(){return this._dateTime.nano()};w.toLocalDateTime=function(){return this._dateTime};w.toLocalDate=function(){return this._dateTime.toLocalDate()};w.toLocalTime=function(){return this._dateTime.toLocalTime()};w.toOffsetTime=function(){return nd.of(this._dateTime.toLocalTime(),this._offset)};
w.toZonedDateTime=function(){return cd.of(this._dateTime,this._offset)};w.toInstant=function(){return this._dateTime.toInstant(this._offset)};w.toEpochSecond=function(){return this._dateTime.toEpochSecond(this._offset)};w.isSupported=function(c){return c instanceof N||c instanceof V?c.isDateBased()||c.isTimeBased():c!=null&&c.isSupportedBy(this)};w.range=function(c){return c instanceof N?c===N.INSTANT_SECONDS||c===N.OFFSET_SECONDS?c.range():this._dateTime.range(c):c.rangeRefinedBy(this)};w.withAdjuster=
function(c){k(c);return c instanceof tb||c instanceof Ia||c instanceof Yb?this._withDateTimeOffset(this._dateTime.with(c),this._offset):c instanceof hc?C.ofInstant(c,this._offset):c instanceof ab?this._withDateTimeOffset(this._dateTime,c):c instanceof C?c:c.adjustInto(this)};w.withFieldValue=function(c,A){k(c);if(c instanceof N){switch(c){case N.INSTANT_SECONDS:return C.ofInstant(hc.ofEpochSecond(A,this.nano()),this._offset);case N.OFFSET_SECONDS:return this._withDateTimeOffset(this._dateTime,ab.ofTotalSeconds(c.checkValidIntValue(A)))}return this._withDateTimeOffset(this._dateTime.with(c,
A),this._offset)}return c.adjustInto(this,A)};w._withDateTimeOffset=function(c,A){return this._dateTime===c&&this._offset.equals(A)?this:new C(c,A)};w.withYear=function(c){return this._withDateTimeOffset(this._dateTime.withYear(c),this._offset)};w.withMonth=function(c){return this._withDateTimeOffset(this._dateTime.withMonth(c),this._offset)};w.withDayOfMonth=function(c){return this._withDateTimeOffset(this._dateTime.withDayOfMonth(c),this._offset)};w.withDayOfYear=function(c){return this._withDateTimeOffset(this._dateTime.withDayOfYear(c),
this._offset)};w.withHour=function(c){return this._withDateTimeOffset(this._dateTime.withHour(c),this._offset)};w.withMinute=function(c){return this._withDateTimeOffset(this._dateTime.withMinute(c),this._offset)};w.withSecond=function(c){return this._withDateTimeOffset(this._dateTime.withSecond(c),this._offset)};w.withNano=function(c){return this._withDateTimeOffset(this._dateTime.withNano(c),this._offset)};w.withOffsetSameLocal=function(c){k(c,"offset");return this._withDateTimeOffset(this._dateTime,
c)};w.withOffsetSameInstant=function(c){k(c,"offset");if(c.equals(this._offset))return this;var A=c.totalSeconds()-this._offset.totalSeconds();A=this._dateTime.plusSeconds(A);return new C(A,c)};w.truncatedTo=function(c){return this._withDateTimeOffset(this._dateTime.truncatedTo(c),this._offset)};w.plusAmount=function(c){k(c,"amount");return c.addTo(this)};w.plusAmountUnit=function(c,A){return A instanceof V?this._withDateTimeOffset(this._dateTime.plus(c,A),this._offset):A.addTo(this,c)};w.plusYears=
function(c){return this._withDateTimeOffset(this._dateTime.plusYears(c),this._offset)};w.plusMonths=function(c){return this._withDateTimeOffset(this._dateTime.plusMonths(c),this._offset)};w.plusWeeks=function(c){return this._withDateTimeOffset(this._dateTime.plusWeeks(c),this._offset)};w.plusDays=function(c){return this._withDateTimeOffset(this._dateTime.plusDays(c),this._offset)};w.plusHours=function(c){return this._withDateTimeOffset(this._dateTime.plusHours(c),this._offset)};w.plusMinutes=function(c){return this._withDateTimeOffset(this._dateTime.plusMinutes(c),
this._offset)};w.plusSeconds=function(c){return this._withDateTimeOffset(this._dateTime.plusSeconds(c),this._offset)};w.plusNanos=function(c){return this._withDateTimeOffset(this._dateTime.plusNanos(c),this._offset)};w.minusAmount=function(c){k(c);return c.subtractFrom(this)};w.minusAmountUnit=function(c,A){return this.plus(-1*c,A)};w.minusYears=function(c){return this._withDateTimeOffset(this._dateTime.minusYears(c),this._offset)};w.minusMonths=function(c){return this._withDateTimeOffset(this._dateTime.minusMonths(c),
this._offset)};w.minusWeeks=function(c){return this._withDateTimeOffset(this._dateTime.minusWeeks(c),this._offset)};w.minusDays=function(c){return this._withDateTimeOffset(this._dateTime.minusDays(c),this._offset)};w.minusHours=function(c){return this._withDateTimeOffset(this._dateTime.minusHours(c),this._offset)};w.minusMinutes=function(c){return this._withDateTimeOffset(this._dateTime.minusMinutes(c),this._offset)};w.minusSeconds=function(c){return this._withDateTimeOffset(this._dateTime.minusSeconds(c),
this._offset)};w.minusNanos=function(c){return this._withDateTimeOffset(this._dateTime.minusNanos(c),this._offset)};w.compareTo=function(c){k(c,"other");m(c,C,"other");if(this.offset().equals(c.offset()))return this.toLocalDateTime().compareTo(c.toLocalDateTime());var A=J.compareNumbers(this.toEpochSecond(),c.toEpochSecond());A===0&&(A=this.toLocalTime().nano()-c.toLocalTime().nano(),A===0&&(A=this.toLocalDateTime().compareTo(c.toLocalDateTime())));return A};w.isAfter=function(c){k(c,"other");var A=
this.toEpochSecond(),P=c.toEpochSecond();return A>P||A===P&&this.toLocalTime().nano()>c.toLocalTime().nano()};w.isBefore=function(c){k(c,"other");var A=this.toEpochSecond(),P=c.toEpochSecond();return A<P||A===P&&this.toLocalTime().nano()<c.toLocalTime().nano()};w.isEqual=function(c){k(c,"other");return this.toEpochSecond()===c.toEpochSecond()&&this.toLocalTime().nano()===c.toLocalTime().nano()};w.equals=function(c){return this===c?!0:c instanceof C?this._dateTime.equals(c._dateTime)&&this._offset.equals(c._offset):
!1};w.hashCode=function(){return this._dateTime.hashCode()^this._offset.hashCode()};w.toString=function(){return this._dateTime.toString()+this._offset.toString()};w.toJSON=function(){return this.toString()};w.format=function(c){k(c,"formatter");return c.format(this)};return C}(nc),tb=function(Z){function C(c,A,P){var fa=Z.call(this)||this;k(c,"year");k(A,"month");k(P,"dayOfMonth");A instanceof eb&&(A=A.value());fa._year=J.safeToInt(c);fa._month=J.safeToInt(A);fa._day=J.safeToInt(P);C._validate(fa._year,
fa._month,fa._day);return fa}e(C,Z);C.now=function(c){c=c==null?dc.systemDefaultZone():c instanceof lb?dc.system(c):c;return C.ofInstant(c.instant(),c.zone())};C.ofInstant=function(c,A){A===void 0&&(A=lb.systemDefault());k(c,"instant");A=A.rules().offset(c);c=c.epochSecond()+A.totalSeconds();c=J.floorDiv(c,Ia.SECONDS_PER_DAY);return C.ofEpochDay(c)};C.of=function(c,A,P){return new C(c,A,P)};C.ofYearDay=function(c,A){N.YEAR.checkValidValue(c);var P=ac.isLeapYear(c);A===366&&P===!1&&f(!1,"Invalid date 'DayOfYear 366' as '"+
c+"' is not a leap year",y);var fa=eb.of(Math.floor((A-1)/31+1)),Da=fa.firstDayOfYear(P)+fa.length(P)-1;A>Da&&(fa=fa.plus(1));A=A-fa.firstDayOfYear(P)+1;return new C(c,fa.value(),A)};C.ofEpochDay=function(c){c===void 0&&(c=0);var A=c+719528-60;var P=0;A<0&&(c=J.intDiv(A+1,146097)-1,P=c*400,A+=-c*146097);c=J.intDiv(400*A+591,146097);var fa=A-(365*c+J.intDiv(c,4)-J.intDiv(c,100)+J.intDiv(c,400));fa<0&&(c--,fa=A-(365*c+J.intDiv(c,4)-J.intDiv(c,100)+J.intDiv(c,400)));c+=P;P=J.intDiv(fa*5+2,153);A=(P+
2)%12+1;fa=fa-J.intDiv(P*306+5,10)+1;c+=J.intDiv(P,10);return new C(c,A,fa)};C.from=function(c){k(c,"temporal");var A=c.query(pa.localDate());if(A==null)throw new y("Unable to obtain LocalDate from TemporalAccessor: "+c+", type "+(c.constructor!=null?c.constructor.name:""));return A};C.parse=function(c,A){A===void 0&&(A=Eb.ISO_LOCAL_DATE);f(A!=null,"formatter",Q);return A.parse(c,C.FROM)};C._resolvePreviousValid=function(c,A,P){switch(A){case 2:P=Math.min(P,ac.isLeapYear(c)?29:28);break;case 4:case 6:case 9:case 11:P=
Math.min(P,30)}return C.of(c,A,P)};C._validate=function(c,A,P){N.YEAR.checkValidValue(c);N.MONTH_OF_YEAR.checkValidValue(A);N.DAY_OF_MONTH.checkValidValue(P);if(P>28){var fa=31;switch(A){case 2:fa=ac.isLeapYear(c)?29:28;break;case 4:case 6:case 9:case 11:fa=30}P>fa&&(P===29?f(!1,"Invalid date 'February 29' as '"+c+"' is not a leap year",y):f(!1,"Invalid date '"+c+"' '"+A+"' '"+P+"'",y))}};var w=C.prototype;w.isSupported=function(c){return Z.prototype.isSupported.call(this,c)};w.range=function(c){if(c instanceof
N){if(c.isDateBased()){switch(c){case N.DAY_OF_MONTH:return na.of(1,this.lengthOfMonth());case N.DAY_OF_YEAR:return na.of(1,this.lengthOfYear());case N.ALIGNED_WEEK_OF_MONTH:return na.of(1,this.month()===eb.FEBRUARY&&this.isLeapYear()===!1?4:5);case N.YEAR_OF_ERA:return this._year<=0?na.of(1,ad.MAX_VALUE+1):na.of(1,ad.MAX_VALUE)}return c.range()}throw new D("Unsupported field: "+c);}return c.rangeRefinedBy(this)};w.get=function(c){return this.getLong(c)};w.getLong=function(c){f(c!=null,"",Q);return c instanceof
N?this._get0(c):c.getFrom(this)};w._get0=function(c){switch(c){case N.DAY_OF_WEEK:return this.dayOfWeek().value();case N.ALIGNED_DAY_OF_WEEK_IN_MONTH:return J.intMod(this._day-1,7)+1;case N.ALIGNED_DAY_OF_WEEK_IN_YEAR:return J.intMod(this.dayOfYear()-1,7)+1;case N.DAY_OF_MONTH:return this._day;case N.DAY_OF_YEAR:return this.dayOfYear();case N.EPOCH_DAY:return this.toEpochDay();case N.ALIGNED_WEEK_OF_MONTH:return J.intDiv(this._day-1,7)+1;case N.ALIGNED_WEEK_OF_YEAR:return J.intDiv(this.dayOfYear()-
1,7)+1;case N.MONTH_OF_YEAR:return this._month;case N.PROLEPTIC_MONTH:return this._prolepticMonth();case N.YEAR_OF_ERA:return this._year>=1?this._year:1-this._year;case N.YEAR:return this._year;case N.ERA:return this._year>=1?1:0}throw new D("Unsupported field: "+c);};w._prolepticMonth=function(){return this._year*12+(this._month-1)};w.chronology=function(){return ac.INSTANCE};w.year=function(){return this._year};w.monthValue=function(){return this._month};w.month=function(){return eb.of(this._month)};
w.dayOfMonth=function(){return this._day};w.dayOfYear=function(){return this.month().firstDayOfYear(this.isLeapYear())+this._day-1};w.dayOfWeek=function(){var c=J.floorMod(this.toEpochDay()+3,7);return Ua.of(c+1)};w.isLeapYear=function(){return ac.isLeapYear(this._year)};w.lengthOfMonth=function(){switch(this._month){case 2:return this.isLeapYear()?29:28;case 4:case 6:case 9:case 11:return 30;default:return 31}};w.lengthOfYear=function(){return this.isLeapYear()?366:365};w.withAdjuster=function(c){k(c,
"adjuster");if(c instanceof C)return c;f(typeof c.adjustInto==="function","adjuster",I);return c.adjustInto(this)};w.withFieldValue=function(c,A){f(c!=null,"field",Q);if(c instanceof N){c.checkValidValue(A);switch(c){case N.DAY_OF_WEEK:return this.plusDays(A-this.dayOfWeek().value());case N.ALIGNED_DAY_OF_WEEK_IN_MONTH:return this.plusDays(A-this.getLong(N.ALIGNED_DAY_OF_WEEK_IN_MONTH));case N.ALIGNED_DAY_OF_WEEK_IN_YEAR:return this.plusDays(A-this.getLong(N.ALIGNED_DAY_OF_WEEK_IN_YEAR));case N.DAY_OF_MONTH:return this.withDayOfMonth(A);
case N.DAY_OF_YEAR:return this.withDayOfYear(A);case N.EPOCH_DAY:return C.ofEpochDay(A);case N.ALIGNED_WEEK_OF_MONTH:return this.plusWeeks(A-this.getLong(N.ALIGNED_WEEK_OF_MONTH));case N.ALIGNED_WEEK_OF_YEAR:return this.plusWeeks(A-this.getLong(N.ALIGNED_WEEK_OF_YEAR));case N.MONTH_OF_YEAR:return this.withMonth(A);case N.PROLEPTIC_MONTH:return this.plusMonths(A-this.getLong(N.PROLEPTIC_MONTH));case N.YEAR_OF_ERA:return this.withYear(this._year>=1?A:1-A);case N.YEAR:return this.withYear(A);case N.ERA:return this.getLong(N.ERA)===
A?this:this.withYear(1-this._year)}throw new D("Unsupported field: "+c);}return c.adjustInto(this,A)};w.withYear=function(c){if(this._year===c)return this;N.YEAR.checkValidValue(c);return C._resolvePreviousValid(c,this._month,this._day)};w.withMonth=function(c){c=c instanceof eb?c.value():c;if(this._month===c)return this;N.MONTH_OF_YEAR.checkValidValue(c);return C._resolvePreviousValid(this._year,c,this._day)};w.withDayOfMonth=function(c){return this._day===c?this:C.of(this._year,this._month,c)};
w.withDayOfYear=function(c){return this.dayOfYear()===c?this:C.ofYearDay(this._year,c)};w.plusAmount=function(c){k(c,"amount");return c.addTo(this)};w.plusAmountUnit=function(c,A){k(c,"amountToAdd");k(A,"unit");if(A instanceof V){switch(A){case V.DAYS:return this.plusDays(c);case V.WEEKS:return this.plusWeeks(c);case V.MONTHS:return this.plusMonths(c);case V.YEARS:return this.plusYears(c);case V.DECADES:return this.plusYears(J.safeMultiply(c,10));case V.CENTURIES:return this.plusYears(J.safeMultiply(c,
100));case V.MILLENNIA:return this.plusYears(J.safeMultiply(c,1E3));case V.ERAS:return this.with(N.ERA,J.safeAdd(this.getLong(N.ERA),c))}throw new D("Unsupported unit: "+A);}return A.addTo(this,c)};w.plusYears=function(c){if(c===0)return this;c=N.YEAR.checkValidIntValue(this._year+c);return C._resolvePreviousValid(c,this._month,this._day)};w.plusMonths=function(c){if(c===0)return this;var A=this._year*12+(this._month-1)+c;c=N.YEAR.checkValidIntValue(J.floorDiv(A,12));A=J.floorMod(A,12)+1;return C._resolvePreviousValid(c,
A,this._day)};w.plusWeeks=function(c){return this.plusDays(J.safeMultiply(c,7))};w.plusDays=function(c){if(c===0)return this;c=J.safeAdd(this.toEpochDay(),c);return C.ofEpochDay(c)};w.minusAmount=function(c){k(c,"amount");return c.subtractFrom(this)};w.minusAmountUnit=function(c,A){k(c,"amountToSubtract");k(A,"unit");return this.plusAmountUnit(-1*c,A)};w.minusYears=function(c){return this.plusYears(c*-1)};w.minusMonths=function(c){return this.plusMonths(c*-1)};w.minusWeeks=function(c){return this.plusWeeks(c*
-1)};w.minusDays=function(c){return this.plusDays(c*-1)};w.query=function(c){k(c,"query");return c===pa.localDate()?this:Z.prototype.query.call(this,c)};w.adjustInto=function(c){return Z.prototype.adjustInto.call(this,c)};w.until=function(c,A){return arguments.length<2?this.until1(c):this.until2(c,A)};w.until2=function(c,A){c=C.from(c);if(A instanceof V){switch(A){case V.DAYS:return this.daysUntil(c);case V.WEEKS:return J.intDiv(this.daysUntil(c),7);case V.MONTHS:return this._monthsUntil(c);case V.YEARS:return J.intDiv(this._monthsUntil(c),
12);case V.DECADES:return J.intDiv(this._monthsUntil(c),120);case V.CENTURIES:return J.intDiv(this._monthsUntil(c),1200);case V.MILLENNIA:return J.intDiv(this._monthsUntil(c),12E3);case V.ERAS:return c.getLong(N.ERA)-this.getLong(N.ERA)}throw new D("Unsupported unit: "+A);}return A.between(this,c)};w.daysUntil=function(c){return c.toEpochDay()-this.toEpochDay()};w._monthsUntil=function(c){var A=this._prolepticMonth()*32+this.dayOfMonth();c=c._prolepticMonth()*32+c.dayOfMonth();return J.intDiv(c-A,
32)};w.until1=function(c){var A=C.from(c);c=A._prolepticMonth()-this._prolepticMonth();var P=A._day-this._day;c>0&&P<0?(c--,P=this.plusMonths(c),P=A.toEpochDay()-P.toEpochDay()):c<0&&P>0&&(c++,P-=A.lengthOfMonth());A=J.intDiv(c,12);c=J.intMod(c,12);return xb.of(A,c,P)};w.atTime=function(){return arguments.length===1?this.atTime1.apply(this,arguments):this.atTime4.apply(this,arguments)};w.atTime1=function(c){k(c,"time");if(c instanceof Ia)return Yb.of(this,c);if(c instanceof nd)return this._atTimeOffsetTime(c);
throw new I("time must be an instance of LocalTime or OffsetTime"+(c&&c.constructor&&c.constructor.name?", but is "+c.constructor.name:""));};w.atTime4=function(c,A,P,fa){P===void 0&&(P=0);fa===void 0&&(fa=0);return this.atTime1(Ia.of(c,A,P,fa))};w._atTimeOffsetTime=function(c){return bd.of(Yb.of(this,c.toLocalTime()),c.offset())};w.atStartOfDay=function(c){return c!=null?this.atStartOfDayWithZone(c):Yb.of(this,Ia.MIDNIGHT)};w.atStartOfDayWithZone=function(c){k(c,"zone");var A=this.atTime(Ia.MIDNIGHT);
if(c instanceof ab===!1){var P=c.rules().transition(A);P!=null&&P.isGap()&&(A=P.dateTimeAfter())}return cd.of(A,c)};w.toEpochDay=function(){var c=this._year,A=this._month;var P=365*c;P=c>=0?P+(J.intDiv(c+3,4)-J.intDiv(c+99,100)+J.intDiv(c+399,400)):P-(J.intDiv(c,-4)-J.intDiv(c,-100)+J.intDiv(c,-400));P+=J.intDiv(367*A-362,12);P+=this.dayOfMonth()-1;A>2&&(P--,ac.isLeapYear(c)||P--);return P-719528};w.compareTo=function(c){k(c,"other");m(c,C,"other");return this._compareTo0(c)};w._compareTo0=function(c){var A=
this._year-c._year;A===0&&(A=this._month-c._month,A===0&&(A=this._day-c._day));return A};w.isAfter=function(c){return this.compareTo(c)>0};w.isBefore=function(c){return this.compareTo(c)<0};w.isEqual=function(c){return this.compareTo(c)===0};w.equals=function(c){return this===c?!0:c instanceof C?this._compareTo0(c)===0:!1};w.hashCode=function(){var c=this._year;return J.hash(c&4294965248^(c<<11)+(this._month<<6)+this._day)};w.toString=function(){var c=this._year,A=this._month,P=this._day;return(Math.abs(c)<
1E3?c<0?"-"+(""+(c-1E4)).slice(-4):(""+(c+1E4)).slice(-4):c>9999?"+"+c:""+c)+(A<10?"-0"+A:"-"+A)+(P<10?"-0"+P:"-"+P)};w.toJSON=function(){return this.toString()};w.format=function(c){k(c,"formatter");m(c,Eb,"formatter");return Z.prototype.format.call(this,c)};return C}(Bc),Se=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=C.prototype;w.chronology=function(){return this.toLocalDate().chronology()};w.query=function(c){return c===pa.chronology()?this.chronology():c===pa.precision()?
V.NANOS:c===pa.localDate()?tb.ofEpochDay(this.toLocalDate().toEpochDay()):c===pa.localTime()?this.toLocalTime():c===pa.zone()||c===pa.zoneId()||c===pa.offset()?null:Z.prototype.query.call(this,c)};w.adjustInto=function(c){return c.with(N.EPOCH_DAY,this.toLocalDate().toEpochDay()).with(N.NANO_OF_DAY,this.toLocalTime().toNanoOfDay())};w.toInstant=function(c){m(c,ab,"zoneId");return hc.ofEpochSecond(this.toEpochSecond(c),this.toLocalTime().nano())};w.toEpochSecond=function(c){k(c,"offset");var A=this.toLocalDate().toEpochDay()*
86400+this.toLocalTime().toSecondOfDay();A-=c.totalSeconds();return J.safeToInt(A)};return C}(nc),Yb=function(Z){function C(c,A){var P=Z.call(this)||this;m(c,tb,"date");m(A,Ia,"time");P._date=c;P._time=A;return P}e(C,Z);C.now=function(c){return c==null?C._now(dc.systemDefaultZone()):c instanceof dc?C._now(c):C._now(dc.system(c))};C._now=function(c){k(c,"clock");return C.ofInstant(c.instant(),c.zone())};C._ofEpochMillis=function(c,A){var P=J.floorDiv(c,1E3)+A.totalSeconds();A=J.floorDiv(P,Ia.SECONDS_PER_DAY);
P=J.floorMod(P,Ia.SECONDS_PER_DAY);c=J.floorMod(c,1E3)*1E6;A=tb.ofEpochDay(A);c=Ia.ofSecondOfDay(P,c);return new C(A,c)};C.of=function(){return arguments.length<=2?C.ofDateAndTime.apply(this,arguments):C.ofNumbers.apply(this,arguments)};C.ofNumbers=function(c,A,P,fa,Da,kb,zb){fa===void 0&&(fa=0);Da===void 0&&(Da=0);kb===void 0&&(kb=0);zb===void 0&&(zb=0);c=tb.of(c,A,P);fa=Ia.of(fa,Da,kb,zb);return new C(c,fa)};C.ofDateAndTime=function(c,A){k(c,"date");k(A,"time");return new C(c,A)};C.ofInstant=function(c,
A){A===void 0&&(A=lb.systemDefault());k(c,"instant");m(c,hc,"instant");k(A,"zone");A=A.rules().offset(c);return C.ofEpochSecond(c.epochSecond(),c.nano(),A)};C.ofEpochSecond=function(c,A,P){c===void 0&&(c=0);A===void 0&&(A=0);arguments.length===2&&A instanceof ab&&(P=A,A=0);k(P,"offset");var fa=c+P.totalSeconds(),Da=J.floorDiv(fa,Ia.SECONDS_PER_DAY);fa=J.floorMod(fa,Ia.SECONDS_PER_DAY);Da=tb.ofEpochDay(Da);fa=Ia.ofSecondOfDay(fa,A);return new C(Da,fa)};C.from=function(c){k(c,"temporal");if(c instanceof
C)return c;if(c instanceof cd)return c.toLocalDateTime();try{var A=tb.from(c),P=Ia.from(c);return new C(A,P)}catch(fa){throw new y("Unable to obtain LocalDateTime TemporalAccessor: "+c+", type "+(c.constructor!=null?c.constructor.name:""));}};C.parse=function(c,A){A===void 0&&(A=Eb.ISO_LOCAL_DATE_TIME);k(A,"formatter");return A.parse(c,C.FROM)};var w=C.prototype;w._withDateTime=function(c,A){return this._date.equals(c)&&this._time.equals(A)?this:new C(c,A)};w.isSupported=function(c){return c instanceof
N||c instanceof V?c.isDateBased()||c.isTimeBased():c!=null&&c.isSupportedBy(this)};w.range=function(c){return c instanceof N?c.isTimeBased()?this._time.range(c):this._date.range(c):c.rangeRefinedBy(this)};w.get=function(c){return c instanceof N?c.isTimeBased()?this._time.get(c):this._date.get(c):Z.prototype.get.call(this,c)};w.getLong=function(c){k(c,"field");return c instanceof N?c.isTimeBased()?this._time.getLong(c):this._date.getLong(c):c.getFrom(this)};w.year=function(){return this._date.year()};
w.monthValue=function(){return this._date.monthValue()};w.month=function(){return this._date.month()};w.dayOfMonth=function(){return this._date.dayOfMonth()};w.dayOfYear=function(){return this._date.dayOfYear()};w.dayOfWeek=function(){return this._date.dayOfWeek()};w.hour=function(){return this._time.hour()};w.minute=function(){return this._time.minute()};w.second=function(){return this._time.second()};w.nano=function(){return this._time.nano()};w.withAdjuster=function(c){k(c,"adjuster");if(c instanceof
tb)return this._withDateTime(c,this._time);if(c instanceof Ia)return this._withDateTime(this._date,c);if(c instanceof C)return c;f(typeof c.adjustInto==="function","adjuster",I);return c.adjustInto(this)};w.withFieldValue=function(c,A){k(c,"field");return c instanceof N?c.isTimeBased()?this._withDateTime(this._date,this._time.with(c,A)):this._withDateTime(this._date.with(c,A),this._time):c.adjustInto(this,A)};w.withYear=function(c){return this._withDateTime(this._date.withYear(c),this._time)};w.withMonth=
function(c){return this._withDateTime(this._date.withMonth(c),this._time)};w.withDayOfMonth=function(c){return this._withDateTime(this._date.withDayOfMonth(c),this._time)};w.withDayOfYear=function(c){return this._withDateTime(this._date.withDayOfYear(c),this._time)};w.withHour=function(c){c=this._time.withHour(c);return this._withDateTime(this._date,c)};w.withMinute=function(c){c=this._time.withMinute(c);return this._withDateTime(this._date,c)};w.withSecond=function(c){c=this._time.withSecond(c);
return this._withDateTime(this._date,c)};w.withNano=function(c){c=this._time.withNano(c);return this._withDateTime(this._date,c)};w.truncatedTo=function(c){return this._withDateTime(this._date,this._time.truncatedTo(c))};w.plusAmount=function(c){k(c,"amount");return c.addTo(this)};w.plusAmountUnit=function(c,A){k(A,"unit");if(A instanceof V){switch(A){case V.NANOS:return this.plusNanos(c);case V.MICROS:return this.plusDays(J.intDiv(c,Ia.MICROS_PER_DAY)).plusNanos(J.intMod(c,Ia.MICROS_PER_DAY)*1E3);
case V.MILLIS:return this.plusDays(J.intDiv(c,Ia.MILLIS_PER_DAY)).plusNanos(J.intMod(c,Ia.MILLIS_PER_DAY)*1E6);case V.SECONDS:return this.plusSeconds(c);case V.MINUTES:return this.plusMinutes(c);case V.HOURS:return this.plusHours(c);case V.HALF_DAYS:return this.plusDays(J.intDiv(c,256)).plusHours(J.intMod(c,256)*12)}return this._withDateTime(this._date.plus(c,A),this._time)}return A.addTo(this,c)};w.plusYears=function(c){c=this._date.plusYears(c);return this._withDateTime(c,this._time)};w.plusMonths=
function(c){c=this._date.plusMonths(c);return this._withDateTime(c,this._time)};w.plusWeeks=function(c){c=this._date.plusWeeks(c);return this._withDateTime(c,this._time)};w.plusDays=function(c){c=this._date.plusDays(c);return this._withDateTime(c,this._time)};w.plusHours=function(c){return this._plusWithOverflow(this._date,c,0,0,0,1)};w.plusMinutes=function(c){return this._plusWithOverflow(this._date,0,c,0,0,1)};w.plusSeconds=function(c){return this._plusWithOverflow(this._date,0,0,c,0,1)};w.plusNanos=
function(c){return this._plusWithOverflow(this._date,0,0,0,c,1)};w.minusAmount=function(c){k(c,"amount");return c.subtractFrom(this)};w.minusAmountUnit=function(c,A){k(A,"unit");return this.plusAmountUnit(-1*c,A)};w.minusYears=function(c){return this.plusYears(-1*c)};w.minusMonths=function(c){return this.plusMonths(-1*c)};w.minusWeeks=function(c){return this.plusWeeks(-1*c)};w.minusDays=function(c){return this.plusDays(-1*c)};w.minusHours=function(c){return this._plusWithOverflow(this._date,c,0,0,
0,-1)};w.minusMinutes=function(c){return this._plusWithOverflow(this._date,0,c,0,0,-1)};w.minusSeconds=function(c){return this._plusWithOverflow(this._date,0,0,c,0,-1)};w.minusNanos=function(c){return this._plusWithOverflow(this._date,0,0,0,c,-1)};w._plusWithOverflow=function(c,A,P,fa,Da,kb){if(A===0&&P===0&&fa===0&&Da===0)return this._withDateTime(c,this._time);var zb=J.intDiv(Da,Ia.NANOS_PER_DAY)+J.intDiv(fa,Ia.SECONDS_PER_DAY)+J.intDiv(P,Ia.MINUTES_PER_DAY)+J.intDiv(A,Ia.HOURS_PER_DAY);zb*=kb;
P=J.intMod(Da,Ia.NANOS_PER_DAY)+J.intMod(fa,Ia.SECONDS_PER_DAY)*Ia.NANOS_PER_SECOND+J.intMod(P,Ia.MINUTES_PER_DAY)*Ia.NANOS_PER_MINUTE+J.intMod(A,Ia.HOURS_PER_DAY)*Ia.NANOS_PER_HOUR;A=this._time.toNanoOfDay();P=P*kb+A;zb+=J.floorDiv(P,Ia.NANOS_PER_DAY);kb=J.floorMod(P,Ia.NANOS_PER_DAY);kb=kb===A?this._time:Ia.ofNanoOfDay(kb);return this._withDateTime(c.plusDays(zb),kb)};w.query=function(c){k(c,"query");return c===pa.localDate()?this.toLocalDate():Z.prototype.query.call(this,c)};w.adjustInto=function(c){return Z.prototype.adjustInto.call(this,
c)};w.until=function(c,A){k(c,"endExclusive");k(A,"unit");c=C.from(c);if(A instanceof V){if(A.isTimeBased()){var P=this._date.daysUntil(c._date);c=c._time.toNanoOfDay()-this._time.toNanoOfDay();P>0&&c<0?(P--,c+=Ia.NANOS_PER_DAY):P<0&&c>0&&(P++,c-=Ia.NANOS_PER_DAY);switch(A){case V.NANOS:return P=J.safeMultiply(P,Ia.NANOS_PER_DAY),J.safeAdd(P,c);case V.MICROS:return P=J.safeMultiply(P,Ia.MICROS_PER_DAY),J.safeAdd(P,J.intDiv(c,1E3));case V.MILLIS:return P=J.safeMultiply(P,Ia.MILLIS_PER_DAY),J.safeAdd(P,
J.intDiv(c,1E6));case V.SECONDS:return P=J.safeMultiply(P,Ia.SECONDS_PER_DAY),J.safeAdd(P,J.intDiv(c,Ia.NANOS_PER_SECOND));case V.MINUTES:return P=J.safeMultiply(P,Ia.MINUTES_PER_DAY),J.safeAdd(P,J.intDiv(c,Ia.NANOS_PER_MINUTE));case V.HOURS:return P=J.safeMultiply(P,Ia.HOURS_PER_DAY),J.safeAdd(P,J.intDiv(c,Ia.NANOS_PER_HOUR));case V.HALF_DAYS:return P=J.safeMultiply(P,2),J.safeAdd(P,J.intDiv(c,Ia.NANOS_PER_HOUR*12))}throw new D("Unsupported unit: "+A);}P=c._date;c=c._time;P.isAfter(this._date)&&
c.isBefore(this._time)?P=P.minusDays(1):P.isBefore(this._date)&&c.isAfter(this._time)&&(P=P.plusDays(1));return this._date.until(P,A)}return A.between(this,c)};w.atOffset=function(c){return bd.of(this,c)};w.atZone=function(c){return cd.of(this,c)};w.toLocalDate=function(){return this._date};w.toLocalTime=function(){return this._time};w.compareTo=function(c){k(c,"other");m(c,C,"other");return this._compareTo0(c)};w._compareTo0=function(c){var A=this._date.compareTo(c.toLocalDate());A===0&&(A=this._time.compareTo(c.toLocalTime()));
return A};w.isAfter=function(c){return this.compareTo(c)>0};w.isBefore=function(c){return this.compareTo(c)<0};w.isEqual=function(c){return this.compareTo(c)===0};w.equals=function(c){return this===c?!0:c instanceof C?this._date.equals(c._date)&&this._time.equals(c._time):!1};w.hashCode=function(){return this._date.hashCode()^this._time.hashCode()};w.toString=function(){return this._date.toString()+"T"+this._time.toString()};w.toJSON=function(){return this.toString()};w.format=function(c){k(c,"formatter");
return c.format(this)};return C}(Se),Ia=function(Z){function C(c,A,P,fa){c===void 0&&(c=0);A===void 0&&(A=0);P===void 0&&(P=0);fa===void 0&&(fa=0);var Da=Z.call(this)||this;c=J.safeToInt(c);A=J.safeToInt(A);P=J.safeToInt(P);fa=J.safeToInt(fa);C._validate(c,A,P,fa);if(A===0&&P===0&&fa===0)return C.HOURS[c]||(Da._hour=c,Da._minute=A,Da._second=P,Da._nano=fa,C.HOURS[c]=g(Da)),C.HOURS[c]||g(Da);Da._hour=c;Da._minute=A;Da._second=P;Da._nano=fa;return Da}e(C,Z);C.now=function(c){return c==null?C._now(dc.systemDefaultZone()):
c instanceof dc?C._now(c):C._now(dc.system(c))};C._now=function(c){c===void 0&&(c=dc.systemDefaultZone());k(c,"clock");return C.ofInstant(c.instant(),c.zone())};C.ofInstant=function(c,A){A===void 0&&(A=lb.systemDefault());A=A.rules().offset(c);var P=J.intMod(c.epochSecond(),C.SECONDS_PER_DAY);P=J.intMod(P+A.totalSeconds(),C.SECONDS_PER_DAY);P<0&&(P+=C.SECONDS_PER_DAY);return C.ofSecondOfDay(P,c.nano())};C.of=function(c,A,P,fa){return new C(c,A,P,fa)};C.ofSecondOfDay=function(c,A){c===void 0&&(c=0);
A===void 0&&(A=0);N.SECOND_OF_DAY.checkValidValue(c);N.NANO_OF_SECOND.checkValidValue(A);var P=J.intDiv(c,C.SECONDS_PER_HOUR);c-=P*C.SECONDS_PER_HOUR;var fa=J.intDiv(c,C.SECONDS_PER_MINUTE);c-=fa*C.SECONDS_PER_MINUTE;return new C(P,fa,c,A)};C.ofNanoOfDay=function(c){c===void 0&&(c=0);N.NANO_OF_DAY.checkValidValue(c);var A=J.intDiv(c,C.NANOS_PER_HOUR);c-=A*C.NANOS_PER_HOUR;var P=J.intDiv(c,C.NANOS_PER_MINUTE);c-=P*C.NANOS_PER_MINUTE;var fa=J.intDiv(c,C.NANOS_PER_SECOND);c-=fa*C.NANOS_PER_SECOND;return new C(A,
P,fa,c)};C.from=function(c){k(c,"temporal");var A=c.query(pa.localTime());if(A==null)throw new y("Unable to obtain LocalTime TemporalAccessor: "+c+", type "+(c.constructor!=null?c.constructor.name:""));return A};C.parse=function(c,A){A===void 0&&(A=Eb.ISO_LOCAL_TIME);k(A,"formatter");return A.parse(c,C.FROM)};C._validate=function(c,A,P,fa){N.HOUR_OF_DAY.checkValidValue(c);N.MINUTE_OF_HOUR.checkValidValue(A);N.SECOND_OF_MINUTE.checkValidValue(P);N.NANO_OF_SECOND.checkValidValue(fa)};var w=C.prototype;
w.isSupported=function(c){return c instanceof N||c instanceof V?c.isTimeBased():c!=null&&c.isSupportedBy(this)};w.range=function(c){k(c);return Z.prototype.range.call(this,c)};w.get=function(c){return this.getLong(c)};w.getLong=function(c){k(c,"field");return c instanceof N?this._get0(c):c.getFrom(this)};w._get0=function(c){switch(c){case N.NANO_OF_SECOND:return this._nano;case N.NANO_OF_DAY:return this.toNanoOfDay();case N.MICRO_OF_SECOND:return J.intDiv(this._nano,1E3);case N.MICRO_OF_DAY:return J.intDiv(this.toNanoOfDay(),
1E3);case N.MILLI_OF_SECOND:return J.intDiv(this._nano,1E6);case N.MILLI_OF_DAY:return J.intDiv(this.toNanoOfDay(),1E6);case N.SECOND_OF_MINUTE:return this._second;case N.SECOND_OF_DAY:return this.toSecondOfDay();case N.MINUTE_OF_HOUR:return this._minute;case N.MINUTE_OF_DAY:return this._hour*60+this._minute;case N.HOUR_OF_AMPM:return J.intMod(this._hour,12);case N.CLOCK_HOUR_OF_AMPM:return c=J.intMod(this._hour,12),c%12===0?12:c;case N.HOUR_OF_DAY:return this._hour;case N.CLOCK_HOUR_OF_DAY:return this._hour===
0?24:this._hour;case N.AMPM_OF_DAY:return J.intDiv(this._hour,12)}throw new D("Unsupported field: "+c);};w.hour=function(){return this._hour};w.minute=function(){return this._minute};w.second=function(){return this._second};w.nano=function(){return this._nano};w.withAdjuster=function(c){k(c,"adjuster");if(c instanceof C)return c;f(typeof c.adjustInto==="function","adjuster",I);return c.adjustInto(this)};w.withFieldValue=function(c,A){k(c,"field");m(c,xa,"field");if(c instanceof N){c.checkValidValue(A);
switch(c){case N.NANO_OF_SECOND:return this.withNano(A);case N.NANO_OF_DAY:return C.ofNanoOfDay(A);case N.MICRO_OF_SECOND:return this.withNano(A*1E3);case N.MICRO_OF_DAY:return C.ofNanoOfDay(A*1E3);case N.MILLI_OF_SECOND:return this.withNano(A*1E6);case N.MILLI_OF_DAY:return C.ofNanoOfDay(A*1E6);case N.SECOND_OF_MINUTE:return this.withSecond(A);case N.SECOND_OF_DAY:return this.plusSeconds(A-this.toSecondOfDay());case N.MINUTE_OF_HOUR:return this.withMinute(A);case N.MINUTE_OF_DAY:return this.plusMinutes(A-
(this._hour*60+this._minute));case N.HOUR_OF_AMPM:return this.plusHours(A-J.intMod(this._hour,12));case N.CLOCK_HOUR_OF_AMPM:return this.plusHours((A===12?0:A)-J.intMod(this._hour,12));case N.HOUR_OF_DAY:return this.withHour(A);case N.CLOCK_HOUR_OF_DAY:return this.withHour(A===24?0:A);case N.AMPM_OF_DAY:return this.plusHours((A-J.intDiv(this._hour,12))*12)}throw new D("Unsupported field: "+c);}return c.adjustInto(this,A)};w.withHour=function(c){c===void 0&&(c=0);return this._hour===c?this:new C(c,
this._minute,this._second,this._nano)};w.withMinute=function(c){c===void 0&&(c=0);return this._minute===c?this:new C(this._hour,c,this._second,this._nano)};w.withSecond=function(c){c===void 0&&(c=0);return this._second===c?this:new C(this._hour,this._minute,c,this._nano)};w.withNano=function(c){c===void 0&&(c=0);return this._nano===c?this:new C(this._hour,this._minute,this._second,c)};w.truncatedTo=function(c){k(c,"unit");if(c===V.NANOS)return this;c=c.duration();if(c.seconds()>C.SECONDS_PER_DAY)throw new y("Unit is too large to be used for truncation");
c=c.toNanos();if(J.intMod(C.NANOS_PER_DAY,c)!==0)throw new y("Unit must divide into a standard day without remainder");var A=this.toNanoOfDay();return C.ofNanoOfDay(J.intDiv(A,c)*c)};w.plusAmount=function(c){k(c,"amount");return c.addTo(this)};w.plusAmountUnit=function(c,A){k(A,"unit");if(A instanceof V){switch(A){case V.NANOS:return this.plusNanos(c);case V.MICROS:return this.plusNanos(J.intMod(c,C.MICROS_PER_DAY)*1E3);case V.MILLIS:return this.plusNanos(J.intMod(c,C.MILLIS_PER_DAY)*1E6);case V.SECONDS:return this.plusSeconds(c);
case V.MINUTES:return this.plusMinutes(c);case V.HOURS:return this.plusHours(c);case V.HALF_DAYS:return this.plusHours(J.intMod(c,2)*12)}throw new D("Unsupported unit: "+A);}return A.addTo(this,c)};w.plusHours=function(c){if(c===0)return this;c=J.intMod(J.intMod(c,C.HOURS_PER_DAY)+this._hour+C.HOURS_PER_DAY,C.HOURS_PER_DAY);return new C(c,this._minute,this._second,this._nano)};w.plusMinutes=function(c){if(c===0)return this;var A=this._hour*C.MINUTES_PER_HOUR+this._minute;c=J.intMod(J.intMod(c,C.MINUTES_PER_DAY)+
A+C.MINUTES_PER_DAY,C.MINUTES_PER_DAY);if(A===c)return this;A=J.intDiv(c,C.MINUTES_PER_HOUR);c=J.intMod(c,C.MINUTES_PER_HOUR);return new C(A,c,this._second,this._nano)};w.plusSeconds=function(c){if(c===0)return this;var A=this._hour*C.SECONDS_PER_HOUR+this._minute*C.SECONDS_PER_MINUTE+this._second;c=J.intMod(J.intMod(c,C.SECONDS_PER_DAY)+A+C.SECONDS_PER_DAY,C.SECONDS_PER_DAY);if(A===c)return this;A=J.intDiv(c,C.SECONDS_PER_HOUR);var P=J.intMod(J.intDiv(c,C.SECONDS_PER_MINUTE),C.MINUTES_PER_HOUR);
c=J.intMod(c,C.SECONDS_PER_MINUTE);return new C(A,P,c,this._nano)};w.plusNanos=function(c){if(c===0)return this;var A=this.toNanoOfDay();c=J.intMod(J.intMod(c,C.NANOS_PER_DAY)+A+C.NANOS_PER_DAY,C.NANOS_PER_DAY);if(A===c)return this;A=J.intDiv(c,C.NANOS_PER_HOUR);var P=J.intMod(J.intDiv(c,C.NANOS_PER_MINUTE),C.MINUTES_PER_HOUR),fa=J.intMod(J.intDiv(c,C.NANOS_PER_SECOND),C.SECONDS_PER_MINUTE);c=J.intMod(c,C.NANOS_PER_SECOND);return new C(A,P,fa,c)};w.minusAmount=function(c){k(c,"amount");return c.subtractFrom(this)};
w.minusAmountUnit=function(c,A){k(A,"unit");return this.plusAmountUnit(-1*c,A)};w.minusHours=function(c){return this.plusHours(-1*J.intMod(c,C.HOURS_PER_DAY))};w.minusMinutes=function(c){return this.plusMinutes(-1*J.intMod(c,C.MINUTES_PER_DAY))};w.minusSeconds=function(c){return this.plusSeconds(-1*J.intMod(c,C.SECONDS_PER_DAY))};w.minusNanos=function(c){return this.plusNanos(-1*J.intMod(c,C.NANOS_PER_DAY))};w.query=function(c){k(c,"query");return c===pa.precision()?V.NANOS:c===pa.localTime()?this:
c===pa.chronology()||c===pa.zoneId()||c===pa.zone()||c===pa.offset()||c===pa.localDate()?null:c.queryFrom(this)};w.adjustInto=function(c){return c.with(C.NANO_OF_DAY,this.toNanoOfDay())};w.until=function(c,A){k(c,"endExclusive");k(A,"unit");c=C.from(c);if(A instanceof V){c=c.toNanoOfDay()-this.toNanoOfDay();switch(A){case V.NANOS:return c;case V.MICROS:return J.intDiv(c,1E3);case V.MILLIS:return J.intDiv(c,1E6);case V.SECONDS:return J.intDiv(c,C.NANOS_PER_SECOND);case V.MINUTES:return J.intDiv(c,
C.NANOS_PER_MINUTE);case V.HOURS:return J.intDiv(c,C.NANOS_PER_HOUR);case V.HALF_DAYS:return J.intDiv(c,12*C.NANOS_PER_HOUR)}throw new D("Unsupported unit: "+A);}return A.between(this,c)};w.atDate=function(c){return Yb.of(c,this)};w.toSecondOfDay=function(){var c=this._hour*C.SECONDS_PER_HOUR;c+=this._minute*C.SECONDS_PER_MINUTE;return c+=this._second};w.toNanoOfDay=function(){var c=this._hour*C.NANOS_PER_HOUR;c+=this._minute*C.NANOS_PER_MINUTE;c+=this._second*C.NANOS_PER_SECOND;return c+=this._nano};
w.compareTo=function(c){k(c,"other");m(c,C,"other");var A=J.compareNumbers(this._hour,c._hour);A===0&&(A=J.compareNumbers(this._minute,c._minute),A===0&&(A=J.compareNumbers(this._second,c._second),A===0&&(A=J.compareNumbers(this._nano,c._nano))));return A};w.isAfter=function(c){return this.compareTo(c)>0};w.isBefore=function(c){return this.compareTo(c)<0};w.equals=function(c){return this===c?!0:c instanceof C?this._hour===c._hour&&this._minute===c._minute&&this._second===c._second&&this._nano===c._nano:
!1};w.hashCode=function(){var c=this.toNanoOfDay();return J.hash(c)};w.toString=function(){var c=this._hour;var A=this._minute,P=this._second,fa=this._nano;c=(c<10?"0":"")+c+(A<10?":0":":")+A;if(P>0||fa>0)c+=P<10?":0":":",c+=P,fa>0&&(c+=".",c=J.intMod(fa,1E6)===0?c+(""+(J.intDiv(fa,1E6)+1E3)).substring(1):J.intMod(fa,1E3)===0?c+(""+(J.intDiv(fa,1E3)+1E6)).substring(1):c+(""+(fa+1E9)).substring(1));return c};w.toJSON=function(){return this.toString()};w.format=function(c){k(c,"formatter");return c.format(this)};
return C}(Db);Ia.HOURS_PER_DAY=24;Ia.MINUTES_PER_HOUR=60;Ia.MINUTES_PER_DAY=Ia.MINUTES_PER_HOUR*Ia.HOURS_PER_DAY;Ia.SECONDS_PER_MINUTE=60;Ia.SECONDS_PER_HOUR=Ia.SECONDS_PER_MINUTE*Ia.MINUTES_PER_HOUR;Ia.SECONDS_PER_DAY=Ia.SECONDS_PER_HOUR*Ia.HOURS_PER_DAY;Ia.MILLIS_PER_DAY=Ia.SECONDS_PER_DAY*1E3;Ia.MICROS_PER_DAY=Ia.SECONDS_PER_DAY*1E6;Ia.NANOS_PER_SECOND=1E9;Ia.NANOS_PER_MINUTE=Ia.NANOS_PER_SECOND*Ia.SECONDS_PER_MINUTE;Ia.NANOS_PER_HOUR=Ia.NANOS_PER_MINUTE*Ia.MINUTES_PER_HOUR;Ia.NANOS_PER_DAY=Ia.NANOS_PER_HOUR*
Ia.HOURS_PER_DAY;var hc=function(Z){function C(c,A){var P=Z.call(this)||this;C._validate(c,A);P._seconds=J.safeToInt(c);P._nanos=J.safeToInt(A);return P}e(C,Z);C.now=function(c){c===void 0&&(c=dc.systemUTC());return c.instant()};C.ofEpochSecond=function(c,A){A===void 0&&(A=0);c+=J.floorDiv(A,Ia.NANOS_PER_SECOND);A=J.floorMod(A,Ia.NANOS_PER_SECOND);return C._create(c,A)};C.ofEpochMilli=function(c){var A=J.floorDiv(c,1E3);c=J.floorMod(c,1E3);return C._create(A,c*1E6)};C.from=function(c){try{var A=c.getLong(N.INSTANT_SECONDS),
P=c.get(N.NANO_OF_SECOND);return C.ofEpochSecond(A,P)}catch(fa){throw new y("Unable to obtain Instant from TemporalAccessor: "+c+", type "+typeof c,fa);}};C.parse=function(c){return Eb.ISO_INSTANT.parse(c,C.FROM)};C._create=function(c,A){return c===0&&A===0?C.EPOCH:new C(c,A)};C._validate=function(c,A){if(c<C.MIN_SECONDS||c>C.MAX_SECONDS)throw new y("Instant exceeds minimum or maximum instant");if(A<0||A>Ia.NANOS_PER_SECOND)throw new y("Instant exceeds minimum or maximum instant");};var w=C.prototype;
w.isSupported=function(c){return c instanceof N?c===N.INSTANT_SECONDS||c===N.NANO_OF_SECOND||c===N.MICRO_OF_SECOND||c===N.MILLI_OF_SECOND:c instanceof V?c.isTimeBased()||c===V.DAYS:c!=null&&c.isSupportedBy(this)};w.range=function(c){return Z.prototype.range.call(this,c)};w.get=function(c){return this.getLong(c)};w.getLong=function(c){if(c instanceof N){switch(c){case N.NANO_OF_SECOND:return this._nanos;case N.MICRO_OF_SECOND:return J.intDiv(this._nanos,1E3);case N.MILLI_OF_SECOND:return J.intDiv(this._nanos,
1E6);case N.INSTANT_SECONDS:return this._seconds}throw new D("Unsupported field: "+c);}return c.getFrom(this)};w.epochSecond=function(){return this._seconds};w.nano=function(){return this._nanos};w.withAdjuster=function(c){k(c,"adjuster");return c.adjustInto(this)};w.withFieldValue=function(c,A){k(c,"field");if(c instanceof N){c.checkValidValue(A);switch(c){case N.MILLI_OF_SECOND:return c=A*1E6,c!==this._nanos?C._create(this._seconds,c):this;case N.MICRO_OF_SECOND:return c=A*1E3,c!==this._nanos?C._create(this._seconds,
c):this;case N.NANO_OF_SECOND:return A!==this._nanos?C._create(this._seconds,A):this;case N.INSTANT_SECONDS:return A!==this._seconds?C._create(A,this._nanos):this}throw new D("Unsupported field: "+c);}return c.adjustInto(this,A)};w.truncatedTo=function(c){k(c,"unit");if(c===V.NANOS)return this;c=c.duration();if(c.seconds()>Ia.SECONDS_PER_DAY)throw new y("Unit is too large to be used for truncation");var A=c.toNanos();if(J.intMod(Ia.NANOS_PER_DAY,A)!==0)throw new y("Unit must divide into a standard day without remainder");
c=J.intMod(this._seconds,Ia.SECONDS_PER_DAY)*Ia.NANOS_PER_SECOND+this._nanos;A*=J.intDiv(c,A);return this.plusNanos(A-c)};w.plusAmount=function(c){k(c,"amount");return c.addTo(this)};w.plusAmountUnit=function(c,A){k(c,"amountToAdd");k(A,"unit");m(A,Y);if(A instanceof V){switch(A){case V.NANOS:return this.plusNanos(c);case V.MICROS:return this._plus(J.intDiv(c,1E6),J.intMod(c,1E6)*1E3);case V.MILLIS:return this.plusMillis(c);case V.SECONDS:return this.plusSeconds(c);case V.MINUTES:return this.plusSeconds(J.safeMultiply(c,
Ia.SECONDS_PER_MINUTE));case V.HOURS:return this.plusSeconds(J.safeMultiply(c,Ia.SECONDS_PER_HOUR));case V.HALF_DAYS:return this.plusSeconds(J.safeMultiply(c,Ia.SECONDS_PER_DAY/2));case V.DAYS:return this.plusSeconds(J.safeMultiply(c,Ia.SECONDS_PER_DAY))}throw new D("Unsupported unit: "+A);}return A.addTo(this,c)};w.plusSeconds=function(c){return this._plus(c,0)};w.plusMillis=function(c){return this._plus(J.intDiv(c,1E3),J.intMod(c,1E3)*1E6)};w.plusNanos=function(c){return this._plus(0,c)};w._plus=
function(c,A){if(c===0&&A===0)return this;c=this._seconds+c;c+=J.intDiv(A,Ia.NANOS_PER_SECOND);return C.ofEpochSecond(c,this._nanos+A%Ia.NANOS_PER_SECOND)};w.minusAmount=function(c){k(c,"amount");return c.subtractFrom(this)};w.minusAmountUnit=function(c,A){return this.plusAmountUnit(-1*c,A)};w.minusSeconds=function(c){return this.plusSeconds(c*-1)};w.minusMillis=function(c){return this.plusMillis(-1*c)};w.minusNanos=function(c){return this.plusNanos(-1*c)};w.query=function(c){k(c,"query");return c===
pa.precision()?V.NANOS:c===pa.localDate()||c===pa.localTime()||c===pa.chronology()||c===pa.zoneId()||c===pa.zone()||c===pa.offset()?null:c.queryFrom(this)};w.adjustInto=function(c){k(c,"temporal");return c.with(N.INSTANT_SECONDS,this._seconds).with(N.NANO_OF_SECOND,this._nanos)};w.until=function(c,A){k(c,"endExclusive");k(A,"unit");c=C.from(c);if(A instanceof V){switch(A){case V.NANOS:return this._nanosUntil(c);case V.MICROS:return J.intDiv(this._nanosUntil(c),1E3);case V.MILLIS:return J.safeSubtract(c.toEpochMilli(),
this.toEpochMilli());case V.SECONDS:return this._secondsUntil(c);case V.MINUTES:return J.intDiv(this._secondsUntil(c),Ia.SECONDS_PER_MINUTE);case V.HOURS:return J.intDiv(this._secondsUntil(c),Ia.SECONDS_PER_HOUR);case V.HALF_DAYS:return J.intDiv(this._secondsUntil(c),12*Ia.SECONDS_PER_HOUR);case V.DAYS:return J.intDiv(this._secondsUntil(c),Ia.SECONDS_PER_DAY)}throw new D("Unsupported unit: "+A);}return A.between(this,c)};w._nanosUntil=function(c){var A=J.safeSubtract(c.epochSecond(),this.epochSecond());
A=J.safeMultiply(A,Ia.NANOS_PER_SECOND);return J.safeAdd(A,c.nano()-this.nano())};w._secondsUntil=function(c){var A=J.safeSubtract(c.epochSecond(),this.epochSecond());c=c.nano()-this.nano();A>0&&c<0?A--:A<0&&c>0&&A++;return A};w.atOffset=function(c){return bd.ofInstant(this,c)};w.atZone=function(c){return cd.ofInstant(this,c)};w.toEpochMilli=function(){return J.safeMultiply(this._seconds,1E3)+J.intDiv(this._nanos,1E6)};w.compareTo=function(c){k(c,"otherInstant");m(c,C,"otherInstant");var A=J.compareNumbers(this._seconds,
c._seconds);return A!==0?A:this._nanos-c._nanos};w.isAfter=function(c){return this.compareTo(c)>0};w.isBefore=function(c){return this.compareTo(c)<0};w.equals=function(c){return this===c?!0:c instanceof C?this.epochSecond()===c.epochSecond()&&this.nano()===c.nano():!1};w.hashCode=function(){return J.hashCode(this._seconds,this._nanos)};w.toString=function(){return Eb.ISO_INSTANT.format(this)};w.toJSON=function(){return this.toString()};return C}(Db),dc=function(){function Z(){}Z.systemUTC=function(){return new Te(ab.UTC)};
Z.systemDefaultZone=function(){return new Te(lb.systemDefault())};Z.system=function(w){return new Te(w)};Z.fixed=function(w,c){return new gg(w,c)};Z.offset=function(w,c){return new hg(w,c)};var C=Z.prototype;C.millis=function(){p("Clock.millis")};C.instant=function(){p("Clock.instant")};C.zone=function(){p("Clock.zone")};C.withZone=function(){p("Clock.withZone")};return Z}(),Te=function(Z){function C(c){k(c,"zone");var A=Z.call(this)||this;A._zone=c;return A}e(C,Z);var w=C.prototype;w.zone=function(){return this._zone};
w.millis=function(){return(new Date).getTime()};w.instant=function(){return hc.ofEpochMilli(this.millis())};w.equals=function(c){return c instanceof C?this._zone.equals(c._zone):!1};w.withZone=function(c){return c.equals(this._zone)?this:new C(c)};w.toString=function(){return"SystemClock["+this._zone.toString()+"]"};return C}(dc),gg=function(Z){function C(c,A){var P=Z.call(this)||this;P._instant=c;P._zoneId=A;return P}e(C,Z);var w=C.prototype;w.instant=function(){return this._instant};w.millis=function(){return this._instant.toEpochMilli()};
w.zone=function(){return this._zoneId};w.toString=function(){return"FixedClock[]"};w.equals=function(c){return c instanceof C?this._instant.equals(c._instant)&&this._zoneId.equals(c._zoneId):!1};w.withZone=function(c){return c.equals(this._zoneId)?this:new C(this._instant,c)};return C}(dc),hg=function(Z){function C(c,A){var P=Z.call(this)||this;P._baseClock=c;P._offset=A;return P}e(C,Z);var w=C.prototype;w.zone=function(){return this._baseClock.zone()};w.withZone=function(c){return c.equals(this._baseClock.zone())?
this:new C(this._baseClock.withZone(c),this._offset)};w.millis=function(){return this._baseClock.millis()+this._offset.toMillis()};w.instant=function(){return this._baseClock.instant().plus(this._offset)};w.equals=function(c){return c instanceof C?this._baseClock.equals(c._baseClock)&&this._offset.equals(c._offset):!1};w.toString=function(){return"OffsetClock["+this._baseClock+","+this._offset+"]"};return C}(dc),rf=function(){function Z(w,c,A){k(w,"transition");k(c,"offsetBefore");k(A,"offsetAfter");
if(c.equals(A))throw new I("Offsets must not be equal");if(w.nano()!==0)throw new I("Nano-of-second must be zero");this._transition=w instanceof Yb?w:Yb.ofEpochSecond(w,0,c);this._offsetBefore=c;this._offsetAfter=A}Z.of=function(w,c,A){return new Z(w,c,A)};var C=Z.prototype;C.instant=function(){return this._transition.toInstant(this._offsetBefore)};C.toEpochSecond=function(){return this._transition.toEpochSecond(this._offsetBefore)};C.dateTimeBefore=function(){return this._transition};C.dateTimeAfter=
function(){return this._transition.plusSeconds(this.durationSeconds())};C.offsetBefore=function(){return this._offsetBefore};C.offsetAfter=function(){return this._offsetAfter};C.duration=function(){return S.ofSeconds(this.durationSeconds())};C.durationSeconds=function(){return this._offsetAfter.totalSeconds()-this._offsetBefore.totalSeconds()};C.isGap=function(){return this._offsetAfter.totalSeconds()>this._offsetBefore.totalSeconds()};C.isOverlap=function(){return this._offsetAfter.totalSeconds()<
this._offsetBefore.totalSeconds()};C.isValidOffset=function(w){return this.isGap()?!1:this._offsetBefore.equals(w)||this._offsetAfter.equals(w)};C.validOffsets=function(){return this.isGap()?[]:[this._offsetBefore,this._offsetAfter]};C.compareTo=function(w){return this.instant().compareTo(w.instant())};C.equals=function(w){return w===this?!0:w instanceof Z?this._transition.equals(w._transition)&&this._offsetBefore.equals(w.offsetBefore())&&this._offsetAfter.equals(w.offsetAfter()):!1};C.hashCode=
function(){return this._transition.hashCode()^this._offsetBefore.hashCode()^this._offsetAfter.hashCode()>>>16};C.toString=function(){return"Transition["+(this.isGap()?"Gap":"Overlap")+" at "+this._transition.toString()+this._offsetBefore.toString()+" to "+this._offsetAfter+"]"};return Z}(),ig=function(Z){function C(){return Z.apply(this,arguments)||this}e(C,Z);var w=C.prototype;w.isFixedOffset=function(){return!1};w.offsetOfInstant=function(c){c=(new Date(c.toEpochMilli())).getTimezoneOffset();return ab.ofTotalMinutes(c*
-1)};w.offsetOfEpochMilli=function(c){c=(new Date(c)).getTimezoneOffset();return ab.ofTotalMinutes(c*-1)};w.offsetOfLocalDateTime=function(c){c=c.toEpochSecond(ab.UTC)*1E3;var A=(new Date(c)).getTimezoneOffset();c=(new Date(c+A*6E4)).getTimezoneOffset();return ab.ofTotalMinutes(c*-1)};w.validOffsets=function(c){return[this.offsetOfLocalDateTime(c)]};w.transition=function(){return null};w.standardOffset=function(c){return this.offsetOfInstant(c)};w.daylightSavings=function(){this._throwNotSupported()};
w.isDaylightSavings=function(){this._throwNotSupported()};w.isValidOffset=function(c,A){return this.offsetOfLocalDateTime(c).equals(A)};w.nextTransition=function(){this._throwNotSupported()};w.previousTransition=function(){this._throwNotSupported()};w.transitions=function(){this._throwNotSupported()};w.transitionRules=function(){this._throwNotSupported()};w._throwNotSupported=function(){throw new y("not supported operation");};w.equals=function(c){return this===c||c instanceof C?!0:!1};w.toString=
function(){return"SYSTEM"};return C}(Tb),jg=function(Z){function C(){var c=Z.call(this)||this;c._rules=new ig;return c}e(C,Z);var w=C.prototype;w.rules=function(){return this._rules};w.equals=function(c){return this===c?!0:!1};w.id=function(){return"SYSTEM"};return C}(lb),Vd=function(){function Z(){}Z.systemDefault=function(){return Ue};Z.getAvailableZoneIds=function(){return uc.getAvailableZoneIds()};Z.of=function(C){k(C,"zoneId");if(C==="Z")return ab.UTC;if(C.length===1)throw new y("Invalid zone: "+
C);if(yb.startsWith(C,"+")||yb.startsWith(C,"-"))return ab.of(C);if(C==="UTC"||C==="GMT"||C==="GMT0"||C==="UT")return new Ra(C,ab.UTC.rules());if(yb.startsWith(C,"UTC+")||yb.startsWith(C,"GMT+")||yb.startsWith(C,"UTC-")||yb.startsWith(C,"GMT-")){var w=ab.of(C.substring(3));return w.totalSeconds()===0?new Ra(C.substring(0,3),w.rules()):new Ra(C.substring(0,3)+w.id(),w.rules())}return yb.startsWith(C,"UT+")||yb.startsWith(C,"UT-")?(C=ab.of(C.substring(2)),C.totalSeconds()===0?new Ra("UT",C.rules()):
new Ra("UT"+C.id(),C.rules())):C==="SYSTEM"?lb.systemDefault():Ra.ofId(C)};Z.ofOffset=function(C,w){k(C,"prefix");k(w,"offset");if(C.length===0)return w;if(C==="GMT"||C==="UTC"||C==="UT")return w.totalSeconds()===0?new Ra(C,w.rules()):new Ra(C+w.id(),w.rules());throw new I("Invalid prefix, must be GMT, UTC or UT: "+C);};Z.from=function(C){k(C,"temporal");var w=C.query(pa.zone());if(w==null)throw new y("Unable to obtain ZoneId from TemporalAccessor: "+C+", type "+(C.constructor!=null?C.constructor.name:
""));return w};return Z}(),Ue=null,sf=!1;if(!sf){sf=!0;ca.MIN_VALUE=-999999;ca.MAX_VALUE=999999;S.ZERO=new S(0,0);V.NANOS=new V("Nanos",S.ofNanos(1));V.MICROS=new V("Micros",S.ofNanos(1E3));V.MILLIS=new V("Millis",S.ofNanos(1E6));V.SECONDS=new V("Seconds",S.ofSeconds(1));V.MINUTES=new V("Minutes",S.ofSeconds(60));V.HOURS=new V("Hours",S.ofSeconds(3600));V.HALF_DAYS=new V("HalfDays",S.ofSeconds(43200));V.DAYS=new V("Days",S.ofSeconds(86400));V.WEEKS=new V("Weeks",S.ofSeconds(604800));V.MONTHS=new V("Months",
S.ofSeconds(2629746));V.YEARS=new V("Years",S.ofSeconds(31556952));V.DECADES=new V("Decades",S.ofSeconds(315569520));V.CENTURIES=new V("Centuries",S.ofSeconds(3155695200));V.MILLENNIA=new V("Millennia",S.ofSeconds(31556952E3));V.ERAS=new V("Eras",S.ofSeconds(31556952*(ca.MAX_VALUE+1)));V.FOREVER=new V("Forever",S.ofSeconds(J.MAX_SAFE_INTEGER,999999999));N.NANO_OF_SECOND=new N("NanoOfSecond",V.NANOS,V.SECONDS,na.of(0,999999999));N.NANO_OF_DAY=new N("NanoOfDay",V.NANOS,V.DAYS,na.of(0,864E11-1));N.MICRO_OF_SECOND=
new N("MicroOfSecond",V.MICROS,V.SECONDS,na.of(0,999999));N.MICRO_OF_DAY=new N("MicroOfDay",V.MICROS,V.DAYS,na.of(0,864E8-1));N.MILLI_OF_SECOND=new N("MilliOfSecond",V.MILLIS,V.SECONDS,na.of(0,999));N.MILLI_OF_DAY=new N("MilliOfDay",V.MILLIS,V.DAYS,na.of(0,864E5-1));N.SECOND_OF_MINUTE=new N("SecondOfMinute",V.SECONDS,V.MINUTES,na.of(0,59));N.SECOND_OF_DAY=new N("SecondOfDay",V.SECONDS,V.DAYS,na.of(0,86399));N.MINUTE_OF_HOUR=new N("MinuteOfHour",V.MINUTES,V.HOURS,na.of(0,59));N.MINUTE_OF_DAY=new N("MinuteOfDay",
V.MINUTES,V.DAYS,na.of(0,1439));N.HOUR_OF_AMPM=new N("HourOfAmPm",V.HOURS,V.HALF_DAYS,na.of(0,11));N.CLOCK_HOUR_OF_AMPM=new N("ClockHourOfAmPm",V.HOURS,V.HALF_DAYS,na.of(1,12));N.HOUR_OF_DAY=new N("HourOfDay",V.HOURS,V.DAYS,na.of(0,23));N.CLOCK_HOUR_OF_DAY=new N("ClockHourOfDay",V.HOURS,V.DAYS,na.of(1,24));N.AMPM_OF_DAY=new N("AmPmOfDay",V.HALF_DAYS,V.DAYS,na.of(0,1));N.DAY_OF_WEEK=new N("DayOfWeek",V.DAYS,V.WEEKS,na.of(1,7));N.ALIGNED_DAY_OF_WEEK_IN_MONTH=new N("AlignedDayOfWeekInMonth",V.DAYS,V.WEEKS,
na.of(1,7));N.ALIGNED_DAY_OF_WEEK_IN_YEAR=new N("AlignedDayOfWeekInYear",V.DAYS,V.WEEKS,na.of(1,7));N.DAY_OF_MONTH=new N("DayOfMonth",V.DAYS,V.MONTHS,na.of(1,28,31),"day");N.DAY_OF_YEAR=new N("DayOfYear",V.DAYS,V.YEARS,na.of(1,365,366));N.EPOCH_DAY=new N("EpochDay",V.DAYS,V.FOREVER,na.of(Math.floor(ca.MIN_VALUE*365.25),Math.floor(ca.MAX_VALUE*365.25)));N.ALIGNED_WEEK_OF_MONTH=new N("AlignedWeekOfMonth",V.WEEKS,V.MONTHS,na.of(1,4,5));N.ALIGNED_WEEK_OF_YEAR=new N("AlignedWeekOfYear",V.WEEKS,V.YEARS,
na.of(1,53));N.MONTH_OF_YEAR=new N("MonthOfYear",V.MONTHS,V.YEARS,na.of(1,12),"month");N.PROLEPTIC_MONTH=new N("ProlepticMonth",V.MONTHS,V.FOREVER,na.of(ca.MIN_VALUE*12,ca.MAX_VALUE*12+11));N.YEAR_OF_ERA=new N("YearOfEra",V.YEARS,V.FOREVER,na.of(1,ca.MAX_VALUE,ca.MAX_VALUE+1));N.YEAR=new N("Year",V.YEARS,V.FOREVER,na.of(ca.MIN_VALUE,ca.MAX_VALUE),"year");N.ERA=new N("Era",V.ERAS,V.FOREVER,na.of(0,1));N.INSTANT_SECONDS=new N("InstantSeconds",V.SECONDS,V.FOREVER,na.of(-9007199254740991,9007199254740991));
N.OFFSET_SECONDS=new N("OffsetSeconds",V.SECONDS,V.FOREVER,na.of(-64800,64800));(function(){Ia.HOURS=[];for(var Z=0;Z<24;Z++)Ia.of(Z,0,0,0);Ia.MIN=Ia.HOURS[0];Ia.MAX=new Ia(23,59,59,999999999);Ia.MIDNIGHT=Ia.HOURS[0];Ia.NOON=Ia.HOURS[12];Ia.FROM=z("LocalTime.FROM",function(C){return Ia.from(C)})})();(function(){Rd=new te;md=new ue;Hd=new fe;Ic=new ge;qd=new ve("WeekBasedYears",S.ofSeconds(31556952));ld=new ve("QuarterYears",S.ofSeconds(7889238));pc.DAY_OF_QUARTER=Rd;pc.QUARTER_OF_YEAR=md;pc.WEEK_OF_WEEK_BASED_YEAR=
Hd;pc.WEEK_BASED_YEAR=Ic;pc.WEEK_BASED_YEARS=qd;pc.QUARTER_YEARS=ld;tb.prototype.isoWeekOfWeekyear=function(){return this.get(pc.WEEK_OF_WEEK_BASED_YEAR)};tb.prototype.isoWeekyear=function(){return this.get(pc.WEEK_BASED_YEAR)}})();(function(){pa.ZONE_ID=z("ZONE_ID",function(Z){return Z.query(pa.ZONE_ID)});pa.CHRONO=z("CHRONO",function(Z){return Z.query(pa.CHRONO)});pa.PRECISION=z("PRECISION",function(Z){return Z.query(pa.PRECISION)});pa.OFFSET=z("OFFSET",function(Z){return Z.isSupported(N.OFFSET_SECONDS)?
ab.ofTotalSeconds(Z.get(N.OFFSET_SECONDS)):null});pa.ZONE=z("ZONE",function(Z){var C=Z.query(pa.ZONE_ID);return C!=null?C:Z.query(pa.OFFSET)});pa.LOCAL_DATE=z("LOCAL_DATE",function(Z){return Z.isSupported(N.EPOCH_DAY)?tb.ofEpochDay(Z.getLong(N.EPOCH_DAY)):null});pa.LOCAL_TIME=z("LOCAL_TIME",function(Z){return Z.isSupported(N.NANO_OF_DAY)?Ia.ofNanoOfDay(Z.getLong(N.NANO_OF_DAY)):null})})();(function(){Ua.MONDAY=new Ua(0,"MONDAY");Ua.TUESDAY=new Ua(1,"TUESDAY");Ua.WEDNESDAY=new Ua(2,"WEDNESDAY");Ua.THURSDAY=
new Ua(3,"THURSDAY");Ua.FRIDAY=new Ua(4,"FRIDAY");Ua.SATURDAY=new Ua(5,"SATURDAY");Ua.SUNDAY=new Ua(6,"SUNDAY");Ua.FROM=z("DayOfWeek.FROM",function(Z){return Ua.from(Z)});jb=[Ua.MONDAY,Ua.TUESDAY,Ua.WEDNESDAY,Ua.THURSDAY,Ua.FRIDAY,Ua.SATURDAY,Ua.SUNDAY]})();(function(){hc.MIN_SECONDS=-31619119219200;hc.MAX_SECONDS=31494816403199;hc.EPOCH=new hc(0,0);hc.MIN=hc.ofEpochSecond(hc.MIN_SECONDS,0);hc.MAX=hc.ofEpochSecond(hc.MAX_SECONDS,999999999);hc.FROM=z("Instant.FROM",function(Z){return hc.from(Z)})})();
(function(){tb.MIN=tb.of(ca.MIN_VALUE,1,1);tb.MAX=tb.of(ca.MAX_VALUE,12,31);tb.EPOCH_0=tb.ofEpochDay(0);tb.FROM=z("LocalDate.FROM",function(Z){return tb.from(Z)})})();(function(){Yb.MIN=Yb.of(tb.MIN,Ia.MIN);Yb.MAX=Yb.of(tb.MAX,Ia.MAX);Yb.FROM=z("LocalDateTime.FROM",function(Z){return Yb.from(Z)})})();(function(){ad.MIN_VALUE=ca.MIN_VALUE;ad.MAX_VALUE=ca.MAX_VALUE;Oe=(new gc).appendValue(N.YEAR,4,10,Ib.EXCEEDS_PAD).toFormatter();ad.FROM=z("Year.FROM",function(Z){return ad.from(Z)})})();eb.JANUARY=
new eb(1,"JANUARY");eb.FEBRUARY=new eb(2,"FEBRUARY");eb.MARCH=new eb(3,"MARCH");eb.APRIL=new eb(4,"APRIL");eb.MAY=new eb(5,"MAY");eb.JUNE=new eb(6,"JUNE");eb.JULY=new eb(7,"JULY");eb.AUGUST=new eb(8,"AUGUST");eb.SEPTEMBER=new eb(9,"SEPTEMBER");eb.OCTOBER=new eb(10,"OCTOBER");eb.NOVEMBER=new eb(11,"NOVEMBER");eb.DECEMBER=new eb(12,"DECEMBER");var se=[eb.JANUARY,eb.FEBRUARY,eb.MARCH,eb.APRIL,eb.MAY,eb.JUNE,eb.JULY,eb.AUGUST,eb.SEPTEMBER,eb.OCTOBER,eb.NOVEMBER,eb.DECEMBER];(function(){Ne=(new gc).appendValue(N.YEAR,
4,10,Ib.EXCEEDS_PAD).appendLiteral("-").appendValue(N.MONTH_OF_YEAR,2).toFormatter();td.FROM=z("YearMonth.FROM",function(Z){return td.from(Z)})})();(function(){Ac=(new gc).appendLiteral("--").appendValue(N.MONTH_OF_YEAR,2).appendLiteral("-").appendValue(N.DAY_OF_MONTH,2).toFormatter();vc.FROM=z("MonthDay.FROM",function(Z){return vc.from(Z)})})();xb.ofDays(0);ab.MAX_SECONDS=18*Ia.SECONDS_PER_HOUR;ab.UTC=ab.ofTotalSeconds(0);ab.MIN=ab.ofTotalSeconds(-ab.MAX_SECONDS);ab.MAX=ab.ofTotalSeconds(ab.MAX_SECONDS);
(function(){cd.FROM=z("ZonedDateTime.FROM",function(Z){return cd.from(Z)})})();Ue=new jg;lb.systemDefault=Vd.systemDefault;lb.getAvailableZoneIds=Vd.getAvailableZoneIds;lb.of=Vd.of;lb.ofOffset=Vd.ofOffset;lb.from=Vd.from;ab.from=Vd.from;lb.SYSTEM=Ue;lb.UTC=ab.ofTotalSeconds(0);ac.INSTANCE=new ac("IsoChronology");(function(){Eb.ISO_LOCAL_DATE=(new gc).appendValue(N.YEAR,4,10,Ib.EXCEEDS_PAD).appendLiteral("-").appendValue(N.MONTH_OF_YEAR,2).appendLiteral("-").appendValue(N.DAY_OF_MONTH,2).toFormatter(qb.STRICT).withChronology(ac.INSTANCE);
Eb.ISO_LOCAL_TIME=(new gc).appendValue(N.HOUR_OF_DAY,2).appendLiteral(":").appendValue(N.MINUTE_OF_HOUR,2).optionalStart().appendLiteral(":").appendValue(N.SECOND_OF_MINUTE,2).optionalStart().appendFraction(N.NANO_OF_SECOND,0,9,!0).toFormatter(qb.STRICT);Eb.ISO_LOCAL_DATE_TIME=(new gc).parseCaseInsensitive().append(Eb.ISO_LOCAL_DATE).appendLiteral("T").append(Eb.ISO_LOCAL_TIME).toFormatter(qb.STRICT).withChronology(ac.INSTANCE);Eb.ISO_INSTANT=(new gc).parseCaseInsensitive().appendInstant().toFormatter(qb.STRICT);
Eb.ISO_OFFSET_DATE_TIME=(new gc).parseCaseInsensitive().append(Eb.ISO_LOCAL_DATE_TIME).appendOffsetId().toFormatter(qb.STRICT).withChronology(ac.INSTANCE);Eb.ISO_ZONED_DATE_TIME=(new gc).append(Eb.ISO_OFFSET_DATE_TIME).optionalStart().appendLiteral("[").parseCaseSensitive().appendZoneId().appendLiteral("]").toFormatter(qb.STRICT).withChronology(ac.INSTANCE);Eb.BASIC_ISO_DATE=(new gc).appendValue(N.YEAR,4,10,Ib.EXCEEDS_PAD).appendValue(N.MONTH_OF_YEAR,2).appendValue(N.DAY_OF_MONTH,2).toFormatter(qb.STRICT).withChronology(ac.INSTANCE);
Eb.ISO_OFFSET_DATE=(new gc).parseCaseInsensitive().append(Eb.ISO_LOCAL_DATE).appendOffsetId().toFormatter(qb.STRICT).withChronology(ac.INSTANCE);Eb.ISO_OFFSET_TIME=(new gc).parseCaseInsensitive().append(Eb.ISO_LOCAL_TIME).appendOffsetId().toFormatter(qb.STRICT).withChronology(ac.INSTANCE);Eb.ISO_ORDINAL_DATE=(new gc).appendValue(N.YEAR,4,10,Ib.EXCEEDS_PAD).appendLiteral("-").appendValue(N.DAY_OF_YEAR).toFormatter(qb.STRICT);Eb.ISO_WEEK_DATE=(new gc).appendValue(N.YEAR,4,10,Ib.EXCEEDS_PAD).appendLiteral("-W").appendValue(N.ALIGNED_WEEK_OF_YEAR).appendLiteral("-").appendValue(N.DAY_OF_WEEK).toFormatter(qb.STRICT);
Eb.PARSED_EXCESS_DAYS=z("PARSED_EXCESS_DAYS",function(Z){return Z instanceof Qb?Z.excessDays:xb.ZERO});Eb.PARSED_LEAP_SECOND=z("PARSED_LEAP_SECOND",function(Z){return Z instanceof Qb?Z.leapSecond:!1})})();sd.BASE_DATE=tb.of(2E3,1,1);gc.CompositePrinterParser=Td;gc.PadPrinterParserDecorator=$c;gc.SettingsParser=zc;gc.CharLiteralPrinterParser=Va;gc.StringLiteralPrinterParser=Va;gc.CharLiteralPrinterParser=Sd;gc.NumberPrinterParser=La;gc.ReducedPrinterParser=sd;gc.FractionPrinterParser=Id;gc.OffsetIdPrinterParser=
Pc;gc.ZoneIdPrinterParser=Ab;(function(){bd.MIN=Yb.MIN.atOffset(ab.MAX);bd.MAX=Yb.MAX.atOffset(ab.MIN);bd.FROM=z("OffsetDateTime.FROM",function(Z){return bd.from(Z)})})();(function(){nd.MIN=nd.ofNumbers(0,0,0,0,ab.MAX);nd.MAX=nd.ofNumbers(23,59,59,999999999,ab.MIN);nd.FROM=z("OffsetTime.FROM",function(Z){return nd.from(Z)})})()}var cg=function(){function Z(w,c){if(w instanceof tb)c=c==null?lb.systemDefault():c,w=w.atStartOfDay(c);else if(w instanceof Yb)c=c==null?lb.systemDefault():c,w=w.atZone(c);
else if(w instanceof cd)w=c==null?w:w.withZoneSameInstant(c);else throw new I("unsupported instance for convert operation:"+w);this.instant=w.toInstant()}var C=Z.prototype;C.toDate=function(){return new Date(this.instant.toEpochMilli())};C.toEpochMilli=function(){return this.instant.toEpochMilli()};return Z}(),dg=function(Z){function C(c,A){A===void 0&&(A=lb.systemDefault());var P=Z.call(this)||this;P._zone=A;if(c instanceof Date)return P._epochMilli=c.getTime(),g(P);if(typeof c.toDate==="function"&&
c.toDate()instanceof Date)return P._epochMilli=c.toDate().getTime(),g(P);f(!1,"date must be either a javascript date or a moment");return P}e(C,Z);var w=C.prototype;w.query=function(c){k(c,"query");return c===pa.localDate()?tb.ofInstant(hc.ofEpochMilli(this._epochMilli),this._zone):c===pa.localTime()?Ia.ofInstant(hc.ofEpochMilli(this._epochMilli),this._zone):c===pa.zone()?this._zone:Z.prototype.query.call(this,c)};w.get=function(c){return this.getLong(c)};w.getLong=function(c){k(c,"field");if(c instanceof
N){switch(c){case N.NANO_OF_SECOND:return J.floorMod(this._epochMilli,1E3)*1E6;case N.INSTANT_SECONDS:return J.floorDiv(this._epochMilli,1E3)}throw new D("Unsupported field: "+c);}return c.getFrom(this)};w.isSupported=function(c){return c===N.INSTANT_SECONDS||c===N.NANO_OF_SECOND};return C}(ra),tf={assert:O,DateTimeBuilder:Qb,DateTimeParseContext:fc,DateTimePrintContext:Dc,MathUtil:J,StringUtil:yb,StringBuilder:qf},uf={_:tf,convert:t,nativeJs:v,ArithmeticException:G,DateTimeException:y,DateTimeParseException:B,
IllegalArgumentException:I,IllegalStateException:K,UnsupportedTemporalTypeException:D,NullPointerException:Q,Clock:dc,DayOfWeek:Ua,Duration:S,Instant:hc,LocalDate:tb,LocalTime:Ia,LocalDateTime:Yb,OffsetTime:nd,OffsetDateTime:bd,Month:eb,MonthDay:vc,Period:xb,Year:ad,YearConstants:ca,YearMonth:td,ZonedDateTime:cd,ZoneOffset:ab,ZoneId:lb,ZoneRegion:Ra,ZoneOffsetTransition:rf,ZoneRules:Tb,ZoneRulesProvider:uc,ChronoLocalDate:Bc,ChronoLocalDateTime:Se,ChronoZonedDateTime:Re,IsoChronology:ac,ChronoField:N,
ChronoUnit:V,IsoFields:pc,Temporal:Db,TemporalAccessor:ra,TemporalAdjuster:cc,TemporalAdjusters:Qe,TemporalAmount:ba,TemporalField:xa,TemporalQueries:pa,TemporalQuery:Ea,TemporalUnit:Y,ValueRange:na,DateTimeFormatter:Eb,DateTimeFormatterBuilder:gc,DecimalStyle:ic,ResolverStyle:qb,SignStyle:Ib,TextStyle:Rb},vf=function(Z){var C=[];return function(w){~C.indexOf(w)||(w(Z),C.push(w));return Z}}(uf);uf.use=vf;x.ArithmeticException=G;x.ChronoField=N;x.ChronoLocalDate=Bc;x.ChronoLocalDateTime=Se;x.ChronoUnit=
V;x.ChronoZonedDateTime=Re;x.Clock=dc;x.DateTimeException=y;x.DateTimeFormatter=Eb;x.DateTimeFormatterBuilder=gc;x.DateTimeParseException=B;x.DayOfWeek=Ua;x.DecimalStyle=ic;x.Duration=S;x.IllegalArgumentException=I;x.IllegalStateException=K;x.Instant=hc;x.IsoChronology=ac;x.IsoFields=pc;x.LocalDate=tb;x.LocalDateTime=Yb;x.LocalTime=Ia;x.Month=eb;x.MonthDay=vc;x.NullPointerException=Q;x.OffsetDateTime=bd;x.OffsetTime=nd;x.Period=xb;x.ResolverStyle=qb;x.SignStyle=Ib;x.Temporal=Db;x.TemporalAccessor=
ra;x.TemporalAdjuster=cc;x.TemporalAdjusters=Qe;x.TemporalAmount=ba;x.TemporalField=xa;x.TemporalQueries=pa;x.TemporalQuery=Ea;x.TemporalUnit=Y;x.TextStyle=Rb;x.UnsupportedTemporalTypeException=D;x.ValueRange=na;x.Year=ad;x.YearConstants=ca;x.YearMonth=td;x.ZoneId=lb;x.ZoneOffset=ab;x.ZoneOffsetTransition=rf;x.ZoneRegion=Ra;x.ZoneRules=Tb;x.ZoneRulesProvider=uc;x.ZonedDateTime=cd;x._=tf;x.convert=t;x.nativeJs=v;x.use=vf;Object.defineProperty(x,"__esModule",{value:!0})})};
shadow$provide[1]=function(l,L,q){function x(f){var k=f.length;if(k%4>0)throw Error("Invalid string. Length must be a multiple of 4");f=f.indexOf("\x3d");f===-1&&(f=k);return[f,f===k?0:4-f%4]}q.byteLength=function(f){f=x(f);var k=f[1];return(f[0]+k)*3/4-k};q.toByteArray=function(f){var k=x(f);var m=k[0];k=k[1];var p=new g((m+k)*3/4-k),z=0,t=k>0?m-4:m,v;for(v=0;v<t;v+=4)m=e[f.charCodeAt(v)]<<18|e[f.charCodeAt(v+1)]<<12|e[f.charCodeAt(v+2)]<<6|e[f.charCodeAt(v+3)],p[z++]=m>>16&255,p[z++]=m>>8&255,p[z++]=
m&255;k===2&&(m=e[f.charCodeAt(v)]<<2|e[f.charCodeAt(v+1)]>>4,p[z++]=m&255);k===1&&(m=e[f.charCodeAt(v)]<<10|e[f.charCodeAt(v+1)]<<4|e[f.charCodeAt(v+2)]>>2,p[z++]=m>>8&255,p[z++]=m&255);return p};q.fromByteArray=function(f){for(var k=f.length,m=k%3,p=[],z=0,t=k-m;z<t;z+=16383){for(var v=p,y=v.push,B,D=f,G=z+16383>t?t:z+16383,I=[],K=z;K<G;K+=3)B=(D[K]<<16&16711680)+(D[K+1]<<8&65280)+(D[K+2]&255),I.push(r[B>>18&63]+r[B>>12&63]+r[B>>6&63]+r[B&63]);B=I.join("");y.call(v,B)}m===1?(f=f[k-1],p.push(r[f>>
2]+r[f<<4&63]+"\x3d\x3d")):m===2&&(f=(f[k-2]<<8)+f[k-1],p.push(r[f>>10]+r[f>>4&63]+r[f<<2&63]+"\x3d"));return p.join("")};var r=[],e=[],g=typeof Uint8Array!=="undefined"?Uint8Array:Array;for(l=0;l<64;++l)r[l]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[l],e["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(l)]=l;e[45]=62;e[95]=63};
'use strict';
var module$contents$ham_fisted$BitmapTrie_cyrb53 = function($str$$, $h2$jscomp$4_seed$$ = 0) {
  let $h1$$ = 3735928559 ^ $h2$jscomp$4_seed$$;
  $h2$jscomp$4_seed$$ ^= 1103547991;
  for (let $i$$ = 0, $ch$$; $i$$ < $str$$.length; $i$$++) {
    $ch$$ = $str$$.charCodeAt($i$$), $h1$$ = Math.imul($h1$$ ^ $ch$$, 2654435761), $h2$jscomp$4_seed$$ = Math.imul($h2$jscomp$4_seed$$ ^ $ch$$, 1597334677);
  }
  $h1$$ = Math.imul($h1$$ ^ $h1$$ >>> 16, 2246822507) ^ Math.imul($h2$jscomp$4_seed$$ ^ $h2$jscomp$4_seed$$ >>> 13, 3266489909);
  Math.imul($h2$jscomp$4_seed$$ ^ $h2$jscomp$4_seed$$ >>> 16, 2246822507);
  Math.imul($h1$$ ^ $h1$$ >>> 13, 3266489909);
  return $h1$$ >>> 0;
}, module$contents$ham_fisted$BitmapTrie_sizeIfPossible = function($arg$$) {
  if ($arg$$ == null) {
    return 0;
  }
  if ($arg$$.length) {
    return $arg$$.length;
  }
  const $sz$$ = $arg$$.size;
  return $sz$$ != null ? typeof $sz$$ === "function" ? $arg$$.size() : $sz$$ : null;
}, module$contents$ham_fisted$BitmapTrie_mixHash = function($hash$$) {
  return $hash$$ >>> 0 ^ $hash$$ >>> 16;
}, module$contents$ham_fisted$BitmapTrie_defaultHash = function($obj$$) {
  return $obj$$ == null ? 0 : typeof $obj$$ == "number" ? module$contents$ham_fisted$BitmapTrie_mixHash(Math.floor($obj$$)) : module$contents$ham_fisted$BitmapTrie_cyrb53($obj$$.toString());
}, module$contents$ham_fisted$BitmapTrie_defaultEquals = function($lhs$$, $rhs$$) {
  return $lhs$$ == $rhs$$;
}, module$contents$ham_fisted$BitmapTrie_makeHashProvider = function($hashfn$$, $eqfn$$, $isredfn$$, $unredfn$$, $makeReducedfn$$, $printfn$$) {
  return {hash:$hashfn$$, equals:$eqfn$$, isReduced:$isredfn$$, unreduce:$unredfn$$, makeReduced:$makeReducedfn$$, println:$printfn$$};
}, module$contents$ham_fisted$BitmapTrie_mask = function($shift$$, $hash$$) {
  return $hash$$ >>> $shift$$ & 31;
}, module$contents$ham_fisted$BitmapTrie_bitpos = function($shift$$, $hashcode$$) {
  return 1 << module$contents$ham_fisted$BitmapTrie_mask($shift$$, $hashcode$$);
}, module$contents$ham_fisted$BitmapTrie_bitCount32 = function($n$$) {
  $n$$ -= $n$$ >> 1 & 1431655765;
  $n$$ = ($n$$ & 858993459) + ($n$$ >> 2 & 858993459);
  return ($n$$ + ($n$$ >> 4) & 252645135) * 16843009 >> 24;
}, module$contents$ham_fisted$BitmapTrie_bitIndex = function($bitmap$$, $bit$$) {
  return module$contents$ham_fisted$BitmapTrie_bitCount32($bitmap$$ & $bit$$ - 1);
}, module$contents$ham_fisted$BitmapTrie_nextPow2 = function($n$$) {
  let $rval$$ = 1 << 31 - Math.clz32($n$$);
  return $rval$$ == $n$$ ? $rval$$ : $rval$$ << 1;
}, module$contents$ham_fisted$BitmapTrie_incShift = function($s$$) {
  return $s$$ + 5;
}, module$contents$ham_fisted$BitmapTrie_copyOf = function($nary_srcData$$, $len$$) {
  $nary_srcData$$ = $nary_srcData$$.slice(0, $len$$);
  $nary_srcData$$.length < $len$$ && ($nary_srcData$$.length = $len$$);
  return $nary_srcData$$;
}, module$contents$ham_fisted$BitmapTrie_insert = function($srcData$$, $obj$$, $insertIdx$$, $newLen_ridx$$, $dstData_forceCopy$$) {
  let $srcLen$$ = $srcData$$.length, $dstLen$$ = module$contents$ham_fisted$BitmapTrie_nextPow2($newLen_ridx$$);
  $dstData_forceCopy$$ = $dstData_forceCopy$$ || $dstLen$$ > $srcLen$$ ? module$contents$ham_fisted$BitmapTrie_copyOf($srcData$$, $dstLen$$) : $srcData$$;
  for (--$newLen_ridx$$; $newLen_ridx$$ > $insertIdx$$; --$newLen_ridx$$) {
    $dstData_forceCopy$$[$newLen_ridx$$] = $srcData$$[$newLen_ridx$$ - 1];
  }
  $dstData_forceCopy$$[$insertIdx$$] = $obj$$;
  return $dstData_forceCopy$$;
}, module$contents$ham_fisted$BitmapTrie_removeEntry = function($data$$, $idx$jscomp$245_index$$, $decNE_nElems$$, $forceCopy$jscomp$1_retval$$) {
  --$decNE_nElems$$;
  for ($forceCopy$jscomp$1_retval$$ = $forceCopy$jscomp$1_retval$$ ? $data$$.slice(0, module$contents$ham_fisted$BitmapTrie_nextPow2(Math.max(4, $decNE_nElems$$))) : $data$$; $idx$jscomp$245_index$$ < $decNE_nElems$$; ++$idx$jscomp$245_index$$) {
    $forceCopy$jscomp$1_retval$$[$idx$jscomp$245_index$$] = $data$$[$idx$jscomp$245_index$$ + 1];
  }
  $decNE_nElems$$ < $forceCopy$jscomp$1_retval$$.length && ($forceCopy$jscomp$1_retval$$[$decNE_nElems$$] = null);
  return $forceCopy$jscomp$1_retval$$;
}, module$contents$ham_fisted$BitmapTrie_rotLeft = function($val$$, $amt$$) {
  return $val$$ << $amt$$ | $val$$ >>> 32 - $amt$$;
}, module$contents$ham_fisted$BitmapTrie_m3_mix_K1 = function($k1$$) {
  return Math.imul(module$contents$ham_fisted$BitmapTrie_m3_C2, module$contents$ham_fisted$BitmapTrie_rotLeft(Math.imul($k1$$ | 0, module$contents$ham_fisted$BitmapTrie_m3_C1), 15));
}, module$contents$ham_fisted$BitmapTrie_m3_mix_H1 = function($h1$$, $k1$$) {
  return -430675100 + Math.imul(5, module$contents$ham_fisted$BitmapTrie_rotLeft(($h1$$ | 0) ^ ($k1$$ | 0), 13)) | 0;
}, module$contents$ham_fisted$BitmapTrie_m3_fmix = function($h1$jscomp$8_s0$jscomp$1_s2$$, $len$$) {
  $h1$jscomp$8_s0$jscomp$1_s2$$ = ($h1$jscomp$8_s0$jscomp$1_s2$$ | 0) ^ $len$$;
  $h1$jscomp$8_s0$jscomp$1_s2$$ = Math.imul($h1$jscomp$8_s0$jscomp$1_s2$$ ^ $h1$jscomp$8_s0$jscomp$1_s2$$ >>> 16, -2048144789);
  $h1$jscomp$8_s0$jscomp$1_s2$$ = Math.imul($h1$jscomp$8_s0$jscomp$1_s2$$ ^ $h1$jscomp$8_s0$jscomp$1_s2$$ >>> 13, -1028477387);
  return $h1$jscomp$8_s0$jscomp$1_s2$$ ^ $h1$jscomp$8_s0$jscomp$1_s2$$ >>> 16;
}, module$contents$ham_fisted$BitmapTrie_mix_collection_hash = function($hashBasis_k1$$, $count$$) {
  var $h1$$ = module$contents$ham_fisted$BitmapTrie_m3_seed;
  $hashBasis_k1$$ = module$contents$ham_fisted$BitmapTrie_m3_mix_K1($hashBasis_k1$$);
  $h1$$ = module$contents$ham_fisted$BitmapTrie_m3_mix_H1($h1$$, $hashBasis_k1$$);
  return module$contents$ham_fisted$BitmapTrie_m3_fmix($h1$$, $count$$);
}, module$contents$ham_fisted$BitmapTrie_objHashCode = function($hashfn$$, $obj$$) {
  return $obj$$ == null ? 0 : typeof $obj$$.hashCode === "function" ? $obj$$.hashCode() : Array.isArray($obj$$) ? module$contents$ham_fisted$BitmapTrie_hash_ordered($hashfn$$, $obj$$) : $obj$$ instanceof Map || $obj$$ instanceof Set ? module$contents$ham_fisted$BitmapTrie_hash_unordered($hashfn$$, $obj$$) : $hashfn$$($obj$$);
}, module$contents$ham_fisted$BitmapTrie_consumerAccum = function($acc$$, $v$$) {
  $acc$$.accept($v$$);
  return $acc$$;
}, module$contents$ham_fisted$BitmapTrie_noArgInvoker = function($rfn$$) {
  return $rfn$$.cljs$core$IFn$_invoke$arity$0 ? $rfn$$.cljs$core$IFn$_invoke$arity$0.bind($rfn$$) : $rfn$$;
}, module$contents$ham_fisted$BitmapTrie_oneArgInvoker = function($rfn$$) {
  return $rfn$$.cljs$core$IFn$_invoke$arity$1 ? $rfn$$.cljs$core$IFn$_invoke$arity$1.bind($rfn$$) : $rfn$$;
}, module$contents$ham_fisted$BitmapTrie_twoArgInvoker = function($rfn$$) {
  return $rfn$$.cljs$core$IFn$_invoke$arity$2 ? $rfn$$.cljs$core$IFn$_invoke$arity$2.bind($rfn$$) : $rfn$$;
}, module$contents$ham_fisted$BitmapTrie_threeArgInvoker = function($rfn$$) {
  return $rfn$$.cljs$core$IFn$_invoke$arity$3 ? $rfn$$.cljs$core$IFn$_invoke$arity$3.bind($rfn$$) : $rfn$$;
}, module$contents$ham_fisted$BitmapTrie_iterReduce = function($hp_unreduce$$, $invoker_rfn$$, $acc$$, $coll$$) {
  $invoker_rfn$$ = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($invoker_rfn$$);
  const $isReduced$$ = $hp_unreduce$$.isReduced;
  $hp_unreduce$$ = $hp_unreduce$$.unreduce;
  if ($isReduced$$($acc$$)) {
    return $hp_unreduce$$($acc$$);
  }
  if (typeof $coll$$.next == "function") {
    for (var $c$jscomp$368_i$$ = $coll$$.next(); !$c$jscomp$368_i$$.done; $c$jscomp$368_i$$ = $coll$$.next()) {
      if ($acc$$ = $invoker_rfn$$($acc$$, $c$jscomp$368_i$$.value), $isReduced$$($acc$$)) {
        return $hp_unreduce$$($acc$$);
      }
    }
  } else {
    for ($c$jscomp$368_i$$ of $coll$$) {
      if ($acc$$ = $invoker_rfn$$($acc$$, $c$jscomp$368_i$$), $isReduced$$($acc$$)) {
        return $hp_unreduce$$($acc$$);
      }
    }
  }
  return $acc$$;
}, module$contents$ham_fisted$BitmapTrie_arrayReduce = function($hp$jscomp$1_unreduce$$, $invoker$jscomp$1_rfn$$, $acc$$, $coll$$) {
  let $l$$ = $coll$$.length | 0;
  $invoker$jscomp$1_rfn$$ = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($invoker$jscomp$1_rfn$$);
  const $isReduced$$ = $hp$jscomp$1_unreduce$$.isReduced;
  $hp$jscomp$1_unreduce$$ = $hp$jscomp$1_unreduce$$.unreduce;
  for (let $idx$$ = 0; $idx$$ < $l$$ && !$isReduced$$($acc$$); ++$idx$$) {
    $acc$$ = $invoker$jscomp$1_rfn$$($acc$$, $coll$$[$idx$$]);
  }
  return $hp$jscomp$1_unreduce$$($acc$$);
}, module$contents$ham_fisted$BitmapTrie_reduce = function($hp$$, $rfn$$, $acc$$, $coll$$) {
  $hp$$ = $hp$$ == null ? module$contents$ham_fisted$BitmapTrie_defaultProvider : $hp$$;
  return $coll$$ == null ? $hp$$.unreduce($acc$$) : Array.isArray($coll$$) ? module$contents$ham_fisted$BitmapTrie_arrayReduce($hp$$, $rfn$$, $acc$$, $coll$$) : typeof $coll$$.reduce == "function" ? $coll$$.reduce($rfn$$, $acc$$) : module$contents$ham_fisted$BitmapTrie_iterReduce($hp$$, $rfn$$, $acc$$, $coll$$);
}, module$contents$ham_fisted$BitmapTrie_reduce1 = function($hp$jscomp$3_rv$$, $rfn$$, $coll$$) {
  let $first$$ = !0;
  const $invoker$$ = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($rfn$$);
  $hp$jscomp$3_rv$$ = module$contents$ham_fisted$BitmapTrie_reduce($hp$jscomp$3_rv$$, ($acc$$, $v$$) => $first$$ ? ($first$$ = !1, $v$$) : $invoker$$($acc$$, $v$$), null, $coll$$);
  return $first$$ ? $rfn$$() : $hp$jscomp$3_rv$$;
}, module$contents$ham_fisted$BitmapTrie_hash_ordered = function($hash$$, $coll$$) {
  return module$contents$ham_fisted$BitmapTrie_reduce(null, module$contents$ham_fisted$BitmapTrie_consumerAccum, new module$contents$ham_fisted$BitmapTrie_OrderedCollHasher($hash$$), $coll$$).deref();
}, module$contents$ham_fisted$BitmapTrie_cache_ordered = function($hash$$, $coll$$) {
  $coll$$._hash == null && ($coll$$._hash = module$contents$ham_fisted$BitmapTrie_hash_ordered($hash$$, $coll$$) | 0);
  return $coll$$._hash;
}, module$contents$ham_fisted$BitmapTrie_hash_unordered = function($hash$$, $coll$$) {
  return module$contents$ham_fisted$BitmapTrie_reduce(null, module$contents$ham_fisted$BitmapTrie_consumerAccum, new module$contents$ham_fisted$BitmapTrie_UnorderedCollHasher($hash$$), $coll$$).deref();
}, module$contents$ham_fisted$BitmapTrie_cache_unordered = function($hash$$, $coll$$) {
  $coll$$._hash == null && ($coll$$._hash = module$contents$ham_fisted$BitmapTrie_hash_unordered($hash$$, $coll$$) | 0);
  return $coll$$._hash;
}, module$contents$ham_fisted$BitmapTrie_jsIter = function($arg$$) {
  return $arg$$ == null ? {next:() => {
    !0;
  }} : $arg$$[Symbol.iterator]();
}, module$contents$ham_fisted$BitmapTrie_lznc_map_1 = function($hp$$, $f$$, $arg$$) {
  return new module$contents$ham_fisted$BitmapTrie_Map1Impl($hp$$, $f$$, $arg$$);
}, module$contents$ham_fisted$BitmapTrie_lznc_map_2 = function($hp$$, $f$$, $lhs$$, $rhs$$) {
  return new module$contents$ham_fisted$BitmapTrie_Map2Impl($hp$$, $f$$, $lhs$$, $rhs$$);
}, module$contents$ham_fisted$BitmapTrie_lznc_map_n = function($hp$$, $f$$, $args$$) {
  return new module$contents$ham_fisted$BitmapTrie_MapNImpl($hp$$, $f$$, $args$$);
}, module$contents$ham_fisted$BitmapTrie_lznc_filter = function($hp$$, $pred$$, $lhs$$) {
  return new module$contents$ham_fisted$BitmapTrie_FilterImpl($hp$$, $pred$$, $lhs$$);
}, module$contents$ham_fisted$BitmapTrie_lznc_concat = function($hp$$, $args$$) {
  return new module$contents$ham_fisted$BitmapTrie_ConcatImpl($hp$$, $args$$);
}, module$contents$ham_fisted$BitmapTrie_leafProxy = function($lf$$) {
  return new Proxy($lf$$, new module$contents$ham_fisted$BitmapTrie_LFP());
}, module$contents$ham_fisted$BitmapTrie_mapProxy = function($m$$) {
  return new Proxy($m$$, {get($target$$, $key$$) {
    return $target$$.get($key$$);
  }, set($n$jscomp$436_target$$, $key$$, $value$$) {
    $n$jscomp$436_target$$ = $n$jscomp$436_target$$.getOrCreate($key$$);
    $n$jscomp$436_target$$.v = $value$$;
    return $n$jscomp$436_target$$.v;
  }, deleteProperty($target$$, $key$$) {
    return $target$$.remove($key$$);
  }, ownKeys($target$$) {
    return $target$$.reduce(($acc$$, $v$$) => {
      $acc$$.push($v$$.getKey());
      return $acc$$;
    }, []);
  }, has($target$$, $key$$) {
    return $target$$.containsKey($key$$);
  }, defineProperty($target$$, $key$$, $descriptor$$) {
    $descriptor$$ && "value" in $descriptor$$ && $target$$.put($key$$, $descriptor$$.value);
    return $target$$;
  }, getOwnPropertyDescriptor($n$jscomp$437_target$$, $key$$) {
    $n$jscomp$437_target$$ = $n$jscomp$437_target$$.getNode($key$$);
    return $n$jscomp$437_target$$ != null ? {value:$n$jscomp$437_target$$.v, writable:!0, enumerable:!0, configurable:!0} : void 0;
  }, apply($target$$, ...$args$$) {
    if ($args$$.length == 1) {
      return $target$$.get($args$$[0]);
    }
    if ($args$$.length == 2) {
      return $target$$.getOrDefault($args$$[0], $args$$[1]);
    }
  }});
}, module$contents$ham_fisted$BitmapTrie_nilstr = function($v$$) {
  return $v$$ == null ? "nil" : $v$$;
}, module$contents$ham_fisted$BitmapTrie_makeBitmapTrie = function($hashProvider$$) {
  $hashProvider$$ = $hashProvider$$ == null ? module$contents$ham_fisted$BitmapTrie_defaultProvider : $hashProvider$$;
  return module$contents$ham_fisted$BitmapTrie_BitmapTrie.newTrie($hashProvider$$);
}, module$contents$ham_fisted$BitmapTrie_makeHashTable = function($hashProvider$$, $capacity$$, $loadFactor$$) {
  return module$contents$ham_fisted$BitmapTrie_HashTable.newHashTable($hashProvider$$ != null ? $hashProvider$$ : module$contents$ham_fisted$BitmapTrie_defaultProvider, $loadFactor$$ != null ? $loadFactor$$ : 0.75, $capacity$$ != null ? $capacity$$ : 16);
}, module$contents$ham_fisted$BitmapTrie_identityGroupByRfn = function($initFn$$, $reducer$$) {
  const $rfn$$ = ($k$$, $v$$) => $reducer$$($v$$ == null ? $initFn$$() : $v$$, $k$$);
  return ($m$$, $v$$) => {
    $m$$.compute($v$$, $rfn$$);
    return $m$$;
  };
}, module$contents$ham_fisted$BitmapTrie_keyFnGroupByRfn = function($hp$$, $keyFn$$, $initFn$$, $reducer$$) {
  return ($m$$, $v$$) => {
    $m$$.compute($keyFn$$($v$$), ($k$$, $vv$$) => $reducer$$($vv$$ == null ? $initFn$$() : $vv$$, $v$$));
    return $m$$;
  };
}, module$contents$ham_fisted$BitmapTrie_groupByReduce = function($hp$jscomp$17_rv$$, $mapFn$$, $keyFn$jscomp$2_rf$$, $initFn$$, $invoker$jscomp$6_rfn$$, $finFn$$, $coll$$) {
  $invoker$jscomp$6_rfn$$ = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($invoker$jscomp$6_rfn$$);
  $keyFn$jscomp$2_rf$$ = $keyFn$jscomp$2_rf$$ == null ? module$contents$ham_fisted$BitmapTrie_identityGroupByRfn(module$contents$ham_fisted$BitmapTrie_noArgInvoker($initFn$$), $invoker$jscomp$6_rfn$$) : module$contents$ham_fisted$BitmapTrie_keyFnGroupByRfn($hp$jscomp$17_rv$$, module$contents$ham_fisted$BitmapTrie_oneArgInvoker($keyFn$jscomp$2_rf$$), module$contents$ham_fisted$BitmapTrie_noArgInvoker($initFn$$), $invoker$jscomp$6_rfn$$);
  $hp$jscomp$17_rv$$ = module$contents$ham_fisted$BitmapTrie_reduce($hp$jscomp$17_rv$$, $keyFn$jscomp$2_rf$$, $mapFn$$(), $coll$$);
  const $ff$$ = $finFn$$ == null ? null : module$contents$ham_fisted$BitmapTrie_oneArgInvoker($finFn$$);
  return $ff$$ == null ? $hp$jscomp$17_rv$$ : $hp$jscomp$17_rv$$.reduceLeaves(($acc$$, $n$$) => {
    $n$$.v = $ff$$($n$$.v);
    return $acc$$;
  }, $hp$jscomp$17_rv$$);
}, module$contents$ham_fisted$ChunkedVec_indexedAccum = function($rfn$$, $inN$$) {
  let $n$$ = ($inN$$ != null ? $inN$$ : 0) | 0;
  const $rf$$ = ham_fisted.BitmapTrie.threeArgInvoker($rfn$$);
  return ($acc$$, $v$$) => $rf$$($acc$$, $n$$++, $v$$);
}, module$contents$ham_fisted$ChunkedVec_safeStr = function($obj$$) {
  return $obj$$ == null ? "nil" : $obj$$;
}, module$contents$ham_fisted$ChunkedVec_addVal = function($lhs$$, $rhs$$) {
  return $lhs$$ + $rhs$$;
}, module$contents$ham_fisted$ChunkedVec_range = function($start$$, $end$$, $step$$, $hp$$) {
  return new module$contents$ham_fisted$ChunkedVec_Range($start$$, $end$$, $step$$, $hp$$);
}, module$contents$ham_fisted$ChunkedVec_makeChunkedVec = function($hp$$, $capacity$$) {
  return new module$contents$ham_fisted$ChunkedVec_ChunkedVector($hp$$, 0, 0, []);
}, cljs$cst$5534$offsets = new $APP.cljs.core.Keyword(null, "offsets", "offsets", 727555611), cljs$cst$5539$offset_dtype = new $APP.cljs.core.Keyword(null, "offset-dtype", "offset-dtype", 1692242330), cljs$cst$5550$column_count = new $APP.cljs.core.Symbol(null, "column-count", "column-count", -1419304533, null), cljs$cst$5573$ds_or_col = new $APP.cljs.core.Symbol(null, "ds-or-col", "ds-or-col", 510754932, null), cljs$cst$5648$tech_DOT_v3_DOT_dataset_SLASH_unique_by = new $APP.cljs.core.Symbol("tech.v3.dataset", 
"unique-by", "tech.v3.dataset/unique-by", 163925364, null), cljs$cst$5611$tech_DOT_v3_DOT_dataset_SLASH_filter_column = new $APP.cljs.core.Symbol("tech.v3.dataset", "filter-column", "tech.v3.dataset/filter-column", 1161145858, null), cljs$cst$5556$ds_data = new $APP.cljs.core.Symbol(null, "ds-data", "ds-data", 1356822164, null), cljs$cst$5568$replace_cmd = new $APP.cljs.core.Symbol(null, "replace-cmd", "replace-cmd", -1057358099, null), cljs$cst$5643$tech_DOT_v3_DOT_dataset_SLASH_rows = new $APP.cljs.core.Symbol("tech.v3.dataset", 
"rows", "tech.v3.dataset/rows", -28845962, null), cljs$cst$5462$scalar = new $APP.cljs.core.Keyword(null, "scalar", "scalar", 1611359571), cljs$cst$5551$__GT__GT_dataset = new $APP.cljs.core.Symbol(null, "-\x3e\x3edataset", "-\x3e\x3edataset", 1590905412, null), cljs$cst$5566$replace_missing = new $APP.cljs.core.Symbol(null, "replace-missing", "replace-missing", 48993351, null), cljs$cst$5458$persistent_map = new $APP.cljs.core.Keyword(null, "persistent-map", "persistent-map", 1676752549), cljs$cst$5518$print_index_range = 
new $APP.cljs.core.Keyword(null, "print-index-range", "print-index-range", 223751825), cljs$cst$5661$tech_DOT_v3_DOT_dataset_SLASH_dataset_parser = new $APP.cljs.core.Symbol("tech.v3.dataset", "dataset-parser", "tech.v3.dataset/dataset-parser", 1434842194, null), cljs$cst$5620$tech_DOT_v3_DOT_dataset_SLASH_dataset__GT_data = new $APP.cljs.core.Symbol("tech.v3.dataset", "dataset-\x3edata", "tech.v3.dataset/dataset-\x3edata", 449555936, null), cljs$cst$5659$tech_DOT_v3_DOT_dataset_SLASH_dataset_QMARK_ = 
new $APP.cljs.core.Symbol("tech.v3.dataset", "dataset?", "tech.v3.dataset/dataset?", -98376049, null), cljs$cst$5514$print_line_policy = new $APP.cljs.core.Keyword(null, "print-line-policy", "print-line-policy", 871207837), cljs$cst$5645$tech_DOT_v3_DOT_dataset_SLASH_transit_str__GT_dataset = new $APP.cljs.core.Symbol("tech.v3.dataset", "transit-str-\x3edataset", "tech.v3.dataset/transit-str-\x3edataset", 504225932, null), cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing = new $APP.cljs.core.Keyword("tech.v3.dataset", 
"missing", "tech.v3.dataset/missing", 193918432), cljs$cst$5545$column_names = new $APP.cljs.core.Symbol(null, "column-names", "column-names", -671861122, null), cljs$cst$5519$print_style = new $APP.cljs.core.Keyword(null, "print-style", "print-style", -2082244092), cljs$cst$5581$rowvecs = new $APP.cljs.core.Symbol(null, "rowvecs", "rowvecs", -747483837, null), cljs$cst$5466$nan_strategy = new $APP.cljs.core.Keyword(null, "nan-strategy", "nan-strategy", -384124749), cljs$cst$5629$tech_DOT_v3_DOT_dataset_SLASH_remove_columns = 
new $APP.cljs.core.Symbol("tech.v3.dataset", "remove-columns", "tech.v3.dataset/remove-columns", 973024580, null), cljs$cst$5548$dataset = new $APP.cljs.core.Symbol(null, "dataset", "dataset", -1495173531, null), cljs$cst$5525$rc_STAR_ = new $APP.cljs.core.Symbol(null, "rc*", "rc*", 786748856, null), cljs$cst$5526$rfn = new $APP.cljs.core.Symbol(null, "rfn", "rfn", 649648083, null), cljs$cst$5638$tech_DOT_v3_DOT_dataset_SLASH_data__GT_column = new $APP.cljs.core.Symbol("tech.v3.dataset", "data-\x3ecolumn", 
"tech.v3.dataset/data-\x3ecolumn", -1347776949, null), cljs$cst$5480$cast_fn = new $APP.cljs.core.Symbol(null, "cast-fn", "cast-fn", 125371584, null), cljs$cst$5490$increment = new $APP.cljs.core.Symbol(null, "increment", "increment", 81700043, null), cljs$cst$5508$colname__GT_col = new $APP.cljs.core.Symbol(null, "colname-\x3ecol", "colname-\x3ecol", -1274313906, null), cljs$cst$5460$int64 = new $APP.cljs.core.Keyword(null, "int64", "int64", 497156838), cljs$cst$5630$tech_DOT_v3_DOT_dataset_SLASH_remove_rows = 
new $APP.cljs.core.Symbol("tech.v3.dataset", "remove-rows", "tech.v3.dataset/remove-rows", 1698010345, null), cljs$cst$5495$row_count = new $APP.cljs.core.Keyword(null, "row-count", "row-count", 1060167988), cljs$cst$5477$elem_dtype = new $APP.cljs.core.Symbol(null, "elem-dtype", "elem-dtype", -347711507, null), cljs$cst$5642$tech_DOT_v3_DOT_dataset_SLASH_row_map = new $APP.cljs.core.Symbol("tech.v3.dataset", "row-map", "tech.v3.dataset/row-map", -557340923, null), cljs$cst$5530$missing_fn = new $APP.cljs.core.Keyword(null, 
"missing-fn", "missing-fn", -1107231587), cljs$cst$5619$tech_DOT_v3_DOT_dataset_SLASH_tail = new $APP.cljs.core.Symbol("tech.v3.dataset", "tail", "tech.v3.dataset/tail", 856427546, null), cljs$cst$5478$agetable_QMARK_ = new $APP.cljs.core.Symbol(null, "agetable?", "agetable?", -266352540, null), cljs$cst$5660$tech_DOT_v3_DOT_dataset_SLASH_dataset__GT_transit_str = new $APP.cljs.core.Symbol("tech.v3.dataset", "dataset-\x3etransit-str", "tech.v3.dataset/dataset-\x3etransit-str", -958612825, null), 
cljs$cst$5623$tech_DOT_v3_DOT_dataset_SLASH_reverse_rows = new $APP.cljs.core.Symbol("tech.v3.dataset", "reverse-rows", "tech.v3.dataset/reverse-rows", 1433785909, null), cljs$cst$5506$col_idx = new $APP.cljs.core.Symbol(null, "col-idx", "col-idx", -1868602827, null), cljs$cst$5628$tech_DOT_v3_DOT_dataset_SLASH_replace_missing = new $APP.cljs.core.Symbol("tech.v3.dataset", "replace-missing", "tech.v3.dataset/replace-missing", 345247208, null), cljs$cst$5608$tech_DOT_v3_DOT_dataset_SLASH_mapseq_parser = 
new $APP.cljs.core.Symbol("tech.v3.dataset", "mapseq-parser", "tech.v3.dataset/mapseq-parser", -1294887824, null), cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data = new $APP.cljs.core.Keyword("tech.v3.dataset", "data", "tech.v3.dataset/data", 389957346), cljs$cst$5523$dataset_name = new $APP.cljs.core.Keyword(null, "dataset-name", "dataset-name", 1000135725), cljs$cst$5599$__GT_t_tech$v3$dataset77308 = new $APP.cljs.core.Symbol(null, "-\x3et_tech$v3$dataset77308", "-\x3et_tech$v3$dataset77308", 
-882300557, null), cljs$cst$5481$ptr = new $APP.cljs.core.Symbol(null, "ptr", "ptr", 1213150338, null), cljs$cst$5484$map_fn = new $APP.cljs.core.Symbol(null, "map-fn", "map-fn", -1470323083, null), cljs$cst$5607$tech_DOT_v3_DOT_dataset_SLASH_sort_by = new $APP.cljs.core.Symbol("tech.v3.dataset", "sort-by", "tech.v3.dataset/sort-by", 1487111265, null), cljs$cst$5516$print_column_max_width = new $APP.cljs.core.Keyword(null, "print-column-max-width", "print-column-max-width", -440021906), cljs$cst$5543$mapseq_parser = 
new $APP.cljs.core.Symbol(null, "mapseq-parser", "mapseq-parser", 1279073491, null), cljs$cst$5615$tech_DOT_v3_DOT_dataset_SLASH_select = new $APP.cljs.core.Symbol("tech.v3.dataset", "select", "tech.v3.dataset/select", -1279223035, null), cljs$cst$5463$iterable = new $APP.cljs.core.Keyword(null, "iterable", "iterable", 463230178), cljs$cst$5483$idx__GT_val = new $APP.cljs.core.Symbol(null, "idx-\x3eval", "idx-\x3eval", 1905273391, null), cljs$cst$5652$tech_DOT_v3_DOT_dataset_SLASH_update = new $APP.cljs.core.Symbol("tech.v3.dataset", 
"update", "tech.v3.dataset/update", -1946847566, null), cljs$cst$5655$tech_DOT_v3_DOT_dataset_SLASH_row_at = new $APP.cljs.core.Symbol("tech.v3.dataset", "row-at", "tech.v3.dataset/row-at", -2004298156, null), cljs$cst$5515$repl = new $APP.cljs.core.Keyword(null, "repl", "repl", -35398667), cljs$cst$5473$n_elems = new $APP.cljs.core.Symbol(null, "n-elems", "n-elems", -1040644111, null), cljs$cst$5564$select_rows = new $APP.cljs.core.Symbol(null, "select-rows", "select-rows", 1987961128, null), cljs$cst$5587$column_map = 
new $APP.cljs.core.Symbol(null, "column-map", "column-map", -96467836, null), cljs$cst$5547$filter_dataset = new $APP.cljs.core.Symbol(null, "filter-dataset", "filter-dataset", -1643087836, null), cljs$cst$5582$row_map = new $APP.cljs.core.Symbol(null, "row-map", "row-map", -990159708, null), cljs$cst$5487$comparator = new $APP.cljs.core.Keyword(null, "comparator", "comparator", 2144896662), cljs$cst$5621$tech_DOT_v3_DOT_dataset_SLASH_transit_read_handler_map = new $APP.cljs.core.Symbol("tech.v3.dataset", 
"transit-read-handler-map", "tech.v3.dataset/transit-read-handler-map", 1069494934, null), cljs$cst$5594$sort_op = new $APP.cljs.core.Symbol(null, "sort-op", "sort-op", -1907581356, null), cljs$cst$5512$tech_DOT_v3_DOT_dataset_SLASH_force_datatype_QMARK_ = new $APP.cljs.core.Keyword("tech.v3.dataset", "force-datatype?", "tech.v3.dataset/force-datatype?", 471581021), cljs$cst$5532$indexes = new $APP.cljs.core.Keyword(null, "indexes", "indexes", 1496475545), cljs$cst$5654$tech_DOT_v3_DOT_dataset_SLASH_union_missing_sets = 
new $APP.cljs.core.Symbol("tech.v3.dataset", "union-missing-sets", "tech.v3.dataset/union-missing-sets", 359094873, null), cljs$cst$5486$meta76949 = new $APP.cljs.core.Symbol(null, "meta76949", "meta76949", 628198736, null), cljs$cst$5649$tech_DOT_v3_DOT_dataset_SLASH_column = new $APP.cljs.core.Symbol("tech.v3.dataset", "column", "tech.v3.dataset/column", -1477174535, null), cljs$cst$5632$tech_DOT_v3_DOT_dataset_SLASH_cols = new $APP.cljs.core.Symbol("tech.v3.dataset", "cols", "tech.v3.dataset/cols", 
-711827367, null), cljs$cst$5472$tech_DOT_v3_DOT_datatype_DOT_arrays_SLASH_exception = new $APP.cljs.core.Keyword("tech.v3.datatype.arrays", "exception", "tech.v3.datatype.arrays/exception", 1643958105), cljs$cst$5658$tech_DOT_v3_DOT_dataset_SLASH_unique_by_column = new $APP.cljs.core.Symbol("tech.v3.dataset", "unique-by-column", "tech.v3.dataset/unique-by-column", -1043878420, null), cljs$cst$5639$tech_DOT_v3_DOT_dataset_SLASH_select_missing = new $APP.cljs.core.Symbol("tech.v3.dataset", "select-missing", 
"tech.v3.dataset/select-missing", -792046336, null), cljs$cst$5641$tech_DOT_v3_DOT_dataset_SLASH_rowvecs = new $APP.cljs.core.Symbol("tech.v3.dataset", "rowvecs", "tech.v3.dataset/rowvecs", -1534602526, null), cljs$cst$5540$scittle_DOT_tmdjs_SLASH_tmdjs = new $APP.cljs.core.Keyword("scittle.tmdjs", "tmdjs", "scittle.tmdjs/tmdjs", -2074084925), cljs$cst$5637$tech_DOT_v3_DOT_dataset_SLASH_missing = new $APP.cljs.core.Symbol("tech.v3.dataset", "missing", "tech.v3.dataset/missing", 1834449959, null), 
cljs$cst$5584$transit_str__GT_dataset = new $APP.cljs.core.Symbol(null, "transit-str-\x3edataset", "transit-str-\x3edataset", 1954441519, null), cljs$cst$5537$transit = new $APP.cljs.core.Keyword(null, "transit", "transit", 359458387), cljs$cst$5465$skip_finalize_QMARK_ = new $APP.cljs.core.Keyword(null, "skip-finalize?", "skip-finalize?", -1600548622), cljs$cst$5509$tech_DOT_v3_DOT_dataset_SLASH_name = new $APP.cljs.core.Keyword("tech.v3.dataset", "name", "tech.v3.dataset/name", -808462198), cljs$cst$5616$tech_DOT_v3_DOT_dataset_SLASH_columns_as_map = 
new $APP.cljs.core.Symbol("tech.v3.dataset", "columns-as-map", "tech.v3.dataset/columns-as-map", -1305378727, null), cljs$cst$5646$tech_DOT_v3_DOT_dataset_SLASH_column_map = new $APP.cljs.core.Symbol("tech.v3.dataset", "column-map", "tech.v3.dataset/column-map", 211074087, null), cljs$cst$5500$colname = new $APP.cljs.core.Symbol(null, "colname", "colname", 1632784550, null), cljs$cst$5572$row_count = new $APP.cljs.core.Symbol(null, "row-count", "row-count", -1594267781, null), cljs$cst$5574$soft_select_columns = 
new $APP.cljs.core.Symbol(null, "soft-select-columns", "soft-select-columns", -464712260, null), cljs$cst$5471$simple_print_QMARK_ = new $APP.cljs.core.Keyword(null, "simple-print?", "simple-print?", -1403941392), cljs$cst$5622$tech_DOT_v3_DOT_dataset_SLASH___GT_dataset = new $APP.cljs.core.Symbol("tech.v3.dataset", "-\x3edataset", "tech.v3.dataset/-\x3edataset", -802075082, null), cljs$cst$5600$tech_DOT_v3_DOT_dataset_DOT_protocols_SLASH_PDatasetParser = new $APP.cljs.core.Symbol("tech.v3.dataset.protocols", 
"PDatasetParser", "tech.v3.dataset.protocols/PDatasetParser", 37708985, null), cljs$cst$5563$lhs = new $APP.cljs.core.Symbol(null, "lhs", "lhs", -1482353675, null), cljs$cst$5644$tech_DOT_v3_DOT_dataset_SLASH_group_by_column = new $APP.cljs.core.Symbol("tech.v3.dataset", "group-by-column", "tech.v3.dataset/group-by-column", 2095063756, null), cljs$cst$5575$remove_missing = new $APP.cljs.core.Symbol(null, "remove-missing", "remove-missing", -2060714684, null), cljs$cst$5461$uint64 = new $APP.cljs.core.Keyword(null, 
"uint64", "uint64", 1990397352), cljs$cst$5558$dataset__GT_data = new $APP.cljs.core.Symbol(null, "dataset-\x3edata", "dataset-\x3edata", 548939199, null), cljs$cst$5501$missing_val = new $APP.cljs.core.Symbol(null, "missing-val", "missing-val", 1630615715, null), cljs$cst$5590$rename_columns = new $APP.cljs.core.Symbol(null, "rename-columns", "rename-columns", 802617760, null), cljs$cst$5522$parser_fn = new $APP.cljs.core.Keyword(null, "parser-fn", "parser-fn", 1421747460), cljs$cst$5527$parsers = 
new $APP.cljs.core.Symbol(null, "parsers", "parsers", 836177700, null), cljs$cst$5496$datatype = new $APP.cljs.core.Keyword(null, "datatype", "datatype", 147866920), cljs$cst$5651$tech_DOT_v3_DOT_dataset_SLASH_rowvec_at = new $APP.cljs.core.Symbol("tech.v3.dataset", "rowvec-at", "tech.v3.dataset/rowvec-at", 1137358116, null), cljs$cst$5504$col_ary = new $APP.cljs.core.Symbol(null, "col-ary", "col-ary", 335790893, null), cljs$cst$5569$remove_columns = new $APP.cljs.core.Symbol(null, "remove-columns", 
"remove-columns", 332113379, null), cljs$cst$5560$__GT_dataset = new $APP.cljs.core.Symbol(null, "-\x3edataset", "-\x3edataset", -972769583, null), cljs$cst$5653$tech_DOT_v3_DOT_dataset_SLASH_filter = new $APP.cljs.core.Symbol("tech.v3.dataset", "filter", "tech.v3.dataset/filter", 854291352, null), cljs$cst$5489$last_val = new $APP.cljs.core.Symbol(null, "last-val", "last-val", -1727586789, null), cljs$cst$5517$print_column_types_QMARK_ = new $APP.cljs.core.Keyword(null, "print-column-types?", "print-column-types?", 
998522432), cljs$cst$5456$boolean = new $APP.cljs.core.Keyword(null, "boolean", "boolean", -1919418404), cljs$cst$5503$container_dtype = new $APP.cljs.core.Symbol(null, "container-dtype", "container-dtype", -442709079, null), cljs$cst$5474$typed_array = new $APP.cljs.core.Keyword(null, "typed-array", "typed-array", -1603970680), cljs$cst$5613$tech_DOT_v3_DOT_dataset_SLASH_column_count = new $APP.cljs.core.Symbol("tech.v3.dataset", "column-count", "tech.v3.dataset/column-count", -1061987894, null), 
cljs$cst$5510$_unnamed = new $APP.cljs.core.Keyword(null, "_unnamed", "_unnamed", 1044468836), cljs$cst$5485$ret_dtype = new $APP.cljs.core.Symbol(null, "ret-dtype", "ret-dtype", -564522736, null), cljs$cst$5583$group_by_column = new $APP.cljs.core.Symbol(null, "group-by-column", "group-by-column", -1860389521, null), cljs$cst$5491$local_date = new $APP.cljs.core.Keyword(null, "local-date", "local-date", 1829761428), cljs$cst$5656$tech_DOT_v3_DOT_dataset_SLASH___GT_t_tech$v3$dataset77308 = new $APP.cljs.core.Symbol("tech.v3.dataset", 
"-\x3et_tech$v3$dataset77308", "tech.v3.dataset/-\x3et_tech$v3$dataset77308", -509701676, null), cljs$cst$5580$col_seq = new $APP.cljs.core.Symbol(null, "col-seq", "col-seq", -1559353660, null), cljs$cst$5507$row_idx = new $APP.cljs.core.Symbol(null, "row-idx", "row-idx", -1352304896, null), cljs$cst$5634$tech_DOT_v3_DOT_dataset_SLASH_soft_select_columns = new $APP.cljs.core.Symbol("tech.v3.dataset", "soft-select-columns", "tech.v3.dataset/soft-select-columns", -1905224227, null), cljs$cst$5625$tech_DOT_v3_DOT_dataset_SLASH_merge_by_column = 
new $APP.cljs.core.Symbol("tech.v3.dataset", "merge-by-column", "tech.v3.dataset/merge-by-column", 696163104, null), cljs$cst$5567$colnames = new $APP.cljs.core.Symbol(null, "colnames", "colnames", -769801059, null), cljs$cst$5468$n_elems = new $APP.cljs.core.Keyword(null, "n-elems", "n-elems", 1613791658), cljs$cst$5626$tech_DOT_v3_DOT_dataset_SLASH_group_by = new $APP.cljs.core.Symbol("tech.v3.dataset", "group-by", "tech.v3.dataset/group-by", 1702676428, null), cljs$cst$5579$intersect_missing_sets = 
new $APP.cljs.core.Symbol(null, "intersect-missing-sets", "intersect-missing-sets", 1627342855, null), cljs$cst$5561$reverse_rows = new $APP.cljs.core.Symbol(null, "reverse-rows", "reverse-rows", 2023775828, null), cljs$cst$5595$rowvec_at = new $APP.cljs.core.Symbol(null, "rowvec-at", "rowvec-at", 1427516869, null), cljs$cst$5470$ss = new $APP.cljs.core.Symbol(null, "ss", "ss", 177481949, null), cljs$cst$5618$tech_DOT_v3_DOT_dataset_SLASH_mapseq_parser_rf = new $APP.cljs.core.Symbol("tech.v3.dataset", 
"mapseq-parser-rf", "tech.v3.dataset/mapseq-parser-rf", -1063588518, null), cljs$cst$5528$row_fn = new $APP.cljs.core.Symbol(null, "row-fn", "row-fn", 2142575945, null), cljs$cst$5588$result_colname = new $APP.cljs.core.Symbol(null, "result-colname", "result-colname", -2108541482, null), cljs$cst$5598$row_at = new $APP.cljs.core.Symbol(null, "row-at", "row-at", -1235440075, null), cljs$cst$5576$transit_write_handler_map = new $APP.cljs.core.Symbol(null, "transit-write-handler-map", "transit-write-handler-map", 
-182487643, null), cljs$cst$5464$map_fn = new $APP.cljs.core.Keyword(null, "map-fn", "map-fn", 1184112686), cljs$cst$5604$dataset__GT_transit_str = new $APP.cljs.core.Symbol(null, "dataset-\x3etransit-str", "dataset-\x3etransit-str", 855716614, null), cljs$cst$5482$buflen = new $APP.cljs.core.Symbol(null, "buflen", "buflen", -681290273, null), cljs$cst$5657$tech_DOT_v3_DOT_dataset_SLASH_select_columns = new $APP.cljs.core.Symbol("tech.v3.dataset", "select-columns", "tech.v3.dataset/select-columns", 
1313757799, null), cljs$cst$5467$remove = new $APP.cljs.core.Keyword(null, "remove", "remove", -131428414), cljs$cst$5542$ds = new $APP.cljs.core.Symbol(null, "ds", "ds", 1383115668, null), cljs$cst$5636$tech_DOT_v3_DOT_dataset_SLASH_transit_write_handler_map = new $APP.cljs.core.Symbol("tech.v3.dataset", "transit-write-handler-map", "tech.v3.dataset/transit-write-handler-map", -483210748, null), cljs$cst$5469$sum = new $APP.cljs.core.Keyword(null, "sum", "sum", 136986814), cljs$cst$5603$dataset_QMARK_ = 
new $APP.cljs.core.Symbol(null, "dataset?", "dataset?", -503873810, null), cljs$cst$5488$tech_DOT_v3_DOT_datatype_DOT_argops_SLASH_processed = new $APP.cljs.core.Keyword("tech.v3.datatype.argops", "processed", "tech.v3.datatype.argops/processed", 237988709), cljs$cst$5497$missing = new $APP.cljs.core.Symbol(null, "missing", "missing", 2003039296, null), cljs$cst$5606$tech_DOT_v3_DOT_dataset_SLASH_columns = new $APP.cljs.core.Symbol("tech.v3.dataset", "columns", "tech.v3.dataset/columns", -224732786, 
null), cljs$cst$5577$data__GT_column = new $APP.cljs.core.Symbol(null, "data-\x3ecolumn", "data-\x3ecolumn", 1173686248, null), cljs$cst$5562$merge_by_column = new $APP.cljs.core.Symbol(null, "merge-by-column", "merge-by-column", -1019079807, null), cljs$cst$5593$sort_by_column = new $APP.cljs.core.Symbol(null, "sort-by-column", "sort-by-column", -216639775, null), cljs$cst$5610$tech_DOT_v3_DOT_dataset_SLASH_column_names = new $APP.cljs.core.Symbol("tech.v3.dataset", "column-names", "tech.v3.dataset/column-names", 
-909652259, null), cljs$cst$5640$tech_DOT_v3_DOT_dataset_SLASH_intersect_missing_sets = new $APP.cljs.core.Symbol("tech.v3.dataset", "intersect-missing-sets", "tech.v3.dataset/intersect-missing-sets", 1322500198, null), cljs$cst$5541$tech_DOT_v3_DOT_dataset = new $APP.cljs.core.Symbol(null, "tech.v3.dataset", "tech.v3.dataset", -355150442, null), cljs$cst$5521$key_fn = new $APP.cljs.core.Keyword(null, "key-fn", "key-fn", -636154479), cljs$cst$5647$tech_DOT_v3_DOT_dataset_SLASH_rename_columns = new $APP.cljs.core.Symbol("tech.v3.dataset", 
"rename-columns", "tech.v3.dataset/rename-columns", 1361732033, null), cljs$cst$5494$str_table = new $APP.cljs.core.Symbol(null, "str-table", "str-table", 1038909010, null), cljs$cst$5578$select_missing = new $APP.cljs.core.Symbol(null, "select-missing", "select-missing", -84484895, null), cljs$cst$5513$tech_DOT_v3_DOT_dataset_SLASH_metadata = new $APP.cljs.core.Keyword("tech.v3.dataset", "metadata", "tech.v3.dataset/metadata", 1865065086), cljs$cst$5633$tech_DOT_v3_DOT_dataset_SLASH_row_count = 
new $APP.cljs.core.Symbol("tech.v3.dataset", "row-count", "tech.v3.dataset/row-count", -701829158, null), cljs$cst$5650$tech_DOT_v3_DOT_dataset_SLASH_sort_by_column = new $APP.cljs.core.Symbol("tech.v3.dataset", "sort-by-column", "tech.v3.dataset/sort-by-column", -579084730, null), cljs$cst$5459$persistent_vector = new $APP.cljs.core.Keyword(null, "persistent-vector", "persistent-vector", 2032618025), cljs$cst$5457$js_date = new $APP.cljs.core.Keyword(null, "js-date", "js-date", -66554654), cljs$cst$5624$tech_DOT_v3_DOT_dataset_SLASH_concat = 
new $APP.cljs.core.Symbol("tech.v3.dataset", "concat", "tech.v3.dataset/concat", -95172562, null), cljs$cst$5591$rename_map = new $APP.cljs.core.Symbol(null, "rename-map", "rename-map", 693962105, null), cljs$cst$5601$select_columns = new $APP.cljs.core.Symbol(null, "select-columns", "select-columns", -1550724736, null), cljs$cst$5557$mapseq_parser_rf = new $APP.cljs.core.Symbol(null, "mapseq-parser-rf", "mapseq-parser-rf", -582589253, null), cljs$cst$5529$meta77309 = new $APP.cljs.core.Symbol(null, 
"meta77309", "meta77309", -1185695987, null), cljs$cst$5617$tech_DOT_v3_DOT_dataset_SLASH_data__GT_dataset = new $APP.cljs.core.Symbol("tech.v3.dataset", "data-\x3edataset", "tech.v3.dataset/data-\x3edataset", 32685154, null), cljs$cst$5602$unique_by_column = new $APP.cljs.core.Symbol(null, "unique-by-column", "unique-by-column", 723199247, null), cljs$cst$5597$union_missing_sets = new $APP.cljs.core.Symbol(null, "union-missing-sets", "union-missing-sets", 2131403704, null), cljs$cst$5631$tech_DOT_v3_DOT_dataset_SLASH_head = 
new $APP.cljs.core.Symbol("tech.v3.dataset", "head", "tech.v3.dataset/head", 639806335, null), cljs$cst$5533$offset_datatype = new $APP.cljs.core.Keyword(null, "offset-datatype", "offset-datatype", 294934800), cljs$cst$5505$n_cols = new $APP.cljs.core.Symbol(null, "n-cols", "n-cols", -1426472520, null), cljs$cst$5476$metadata = new $APP.cljs.core.Symbol(null, "metadata", "metadata", -855134172, null), cljs$cst$5609$tech_DOT_v3_DOT_dataset_SLASH_column__GT_data = new $APP.cljs.core.Symbol("tech.v3.dataset", 
"column-\x3edata", "tech.v3.dataset/column-\x3edata", 414058872, null), cljs$cst$5555$data__GT_dataset = new $APP.cljs.core.Symbol(null, "data-\x3edataset", "data-\x3edataset", 2065773629, null), cljs$cst$5549$filter_fn_or_ds = new $APP.cljs.core.Symbol(null, "filter-fn-or-ds", "filter-fn-or-ds", -1594809939, null), cljs$cst$5520$first_last = new $APP.cljs.core.Keyword(null, "first-last", "first-last", -444842082), cljs$cst$5592$unique_by = new $APP.cljs.core.Symbol(null, "unique-by", "unique-by", 
330757591, null), cljs$cst$5586$handlers = new $APP.cljs.core.Symbol(null, "handlers", "handlers", 1720060308, null), cljs$cst$5531$strtable = new $APP.cljs.core.Keyword(null, "strtable", "strtable", -1990653330), cljs$cst$5596$lhs_ds = new $APP.cljs.core.Symbol(null, "lhs-ds", "lhs-ds", -446496880, null), cljs$cst$5559$transit_read_handler_map = new $APP.cljs.core.Symbol(null, "transit-read-handler-map", "transit-read-handler-map", 367180337, null), cljs$cst$5535$metadata = new $APP.cljs.core.Keyword(null, 
"metadata", "metadata", 1799301597), cljs$cst$5455$uuid = new $APP.cljs.core.Keyword(null, "uuid", "uuid", -2145095719), cljs$cst$5565$rowidxs = new $APP.cljs.core.Symbol(null, "rowidxs", "rowidxs", -1258335563, null), cljs$cst$5538$columns = new $APP.cljs.core.Keyword(null, "columns", "columns", 1998437288), cljs$cst$5612$tech_DOT_v3_DOT_dataset_SLASH_filter_dataset = new $APP.cljs.core.Symbol("tech.v3.dataset", "filter-dataset", "tech.v3.dataset/filter-dataset", 1682239559, null), cljs$cst$5585$json_data = 
new $APP.cljs.core.Symbol(null, "json-data", "json-data", -1275952846, null), cljs$cst$5589$res_dtype_or_opts = new $APP.cljs.core.Symbol(null, "res-dtype-or-opts", "res-dtype-or-opts", -1692697567, null), cljs$cst$5554$columns_as_map = new $APP.cljs.core.Symbol(null, "columns-as-map", "columns-as-map", -926672842, null), cljs$cst$5635$tech_DOT_v3_DOT_dataset_SLASH_remove_missing = new $APP.cljs.core.Symbol("tech.v3.dataset", "remove-missing", "tech.v3.dataset/remove-missing", -1191810329, null), 
cljs$cst$5570$remove_rows = new $APP.cljs.core.Symbol(null, "remove-rows", "remove-rows", 1338645830, null), cljs$cst$5502$meta77119 = new $APP.cljs.core.Symbol(null, "meta77119", "meta77119", -1535512611, null), cljs$cst$5605$dataset_parser = new $APP.cljs.core.Symbol(null, "dataset-parser", "dataset-parser", 2146860269, null), cljs$cst$5627$tech_DOT_v3_DOT_dataset_SLASH_select_rows = new $APP.cljs.core.Symbol("tech.v3.dataset", "select-rows", "tech.v3.dataset/select-rows", 470686031, null), cljs$cst$5498$numeric_QMARK_ = 
new $APP.cljs.core.Symbol(null, "numeric?", "numeric?", 1184497157, null), cljs$cst$5536$flavor = new $APP.cljs.core.Keyword(null, "flavor", "flavor", -1331636636), cljs$cst$5479$dtype = new $APP.cljs.core.Symbol(null, "dtype", "dtype", 1116861291, null), cljs$cst$5614$tech_DOT_v3_DOT_dataset_SLASH___GT__GT_dataset = new $APP.cljs.core.Symbol("tech.v3.dataset", "-\x3e\x3edataset", "tech.v3.dataset/-\x3e\x3edataset", 1156054437, null), cljs$cst$5546$filter_column = new $APP.cljs.core.Symbol(null, 
"filter-column", "filter-column", 723072989, null), cljs$cst$5544$column__GT_data = new $APP.cljs.core.Symbol(null, "column-\x3edata", "column-\x3edata", 846299607, null);
var tech = {v3:{}};
tech.v3.datatype = {};
tech.v3.datatype.protocols = {};
tech.v3.datatype.protocols.PDatatype = function() {
};
var tech$v3$datatype$protocols$PDatatype$_datatype$dyn_76373 = function($item$$) {
  var $m__5372__auto__$jscomp$794_m__5374__auto__$$ = tech.v3.datatype.protocols._datatype[$APP.goog.typeOf($item$$ == null ? null : $item$$)];
  if ($m__5372__auto__$jscomp$794_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$794_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$794_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($item$$) : $m__5372__auto__$jscomp$794_m__5374__auto__$$.call(null, $item$$);
  }
  $m__5372__auto__$jscomp$794_m__5374__auto__$$ = tech.v3.datatype.protocols._datatype._;
  if ($m__5372__auto__$jscomp$794_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$794_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$794_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($item$$) : $m__5372__auto__$jscomp$794_m__5374__auto__$$.call(null, $item$$);
  }
  throw $APP.cljs.core.missing_protocol("PDatatype.-datatype", $item$$);
};
tech.v3.datatype.protocols._datatype = function($item$$) {
  return $item$$ != null && $item$$.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 != null ? $item$$.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1($item$$) : tech$v3$datatype$protocols$PDatatype$_datatype$dyn_76373($item$$);
};
$APP.cljs.core.UUID.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.UUID.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($item$$) {
  return cljs$cst$5455$uuid;
};
tech.v3.datatype.protocols.PDatatype["boolean"] = !0;
tech.v3.datatype.protocols._datatype["boolean"] = function($item$$) {
  return cljs$cst$5456$boolean;
};
tech.v3.datatype.protocols.PDatatype.object = !0;
tech.v3.datatype.protocols._datatype.object = function($item$$) {
  return $APP.cljs$cst$2189$object;
};
Date.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
Date.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($item$$) {
  return cljs$cst$5457$js_date;
};
tech.v3.datatype.protocols.PDatatype.number = !0;
tech.v3.datatype.protocols._datatype.number = function($item$$) {
  return $APP.cljs$cst$3329$float64;
};
$APP.cljs.core.PersistentHashMap.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.PersistentHashMap.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($item$$) {
  return cljs$cst$5458$persistent_map;
};
$APP.cljs.core.PersistentVector.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.PersistentVector.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($item$$) {
  return cljs$cst$5459$persistent_vector;
};
tech.v3.datatype.protocols.PDatatype.string = !0;
tech.v3.datatype.protocols._datatype.string = function($item$$) {
  return $APP.cljs$cst$198$string;
};
$APP.cljs.core.Keyword.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.Keyword.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($item$$) {
  return $APP.cljs$cst$221$keyword;
};
$APP.cljs.core.PersistentArrayMap.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.PersistentArrayMap.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($item$$) {
  return cljs$cst$5458$persistent_map;
};
tech.v3.datatype.protocols.PElemwiseDatatype = function() {
};
var tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$dyn_76374 = function($item$$) {
  var $m__5372__auto__$jscomp$795_m__5374__auto__$$ = tech.v3.datatype.protocols._elemwise_datatype[$APP.goog.typeOf($item$$ == null ? null : $item$$)];
  if ($m__5372__auto__$jscomp$795_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$795_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$795_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($item$$) : $m__5372__auto__$jscomp$795_m__5374__auto__$$.call(null, $item$$);
  }
  $m__5372__auto__$jscomp$795_m__5374__auto__$$ = tech.v3.datatype.protocols._elemwise_datatype._;
  if ($m__5372__auto__$jscomp$795_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$795_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$795_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($item$$) : $m__5372__auto__$jscomp$795_m__5374__auto__$$.call(null, $item$$);
  }
  throw $APP.cljs.core.missing_protocol("PElemwiseDatatype.-elemwise-datatype", $item$$);
};
tech.v3.datatype.protocols._elemwise_datatype = function($item$$) {
  return $item$$ != null && $item$$.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 != null ? $item$$.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1($item$$) : tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$dyn_76374($item$$);
};
tech.v3.datatype.protocols.PElemwiseDatatype.object = !0;
tech.v3.datatype.protocols._elemwise_datatype.object = function($item$$) {
  return $APP.cljs$cst$2189$object;
};
tech.v3.datatype.protocols.PElemwiseDatatype.string = !0;
tech.v3.datatype.protocols._elemwise_datatype.string = function($item$$) {
  return tech.v3.datatype.protocols._datatype($item$$);
};
tech.v3.datatype.protocols.PElemwiseDatatype["boolean"] = !0;
tech.v3.datatype.protocols._elemwise_datatype["boolean"] = function($item$$) {
  return tech.v3.datatype.protocols._datatype($item$$);
};
tech.v3.datatype.protocols.PElemwiseDatatype.number = !0;
tech.v3.datatype.protocols._elemwise_datatype.number = function($item$$) {
  return tech.v3.datatype.protocols._datatype($item$$);
};
tech.v3.datatype.protocols.PShape = function() {
};
var tech$v3$datatype$protocols$PShape$_shape$dyn_76375 = function($item$$) {
  var $m__5372__auto__$jscomp$796_m__5374__auto__$$ = tech.v3.datatype.protocols._shape[$APP.goog.typeOf($item$$ == null ? null : $item$$)];
  if ($m__5372__auto__$jscomp$796_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$796_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$796_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($item$$) : $m__5372__auto__$jscomp$796_m__5374__auto__$$.call(null, $item$$);
  }
  $m__5372__auto__$jscomp$796_m__5374__auto__$$ = tech.v3.datatype.protocols._shape._;
  if ($m__5372__auto__$jscomp$796_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$796_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$796_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($item$$) : $m__5372__auto__$jscomp$796_m__5374__auto__$$.call(null, $item$$);
  }
  throw $APP.cljs.core.missing_protocol("PShape.-shape", $item$$);
};
tech.v3.datatype.protocols._shape = function($item$$) {
  return $item$$ != null && $item$$.tech$v3$datatype$protocols$PShape$_shape$arity$1 != null ? $item$$.tech$v3$datatype$protocols$PShape$_shape$arity$1($item$$) : tech$v3$datatype$protocols$PShape$_shape$dyn_76375($item$$);
};
tech.v3.datatype.protocols.PElemwiseDatatype.array = !0;
tech.v3.datatype.protocols._elemwise_datatype.array = function($item$$) {
  return $APP.cljs$cst$2189$object;
};
tech.v3.datatype.protocols.PDatatype.array = !0;
tech.v3.datatype.protocols._datatype.array = function($item$$) {
  return $APP.cljs$cst$3338$array;
};
tech.v3.datatype.protocols.PDatatype.array = !0;
tech.v3.datatype.protocols._datatype.array = function($item$$) {
  return $APP.cljs$cst$2189$object;
};
tech.v3.datatype.protocols.PSubBufferCopy = function() {
};
var tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$dyn_76378 = function($item$$, $offset$$, $length$$) {
  var $m__5372__auto__$jscomp$797_m__5374__auto__$$ = tech.v3.datatype.protocols._sub_buffer_copy[$APP.goog.typeOf($item$$ == null ? null : $item$$)];
  if ($m__5372__auto__$jscomp$797_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$797_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$797_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($item$$, $offset$$, $length$$) : $m__5372__auto__$jscomp$797_m__5374__auto__$$.call(null, $item$$, $offset$$, $length$$);
  }
  $m__5372__auto__$jscomp$797_m__5374__auto__$$ = tech.v3.datatype.protocols._sub_buffer_copy._;
  if ($m__5372__auto__$jscomp$797_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$797_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$797_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($item$$, $offset$$, $length$$) : $m__5372__auto__$jscomp$797_m__5374__auto__$$.call(null, $item$$, $offset$$, $length$$);
  }
  throw $APP.cljs.core.missing_protocol("PSubBufferCopy.-sub-buffer-copy", $item$$);
};
tech.v3.datatype.protocols._sub_buffer_copy = function($item$$, $offset$$, $length$$) {
  return $item$$ != null && $item$$.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3 != null ? $item$$.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3($item$$, $offset$$, $length$$) : tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$dyn_76378($item$$, $offset$$, $length$$);
};
tech.v3.datatype.protocols.PSubBuffer = function() {
};
var tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$dyn_76379 = function($item$$, $offset$$, $length$$) {
  var $m__5372__auto__$jscomp$798_m__5374__auto__$$ = tech.v3.datatype.protocols._sub_buffer[$APP.goog.typeOf($item$$ == null ? null : $item$$)];
  if ($m__5372__auto__$jscomp$798_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$798_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$798_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($item$$, $offset$$, $length$$) : $m__5372__auto__$jscomp$798_m__5374__auto__$$.call(null, $item$$, $offset$$, $length$$);
  }
  $m__5372__auto__$jscomp$798_m__5374__auto__$$ = tech.v3.datatype.protocols._sub_buffer._;
  if ($m__5372__auto__$jscomp$798_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$798_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$798_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($item$$, $offset$$, $length$$) : $m__5372__auto__$jscomp$798_m__5374__auto__$$.call(null, $item$$, $offset$$, $length$$);
  }
  throw $APP.cljs.core.missing_protocol("PSubBuffer.-sub-buffer", $item$$);
};
tech.v3.datatype.protocols._sub_buffer = function($item$$, $offset$$, $length$$) {
  return $item$$ != null && $item$$.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 != null ? $item$$.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3($item$$, $offset$$, $length$$) : tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$dyn_76379($item$$, $offset$$, $length$$);
};
tech.v3.datatype.protocols.PToTypedArray = function() {
};
var tech$v3$datatype$protocols$PToTypedArray$_convertible_to_typed_array_QMARK_$dyn_76380 = function($buf$$) {
  var $m__5372__auto__$jscomp$799_m__5374__auto__$$ = tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_[$APP.goog.typeOf($buf$$ == null ? null : $buf$$)];
  if ($m__5372__auto__$jscomp$799_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$799_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$799_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$799_m__5374__auto__$$.call(null, $buf$$);
  }
  $m__5372__auto__$jscomp$799_m__5374__auto__$$ = tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_._;
  if ($m__5372__auto__$jscomp$799_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$799_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$799_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$799_m__5374__auto__$$.call(null, $buf$$);
  }
  throw $APP.cljs.core.missing_protocol("PToTypedArray.-convertible-to-typed-array?", $buf$$);
};
tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_ = function($buf$$) {
  return $buf$$ != null && $buf$$.tech$v3$datatype$protocols$PToTypedArray$_convertible_to_typed_array_QMARK_$arity$1 != null ? $buf$$.tech$v3$datatype$protocols$PToTypedArray$_convertible_to_typed_array_QMARK_$arity$1($buf$$) : tech$v3$datatype$protocols$PToTypedArray$_convertible_to_typed_array_QMARK_$dyn_76380($buf$$);
};
var tech$v3$datatype$protocols$PToTypedArray$__GT_typed_array$dyn_76383 = function($buf$$) {
  var $m__5372__auto__$jscomp$800_m__5374__auto__$$ = tech.v3.datatype.protocols.__GT_typed_array[$APP.goog.typeOf($buf$$ == null ? null : $buf$$)];
  if ($m__5372__auto__$jscomp$800_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$800_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$800_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$800_m__5374__auto__$$.call(null, $buf$$);
  }
  $m__5372__auto__$jscomp$800_m__5374__auto__$$ = tech.v3.datatype.protocols.__GT_typed_array._;
  if ($m__5372__auto__$jscomp$800_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$800_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$800_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$800_m__5374__auto__$$.call(null, $buf$$);
  }
  throw $APP.cljs.core.missing_protocol("PToTypedArray.-\x3etyped-array", $buf$$);
};
tech.v3.datatype.protocols.__GT_typed_array = function($buf$$) {
  return $buf$$ != null && $buf$$.tech$v3$datatype$protocols$PToTypedArray$__GT_typed_array$arity$1 != null ? $buf$$.tech$v3$datatype$protocols$PToTypedArray$__GT_typed_array$arity$1($buf$$) : tech$v3$datatype$protocols$PToTypedArray$__GT_typed_array$dyn_76383($buf$$);
};
tech.v3.datatype.protocols.PToTypedArray.object = !0;
tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_.object = function($buf$$) {
  return !1;
};
tech.v3.datatype.protocols.PToTypedArray.array = !0;
tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_.array = function($buf$$) {
  return !1;
};
tech.v3.datatype.protocols.PToJSArray = function() {
};
var tech$v3$datatype$protocols$PToJSArray$_convertible_to_js_array_QMARK_$dyn_76385 = function($buf$$) {
  var $m__5372__auto__$jscomp$801_m__5374__auto__$$ = tech.v3.datatype.protocols._convertible_to_js_array_QMARK_[$APP.goog.typeOf($buf$$ == null ? null : $buf$$)];
  if ($m__5372__auto__$jscomp$801_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$801_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$801_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$801_m__5374__auto__$$.call(null, $buf$$);
  }
  $m__5372__auto__$jscomp$801_m__5374__auto__$$ = tech.v3.datatype.protocols._convertible_to_js_array_QMARK_._;
  if ($m__5372__auto__$jscomp$801_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$801_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$801_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$801_m__5374__auto__$$.call(null, $buf$$);
  }
  throw $APP.cljs.core.missing_protocol("PToJSArray.-convertible-to-js-array?", $buf$$);
};
tech.v3.datatype.protocols._convertible_to_js_array_QMARK_ = function($buf$$) {
  return $buf$$ != null && $buf$$.tech$v3$datatype$protocols$PToJSArray$_convertible_to_js_array_QMARK_$arity$1 != null ? $buf$$.tech$v3$datatype$protocols$PToJSArray$_convertible_to_js_array_QMARK_$arity$1($buf$$) : tech$v3$datatype$protocols$PToJSArray$_convertible_to_js_array_QMARK_$dyn_76385($buf$$);
};
var tech$v3$datatype$protocols$PToJSArray$__GT_js_array$dyn_76387 = function($buf$$) {
  var $m__5372__auto__$jscomp$802_m__5374__auto__$$ = tech.v3.datatype.protocols.__GT_js_array[$APP.goog.typeOf($buf$$ == null ? null : $buf$$)];
  if ($m__5372__auto__$jscomp$802_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$802_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$802_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$802_m__5374__auto__$$.call(null, $buf$$);
  }
  $m__5372__auto__$jscomp$802_m__5374__auto__$$ = tech.v3.datatype.protocols.__GT_js_array._;
  if ($m__5372__auto__$jscomp$802_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$802_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$802_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$802_m__5374__auto__$$.call(null, $buf$$);
  }
  throw $APP.cljs.core.missing_protocol("PToJSArray.-\x3ejs-array", $buf$$);
};
tech.v3.datatype.protocols.__GT_js_array = function($buf$$) {
  return $buf$$ != null && $buf$$.tech$v3$datatype$protocols$PToJSArray$__GT_js_array$arity$1 != null ? $buf$$.tech$v3$datatype$protocols$PToJSArray$__GT_js_array$arity$1($buf$$) : tech$v3$datatype$protocols$PToJSArray$__GT_js_array$dyn_76387($buf$$);
};
tech.v3.datatype.protocols.PToJSArray.object = !0;
tech.v3.datatype.protocols._convertible_to_js_array_QMARK_.object = function($buf$$) {
  return !1;
};
tech.v3.datatype.protocols.PAgetable = function() {
};
var tech$v3$datatype$protocols$PAgetable$_convertible_to_agetable_QMARK_$dyn_76388 = function($buf$$) {
  var $m__5372__auto__$jscomp$803_m__5374__auto__$$ = tech.v3.datatype.protocols._convertible_to_agetable_QMARK_[$APP.goog.typeOf($buf$$ == null ? null : $buf$$)];
  if ($m__5372__auto__$jscomp$803_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$803_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$803_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$803_m__5374__auto__$$.call(null, $buf$$);
  }
  $m__5372__auto__$jscomp$803_m__5374__auto__$$ = tech.v3.datatype.protocols._convertible_to_agetable_QMARK_._;
  if ($m__5372__auto__$jscomp$803_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$803_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$803_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$803_m__5374__auto__$$.call(null, $buf$$);
  }
  throw $APP.cljs.core.missing_protocol("PAgetable.-convertible-to-agetable?", $buf$$);
};
tech.v3.datatype.protocols._convertible_to_agetable_QMARK_ = function($buf$$) {
  return $buf$$ != null && $buf$$.tech$v3$datatype$protocols$PAgetable$_convertible_to_agetable_QMARK_$arity$1 != null ? $buf$$.tech$v3$datatype$protocols$PAgetable$_convertible_to_agetable_QMARK_$arity$1($buf$$) : tech$v3$datatype$protocols$PAgetable$_convertible_to_agetable_QMARK_$dyn_76388($buf$$);
};
var tech$v3$datatype$protocols$PAgetable$__GT_agetable$dyn_76389 = function($buf$$) {
  var $m__5372__auto__$jscomp$804_m__5374__auto__$$ = tech.v3.datatype.protocols.__GT_agetable[$APP.goog.typeOf($buf$$ == null ? null : $buf$$)];
  if ($m__5372__auto__$jscomp$804_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$804_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$804_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$804_m__5374__auto__$$.call(null, $buf$$);
  }
  $m__5372__auto__$jscomp$804_m__5374__auto__$$ = tech.v3.datatype.protocols.__GT_agetable._;
  if ($m__5372__auto__$jscomp$804_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$804_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$804_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($buf$$) : $m__5372__auto__$jscomp$804_m__5374__auto__$$.call(null, $buf$$);
  }
  throw $APP.cljs.core.missing_protocol("PAgetable.-\x3eagetable", $buf$$);
};
tech.v3.datatype.protocols.__GT_agetable = function($buf$$) {
  return $buf$$ != null && $buf$$.tech$v3$datatype$protocols$PAgetable$__GT_agetable$arity$1 != null ? $buf$$.tech$v3$datatype$protocols$PAgetable$__GT_agetable$arity$1($buf$$) : tech$v3$datatype$protocols$PAgetable$__GT_agetable$dyn_76389($buf$$);
};
tech.v3.datatype.protocols.PAgetable.object = !0;
tech.v3.datatype.protocols._convertible_to_agetable_QMARK_.object = function($buf$$) {
  var $or__5025__auto__$$ = tech.v3.datatype.protocols._convertible_to_js_array_QMARK_($buf$$);
  return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_($buf$$);
};
tech.v3.datatype.protocols.__GT_agetable.object = function($buf$$) {
  if ($APP.cljs.core.truth_(tech.v3.datatype.protocols._convertible_to_js_array_QMARK_($buf$$))) {
    return tech.v3.datatype.protocols.__GT_js_array($buf$$);
  }
  if ($APP.cljs.core.truth_(tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_($buf$$))) {
    return tech.v3.datatype.protocols.__GT_typed_array($buf$$);
  }
  throw Error("Object is not aget-able");
};
tech.v3.datatype.protocols.PAgetable.array = !0;
tech.v3.datatype.protocols._convertible_to_agetable_QMARK_.array = function($buf$$) {
  return !0;
};
tech.v3.datatype.protocols.__GT_agetable.array = function($buf$$) {
  return $buf$$;
};
tech.v3.datatype.protocols.PSetValue = function() {
};
var tech$v3$datatype$protocols$PSetValue$_set_value_BANG_$dyn_76390 = function($item$$, $idx$$, $data$$) {
  var $m__5372__auto__$jscomp$805_m__5374__auto__$$ = tech.v3.datatype.protocols._set_value_BANG_[$APP.goog.typeOf($item$$ == null ? null : $item$$)];
  if ($m__5372__auto__$jscomp$805_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$805_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$805_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($item$$, $idx$$, $data$$) : $m__5372__auto__$jscomp$805_m__5374__auto__$$.call(null, $item$$, $idx$$, $data$$);
  }
  $m__5372__auto__$jscomp$805_m__5374__auto__$$ = tech.v3.datatype.protocols._set_value_BANG_._;
  if ($m__5372__auto__$jscomp$805_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$805_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$805_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($item$$, $idx$$, $data$$) : $m__5372__auto__$jscomp$805_m__5374__auto__$$.call(null, $item$$, $idx$$, $data$$);
  }
  throw $APP.cljs.core.missing_protocol("PSetValue.-set-value!", $item$$);
};
tech.v3.datatype.protocols._set_value_BANG_ = function($item$$, $idx$$, $data$$) {
  return $item$$ != null && $item$$.tech$v3$datatype$protocols$PSetValue$_set_value_BANG_$arity$3 != null ? $item$$.tech$v3$datatype$protocols$PSetValue$_set_value_BANG_$arity$3($item$$, $idx$$, $data$$) : tech$v3$datatype$protocols$PSetValue$_set_value_BANG_$dyn_76390($item$$, $idx$$, $data$$);
};
tech.v3.datatype.protocols.PSetConstant = function() {
};
var tech$v3$datatype$protocols$PSetConstant$_set_constant_BANG_$dyn_76391 = function($item$$, $offset$$, $elem_count$$, $data$$) {
  var $m__5372__auto__$jscomp$806_m__5374__auto__$$ = tech.v3.datatype.protocols._set_constant_BANG_[$APP.goog.typeOf($item$$ == null ? null : $item$$)];
  if ($m__5372__auto__$jscomp$806_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$806_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$806_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($item$$, $offset$$, $elem_count$$, $data$$) : $m__5372__auto__$jscomp$806_m__5374__auto__$$.call(null, $item$$, $offset$$, $elem_count$$, $data$$);
  }
  $m__5372__auto__$jscomp$806_m__5374__auto__$$ = tech.v3.datatype.protocols._set_constant_BANG_._;
  if ($m__5372__auto__$jscomp$806_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$806_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4 ? $m__5372__auto__$jscomp$806_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$4($item$$, $offset$$, $elem_count$$, $data$$) : $m__5372__auto__$jscomp$806_m__5374__auto__$$.call(null, $item$$, $offset$$, $elem_count$$, $data$$);
  }
  throw $APP.cljs.core.missing_protocol("PSetConstant.-set-constant!", $item$$);
};
tech.v3.datatype.protocols._set_constant_BANG_ = function($item$$, $offset$$, $elem_count$$, $data$$) {
  return $item$$ != null && $item$$.tech$v3$datatype$protocols$PSetConstant$_set_constant_BANG_$arity$4 != null ? $item$$.tech$v3$datatype$protocols$PSetConstant$_set_constant_BANG_$arity$4($item$$, $offset$$, $elem_count$$, $data$$) : tech$v3$datatype$protocols$PSetConstant$_set_constant_BANG_$dyn_76391($item$$, $offset$$, $elem_count$$, $data$$);
};
tech.v3.datatype.protocols.PListLike = function() {
};
var tech$v3$datatype$protocols$PListLike$_add$dyn_76392 = function($this$$$, $elem$$) {
  var $m__5372__auto__$jscomp$807_m__5374__auto__$$ = tech.v3.datatype.protocols._add[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$807_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$807_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$807_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $elem$$) : $m__5372__auto__$jscomp$807_m__5374__auto__$$.call(null, $this$$$, $elem$$);
  }
  $m__5372__auto__$jscomp$807_m__5374__auto__$$ = tech.v3.datatype.protocols._add._;
  if ($m__5372__auto__$jscomp$807_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$807_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$807_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $elem$$) : $m__5372__auto__$jscomp$807_m__5374__auto__$$.call(null, $this$$$, $elem$$);
  }
  throw $APP.cljs.core.missing_protocol("PListLike.-add", $this$$$);
};
tech.v3.datatype.protocols._add = function($this$$$, $elem$$) {
  return $this$$$ != null && $this$$$.tech$v3$datatype$protocols$PListLike$_add$arity$2 != null ? $this$$$.tech$v3$datatype$protocols$PListLike$_add$arity$2($this$$$, $elem$$) : tech$v3$datatype$protocols$PListLike$_add$dyn_76392($this$$$, $elem$$);
};
var tech$v3$datatype$protocols$PListLike$_add_all$dyn_76393 = function($this$$$, $container$$) {
  var $m__5372__auto__$jscomp$808_m__5374__auto__$$ = tech.v3.datatype.protocols._add_all[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$808_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$808_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$808_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $container$$) : $m__5372__auto__$jscomp$808_m__5374__auto__$$.call(null, $this$$$, $container$$);
  }
  $m__5372__auto__$jscomp$808_m__5374__auto__$$ = tech.v3.datatype.protocols._add_all._;
  if ($m__5372__auto__$jscomp$808_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$808_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$808_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $container$$) : $m__5372__auto__$jscomp$808_m__5374__auto__$$.call(null, $this$$$, $container$$);
  }
  throw $APP.cljs.core.missing_protocol("PListLike.-add-all", $this$$$);
};
tech.v3.datatype.protocols._add_all = function($this$$$, $container$$) {
  return $this$$$ != null && $this$$$.tech$v3$datatype$protocols$PListLike$_add_all$arity$2 != null ? $this$$$.tech$v3$datatype$protocols$PListLike$_add_all$arity$2($this$$$, $container$$) : tech$v3$datatype$protocols$PListLike$_add_all$dyn_76393($this$$$, $container$$);
};
var tech$v3$datatype$protocols$PListLike$_ensure_capacity$dyn_76394 = function($this$$$, $capacity$$) {
  var $m__5372__auto__$jscomp$809_m__5374__auto__$$ = tech.v3.datatype.protocols._ensure_capacity[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$809_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$809_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$809_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $capacity$$) : $m__5372__auto__$jscomp$809_m__5374__auto__$$.call(null, $this$$$, $capacity$$);
  }
  $m__5372__auto__$jscomp$809_m__5374__auto__$$ = tech.v3.datatype.protocols._ensure_capacity._;
  if ($m__5372__auto__$jscomp$809_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$809_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$809_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $capacity$$) : $m__5372__auto__$jscomp$809_m__5374__auto__$$.call(null, $this$$$, $capacity$$);
  }
  throw $APP.cljs.core.missing_protocol("PListLike.-ensure-capacity", $this$$$);
};
tech.v3.datatype.protocols._ensure_capacity = function($this$$$, $capacity$$) {
  return $this$$$ != null && $this$$$.tech$v3$datatype$protocols$PListLike$_ensure_capacity$arity$2 != null ? $this$$$.tech$v3$datatype$protocols$PListLike$_ensure_capacity$arity$2($this$$$, $capacity$$) : tech$v3$datatype$protocols$PListLike$_ensure_capacity$dyn_76394($this$$$, $capacity$$);
};
tech.v3.datatype.protocols.PBitmapSet = function() {
};
var tech$v3$datatype$protocols$PBitmapSet$_set_or$dyn_76395 = function($lhs$$, $rhs$$) {
  var $m__5372__auto__$jscomp$810_m__5374__auto__$$ = tech.v3.datatype.protocols._set_or[$APP.goog.typeOf($lhs$$ == null ? null : $lhs$$)];
  if ($m__5372__auto__$jscomp$810_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$810_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$810_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($lhs$$, $rhs$$) : $m__5372__auto__$jscomp$810_m__5374__auto__$$.call(null, $lhs$$, $rhs$$);
  }
  $m__5372__auto__$jscomp$810_m__5374__auto__$$ = tech.v3.datatype.protocols._set_or._;
  if ($m__5372__auto__$jscomp$810_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$810_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$810_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($lhs$$, $rhs$$) : $m__5372__auto__$jscomp$810_m__5374__auto__$$.call(null, $lhs$$, $rhs$$);
  }
  throw $APP.cljs.core.missing_protocol("PBitmapSet.-set-or", $lhs$$);
};
tech.v3.datatype.protocols._set_or = function($lhs$$, $rhs$$) {
  return $lhs$$ != null && $lhs$$.tech$v3$datatype$protocols$PBitmapSet$_set_or$arity$2 != null ? $lhs$$.tech$v3$datatype$protocols$PBitmapSet$_set_or$arity$2($lhs$$, $rhs$$) : tech$v3$datatype$protocols$PBitmapSet$_set_or$dyn_76395($lhs$$, $rhs$$);
};
var tech$v3$datatype$protocols$PBitmapSet$_set_and$dyn_76396 = function($lhs$$, $rhs$$) {
  var $m__5372__auto__$jscomp$811_m__5374__auto__$$ = tech.v3.datatype.protocols._set_and[$APP.goog.typeOf($lhs$$ == null ? null : $lhs$$)];
  if ($m__5372__auto__$jscomp$811_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$811_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$811_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($lhs$$, $rhs$$) : $m__5372__auto__$jscomp$811_m__5374__auto__$$.call(null, $lhs$$, $rhs$$);
  }
  $m__5372__auto__$jscomp$811_m__5374__auto__$$ = tech.v3.datatype.protocols._set_and._;
  if ($m__5372__auto__$jscomp$811_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$811_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$811_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($lhs$$, $rhs$$) : $m__5372__auto__$jscomp$811_m__5374__auto__$$.call(null, $lhs$$, $rhs$$);
  }
  throw $APP.cljs.core.missing_protocol("PBitmapSet.-set-and", $lhs$$);
};
tech.v3.datatype.protocols._set_and = function($lhs$$, $rhs$$) {
  return $lhs$$ != null && $lhs$$.tech$v3$datatype$protocols$PBitmapSet$_set_and$arity$2 != null ? $lhs$$.tech$v3$datatype$protocols$PBitmapSet$_set_and$arity$2($lhs$$, $rhs$$) : tech$v3$datatype$protocols$PBitmapSet$_set_and$dyn_76396($lhs$$, $rhs$$);
};
var tech$v3$datatype$protocols$PBitmapSet$_set_and_not$dyn_76397 = function($lhs$$, $rhs$$) {
  var $m__5372__auto__$jscomp$812_m__5374__auto__$$ = tech.v3.datatype.protocols._set_and_not[$APP.goog.typeOf($lhs$$ == null ? null : $lhs$$)];
  if ($m__5372__auto__$jscomp$812_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$812_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$812_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($lhs$$, $rhs$$) : $m__5372__auto__$jscomp$812_m__5374__auto__$$.call(null, $lhs$$, $rhs$$);
  }
  $m__5372__auto__$jscomp$812_m__5374__auto__$$ = tech.v3.datatype.protocols._set_and_not._;
  if ($m__5372__auto__$jscomp$812_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$812_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$812_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($lhs$$, $rhs$$) : $m__5372__auto__$jscomp$812_m__5374__auto__$$.call(null, $lhs$$, $rhs$$);
  }
  throw $APP.cljs.core.missing_protocol("PBitmapSet.-set-and-not", $lhs$$);
};
tech.v3.datatype.protocols._set_and_not = function($lhs$$, $rhs$$) {
  return $lhs$$ != null && $lhs$$.tech$v3$datatype$protocols$PBitmapSet$_set_and_not$arity$2 != null ? $lhs$$.tech$v3$datatype$protocols$PBitmapSet$_set_and_not$arity$2($lhs$$, $rhs$$) : tech$v3$datatype$protocols$PBitmapSet$_set_and_not$dyn_76397($lhs$$, $rhs$$);
};
var tech$v3$datatype$protocols$PBitmapSet$_set_offset$dyn_76398 = function($this$$$, $off$$) {
  var $m__5372__auto__$jscomp$813_m__5374__auto__$$ = tech.v3.datatype.protocols._set_offset[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$813_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$813_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$813_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $off$$) : $m__5372__auto__$jscomp$813_m__5374__auto__$$.call(null, $this$$$, $off$$);
  }
  $m__5372__auto__$jscomp$813_m__5374__auto__$$ = tech.v3.datatype.protocols._set_offset._;
  if ($m__5372__auto__$jscomp$813_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$813_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$813_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $off$$) : $m__5372__auto__$jscomp$813_m__5374__auto__$$.call(null, $this$$$, $off$$);
  }
  throw $APP.cljs.core.missing_protocol("PBitmapSet.-set-offset", $this$$$);
};
tech.v3.datatype.protocols._set_offset = function($this$$$, $off$$) {
  return $this$$$ != null && $this$$$.tech$v3$datatype$protocols$PBitmapSet$_set_offset$arity$2 != null ? $this$$$.tech$v3$datatype$protocols$PBitmapSet$_set_offset$arity$2($this$$$, $off$$) : tech$v3$datatype$protocols$PBitmapSet$_set_offset$dyn_76398($this$$$, $off$$);
};
tech.v3.datatype.protocols.PFastAccessor = function() {
};
var tech$v3$datatype$protocols$PFastAccessor$__GT_fast_nth$dyn_76399 = function($item$$) {
  var $m__5372__auto__$jscomp$814_m__5374__auto__$$ = tech.v3.datatype.protocols.__GT_fast_nth[$APP.goog.typeOf($item$$ == null ? null : $item$$)];
  if ($m__5372__auto__$jscomp$814_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$814_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$814_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($item$$) : $m__5372__auto__$jscomp$814_m__5374__auto__$$.call(null, $item$$);
  }
  $m__5372__auto__$jscomp$814_m__5374__auto__$$ = tech.v3.datatype.protocols.__GT_fast_nth._;
  if ($m__5372__auto__$jscomp$814_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$814_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$814_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($item$$) : $m__5372__auto__$jscomp$814_m__5374__auto__$$.call(null, $item$$);
  }
  throw $APP.cljs.core.missing_protocol("PFastAccessor.-\x3efast-nth", $item$$);
};
tech.v3.datatype.protocols.__GT_fast_nth = function($item$$) {
  return $item$$ != null && $item$$.tech$v3$datatype$protocols$PFastAccessor$__GT_fast_nth$arity$1 != null ? $item$$.tech$v3$datatype$protocols$PFastAccessor$__GT_fast_nth$arity$1($item$$) : tech$v3$datatype$protocols$PFastAccessor$__GT_fast_nth$dyn_76399($item$$);
};
tech.v3.datatype.protocols.PFastAccessor.object = !0;
tech.v3.datatype.protocols.__GT_fast_nth.object = function($item$$) {
  if ($APP.cljs.core.truth_(tech.v3.datatype.protocols._convertible_to_agetable_QMARK_($item$$))) {
    var $ai$$ = tech.v3.datatype.protocols.__GT_agetable($item$$);
    return function($p1__76364_SHARP_$$) {
      return $ai$$[$p1__76364_SHARP_$$];
    };
  }
  return function($p1__76365_SHARP_$$) {
    return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($item$$, $p1__76365_SHARP_$$);
  };
};
tech.v3.datatype.protocols.PFastAccessor.array = !0;
tech.v3.datatype.protocols.__GT_fast_nth.array = function($item$$) {
  return function($p1__76366_SHARP_$$) {
    return $item$$[$p1__76366_SHARP_$$];
  };
};
tech.v3.datatype.casting = {};
tech.v3.datatype.casting.type_graph_data = new $APP.cljs.core.PersistentVector(null, 11, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5456$boolean, $APP.cljs$cst$3331$int8, $APP.cljs$cst$3330$uint8], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3331$int8, $APP.cljs$cst$3334$int16], null), new $APP.cljs.core.PersistentVector(null, 
3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3330$uint8, $APP.cljs$cst$3334$int16, $APP.cljs$cst$3333$uint16], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3334$int16, $APP.cljs$cst$3337$int32, $APP.cljs$cst$3336$float32], null), new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3333$uint16, $APP.cljs$cst$3337$int32, $APP.cljs$cst$3335$uint32, $APP.cljs$cst$3336$float32], 
null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3337$int32, $APP.cljs$cst$3329$float64], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3335$uint32, $APP.cljs$cst$3329$float64], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3336$float32, $APP.cljs$cst$3329$float64], null), new $APP.cljs.core.PersistentVector(null, 
2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3329$float64, $APP.cljs$cst$2189$object], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5460$int64, $APP.cljs$cst$2189$object], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5461$uint64, $APP.cljs$cst$2189$object], null)], null);
tech.v3.datatype.casting.datatype_vec = new $APP.cljs.core.PersistentVector(null, 12, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5456$boolean, $APP.cljs$cst$3331$int8, $APP.cljs$cst$3330$uint8, $APP.cljs$cst$3334$int16, $APP.cljs$cst$3333$uint16, $APP.cljs$cst$3337$int32, $APP.cljs$cst$3335$uint32, $APP.cljs$cst$3336$float32, $APP.cljs$cst$3329$float64, cljs$cst$5460$int64, cljs$cst$5461$uint64, $APP.cljs$cst$2189$object], null);
tech.v3.datatype.casting.datatype_rank = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.vec, $APP.cljs.core.reverse), $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.vector, tech.v3.datatype.casting.datatype_vec)));
tech.v3.datatype.casting.smallest_datatype = function($dt_seq$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function($lhs$$, $rhs$$) {
    return (tech.v3.datatype.casting.datatype_rank.cljs$core$IFn$_invoke$arity$1 ? tech.v3.datatype.casting.datatype_rank.cljs$core$IFn$_invoke$arity$1($lhs$$) : tech.v3.datatype.casting.datatype_rank.call(null, $lhs$$)) < (tech.v3.datatype.casting.datatype_rank.cljs$core$IFn$_invoke$arity$1 ? tech.v3.datatype.casting.datatype_rank.cljs$core$IFn$_invoke$arity$1($rhs$$) : tech.v3.datatype.casting.datatype_rank.call(null, $rhs$$)) ? $lhs$$ : $rhs$$;
  }, $dt_seq$$);
};
tech.v3.datatype.casting.type_graph = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($tg$$, $entry$$) {
  var $new_dt$$ = $APP.cljs.core.first($entry$$), $valid_types$$ = $APP.cljs.core.set($entry$$);
  $tg$$ = $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$4($tg$$, $new_dt$$, $APP.clojure.set.union, $valid_types$$);
  return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p__76333_v$$) {
    var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__76333_v$$, 0, null);
    $p__76333_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__76333_v$$, 1, null);
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, $APP.cljs.core.truth_($p__76333_v$$.cljs$core$IFn$_invoke$arity$1 ? $p__76333_v$$.cljs$core$IFn$_invoke$arity$1($new_dt$$) : $p__76333_v$$.call(null, $new_dt$$)) ? $APP.clojure.set.union.cljs$core$IFn$_invoke$arity$2($p__76333_v$$, $valid_types$$) : $p__76333_v$$], null);
  }, $tg$$));
}, $APP.cljs.core.PersistentArrayMap.EMPTY, tech.v3.datatype.casting.type_graph_data);
tech.v3.datatype.casting.widest_datatype = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return tech.v3.datatype.casting.widest_datatype.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return tech.v3.datatype.casting.widest_datatype.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.casting.widest_datatype.cljs$core$IFn$_invoke$arity$1 = function($dtype$$) {
  return $dtype$$;
};
tech.v3.datatype.casting.widest_datatype.cljs$core$IFn$_invoke$arity$2 = function($lhs_dtype_lhs_types_n_res$$, $res$$) {
  if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($lhs_dtype_lhs_types_n_res$$, $res$$)) {
    return $lhs_dtype_lhs_types_n_res$$;
  }
  $lhs_dtype_lhs_types_n_res$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3(tech.v3.datatype.casting.type_graph, $lhs_dtype_lhs_types_n_res$$, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2189$object, null], null), null));
  var $G__76342$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$2189$object, null], null), null);
  $res$$ = tech.v3.datatype.casting.type_graph.cljs$core$IFn$_invoke$arity$2 ? tech.v3.datatype.casting.type_graph.cljs$core$IFn$_invoke$arity$2($res$$, $G__76342$$) : tech.v3.datatype.casting.type_graph.call(null, $res$$, $G__76342$$);
  $res$$ = $APP.clojure.set.intersection.cljs$core$IFn$_invoke$arity$2($lhs_dtype_lhs_types_n_res$$, $res$$);
  $lhs_dtype_lhs_types_n_res$$ = $APP.cljs.core.count($res$$);
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, $lhs_dtype_lhs_types_n_res$$) ? $APP.cljs$cst$2189$object : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $lhs_dtype_lhs_types_n_res$$) ? $APP.cljs.core.first($res$$) : tech.v3.datatype.casting.smallest_datatype($res$$);
};
tech.v3.datatype.casting.widest_datatype.cljs$lang$maxFixedArity = 2;
tech.v3.datatype.casting.numeric_types = $APP.cljs.core.disj.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.set($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.first, tech.v3.datatype.casting.type_graph_data)), cljs$cst$5456$boolean);
tech.v3.datatype.casting.numeric_type_QMARK_ = function($dtype$$) {
  return $APP.cljs.core.boolean$(tech.v3.datatype.casting.numeric_types.cljs$core$IFn$_invoke$arity$1 ? tech.v3.datatype.casting.numeric_types.cljs$core$IFn$_invoke$arity$1($dtype$$) : tech.v3.datatype.casting.numeric_types.call(null, $dtype$$));
};
tech.v3.datatype.casting.__GT_bigint = function($data$$) {
  return $data$$ instanceof BigInt ? $data$$ : BigInt($data$$);
};
tech.v3.datatype.casting.__GT_number = function($data$$) {
  return $data$$ instanceof Number ? $data$$ : Number($data$$);
};
tech.v3.datatype.casting.cast_fn = function($dtype$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
  var $JSCompiler_inline_result$jscomp$1808_fexpr__76349$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [cljs$cst$5460$int64, null, cljs$cst$5461$uint64, null], null), null);
  $JSCompiler_inline_result$jscomp$1808_fexpr__76349$$ = $JSCompiler_inline_result$jscomp$1808_fexpr__76349$$.cljs$core$IFn$_invoke$arity$1 ? $JSCompiler_inline_result$jscomp$1808_fexpr__76349$$.cljs$core$IFn$_invoke$arity$1($dtype$$) : $JSCompiler_inline_result$jscomp$1808_fexpr__76349$$.call(null, $dtype$$);
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$1808_fexpr__76349$$) ? tech.v3.datatype.casting.__GT_bigint : tech.v3.datatype.casting.numeric_type_QMARK_($dtype$$) ? tech.v3.datatype.casting.__GT_number : $APP.cljs.core.identity;
};
tech.v3.datatype.format_sequence = {};
tech.v3.datatype.format_sequence.left = function($x$$) {
  return $APP.cljs.core.unchecked_long(Math.floor(Math.log10(Math.abs($x$$)))) + 1;
};
tech.v3.datatype.format_sequence.right = function($orig_x_x$$, $max_digits$$) {
  $orig_x_x$$ = Math.abs($orig_x_x$$);
  for (var $n_pow$$ = 1.0, $G__76382_idx$$ = 0;;) {
    var $x__$1$$ = $orig_x_x$$ * $n_pow$$;
    if ($G__76382_idx$$ >= $max_digits$$ || $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(Math.floor($x__$1$$), $x__$1$$)) {
      return $G__76382_idx$$;
    }
    $G__76382_idx$$ += 1;
    $n_pow$$ *= 10.0;
  }
};
tech.v3.datatype.format_sequence.formatter = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return tech.v3.datatype.format_sequence.formatter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return tech.v3.datatype.format_sequence.formatter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return tech.v3.datatype.format_sequence.formatter.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.format_sequence.formatter.cljs$core$IFn$_invoke$arity$1 = function($xs$$) {
  return tech.v3.datatype.format_sequence.formatter.cljs$core$IFn$_invoke$arity$2($xs$$, 8);
};
tech.v3.datatype.format_sequence.formatter.cljs$core$IFn$_invoke$arity$2 = function($xs$$, $digits$$) {
  return tech.v3.datatype.format_sequence.formatter.cljs$core$IFn$_invoke$arity$3($xs$$, $digits$$, 8);
};
tech.v3.datatype.format_sequence.formatter.cljs$core$IFn$_invoke$arity$3 = function($xs$jscomp$92_xs__$1$$, $digits$$, $threshold$$) {
  $xs$jscomp$92_xs__$1$$ = $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function($p1__76367_SHARP_$$) {
    var $and__5023__auto__$$ = typeof $p1__76367_SHARP_$$ === "number";
    return $and__5023__auto__$$ ? isFinite($p1__76367_SHARP_$$) : $and__5023__auto__$$;
  }, $xs$jscomp$92_xs__$1$$);
  var $max_left$$ = $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.max, 0, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.format_sequence.left, $xs$jscomp$92_xs__$1$$)), $max_right$$ = $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.max, 0, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__76368_SHARP_$$) {
    return tech.v3.datatype.format_sequence.right($p1__76368_SHARP_$$, $digits$$);
  }, $xs$jscomp$92_xs__$1$$)), $format_fn$$ = $max_left$$ > $threshold$$ ? function($p1__76369_SHARP_$$) {
    return $p1__76369_SHARP_$$.toExponential();
  } : function($p1__76370_SHARP_$$) {
    return $p1__76370_SHARP_$$.toFixed($max_right$$);
  };
  return function($JSCompiler_inline_result$jscomp$1810_x$$) {
    var $JSCompiler_temp_const$jscomp$1809_x__$1$$ = parseFloat;
    $JSCompiler_inline_result$jscomp$1810_x$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$1810_x$$) ? $JSCompiler_inline_result$jscomp$1810_x$$ : NaN;
    $JSCompiler_temp_const$jscomp$1809_x__$1$$ = $JSCompiler_temp_const$jscomp$1809_x__$1$$($JSCompiler_inline_result$jscomp$1810_x$$);
    return $APP.cljs.core.truth_(isFinite($JSCompiler_temp_const$jscomp$1809_x__$1$$)) ? $format_fn$$($JSCompiler_temp_const$jscomp$1809_x__$1$$) : Infinity === $JSCompiler_temp_const$jscomp$1809_x__$1$$ ? "Inf" : -Infinity === $JSCompiler_temp_const$jscomp$1809_x__$1$$ ? "-Inf" : "NaN";
  };
};
tech.v3.datatype.format_sequence.formatter.cljs$lang$maxFixedArity = 3;
tech.v3.datatype.format_sequence.format_sequence = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return tech.v3.datatype.format_sequence.format_sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return tech.v3.datatype.format_sequence.format_sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return tech.v3.datatype.format_sequence.format_sequence.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.format_sequence.format_sequence.cljs$core$IFn$_invoke$arity$1 = function($xs$$) {
  return tech.v3.datatype.format_sequence.format_sequence.cljs$core$IFn$_invoke$arity$2($xs$$, 8);
};
tech.v3.datatype.format_sequence.format_sequence.cljs$core$IFn$_invoke$arity$2 = function($xs$$, $digits$$) {
  return tech.v3.datatype.format_sequence.format_sequence.cljs$core$IFn$_invoke$arity$3($xs$$, $digits$$, 8);
};
tech.v3.datatype.format_sequence.format_sequence.cljs$core$IFn$_invoke$arity$3 = function($xs$$, $digits$jscomp$5_fmt$$, $threshold$$) {
  $digits$jscomp$5_fmt$$ = tech.v3.datatype.format_sequence.formatter.cljs$core$IFn$_invoke$arity$3($xs$$, $digits$jscomp$5_fmt$$, $threshold$$);
  return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($digits$jscomp$5_fmt$$, $xs$$);
};
tech.v3.datatype.format_sequence.format_sequence.cljs$lang$maxFixedArity = 3;
tech.v3.datatype.argtypes = {};
tech.v3.datatype.argtypes.argtype = function($data$$) {
  return typeof $data$$ === "number" || typeof $data$$ === "string" || $APP.cljs.core.boolean_QMARK_($data$$) ? cljs$cst$5462$scalar : $data$$ instanceof Array || $APP.cljs.core.indexed_QMARK_($data$$) ? $APP.cljs$cst$2639$reader : $APP.cljs.core.seq_QMARK_($data$$) ? cljs$cst$5463$iterable : cljs$cst$5462$scalar;
};
tech.v3.datatype.argtypes.scalar_QMARK_ = function($data$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5462$scalar, tech.v3.datatype.argtypes.argtype($data$$));
};
var ham_fisted = {BitmapTrie:{}}, module$contents$ham_fisted$BitmapTrie_defaultProvider = {hash:module$contents$ham_fisted$BitmapTrie_defaultHash, equals:module$contents$ham_fisted$BitmapTrie_defaultEquals, isReduced:$v$$ => !1, unreduce:$v$$ => $v$$}, module$contents$ham_fisted$BitmapTrie_m3_seed = 0, module$contents$ham_fisted$BitmapTrie_m3_C1 = -862048943, module$contents$ham_fisted$BitmapTrie_m3_C2 = 461845907, module$contents$ham_fisted$BitmapTrie_UnorderedCollHasher = class {
  constructor($hash$$) {
    this.hashCode = this.n = 0;
    this.hash = $hash$$;
  }
  accept($val$$) {
    this.n++;
    this.hashCode = this.hashCode + module$contents$ham_fisted$BitmapTrie_objHashCode(this.hash, $val$$) | 0;
  }
  deref() {
    return module$contents$ham_fisted$BitmapTrie_mix_collection_hash(this.hashCode, this.n);
  }
}, module$contents$ham_fisted$BitmapTrie_OrderedCollHasher = class {
  constructor($hash$$) {
    this.n = 0;
    this.hashCode = 1;
    this.hash = $hash$$;
  }
  accept($val$$) {
    this.n++;
    this.hashCode = Math.imul(31, this.hashCode) + module$contents$ham_fisted$BitmapTrie_objHashCode(this.hash, $val$$) | 0;
  }
  deref() {
    return module$contents$ham_fisted$BitmapTrie_mix_collection_hash(this.hashCode, this.n);
  }
}, module$contents$ham_fisted$BitmapTrie_Map1Impl = class {
  constructor($hp$jscomp$4_sz$$, $f$$, $arg$$) {
    this.hp = $hp$jscomp$4_sz$$;
    this.f = module$contents$ham_fisted$BitmapTrie_oneArgInvoker($f$$);
    this.arg = $arg$$;
    $hp$jscomp$4_sz$$ = module$contents$ham_fisted$BitmapTrie_sizeIfPossible($arg$$);
    $hp$jscomp$4_sz$$ != null && (this.length = $hp$jscomp$4_sz$$);
  }
  reduce($rfn$$, $init$$) {
    $rfn$$ = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($rfn$$);
    const $f$$ = this.f;
    return module$contents$ham_fisted$BitmapTrie_reduce(this.hp, ($acc$$, $v$$) => $rfn$$($acc$$, $f$$($v$$)), $init$$, this.arg);
  }
  [Symbol.iterator]() {
    let $iter$$ = module$contents$ham_fisted$BitmapTrie_jsIter(this.arg);
    const $f$$ = this.f;
    return {next:() => {
      let $rv$$ = $iter$$.next();
      return {done:$rv$$.done, value:$rv$$.done ? void 0 : $f$$($rv$$.value)};
    }};
  }
}, module$contents$ham_fisted$BitmapTrie_Map2Impl = class {
  constructor($hp$$, $f$$, $lhs$$, $rhs$$) {
    this.f = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($f$$);
    this.hp = $hp$$;
    this.lhs = $lhs$$;
    this.rhs = $rhs$$;
    $hp$$ = module$contents$ham_fisted$BitmapTrie_sizeIfPossible($lhs$$);
    $rhs$$ = module$contents$ham_fisted$BitmapTrie_sizeIfPossible($rhs$$);
    $hp$$ != null && $rhs$$ != null && (this.length = Math.min($hp$$, $rhs$$));
  }
  reduce($rfn$$, $init$$) {
    return module$contents$ham_fisted$BitmapTrie_iterReduce(this.hp, $rfn$$, $init$$, this);
  }
  [Symbol.iterator]() {
    const $li$$ = module$contents$ham_fisted$BitmapTrie_jsIter(this.lhs), $ri$$ = module$contents$ham_fisted$BitmapTrie_jsIter(this.rhs), $f$$ = this.f;
    return {next:() => {
      const $lrv$$ = $li$$.next(), $rrv$$ = $ri$$.next(), $d$$ = $lrv$$.done || $rrv$$.done;
      return {done:$d$$, value:$d$$ ? void 0 : $f$$($lrv$$.value, $rrv$$.value)};
    }};
  }
}, module$contents$ham_fisted$BitmapTrie_MapNImpl = class {
  constructor($hp$$, $f$$, $args$$) {
    this.hp = $hp$$;
    this.f = $f$$;
    this.args = $args$$;
  }
  reduce($rfn$$, $init$$) {
    return module$contents$ham_fisted$BitmapTrie_iterReduce(this.hp, $rfn$$, $init$$, this);
  }
  [Symbol.iterator]() {
    const $f$$ = this.f, $iters$$ = this.args.map(module$contents$ham_fisted$BitmapTrie_jsIter), $l$$ = $iters$$.length, $fnargs$$ = Array($l$$);
    return {next:() => {
      for (let $idx$$ = 0; $idx$$ < $l$$; ++$idx$$) {
        const $nval$$ = $iters$$[$idx$$].next();
        if ($nval$$.done) {
          return {done:!0, value:void 0};
        }
        $fnargs$$[$idx$$] = $nval$$.value;
      }
      return {done:!1, value:$f$$(...$fnargs$$)};
    }};
  }
}, module$contents$ham_fisted$BitmapTrie_FilterImpl = class {
  constructor($hp$$, $pred$$, $lhs$$) {
    this.hp = $hp$$;
    this.pred = module$contents$ham_fisted$BitmapTrie_oneArgInvoker($pred$$);
    this.lhs = $lhs$$;
  }
  reduce($rfn$$, $acc$$) {
    const $pred$$ = this.pred, $inv$$ = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($rfn$$);
    return module$contents$ham_fisted$BitmapTrie_reduce(this.hp, ($acc$$, $v$$) => $pred$$($v$$) ? $inv$$($acc$$, $v$$) : $acc$$, $acc$$, this.lhs);
  }
  [Symbol.iterator]() {
    const $iter$$ = this.lhs[Symbol.iterator](), $pred$$ = this.pred;
    return {next:() => {
      let $rv$$;
      for ($rv$$ = $iter$$.next(); $rv$$.done == 0 && !$pred$$($rv$$.value); $rv$$ = $iter$$.next()) {
      }
      const $d$$ = $rv$$ != null ? $rv$$.done : !0;
      return {done:$d$$, value:$d$$ ? void 0 : $rv$$.value};
    }};
  }
}, module$contents$ham_fisted$BitmapTrie_ConcatImpl = class {
  constructor($hp$$, $args$$) {
    this.hp = $hp$$;
    this.args = $args$$;
  }
  reduce($rfn$$, $acc$$) {
    $rfn$$ = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($rfn$$);
    const $isReduced$$ = this.hp.isReduced, $unreduce$$ = this.hp.unreduce, $makeReduced$$ = this.hp.makeReduced, $invoker$$ = ($acc$$, $v$$) => {
      $acc$$ = $rfn$$($acc$$, $v$$);
      return $isReduced$$($acc$$) ? $makeReduced$$($acc$$) : $acc$$;
    };
    for (const $coll$$ of this.args) {
      if ($isReduced$$($acc$$) || $coll$$ != null && ($acc$$ = module$contents$ham_fisted$BitmapTrie_reduce(this.hp, $invoker$$, $acc$$, $coll$$), $isReduced$$($acc$$))) {
        return $unreduce$$($acc$$);
      }
    }
    return $acc$$;
  }
  [Symbol.iterator]() {
    const $colliter$$ = this.args[Symbol.iterator]();
    let $valiter$$ = null;
    class $ConcatIter$$ {
      next() {
        if ($valiter$$ != null) {
          var $c$jscomp$369_vv$$ = $valiter$$.next();
          if ($c$jscomp$369_vv$$.done) {
            $valiter$$ = null;
          } else {
            return $c$jscomp$369_vv$$;
          }
        }
        for (; $valiter$$ == null;) {
          $c$jscomp$369_vv$$ = $colliter$$.next();
          if ($c$jscomp$369_vv$$.done) {
            return $c$jscomp$369_vv$$;
          }
          $c$jscomp$369_vv$$.value != null && ($valiter$$ = $c$jscomp$369_vv$$.value[Symbol.iterator]());
          return this.next();
        }
      }
    }
    return new $ConcatIter$$();
  }
}, module$contents$ham_fisted$BitmapTrie_LFPProps = ["length", "0", "1", "toString"], module$contents$ham_fisted$BitmapTrie_LFP = class {
  get($target$$, $key$$) {
    switch($key$$) {
      case "length":
        return 2;
      case "0":
        return $target$$.k;
      case "1":
        return $target$$.v;
      case "hashCode":
        return () => $target$$.hashCode();
      case "toString":
        return () => "[" + $target$$.k + " " + $target$$.v + "]";
    }
  }
  ownKeys($target$$) {
    return module$contents$ham_fisted$BitmapTrie_LFPProps;
  }
  has($target$$, $key$$) {
    return module$contents$ham_fisted$BitmapTrie_LFPProps.contains($key$$);
  }
  getOwnPropertyDescriptor($target$$, $key$$) {
    switch($key$$) {
      case "length":
        return {value:2, writable:!1, enumerable:!0, configurable:!0};
      case "0":
        return {value:$target$$.k, writable:!1, enumerable:!0, configurable:!0};
      case "1":
        return {value:$target$$.v, writable:!1, enumerable:!0, configurable:!0};
      case "toString":
        return {value:this.get($target$$, "toString"), writable:!1, enumerable:!0, configurable:!0};
      case "hashCode":
        return {value:this.get($target$$, "hashCode"), writable:!1, enumerable:!0, configurable:!0};
    }
  }
}, module$contents$ham_fisted$BitmapTrie_LeafNode = class {
  constructor($owner$$, $k$$, $v$$, $hash$$, $nextNode$$) {
    this.owner = $owner$$;
    this.k = $k$$;
    this.v = $v$$;
    this.hashcode = $hash$$;
    this.nextNode = $nextNode$$;
    if (this.hashcode == null) {
      throw Error("Hashcode undefined");
    }
  }
  static newNode($owner$$, $k$$, $v$$, $hash$$) {
    $owner$$.incLeaf();
    return new module$contents$ham_fisted$BitmapTrie_LeafNode($owner$$, $k$$, $v$$, $hash$$, null);
  }
  asObject() {
    this.proxy == null && (this.proxy = module$contents$ham_fisted$BitmapTrie_leafProxy(this));
    return this.proxy;
  }
  toString() {
    return "[" + this.k + " " + this.v + "]";
  }
  hashCode() {
    return this.owner.cache_hash ? module$contents$ham_fisted$BitmapTrie_cache_ordered(this.owner.hash, this) : module$contents$ham_fisted$BitmapTrie_hash_ordered(this.owner.hash, this);
  }
  getKey() {
    return this.k;
  }
  getValue() {
    return this.v;
  }
  get($idx$$) {
    if ($idx$$ === 0) {
      return this.k;
    }
    if ($idx$$ === 1) {
      return this.v;
    }
    throw Error("Index out of range");
  }
  nth($idx$$, $d$$) {
    return $idx$$ >= 0 && $idx$$ < 2 ? this.get($idx$$) : $d$$;
  }
  size() {
    return 2;
  }
  getOrCreate($k$$, $hash$$) {
    return this.owner.equals($k$$, this.k) ? this : this.nextNode != null ? this.nextNode.getOrCreate($k$$, $hash$$) : this.nextNode = module$contents$ham_fisted$BitmapTrie_LeafNode.newNode(this.owner, $k$$, null, $hash$$);
  }
  append($lf$$) {
    this.nextNode == null ? this.nextNode = $lf$$ : this.nextNode.append($lf$$);
  }
  remove($k$$, $hash$$, $collapse$$) {
    if ($hash$$ == this.hashcode) {
      if (this.owner.equals($k$$, this.k)) {
        return this.owner.decLeaf(), this.nextNode;
      }
      this.nextNode = this.nextNode != null ? this.nextNode.remove($k$$, $hash$$, $collapse$$) : null;
    }
    return this;
  }
  setOwner($nowner$$) {
    return this.owner == $nowner$$ ? this : new module$contents$ham_fisted$BitmapTrie_LeafNode($nowner$$, this.k, this.v, this.hashcode, this.nextNode);
  }
  assoc($nowner$$, $shift$$, $k$$, $hash$$, $v$$) {
    let $retval$$ = this.setOwner($nowner$$);
    $nowner$$.equals($k$$, this.k) ? $retval$$.v = $v$$ : $retval$$.nextNode = $retval$$.nextNode != null ? $retval$$.nextNode.assoc($nowner$$, $shift$$, $k$$, $hash$$, $v$$) : module$contents$ham_fisted$BitmapTrie_LeafNode.newNode($nowner$$, $k$$, $v$$, this.hashcode);
    return $retval$$;
  }
  dissoc($nowner$jscomp$2_retval$$, $nnode_shift$$, $k$$, $hash$$, $collapse$$) {
    if ($nowner$jscomp$2_retval$$.equals($k$$, this.k)) {
      return $nowner$jscomp$2_retval$$.decLeaf(), this.nextNode;
    }
    $nnode_shift$$ = this.nextNode != null ? this.nextNode.dissoc($nowner$jscomp$2_retval$$, $nnode_shift$$, $k$$, $hash$$, $collapse$$) : null;
    return $nnode_shift$$ != this.nextNode ? ($nowner$jscomp$2_retval$$ = this.setOwner($nowner$jscomp$2_retval$$), $nowner$jscomp$2_retval$$.nextNode = $nnode_shift$$, $nowner$jscomp$2_retval$$) : this;
  }
  updateValues($owner$$, $bifn$$) {
    let $rv$$ = this.setOwner($owner$$);
    $rv$$.nextNode = $rv$$.nextNode != null ? $rv$$.nextNode.updateValues($owner$$, $bifn$$) : null;
    $rv$$.v = $bifn$$($rv$$.k, $rv$$.v);
    return $rv$$;
  }
  clone($nowner$$) {
    return new module$contents$ham_fisted$BitmapTrie_LeafNode($nowner$$, this.k, this.v, this.hashcode, this.nextNode == null ? null : this.nextNode.clone($nowner$$));
  }
  iterator() {
    return new class {
      constructor($lf$$) {
        this.lf = $lf$$;
      }
      hasNext() {
        return this.lf != null;
      }
      next() {
        let $rv$$ = this.lf;
        this.lf = this.lf.nextNode;
        return $rv$$;
      }
    }(this);
  }
  reduceLeaves($rfn$$, $acc$$) {
    let $isReduced$$ = this.owner.isReduced;
    for (let $lf$$ = this; $lf$$ != null && !$isReduced$$($acc$$); $lf$$ = $lf$$.nextNode) {
      $acc$$ = $rfn$$($acc$$, $lf$$);
    }
    return $acc$$;
  }
  [Symbol.iterator]() {
    let $idx$$ = 0;
    const $p$$ = this;
    return {next:() => {
      let $done$$ = $idx$$ >= 2, $rv$$ = $done$$ ? {done:!0} : {done:!1, value:$idx$$ == 0 ? $p$$.k : $p$$.v};
      $idx$$ = $done$$ ? $idx$$ : $idx$$ + 1;
      return $rv$$;
    }};
  }
  reduce($rfn$$, $acc$$) {
    const $isReduced$$ = this.owner.isReduced;
    $rfn$$ = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($rfn$$);
    $acc$$ = $rfn$$($acc$$, this.k);
    $isReduced$$($acc$$) || ($acc$$ = $rfn$$($acc$$, this.v));
    return this.owner.unreduce($acc$$);
  }
}, module$contents$ham_fisted$BitmapTrie_BitmapNode = class {
  constructor($owner$$, $shift$$, $bitmap$$, $data$$) {
    this.owner = $owner$$;
    this.shift = $shift$$;
    this.bitmap = $bitmap$$;
    this.data = $data$$;
  }
  static newNode($owner$$, $shift$$, $leaf$$) {
    return new module$contents$ham_fisted$BitmapTrie_BitmapNode($owner$$, $shift$$, $leaf$$ != null ? module$contents$ham_fisted$BitmapTrie_bitpos($shift$$, $leaf$$.hashcode) : 0, [$leaf$$, null, null, null]);
  }
  clone($nowner$$) {
    const $rv$$ = new module$contents$ham_fisted$BitmapTrie_BitmapNode($nowner$$, this.shift, this.bitmap, module$contents$ham_fisted$BitmapTrie_copyOf(this.data, this.data.length)), $d$$ = $rv$$.data, $l$$ = $d$$.length;
    for (let $idx$$ = 0; $idx$$ < $l$$; ++$idx$$) {
      const $e$$ = $d$$[$idx$$];
      $e$$ != null && ($d$$[$idx$$] = $e$$.clone($nowner$$));
    }
    return $rv$$;
  }
  toString() {
    return "BitmapNode: " + this.shift + " " + module$contents$ham_fisted$BitmapTrie_bitCount32(this.bitmap);
  }
  getOrCreate($k$jscomp$709_retval$$, $bmm_nextShift_shift$$, $hash$$) {
    let $bpos$$ = module$contents$ham_fisted$BitmapTrie_bitpos($bmm_nextShift_shift$$, $hash$$);
    var $data$jscomp$191_entry$jscomp$34_node$$ = this.data;
    let $bm$$ = this.bitmap, $index$$ = module$contents$ham_fisted$BitmapTrie_bitIndex($bm$$, $bpos$$);
    if (($bm$$ & $bpos$$) == 0) {
      return $bmm_nextShift_shift$$ = $bm$$ | $bpos$$, $k$jscomp$709_retval$$ = module$contents$ham_fisted$BitmapTrie_LeafNode.newNode(this.owner, $k$jscomp$709_retval$$, null, $hash$$), this.data = module$contents$ham_fisted$BitmapTrie_insert($data$jscomp$191_entry$jscomp$34_node$$, $k$jscomp$709_retval$$, $index$$, module$contents$ham_fisted$BitmapTrie_bitCount32($bmm_nextShift_shift$$), !1), this.bitmap = $bmm_nextShift_shift$$, $k$jscomp$709_retval$$;
    }
    $data$jscomp$191_entry$jscomp$34_node$$ = $data$jscomp$191_entry$jscomp$34_node$$[$index$$];
    if ($data$jscomp$191_entry$jscomp$34_node$$ instanceof module$contents$ham_fisted$BitmapTrie_BitmapNode) {
      return $data$jscomp$191_entry$jscomp$34_node$$.getOrCreate($k$jscomp$709_retval$$, module$contents$ham_fisted$BitmapTrie_incShift($bmm_nextShift_shift$$), $hash$$);
    }
    if ($data$jscomp$191_entry$jscomp$34_node$$.hashcode == $hash$$) {
      return $data$jscomp$191_entry$jscomp$34_node$$.getOrCreate($k$jscomp$709_retval$$, $hash$$);
    }
    $bmm_nextShift_shift$$ = module$contents$ham_fisted$BitmapTrie_incShift($bmm_nextShift_shift$$);
    $data$jscomp$191_entry$jscomp$34_node$$ = module$contents$ham_fisted$BitmapTrie_BitmapNode.newNode(this.owner, $bmm_nextShift_shift$$, $data$jscomp$191_entry$jscomp$34_node$$);
    this.data[$index$$] = $data$jscomp$191_entry$jscomp$34_node$$;
    return $data$jscomp$191_entry$jscomp$34_node$$.getOrCreate($k$jscomp$709_retval$$, $bmm_nextShift_shift$$, $hash$$);
  }
  getNode($k$$, $hp$jscomp$14_shift$$, $hash$jscomp$46_lf$$) {
    var $bpos$jscomp$1_entry$jscomp$35_index$$ = module$contents$ham_fisted$BitmapTrie_bitpos($hp$jscomp$14_shift$$, $hash$jscomp$46_lf$$);
    let $bm$$ = this.bitmap;
    if (($bm$$ & $bpos$jscomp$1_entry$jscomp$35_index$$) != 0) {
      $bpos$jscomp$1_entry$jscomp$35_index$$ = module$contents$ham_fisted$BitmapTrie_bitIndex($bm$$, $bpos$jscomp$1_entry$jscomp$35_index$$);
      $bpos$jscomp$1_entry$jscomp$35_index$$ = this.data[$bpos$jscomp$1_entry$jscomp$35_index$$];
      if ($bpos$jscomp$1_entry$jscomp$35_index$$ instanceof module$contents$ham_fisted$BitmapTrie_BitmapNode) {
        return $bpos$jscomp$1_entry$jscomp$35_index$$.getNode($k$$, module$contents$ham_fisted$BitmapTrie_incShift($hp$jscomp$14_shift$$), $hash$jscomp$46_lf$$);
      }
      $hp$jscomp$14_shift$$ = this.owner;
      for ($hash$jscomp$46_lf$$ = $bpos$jscomp$1_entry$jscomp$35_index$$; $hash$jscomp$46_lf$$ != null; $hash$jscomp$46_lf$$ = $hash$jscomp$46_lf$$.nextNode) {
        if ($hp$jscomp$14_shift$$.equals($k$$, $hash$jscomp$46_lf$$.k)) {
          return $hash$jscomp$46_lf$$;
        }
      }
    }
    return null;
  }
  remove($k$$, $hash$$, $collapse$$) {
    var $bpos$$ = module$contents$ham_fisted$BitmapTrie_bitpos(this.shift, $hash$$);
    let $bm$$ = this.bitmap;
    if (($bm$$ & $bpos$$) != 0) {
      let $data$$ = this.data, $index$$ = module$contents$ham_fisted$BitmapTrie_bitIndex($bm$$, $bpos$$);
      $k$$ = this.data[$index$$].remove($k$$, $hash$$, !0);
      if ($k$$ == null) {
        $bpos$$ = $bm$$ & ~$bpos$$;
        if ($bpos$$ == 0 && $collapse$$) {
          return null;
        }
        this.bitmap = $bpos$$;
        this.data = module$contents$ham_fisted$BitmapTrie_removeEntry($data$$, $index$$, module$contents$ham_fisted$BitmapTrie_bitCount32($bm$$), !1);
      } else {
        this.data[$index$$] = $k$$;
      }
    }
    return this;
  }
  setOwner($nowner$$) {
    return this.owner == $nowner$$ ? this : new module$contents$ham_fisted$BitmapTrie_BitmapNode($nowner$$, this.shift, this.bitmap, this.data);
  }
  assoc($nowner$$, $nbm$jscomp$1_nshift_shift$$, $k$$, $hash$$, $v$$) {
    var $data$jscomp$193_forceCopy$$ = this.owner != $nowner$$;
    let $retval$$ = this.setOwner($nowner$$);
    var $bpos$jscomp$3_entry$jscomp$37_nnode$$ = module$contents$ham_fisted$BitmapTrie_bitpos($nbm$jscomp$1_nshift_shift$$, $hash$$);
    let $bm$$ = this.bitmap, $index$$ = module$contents$ham_fisted$BitmapTrie_bitIndex($bm$$, $bpos$jscomp$3_entry$jscomp$37_nnode$$);
    ($bm$$ & $bpos$jscomp$3_entry$jscomp$37_nnode$$) != 0 ? ($data$jscomp$193_forceCopy$$ = $data$jscomp$193_forceCopy$$ ? module$contents$ham_fisted$BitmapTrie_copyOf(this.data, this.data.length) : this.data, $bpos$jscomp$3_entry$jscomp$37_nnode$$ = this.data[$index$$], $bpos$jscomp$3_entry$jscomp$37_nnode$$ instanceof module$contents$ham_fisted$BitmapTrie_BitmapNode ? $data$jscomp$193_forceCopy$$[$index$$] = $bpos$jscomp$3_entry$jscomp$37_nnode$$.assoc($nowner$$, module$contents$ham_fisted$BitmapTrie_incShift($nbm$jscomp$1_nshift_shift$$), 
    $k$$, $hash$$, $v$$) : $hash$$ == $bpos$jscomp$3_entry$jscomp$37_nnode$$.hashcode ? $data$jscomp$193_forceCopy$$[$index$$] = $bpos$jscomp$3_entry$jscomp$37_nnode$$.assoc($nowner$$, $nbm$jscomp$1_nshift_shift$$, $k$$, $hash$$, $v$$) : ($nbm$jscomp$1_nshift_shift$$ = module$contents$ham_fisted$BitmapTrie_incShift($nbm$jscomp$1_nshift_shift$$), $bpos$jscomp$3_entry$jscomp$37_nnode$$ = module$contents$ham_fisted$BitmapTrie_BitmapNode.newNode($nowner$$, $nbm$jscomp$1_nshift_shift$$, $bpos$jscomp$3_entry$jscomp$37_nnode$$), 
    $data$jscomp$193_forceCopy$$[$index$$] = $bpos$jscomp$3_entry$jscomp$37_nnode$$.assoc($nowner$$, $nbm$jscomp$1_nshift_shift$$, $k$$, $hash$$, $v$$)), $retval$$.data = $data$jscomp$193_forceCopy$$) : ($nbm$jscomp$1_nshift_shift$$ = $bm$$ | $bpos$jscomp$3_entry$jscomp$37_nnode$$, $retval$$.data = module$contents$ham_fisted$BitmapTrie_insert(this.data, module$contents$ham_fisted$BitmapTrie_LeafNode.newNode($nowner$$, $k$$, $v$$, $hash$$), $index$$, module$contents$ham_fisted$BitmapTrie_bitCount32($nbm$jscomp$1_nshift_shift$$), 
    $data$jscomp$193_forceCopy$$), $retval$$.bitmap = $nbm$jscomp$1_nshift_shift$$);
    return $retval$$;
  }
  dissoc($nentry$jscomp$1_nowner$$, $shift$$, $k$$, $hash$$, $collapse$jscomp$3_data$$) {
    var $bpos$jscomp$4_nbm$$ = module$contents$ham_fisted$BitmapTrie_bitpos($shift$$, $hash$$);
    let $bm$$ = this.bitmap, $forceCopy$$ = this.owner != $nentry$jscomp$1_nowner$$;
    if (($bm$$ & $bpos$jscomp$4_nbm$$) != 0) {
      let $index$$ = module$contents$ham_fisted$BitmapTrie_bitIndex($bm$$, $bpos$jscomp$4_nbm$$), $entry$$ = this.data[$index$$], $retval$$ = this.setOwner($nentry$jscomp$1_nowner$$);
      $nentry$jscomp$1_nowner$$ = $entry$$.dissoc($nentry$jscomp$1_nowner$$, module$contents$ham_fisted$BitmapTrie_incShift($shift$$), $k$$, $hash$$, $collapse$jscomp$3_data$$);
      if ($nentry$jscomp$1_nowner$$ == null) {
        $bpos$jscomp$4_nbm$$ = $bm$$ & ~$bpos$jscomp$4_nbm$$;
        if ($bpos$jscomp$4_nbm$$ == 0 && $collapse$jscomp$3_data$$) {
          return null;
        }
        $retval$$.data = module$contents$ham_fisted$BitmapTrie_removeEntry(this.data, $index$$, module$contents$ham_fisted$BitmapTrie_bitCount32($bm$$), $forceCopy$$);
        $retval$$.bitmap = $bpos$jscomp$4_nbm$$;
      } else {
        $collapse$jscomp$3_data$$ = $forceCopy$$ ? module$contents$ham_fisted$BitmapTrie_copyOf(this.data, this.data.length) : this.data, $collapse$jscomp$3_data$$[$index$$] = $nentry$jscomp$1_nowner$$, $retval$$.data = $collapse$jscomp$3_data$$;
      }
      return $retval$$;
    }
    return this;
  }
  updateValues($owner$$, $bifn$$) {
    let $rv$$ = this.setOwner($owner$$);
    this != $rv$$ && ($rv$$.data = module$contents$ham_fisted$BitmapTrie_copyOf($rv$$.data, $rv$$.data.length));
    let $l$$ = module$contents$ham_fisted$BitmapTrie_bitCount32(this.bitmap), $d$$ = $rv$$.data;
    for (let $idx$$ = 0; $idx$$ < $l$$; ++$idx$$) {
      $d$$[$idx$$] = $d$$[$idx$$].updateValues($owner$$, $bifn$$);
    }
    return $rv$$;
  }
  iterator() {
    return new class {
      constructor($bitmap$$, $data$$) {
        this.nElems = module$contents$ham_fisted$BitmapTrie_bitCount32($bitmap$$);
        this.idx = 0;
        this.data = $data$$;
        this.iter = null;
      }
      hasNext() {
        return this.idx < this.nElems || this.iter != null && this.iter.hasNext();
      }
      next() {
        let $iter$$ = this.iter;
        $iter$$ != null && $iter$$.hasNext() || (this.iter = this.data[this.idx].iterator(), this.idx++);
        return this.iter.next();
      }
    }(this.bitmap, this.data);
  }
  reduceLeaves($rfn$$, $acc$$) {
    let $nnodes$$ = module$contents$ham_fisted$BitmapTrie_bitCount32(this.bitmap), $data$$ = this.data, $isReduced$$ = this.owner.isReduced;
    for (let $idx$$ = 0; $idx$$ < $nnodes$$ && !$isReduced$$($acc$$); ++$idx$$) {
      $acc$$ = $data$$[$idx$$].reduceLeaves($rfn$$, $acc$$);
    }
    return $acc$$;
  }
}, module$contents$ham_fisted$BitmapTrie_MapBase = class {
  size() {
    return this.count;
  }
  isEmpty() {
    return this.count == 0;
  }
  asObject() {
    this.proxy == null && (this.proxy = module$contents$ham_fisted$BitmapTrie_mapProxy(this));
    return this.proxy;
  }
  hashCode() {
    let $p$$ = this;
    return module$contents$ham_fisted$BitmapTrie_hash_unordered(this.hash, {reduce($rfn$$, $acc$$) {
      return $p$$.reduceLeaves($rfn$$, $acc$$);
    }});
  }
  put($k$$, $v$$) {
    this.getOrCreate($k$$).v = $v$$;
  }
  set($k$$, $v$$) {
    this.put($k$$, $v$$);
  }
  get($k$jscomp$716_lf$$) {
    $k$jscomp$716_lf$$ = this.getNode($k$jscomp$716_lf$$);
    return $k$jscomp$716_lf$$ != null ? $k$jscomp$716_lf$$.v : null;
  }
  getOrDefault($k$jscomp$717_lf$$, $d$$) {
    $k$jscomp$717_lf$$ = this.getNode($k$jscomp$717_lf$$);
    return $k$jscomp$717_lf$$ != null ? $k$jscomp$717_lf$$.v : $d$$;
  }
  containsKey($k$$) {
    return this.getNode($k$$) != null;
  }
  has($k$$) {
    return this.containsKey($k$$);
  }
  delete($k$$) {
    return this.remove($k$$);
  }
  computeIfAbsent($k$$, $f$$) {
    let $n$$ = this.getOrCreate($k$$);
    $n$$.v == null && ($n$$.v = $f$$($k$$));
    return $n$$.v;
  }
  computeIfPresent($k$$, $bifn$$) {
    let $n$$ = this.getNode($k$$);
    return $n$$ != null ? ($n$$.v = $bifn$$($k$$, $n$$.v), $n$$.v) : null;
  }
  compute($k$$, $bifn$$) {
    let $n$$ = this.getOrCreate($k$$);
    $n$$.v = $bifn$$($k$$, $n$$.v);
    return $n$$.v;
  }
  forEach($cback$$) {
    let $m$$ = this;
    this.reduceLeaves(($cback$$, $e$$) => {
      $cback$$($e$$.getValue(), $e$$.getKey(), $m$$);
      return $cback$$;
    }, $cback$$);
  }
  call($m$$, ...$args$$) {
    if ($args$$.length == 1) {
      return this.get($args$$[0]);
    }
    if ($args$$.length == 2) {
      return this.getOrDefault($args$$[0], $args$$[1]);
    }
    throw Error("Invalid invocation");
  }
  meta() {
    return this.meta;
  }
  withMeta($m$$) {
    let $retval$$ = this.shallowClone();
    $retval$$.meta = $m$$;
    return $retval$$;
  }
  leaves() {
    const $p$$ = this;
    return {length:$p$$.count, reduce:($rfn$$, $init$$) => $p$$.reduceLeaves($rfn$$, $init$$), [Symbol.iterator]:() => {
      const $i$$ = $p$$.iterator();
      return {next:() => {
        const $hn$$ = $i$$.hasNext();
        return {done:!$hn$$, value:$hn$$ ? $i$$.next() : void 0};
      }};
    }};
  }
  keySet() {
    const $p$$ = this;
    let $rv$$ = module$contents$ham_fisted$BitmapTrie_lznc_map_1(this.hp, $e$$ => $e$$.k, this.leaves());
    $rv$$.contains = $k$$ => $p$$.containsKey($k$$);
    return $rv$$;
  }
  entrySet() {
    const $eq$$ = this.hp.equals;
    let $rv$$ = module$contents$ham_fisted$BitmapTrie_lznc_map_1(this.hp, $e$$ => [$e$$.k, $e$$.v], this.leaves());
    $rv$$.contains = $kv$$ => {
      const $n$$ = this.getNode($kv$$[0]);
      return $n$$ ? $eq$$($kv$$[1], $n$$.v) : !1;
    };
    return $rv$$;
  }
  keys() {
    return this.keySet();
  }
  values() {
    return module$contents$ham_fisted$BitmapTrie_lznc_map_1(this.hp, $e$$ => $e$$.v, this.leaves());
  }
  entries() {
    return this.entrySet();
  }
  [Symbol.iterator]() {
    return this.entries()[Symbol.iterator]();
  }
  reduce($rfn$$, $acc$$) {
    return this.leaves().reduce($rfn$$, $acc$$);
  }
  toString() {
    return this.reduceLeaves(($acc$$, $v$$) => $acc$$.length == 1 ? $acc$$ + module$contents$ham_fisted$BitmapTrie_nilstr($v$$.getKey()) + " " + module$contents$ham_fisted$BitmapTrie_nilstr($v$$.getValue()) : $acc$$ + ", " + module$contents$ham_fisted$BitmapTrie_nilstr($v$$.getKey()) + " " + module$contents$ham_fisted$BitmapTrie_nilstr($v$$.getValue()), "{") + "}";
  }
}, module$contents$ham_fisted$BitmapTrie_BitmapTrie = class extends module$contents$ham_fisted$BitmapTrie_MapBase {
  constructor($hashProvider$$, $nullLeaf$$, $root$$, $count$$) {
    super();
    this.hp = $hashProvider$$;
    this.hash = $hashProvider$$.hash;
    this.equals = $hashProvider$$.equals;
    this.isReduced = $hashProvider$$.isReduced;
    this.unreduce = $hashProvider$$.unreduce;
    this.print = $hashProvider$$.print;
    this.root = $root$$ != null ? $root$$ : module$contents$ham_fisted$BitmapTrie_BitmapNode.newNode(this, 0, null);
    this.nullLeaf = $nullLeaf$$;
    this.count = $count$$;
    this.incLeaf = () => this.count++;
    this.decLeaf = () => this.count--;
  }
  static newTrie($hashProvider$$) {
    return new module$contents$ham_fisted$BitmapTrie_BitmapTrie($hashProvider$$, null, null, 0);
  }
  getOrCreate($k$$) {
    let $hash$$ = this.hash($k$$);
    return $k$$ == null ? (this.nullLeaf == null && (this.nullLeaf = new module$contents$ham_fisted$BitmapTrie_LeafNode(this, $k$$, 0)), this.nullLeaf) : this.root.getOrCreate($k$$, 0, $hash$$);
  }
  getNode($k$$) {
    let $hash$$ = this.hash($k$$);
    return $k$$ == null ? this.nullLeaf : this.root.getNode($k$$, 0, $hash$$);
  }
  reduceLeaves($invoker$jscomp$4_rfn$$, $acc$$) {
    const $isReduced$$ = this.hp.isReduced, $unreduce$$ = this.hp.unreduce;
    $invoker$jscomp$4_rfn$$ = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($invoker$jscomp$4_rfn$$);
    this.nullEntry == null || $isReduced$$($acc$$) || ($acc$$ = $invoker$jscomp$4_rfn$$($acc$$, this.nullEntry));
    return $unreduce$$(this.root.reduceLeaves($invoker$jscomp$4_rfn$$, $acc$$));
  }
  remove($k$$) {
    let $c$$ = this.count;
    $k$$ == null ? this.nullLeaf != null && (this.count--, this.nullLeaf = null) : this.root.remove($k$$, this.hp.hash($k$$), !1);
    return $c$$ != this.count;
  }
  shallowClone() {
    return new module$contents$ham_fisted$BitmapTrie_BitmapTrie(this.hp, this.nullEntry, this.root, this.count);
  }
  clone() {
    const $rv$$ = this.shallowClone();
    $rv$$.nullEntry != null && ($rv$$.nullEntry = $rv$$.nullEntry.clone($rv$$));
    $rv$$.root = $rv$$.root.clone($rv$$);
    return $rv$$;
  }
  mutAssoc($k$$, $v$$) {
    $k$$ == null ? this.nullEntry == null ? this.put($k$$, $v$$) : this.nullEntry = this.nullEntry.assoc(this, 0, $k$$, 0, $v$$) : this.root = this.root.assoc(this, 0, $k$$, this.hp.hash($k$$), $v$$);
    return this;
  }
  mutDissoc($k$$) {
    $k$$ == null ? this.nullEntry != null && (this.nullEntry = this.nullEntry.dissoc(this, 0, $k$$, 0, !1)) : this.root = this.root.dissoc(this, 0, $k$$, this.hp.hash($k$$), !1);
    return this;
  }
  mutUpdateValues($bfn$$) {
    this.nullEntry != null && (this.nullEntry = this.nullEntry.updateValues(this, $bfn$$));
    this.root = this.root.updateValues(this, $bfn$$);
  }
  iterator() {
    return new class {
      constructor($nullEntry$$, $root$$) {
        this.nullEntry = $nullEntry$$;
        this.rootIter = $root$$.iterator();
      }
      hasNext() {
        return this.nullEntry != null || this.rootIter.hasNext();
      }
      next() {
        let $rval$$ = this.nullEntry != null ? this.nullEntry : this.rootIter.next();
        this.nullEntry = null;
        return $rval$$;
      }
    }(this.nullEntry, this.root);
  }
}, module$contents$ham_fisted$BitmapTrie_HashTable = class extends module$contents$ham_fisted$BitmapTrie_MapBase {
  constructor($hashProvider$$, $loadFactor$$, $initialCapacity$$, $count$$, $data$$) {
    super();
    this.loadFactor = $loadFactor$$;
    this.capacity = module$contents$ham_fisted$BitmapTrie_nextPow2($initialCapacity$$);
    this.mask = this.capacity - 1 | 0;
    this.threshold = Math.floor(this.loadFactor * this.capacity) | 0;
    this.data = $data$$ == null ? Array(this.capacity) : $data$$;
    this.count = $count$$ == null ? 0 : $count$$;
    this.hp = $hashProvider$$;
    this.hash = $hashProvider$$.hash;
    this.equals = $hashProvider$$.equals;
    this.incLeaf = () => this.count++;
    this.decLeaf = () => this.count--;
  }
  static newHashTable($hashProvider$$, $loadFactor$$, $initialCapacity$$) {
    return new module$contents$ham_fisted$BitmapTrie_HashTable($hashProvider$$, $loadFactor$$, $initialCapacity$$, 0, null);
  }
  checkResize($node$$) {
    if (this.count >= this.threshold) {
      const $oldData$$ = this.data;
      var $mask$$ = this.capacity * 2;
      this.capacity = $mask$$;
      this.threshold = Math.floor(this.capacity * this.loadFactor) | 0;
      this.data = Array($mask$$);
      this.mask = $mask$$ - 1 | 0;
      const $newData$$ = this.data, $oldCap$$ = $oldData$$.length;
      --$mask$$;
      for (let $idx$$ = 0; $idx$$ < $oldCap$$; ++$idx$$) {
        let $lf$$ = $oldData$$[$idx$$];
        if ($lf$$ != null) {
          if ($oldData$$[$idx$$] = null, $lf$$.nextNode == null) {
            $newData$$[$lf$$.hashcode & $mask$$] = $lf$$;
          } else {
            let $loHead$$ = null, $loTail$$ = null, $hiHead$$ = null, $hiTail$$ = null;
            do {
              ($lf$$.hashcode & $oldCap$$) == 0 ? ($loTail$$ == null ? $loHead$$ = $lf$$ : $loTail$$.nextNode = $lf$$, $loTail$$ = $lf$$) : ($hiTail$$ == null ? $hiHead$$ = $lf$$ : $hiTail$$.nextNode = $lf$$, $hiTail$$ = $lf$$), $lf$$ = $lf$$.nextNode;
            } while ($lf$$ != null);
            $loHead$$ != null && ($loTail$$.nextNode = null, $newData$$[$idx$$] = $loHead$$);
            $hiHead$$ != null && ($hiTail$$.nextNode = null, $newData$$[$idx$$ + $oldCap$$] = $hiHead$$);
          }
        }
      }
    }
    return $node$$;
  }
  getOrCreate($k$jscomp$730_lf$$) {
    let $hashcode$$ = this.hash($k$jscomp$730_lf$$), $bucket$$ = $hashcode$$ & this.mask, $ee$$ = null, $e$$;
    for ($e$$ = this.data[$bucket$$]; $e$$ != null && $e$$.k != $k$jscomp$730_lf$$ && !this.equals($e$$.k, $k$jscomp$730_lf$$); $e$$ = $e$$.nextNode) {
      $ee$$ = $e$$;
    }
    if ($e$$ != null) {
      return $e$$;
    }
    $k$jscomp$730_lf$$ = module$contents$ham_fisted$BitmapTrie_LeafNode.newNode(this, $k$jscomp$730_lf$$, null, $hashcode$$);
    $ee$$ != null ? $ee$$.nextNode = $k$jscomp$730_lf$$ : this.data[$bucket$$] = $k$jscomp$730_lf$$;
    return this.checkResize($k$jscomp$730_lf$$);
  }
  getNode($k$$) {
    var $bucket$jscomp$11_lf$$ = this.hash($k$$) & this.mask;
    for ($bucket$jscomp$11_lf$$ = this.data[$bucket$jscomp$11_lf$$]; $bucket$jscomp$11_lf$$ != null; $bucket$jscomp$11_lf$$ = $bucket$jscomp$11_lf$$.nextNode) {
      if (this.equals($bucket$jscomp$11_lf$$.k, $k$$)) {
        return $bucket$jscomp$11_lf$$;
      }
    }
    return null;
  }
  remove($k$$) {
    let $sz$$ = this.size(), $hashcode$$ = this.hash($k$$), $bucket$$ = $hashcode$$ & this.mask, $entry$$ = this.data[$bucket$$];
    $entry$$ != null && (this.data[$bucket$$] = $entry$$.remove($k$$, $hashcode$$, !0));
    return $sz$$ != this.size();
  }
  compute($k$jscomp$733_lf$$, $bifn$jscomp$4_newv$$) {
    let $hashcode$$ = this.hash($k$jscomp$733_lf$$), $bucket$$ = $hashcode$$ & this.mask, $ee$$ = null, $e$$;
    for ($e$$ = this.data[$bucket$$]; $e$$ != null && $e$$.k != $k$jscomp$733_lf$$ && !this.equals($e$$.k, $k$jscomp$733_lf$$); $e$$ = $e$$.nextNode) {
      $ee$$ = $e$$;
    }
    $bifn$jscomp$4_newv$$ = $bifn$jscomp$4_newv$$($k$jscomp$733_lf$$, $e$$ != null ? $e$$.v : null);
    $e$$ != null ? $bifn$jscomp$4_newv$$ != null ? $e$$.v = $bifn$jscomp$4_newv$$ : this.remove($k$jscomp$733_lf$$) : ($k$jscomp$733_lf$$ = new module$contents$ham_fisted$BitmapTrie_LeafNode(this, $k$jscomp$733_lf$$, $bifn$jscomp$4_newv$$, $hashcode$$, null), $ee$$ != null ? $ee$$.nextNode = $k$jscomp$733_lf$$ : this.data[$bucket$$] = $k$jscomp$733_lf$$, this.incLeaf(), this.checkResize(null));
    return $bifn$jscomp$4_newv$$;
  }
  computeIfAbsent($k$jscomp$734_lf$$, $fn$jscomp$46_newv$$) {
    let $hashcode$$ = this.hash($k$jscomp$734_lf$$), $bucket$$ = $hashcode$$ & this.mask, $ee$$ = null, $e$$;
    for ($e$$ = this.data[$bucket$$]; $e$$ != null && $e$$.k != $k$jscomp$734_lf$$ && !this.equals($e$$.k, $k$jscomp$734_lf$$); $e$$ = $e$$.nextNode) {
      $ee$$ = $e$$;
    }
    if ($e$$ != null) {
      return $e$$.v;
    }
    $fn$jscomp$46_newv$$ = $fn$jscomp$46_newv$$($k$jscomp$734_lf$$);
    $k$jscomp$734_lf$$ = new module$contents$ham_fisted$BitmapTrie_LeafNode(this, $k$jscomp$734_lf$$, $fn$jscomp$46_newv$$, $hashcode$$, null);
    $ee$$ != null ? $ee$$.nextNode = $k$jscomp$734_lf$$ : this.data[$bucket$$] = $k$jscomp$734_lf$$;
    this.incLeaf();
    return this.checkResize($fn$jscomp$46_newv$$);
  }
  shallowClone() {
    return new module$contents$ham_fisted$BitmapTrie_HashTable(this.hp, this.loadFactor, this.capacity, this.count, module$contents$ham_fisted$BitmapTrie_copyOf(this.data, this.data.length));
  }
  clone() {
    let $rv$$ = this.shallowClone(), $data$$ = $rv$$.data, $ne$$ = $data$$.length;
    for (let $idx$$ = 0; $idx$$ < $ne$$; ++$idx$$) {
      let $entry$$ = $data$$[$idx$$];
      $entry$$ != null && ($data$$[$idx$$] = $entry$$.clone($rv$$));
    }
    return $rv$$;
  }
  mutAssoc($k$$, $v$$) {
    let $hashcode$$ = this.hash($k$$), $bucket$$ = $hashcode$$ & this.mask, $entry$$ = this.data[$bucket$$];
    this.data[$bucket$$] = $entry$$ == null ? module$contents$ham_fisted$BitmapTrie_LeafNode.newNode(this, $k$$, $v$$, $hashcode$$) : $entry$$.assoc(this, 0, $k$$, $hashcode$$, $v$$);
    return this;
  }
  mutDissoc($k$$) {
    let $hashcode$$ = this.hash($k$$), $bucket$$ = $hashcode$$ & this.mask, $entry$$ = this.data[$bucket$$];
    $entry$$ != null && (this.data[$bucket$$] = $entry$$.dissoc(this, 0, $k$$, $hashcode$$, !0));
    return this;
  }
  mutUpdateValues($bfn$$) {
    let $d$$ = this.data, $l$$ = $d$$.length;
    for (let $idx$$ = 0; $idx$$ < $l$$; ++$idx$$) {
      let $e$$ = $d$$[$idx$$];
      $e$$ != null && ($d$$[$idx$$] = $e$$.updateValues(this, $bfn$$));
    }
    return this;
  }
  iterator() {
    return new class {
      constructor($data$$) {
        this.dlen = $data$$.length;
        this.data = $data$$;
        this.idx = 0;
        this.advance();
      }
      advance() {
        this.lf != null && (this.lf = this.lf.nextNode);
        if (this.lf == null) {
          let $ne$$ = this.dlen, $data$$ = this.data;
          for (let $idx$$ = this.idx; $idx$$ < $ne$$; ++$idx$$) {
            let $lf$$ = $data$$[$idx$$];
            if ($lf$$ != null) {
              this.lf = $lf$$;
              this.idx = $idx$$ + 1;
              return;
            }
          }
          this.idx = this.dlen;
        }
      }
      hasNext() {
        return this.lf != null;
      }
      next() {
        let $rv$$ = this.lf;
        this.advance();
        return $rv$$;
      }
    }(this.data);
  }
  reduceLeaves($invoker$jscomp$5_rfn$$, $acc$$) {
    if (this.count != 0) {
      const $data$$ = this.data, $nData$$ = $data$$.length, $isReduced$$ = this.hp.isReduced;
      $invoker$jscomp$5_rfn$$ = module$contents$ham_fisted$BitmapTrie_twoArgInvoker($invoker$jscomp$5_rfn$$);
      for (let $idx$$ = 0; $idx$$ < $nData$$ && !$isReduced$$($acc$$); ++$idx$$) {
        for (let $lf$$ = $data$$[$idx$$]; $lf$$ != null && !$isReduced$$($acc$$); $lf$$ = $lf$$.nextNode) {
          $acc$$ = $invoker$jscomp$5_rfn$$($acc$$, $lf$$);
        }
      }
    }
    return this.hp.unreduce($acc$$);
  }
};
ham_fisted.BitmapTrie.copyOf = module$contents$ham_fisted$BitmapTrie_copyOf;
ham_fisted.BitmapTrie.mask = module$contents$ham_fisted$BitmapTrie_mask;
ham_fisted.BitmapTrie.bitpos = module$contents$ham_fisted$BitmapTrie_bitpos;
ham_fisted.BitmapTrie.bitIndex = module$contents$ham_fisted$BitmapTrie_bitIndex;
ham_fisted.BitmapTrie.nextPow2 = module$contents$ham_fisted$BitmapTrie_nextPow2;
ham_fisted.BitmapTrie.insert = module$contents$ham_fisted$BitmapTrie_insert;
ham_fisted.BitmapTrie.defaultHash = module$contents$ham_fisted$BitmapTrie_defaultHash;
ham_fisted.BitmapTrie.makeHashProvider = module$contents$ham_fisted$BitmapTrie_makeHashProvider;
ham_fisted.BitmapTrie.sizeIfPossible = module$contents$ham_fisted$BitmapTrie_sizeIfPossible;
ham_fisted.BitmapTrie.makeTrie = module$contents$ham_fisted$BitmapTrie_makeBitmapTrie;
ham_fisted.BitmapTrie.makeHashTable = module$contents$ham_fisted$BitmapTrie_makeHashTable;
ham_fisted.BitmapTrie.mapProxy = module$contents$ham_fisted$BitmapTrie_mapProxy;
ham_fisted.BitmapTrie.rotLeft = module$contents$ham_fisted$BitmapTrie_rotLeft;
ham_fisted.BitmapTrie.m3_mix_K1 = module$contents$ham_fisted$BitmapTrie_m3_mix_K1;
ham_fisted.BitmapTrie.m3_mix_H1 = module$contents$ham_fisted$BitmapTrie_m3_mix_H1;
ham_fisted.BitmapTrie.m3_fmix = module$contents$ham_fisted$BitmapTrie_m3_fmix;
ham_fisted.BitmapTrie.hash_ordered = module$contents$ham_fisted$BitmapTrie_hash_ordered;
ham_fisted.BitmapTrie.cache_ordered = module$contents$ham_fisted$BitmapTrie_cache_ordered;
ham_fisted.BitmapTrie.hash_unordered = module$contents$ham_fisted$BitmapTrie_hash_unordered;
ham_fisted.BitmapTrie.cache_unordered = module$contents$ham_fisted$BitmapTrie_cache_unordered;
ham_fisted.BitmapTrie.mix_collection_hash = module$contents$ham_fisted$BitmapTrie_mix_collection_hash;
ham_fisted.BitmapTrie.objHashCode = module$contents$ham_fisted$BitmapTrie_objHashCode;
ham_fisted.BitmapTrie.reduce1 = module$contents$ham_fisted$BitmapTrie_reduce1;
ham_fisted.BitmapTrie.reduce = module$contents$ham_fisted$BitmapTrie_reduce;
ham_fisted.BitmapTrie.defaultProvider = module$contents$ham_fisted$BitmapTrie_defaultProvider;
ham_fisted.BitmapTrie.groupByReduce = module$contents$ham_fisted$BitmapTrie_groupByReduce;
ham_fisted.BitmapTrie.oneArgInvoker = module$contents$ham_fisted$BitmapTrie_oneArgInvoker;
ham_fisted.BitmapTrie.twoArgInvoker = module$contents$ham_fisted$BitmapTrie_twoArgInvoker;
ham_fisted.BitmapTrie.threeArgInvoker = module$contents$ham_fisted$BitmapTrie_threeArgInvoker;
ham_fisted.BitmapTrie.lznc_map_1 = module$contents$ham_fisted$BitmapTrie_lznc_map_1;
ham_fisted.BitmapTrie.lznc_map_2 = module$contents$ham_fisted$BitmapTrie_lznc_map_2;
ham_fisted.BitmapTrie.lznc_map_n = module$contents$ham_fisted$BitmapTrie_lznc_map_n;
ham_fisted.BitmapTrie.lznc_concat = module$contents$ham_fisted$BitmapTrie_lznc_concat;
ham_fisted.BitmapTrie.lznc_filter = module$contents$ham_fisted$BitmapTrie_lznc_filter;
ham_fisted.BitmapTrie.BitmapTrie = module$contents$ham_fisted$BitmapTrie_BitmapTrie;
ham_fisted.BitmapTrie.LeafNode = module$contents$ham_fisted$BitmapTrie_LeafNode;
ham_fisted.BitmapTrie.HashTable = module$contents$ham_fisted$BitmapTrie_HashTable;
ham_fisted.BitmapTrie.Map1Impl = module$contents$ham_fisted$BitmapTrie_Map1Impl;
ham_fisted.BitmapTrie.Map2Impl = module$contents$ham_fisted$BitmapTrie_Map2Impl;
ham_fisted.BitmapTrie.MapNImpl = module$contents$ham_fisted$BitmapTrie_MapNImpl;
ham_fisted.BitmapTrie.FilterImpl = module$contents$ham_fisted$BitmapTrie_FilterImpl;
ham_fisted.BitmapTrie.ConcatImpl = module$contents$ham_fisted$BitmapTrie_ConcatImpl;
ham_fisted.lazy_noncaching = {};
ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie = ham_fisted.BitmapTrie;
ham_fisted.lazy_noncaching.fhash = function($item$$) {
  return $item$$ == null ? 0 : typeof $item$$ === "number" ? 0 | Math.floor($item$$) : $APP.cljs.core.hash($item$$);
};
ham_fisted.lazy_noncaching.default_hash_provider = ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.makeHashProvider(ham_fisted.lazy_noncaching.fhash, $APP.cljs.core._EQ_, $APP.cljs.core.reduced_QMARK_, function($p1__76400_SHARP_$$) {
  return $APP.cljs.core.reduced_QMARK_($p1__76400_SHARP_$$) ? $APP.cljs.core.deref($p1__76400_SHARP_$$) : $p1__76400_SHARP_$$;
}, function($p1__76401_SHARP_$$) {
  return $APP.cljs.core.reduced_QMARK_($p1__76401_SHARP_$$) ? $APP.cljs.core.deref($p1__76401_SHARP_$$) : $p1__76401_SHARP_$$;
}, $APP.cljs.core.reduced, $APP.cljs.core.println);
ham_fisted.lazy_noncaching.js_iterator = function($obj$$) {
  var $temp__5823__auto__$$ = $obj$$[Symbol.iterator];
  if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
    return $temp__5823__auto__$$.call($obj$$);
  }
  var $i$$ = $APP.cljs.core.iter($obj$$);
  return {next:function() {
    return $APP.cljs.core.truth_($i$$.hasNext()) ? {done:!1, value:$i$$.next()} : {done:!0};
  }};
};
ham_fisted.lazy_noncaching.counted_QMARK_ = function($m$$) {
  var $or__5025__auto__$jscomp$639_or__5025__auto____$1$$ = $m$$.length;
  if ($APP.cljs.core.truth_($or__5025__auto__$jscomp$639_or__5025__auto____$1$$)) {
    return $or__5025__auto__$jscomp$639_or__5025__auto____$1$$;
  }
  $or__5025__auto__$jscomp$639_or__5025__auto____$1$$ = $m$$.size;
  return $APP.cljs.core.truth_($or__5025__auto__$jscomp$639_or__5025__auto____$1$$) ? $or__5025__auto__$jscomp$639_or__5025__auto____$1$$ : $APP.cljs.core.counted_QMARK_($m$$);
};
ham_fisted.lazy_noncaching.count = function($m$$) {
  if ($m$$ == null) {
    return 0;
  }
  var $temp__5823__auto__$jscomp$306_temp__5823__auto____$1$$ = $m$$.length;
  if ($APP.cljs.core.truth_($temp__5823__auto__$jscomp$306_temp__5823__auto____$1$$)) {
    return $temp__5823__auto__$jscomp$306_temp__5823__auto____$1$$;
  }
  $temp__5823__auto__$jscomp$306_temp__5823__auto____$1$$ = $m$$.size;
  return $APP.cljs.core.truth_($temp__5823__auto__$jscomp$306_temp__5823__auto____$1$$) ? $APP.cljs.core.fn_QMARK_($temp__5823__auto__$jscomp$306_temp__5823__auto____$1$$) ? $m$$.size() : $temp__5823__auto__$jscomp$306_temp__5823__auto____$1$$ : $APP.cljs.core.count($m$$);
};
ham_fisted.lazy_noncaching.coll_reducer = function($coll$$) {
  if ($coll$$ == null || $APP.cljs.core.array_QMARK_($coll$$)) {
    return $coll$$;
  }
  if (function() {
    var $and__5023__auto__$$ = $coll$$.reduce == null;
    return $and__5023__auto__$$ ? $coll$$ != null ? $coll$$.cljs$lang$protocol_mask$partition0$ & 524288 || $APP.cljs.core.PROTOCOL_SENTINEL === $coll$$.cljs$core$IReduce$ ? !0 : $coll$$.cljs$lang$protocol_mask$partition0$ ? !1 : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.IReduce, $coll$$) : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.IReduce, $coll$$) : $and__5023__auto__$$;
  }()) {
    var $rv$$ = function() {
      var $obj76413$$ = {reduce:function($p1__76408_SHARP_$$, $p2__76409_SHARP_$$) {
        return $APP.cljs.core._reduce($coll$$, $p1__76408_SHARP_$$, $p2__76409_SHARP_$$);
      }};
      $obj76413$$[Symbol.iterator] = function() {
        return ham_fisted.lazy_noncaching.js_iterator($coll$$);
      };
      return $obj76413$$;
    }(), $temp__5823__auto__$$ = $APP.cljs.core.truth_(ham_fisted.lazy_noncaching.counted_QMARK_($coll$$)) ? ham_fisted.lazy_noncaching.count($coll$$) : null;
    $APP.cljs.core.truth_($temp__5823__auto__$$) && ($rv$$.length = $temp__5823__auto__$$);
    return $rv$$;
  }
  return $coll$$;
};
ham_fisted.lazy_noncaching.map = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var $args_arr__5774__auto__$jscomp$96_argseq__5775__auto__$$ = [], $len__5749__auto___76429$$ = arguments.length, $i__5750__auto___76430$$ = 0;;) {
        if ($i__5750__auto___76430$$ < $len__5749__auto___76429$$) {
          $args_arr__5774__auto__$jscomp$96_argseq__5775__auto__$$.push(arguments[$i__5750__auto___76430$$]), $i__5750__auto___76430$$ += 1;
        } else {
          break;
        }
      }
      $args_arr__5774__auto__$jscomp$96_argseq__5775__auto__$$ = 3 < $args_arr__5774__auto__$jscomp$96_argseq__5775__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args_arr__5774__auto__$jscomp$96_argseq__5775__auto__$$.slice(3), 0, null) : null;
      return ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], $args_arr__5774__auto__$jscomp$96_argseq__5775__auto__$$);
  }
};
ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$1 = function($f$$) {
  return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1($f$$);
};
ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2 = function($f$$, $arg$$) {
  return $arg$$ == null ? $APP.cljs.core.List.EMPTY : ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.lznc_map_1(ham_fisted.lazy_noncaching.default_hash_provider, $f$$, ham_fisted.lazy_noncaching.coll_reducer($arg$$));
};
ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$3 = function($f$$, $lhs$$, $rhs$$) {
  return ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.lznc_map_2(ham_fisted.lazy_noncaching.default_hash_provider, $f$$, ham_fisted.lazy_noncaching.coll_reducer($lhs$$), ham_fisted.lazy_noncaching.coll_reducer($rhs$$));
};
ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$variadic = function($f$$, $lhs$$, $rhs$$, $args$$) {
  var $arg$$ = [];
  $arg$$.push(ham_fisted.lazy_noncaching.coll_reducer($lhs$$));
  $arg$$.push(ham_fisted.lazy_noncaching.coll_reducer($rhs$$));
  $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc$$, $v$$) {
    $acc$$.push(ham_fisted.lazy_noncaching.coll_reducer($v$$));
    return $acc$$;
  }, $arg$$, $args$$);
  return ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.lznc_map_n(ham_fisted.lazy_noncaching.default_hash_provider, $f$$, $arg$$);
};
ham_fisted.lazy_noncaching.map.cljs$lang$applyTo = function($G__76418_seq76416$$) {
  var $G__76417$$ = $APP.cljs.core.first($G__76418_seq76416$$), $G__76419_seq76416__$1$$ = $APP.cljs.core.next($G__76418_seq76416$$);
  $G__76418_seq76416$$ = $APP.cljs.core.first($G__76419_seq76416__$1$$);
  var $seq76416__$2_seq76416__$3$$ = $APP.cljs.core.next($G__76419_seq76416__$1$$);
  $G__76419_seq76416__$1$$ = $APP.cljs.core.first($seq76416__$2_seq76416__$3$$);
  $seq76416__$2_seq76416__$3$$ = $APP.cljs.core.next($seq76416__$2_seq76416__$3$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76417$$, $G__76418_seq76416$$, $G__76419_seq76416__$1$$, $seq76416__$2_seq76416__$3$$);
};
ham_fisted.lazy_noncaching.map.cljs$lang$maxFixedArity = 3;
ham_fisted.lazy_noncaching.filter = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return ham_fisted.lazy_noncaching.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.lazy_noncaching.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.lazy_noncaching.filter.cljs$core$IFn$_invoke$arity$1 = function($f$$) {
  return $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$1($f$$);
};
ham_fisted.lazy_noncaching.filter.cljs$core$IFn$_invoke$arity$2 = function($f$$, $arg$$) {
  return $arg$$ == null ? $APP.cljs.core.List.EMPTY : ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.lznc_filter(ham_fisted.lazy_noncaching.default_hash_provider, $f$$, ham_fisted.lazy_noncaching.coll_reducer($arg$$));
};
ham_fisted.lazy_noncaching.filter.cljs$lang$maxFixedArity = 2;
ham_fisted.lazy_noncaching.remove = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return ham_fisted.lazy_noncaching.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.lazy_noncaching.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.lazy_noncaching.remove.cljs$core$IFn$_invoke$arity$1 = function($f$$) {
  return ham_fisted.lazy_noncaching.filter.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.complement($f$$));
};
ham_fisted.lazy_noncaching.remove.cljs$core$IFn$_invoke$arity$2 = function($f$$, $arg$$) {
  return ham_fisted.lazy_noncaching.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.complement($f$$), $arg$$);
};
ham_fisted.lazy_noncaching.remove.cljs$lang$maxFixedArity = 2;
ham_fisted.lazy_noncaching.concat = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.lazy_noncaching.concat.cljs$core$IFn$_invoke$arity$0();
    default:
      for (var $args_arr__5774__auto__$jscomp$97_argseq__5775__auto__$$ = [], $len__5749__auto___76435$$ = arguments.length, $i__5750__auto___76436$$ = 0;;) {
        if ($i__5750__auto___76436$$ < $len__5749__auto___76435$$) {
          $args_arr__5774__auto__$jscomp$97_argseq__5775__auto__$$.push(arguments[$i__5750__auto___76436$$]), $i__5750__auto___76436$$ += 1;
        } else {
          break;
        }
      }
      $args_arr__5774__auto__$jscomp$97_argseq__5775__auto__$$ = 0 < $args_arr__5774__auto__$jscomp$97_argseq__5775__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args_arr__5774__auto__$jscomp$97_argseq__5775__auto__$$.slice(0), 0, null) : null;
      return ham_fisted.lazy_noncaching.concat.cljs$core$IFn$_invoke$arity$variadic($args_arr__5774__auto__$jscomp$97_argseq__5775__auto__$$);
  }
};
ham_fisted.lazy_noncaching.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return $APP.cljs.core.List.EMPTY;
};
ham_fisted.lazy_noncaching.concat.cljs$core$IFn$_invoke$arity$variadic = function($args$$) {
  return $APP.cljs.core.not($APP.cljs.core.seq($APP.cljs.core.rest($args$$))) ? $APP.cljs.core.first($args$$) : ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.lznc_concat(ham_fisted.lazy_noncaching.default_hash_provider, ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2(ham_fisted.lazy_noncaching.coll_reducer, $args$$));
};
ham_fisted.lazy_noncaching.concat.cljs$lang$applyTo = function($seq76426$$) {
  return this.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.seq($seq76426$$));
};
ham_fisted.lazy_noncaching.concat.cljs$lang$maxFixedArity = 0;
ham_fisted.lazy_noncaching.iter_seq__GT_string = function($opts$$, $iter$$) {
  return [$APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc$$, $v$$) {
    return $acc$$.length > 1024 ? $APP.cljs.core.reduced([$APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($acc$$), " ..."].join("")) : $acc$$.length > 1 ? [$APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($acc$$), " ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($v$$)].join("") : [$APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($acc$$), $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($v$$)].join("");
  }, "(", $iter$$)), ")"].join("");
};
ham_fisted.lazy_noncaching.extend_seq_type = function($t$$) {
  $t$$.prototype.cljs$core$IPrintWithWriter$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $t$$.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this$$$, $writer$$, $opts$$) {
    return $APP.cljs.core._write($writer$$, ham_fisted.lazy_noncaching.iter_seq__GT_string($opts$$, this));
  };
  $t$$.prototype.cljs$core$IReduce$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $t$$.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
    return ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.reduce1(this.hp, $rfn$$, this);
  };
  return $t$$.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $init$$) {
    return this.reduce($rfn$$, $init$$);
  };
};
ham_fisted.lazy_noncaching.extend_seq_type(ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.Map1Impl);
ham_fisted.lazy_noncaching.extend_seq_type(ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.Map2Impl);
ham_fisted.lazy_noncaching.extend_seq_type(ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.MapNImpl);
ham_fisted.lazy_noncaching.extend_seq_type(ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.FilterImpl);
ham_fisted.lazy_noncaching.extend_seq_type(ham_fisted.lazy_noncaching.goog$module$ham_fisted$BitmapTrie.ConcatImpl);
ham_fisted.ChunkedVec = {};
var module$contents$ham_fisted$ChunkedVec_ChunkedVector = class {
  constructor($hp$$, $l$$, $cap$$, $data$$, $meta$$) {
    this.hp = $hp$$;
    this.length = $l$$;
    this.capacity = $cap$$;
    this.data = $data$$;
    this.meta = $meta$$;
  }
  size() {
    return this.length;
  }
  ensureCapacity($newLen$$) {
    if ($newLen$$ > this.capacity) {
      $newLen$$ = $newLen$$ <= 32 ? ham_fisted.BitmapTrie.nextPow2(Math.max(4, $newLen$$)) : 32 * Math.ceil($newLen$$ / 32) | 0;
      let $nChunks$$ = Math.floor(($newLen$$ + 31) / 32) | 0;
      var $idx$$ = Math.floor((this.length + 31) / 32) | 0;
      for (this.data.length = $nChunks$$; $idx$$ < $nChunks$$; ++$idx$$) {
        var $curChunk_nextChunk$$ = this.data[$idx$$];
        let $nextLen$$ = $idx$$ == $nChunks$$ - 1 ? $newLen$$ % 32 : 32;
        $curChunk_nextChunk$$ = $curChunk_nextChunk$$ == null ? Array($nextLen$$) : ham_fisted.BitmapTrie.copyOf($curChunk_nextChunk$$, $nextLen$$);
        $curChunk_nextChunk$$.owner = this;
        this.data[$idx$$] = $curChunk_nextChunk$$;
      }
      this.capacity = $newLen$$;
    }
    return this.data;
  }
  hashCode() {
    return ham_fisted.BitmapTrie.hash_ordered(this.hp.hash, this);
  }
  shallowClone() {
    return new module$contents$ham_fisted$ChunkedVec_ChunkedVector(this.hp, this.length, this.capacity, ham_fisted.BitmapTrie.copyOf(this.data, this.data.length), this.meta);
  }
  clone() {
    let $rv$$ = this.shallowClone(), $newData$$ = $rv$$.data, $l$$ = $newData$$.length;
    for (let $idx$$ = 0; $idx$$ < $l$$; ++$idx$$) {
      $newData$$[$idx$$] = this.setOwner($newData$$, $idx$$, $rv$$);
    }
    return $rv$$;
  }
  add($v$$) {
    let $l$$ = this.length;
    this.ensureCapacity($l$$ + 1)[Math.floor($l$$ / 32)][$l$$ % 32] = $v$$;
    this.length++;
  }
  get($idx$$) {
    if ($idx$$ >= this.length) {
      throw Error("Index out of range: " + $idx$$ + " : " + this.length);
    }
    return this.data[Math.floor($idx$$ / 32) | 0][$idx$$ % 32];
  }
  set($idx$$, $v$$) {
    if ($idx$$ >= this.length) {
      throw Error("Index out of range: " + $idx$$ + " : " + this.length);
    }
    this.data[Math.floor($idx$$ / 32) | 0][$idx$$ % 32] = $v$$;
  }
  addAll($newData$$) {
    if ($newData$$ != null) {
      var $nl$jscomp$5_sz$$ = ham_fisted.BitmapTrie.sizeIfPossible($newData$$), $len$$ = this.length;
      if ($nl$jscomp$5_sz$$) {
        $nl$jscomp$5_sz$$ = $len$$ + $nl$jscomp$5_sz$$;
        if (Array.isArray($newData$$)) {
          let $data$$ = this.data;
          $data$$.length = Math.ceil($nl$jscomp$5_sz$$ / 32) | 0;
          for (let $idx$$ = $len$$; $idx$$ < $nl$jscomp$5_sz$$; $idx$$ += 32) {
            var $cidx$$ = Math.floor($idx$$ / 32) | 0;
            let $cstart$$ = $idx$$ % 32, $clen$$ = Math.min(32 - $cstart$$, $nl$jscomp$5_sz$$ - $idx$$), $chunk$$ = $data$$[$cidx$$];
            var $dchunk_doff$$ = $idx$$ - $len$$;
            $dchunk_doff$$ = $newData$$.slice($dchunk_doff$$, $dchunk_doff$$ + $clen$$);
            if ($chunk$$ != null) {
              for ($chunk$$.length = $cstart$$, $cidx$$ = 0; $cidx$$ < $clen$$; ++$cidx$$) {
                $chunk$$.push($dchunk_doff$$[$cidx$$]);
              }
            } else {
              $data$$[$cidx$$] = $dchunk_doff$$;
            }
            $idx$$ -= $cstart$$;
          }
        } else {
          const $data$$ = this.ensureCapacity($nl$jscomp$5_sz$$);
          let $ll$$ = $len$$ | 0;
          ham_fisted.BitmapTrie.reduce(null, ($acc$$, $v$$) => {
            $data$$[$ll$$ / 32 | 0][$ll$$ % 32] = $v$$;
            ++$ll$$;
            return $data$$;
          }, null, $newData$$);
        }
        this.length = $nl$jscomp$5_sz$$;
      } else {
        ham_fisted.BitmapTrie.reduce(null, ($cv$$, $v$$) => {
          $cv$$.add($v$$);
          return $cv$$;
        }, this, $newData$$);
      }
    }
  }
  toString() {
    return this.reduce(($acc$$, $v$$) => $acc$$ + ($acc$$.length > 1 ? " " + module$contents$ham_fisted$ChunkedVec_safeStr($v$$) : module$contents$ham_fisted$ChunkedVec_safeStr($v$$)), "[") + "]";
  }
  setChunkOwner($ary$$, $cidx$$, $owner$$) {
    let $chunk$$ = $ary$$[$cidx$$];
    if ($chunk$$ == null || $chunk$$.owner == $owner$$) {
      return $chunk$$;
    }
    $chunk$$ = ham_fisted.BitmapTrie.copyOf($chunk$$, $chunk$$.length);
    $chunk$$.owner = this;
    return $ary$$[$cidx$$] = $chunk$$;
  }
  mutAssoc($idx$$, $val$$) {
    if ($idx$$ < 0 || $idx$$ > this.length) {
      throw Error("Invalid index: " + $idx$$ + " \x3e " + this.length);
    }
    let $data$$ = $idx$$ == this.length ? this.ensureCapacity(this.length++) : this.data;
    this.setChunkOwner($data$$, Math.floor($idx$$ / 32), this)[$idx$$ % 32] = $val$$;
    return this;
  }
  mutPop() {
    let $l$$ = this.length;
    if ($l$$ == 0) {
      throw Error("Attempt to pop empty vector.");
    }
    this.mutAssoc($l$$ - 1, null);
    --this.length;
    return this;
  }
  reduce($rfn$$, $acc$jscomp$117_init$$) {
    $rfn$$ = ham_fisted.BitmapTrie.twoArgInvoker($rfn$$);
    const $isReduced$$ = this.hp.isReduced, $l$$ = this.length, $d$$ = this.data, $nc$$ = Math.ceil($l$$ / 32) | 0;
    if ($isReduced$$($acc$jscomp$117_init$$)) {
      return this.up.unreduce($acc$jscomp$117_init$$);
    }
    for (let $idx$$ = 0; $idx$$ < $nc$$; ++$idx$$) {
      const $chunk$$ = $d$$[$idx$$], $clen$$ = Math.min(32, $l$$ - $idx$$ * 32) | 0;
      for (let $cidx$$ = 0; $cidx$$ < $clen$$; ++$cidx$$) {
        if ($acc$jscomp$117_init$$ = $rfn$$($acc$jscomp$117_init$$, $chunk$$[$cidx$$]), $isReduced$$($acc$jscomp$117_init$$)) {
          return this.hp.unreduce($acc$jscomp$117_init$$);
        }
      }
    }
    return $acc$jscomp$117_init$$;
  }
  [Symbol.iterator]() {
    let $l$$ = this.length, $idx$$ = 0, $data$$ = this.data;
    return {next:() => {
      var $done$jscomp$13_rv$$ = $idx$$ >= $l$$;
      $done$jscomp$13_rv$$ = {value:$done$jscomp$13_rv$$ ? void 0 : $data$$[Math.floor($idx$$ / 32)][$idx$$ % 32], done:$done$jscomp$13_rv$$};
      ++$idx$$;
      return $done$jscomp$13_rv$$;
    }};
  }
  toArray() {
    return this.reduce(module$contents$ham_fisted$ChunkedVec_indexedAccum(($rv$$, $idx$$, $v$$) => {
      $rv$$[$idx$$] = $v$$;
      return $rv$$;
    }), Array(this.length));
  }
  meta() {
    return this.meta;
  }
  withMeta($m$$) {
    return new module$contents$ham_fisted$ChunkedVec_ChunkedVector(this.hp, this.l, this.capacity, this.data, $m$$);
  }
}, module$contents$ham_fisted$ChunkedVec_Range = class {
  constructor($start$$, $end$$, $step$$, $hp$$) {
    this.start = $start$$;
    this.end = $end$$;
    this.step = $step$$;
    this.length = Math.max(0, Math.floor(($end$$ - $start$$) / $step$$));
    this.hp = $hp$$;
    this.isint = Number.isInteger($start$$) && Number.isInteger($end$$) && Number.isInteger($step$$);
  }
  isInteger() {
    return this.isint;
  }
  hashCode() {
    return ham_fisted.BitmapTrie.cached_ordered(this.hp.hash, this);
  }
  size() {
    return this.length;
  }
  get($idx$$) {
    if ($idx$$ < 0 || $idx$$ >= this.length) {
      throw Error("Index out of range:" + $idx$$ + " : " + this.length);
    }
    return this.start + this.step * $idx$$;
  }
  reduce($invoker$jscomp$7_rfn$$, $acc$$) {
    const $isReduced$$ = this.hp.isReduced, $unreduce$$ = this.hp.unreduce;
    $invoker$jscomp$7_rfn$$ = ham_fisted.BitmapTrie.twoArgInvoker($invoker$jscomp$7_rfn$$);
    const $l$$ = this.length, $start$$ = this.start, $step$$ = this.step;
    for (let $idx$$ = 0; $idx$$ < $l$$; ++$idx$$) {
      if ($acc$$ = $invoker$jscomp$7_rfn$$($acc$$, $start$$ + $step$$ * $idx$$), $isReduced$$($acc$$)) {
        return $unreduce$$($acc$$);
      }
    }
    return $acc$$;
  }
  [Symbol.iterator]() {
    const $l$$ = this.length, $start$$ = this.start, $step$$ = this.step;
    let $idx$$ = 0;
    return {next:() => {
      var $done$jscomp$14_rv$$ = $idx$$ >= $l$$;
      $done$jscomp$14_rv$$ = {value:$done$jscomp$14_rv$$ ? void 0 : $start$$ + $step$$ * $idx$$, done:$done$jscomp$14_rv$$};
      ++$idx$$;
      return $done$jscomp$14_rv$$;
    }};
  }
}, module$contents$ham_fisted$ChunkedVec_Sum = class {
  constructor() {
    this.s = this.n = 0;
  }
  accept($v$$) {
    this.n++;
    this.s += $v$$;
  }
  deref() {
    return this;
  }
}, module$contents$ham_fisted$ChunkedVec_MMaxKey = class {
  constructor($ifn$$) {
    this.v = this.k = null;
    this.ifn = ham_fisted.BitmapTrie.oneArgInvoker($ifn$$);
  }
  accept($v$$) {
    if (this.k == null) {
      this.k = this.ifn($v$$), this.v = $v$$;
    } else {
      const $kk$$ = this.ifn($v$$);
      $kk$$ >= this.k && (this.k = $kk$$, this.v = $v$$);
    }
  }
  deref() {
    return this.v;
  }
}, module$contents$ham_fisted$ChunkedVec_MMinKey = class {
  constructor($ifn$$) {
    this.v = this.k = null;
    this.ifn = ham_fisted.BitmapTrie.oneArgInvoker($ifn$$);
  }
  accept($v$$) {
    if (this.k == null) {
      this.k = this.ifn($v$$), this.v = $v$$;
    } else {
      const $kk$$ = this.ifn($v$$);
      $kk$$ <= this.k && (this.k = $kk$$, this.v = $v$$);
    }
  }
  deref() {
    return this.v;
  }
};
ham_fisted.ChunkedVec.indexedAccum = module$contents$ham_fisted$ChunkedVec_indexedAccum;
ham_fisted.ChunkedVec.makeChunkedVec = module$contents$ham_fisted$ChunkedVec_makeChunkedVec;
ham_fisted.ChunkedVec.addVal = ($a$$, $b$$) => $a$$ + $b$$;
ham_fisted.ChunkedVec.decVal = ($a$$, $b$$) => $a$$ - $b$$;
ham_fisted.ChunkedVec.range = module$contents$ham_fisted$ChunkedVec_range;
ham_fisted.ChunkedVec.sum = () => new module$contents$ham_fisted$ChunkedVec_Sum();
ham_fisted.ChunkedVec.mmax_key = $fn$$ => new module$contents$ham_fisted$ChunkedVec_MMaxKey($fn$$);
ham_fisted.ChunkedVec.mmin_key = $fn$$ => new module$contents$ham_fisted$ChunkedVec_MMinKey($fn$$);
ham_fisted.ChunkedVec.ChunkedVector = module$contents$ham_fisted$ChunkedVec_ChunkedVector;
ham_fisted.ChunkedVec.Range = module$contents$ham_fisted$ChunkedVec_Range;
ham_fisted.protocols = {};
ham_fisted.protocols.IUpdateValues = function() {
};
var ham_fisted$protocols$IUpdateValues$_update_values$dyn_76414 = function($this$$$, $bifn$$) {
  var $m__5372__auto__$jscomp$815_m__5374__auto__$$ = ham_fisted.protocols._update_values[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$815_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$815_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$815_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $bifn$$) : $m__5372__auto__$jscomp$815_m__5374__auto__$$.call(null, $this$$$, $bifn$$);
  }
  $m__5372__auto__$jscomp$815_m__5374__auto__$$ = ham_fisted.protocols._update_values._;
  if ($m__5372__auto__$jscomp$815_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$815_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$815_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $bifn$$) : $m__5372__auto__$jscomp$815_m__5374__auto__$$.call(null, $this$$$, $bifn$$);
  }
  throw $APP.cljs.core.missing_protocol("IUpdateValues.-update-values", $this$$$);
};
ham_fisted.protocols._update_values = function($this$$$, $bifn$$) {
  return $this$$$ != null && $this$$$.ham_fisted$protocols$IUpdateValues$_update_values$arity$2 != null ? $this$$$.ham_fisted$protocols$IUpdateValues$_update_values$arity$2($this$$$, $bifn$$) : ham_fisted$protocols$IUpdateValues$_update_values$dyn_76414($this$$$, $bifn$$);
};
ham_fisted.api = {};
ham_fisted.api.goog$module$ham_fisted$BitmapTrie = ham_fisted.BitmapTrie;
ham_fisted.api.goog$module$ham_fisted$ChunkedVec = ham_fisted.ChunkedVec;
ham_fisted.api.raw_provider = ham_fisted.api.goog$module$ham_fisted$BitmapTrie.defaultProvider;
ham_fisted.api.default_hash_provider = ham_fisted.lazy_noncaching.default_hash_provider;
ham_fisted.api.bm_cons = ham_fisted.api.goog$module$ham_fisted$BitmapTrie.makeTrie;
ham_fisted.api.ht_cons = ham_fisted.api.goog$module$ham_fisted$BitmapTrie.makeHashTable;
ham_fisted.api.mapProxy = ham_fisted.api.goog$module$ham_fisted$BitmapTrie.mapProxy;
ham_fisted.api.indexedAccum = ham_fisted.api.goog$module$ham_fisted$BitmapTrie.indexedAccum;
ham_fisted.api.cv_cons = ham_fisted.api.goog$module$ham_fisted$ChunkedVec.makeChunkedVec;
ham_fisted.api.sizeIfPossible = ham_fisted.api.goog$module$ham_fisted$BitmapTrie.sizeIfPossible;
ham_fisted.api.idxAcc = ham_fisted.api.goog$module$ham_fisted$ChunkedVec.indexedAccum;
ham_fisted.api.RangeType = ham_fisted.api.goog$module$ham_fisted$ChunkedVec.Range;
ham_fisted.api.RangeType.prototype.cljs$core$IIndexed$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.cljs$core$IIndexed$_nth$arity$2 = function($this$$$, $idx$$) {
  return $APP.cljs.core._nth(this, $idx$$, null);
};
ham_fisted.api.RangeType.prototype.cljs$core$IIndexed$_nth$arity$3 = function($idx__$1$jscomp$6_this$$$, $idx$$, $dv$$) {
  $idx__$1$jscomp$6_this$$$ = $idx$$ < 0 ? $idx$$ + this.length : $idx$$;
  return $idx__$1$jscomp$6_this$$$ >= 0 && $idx__$1$jscomp$6_this$$$ < this.length ? this.get($idx__$1$jscomp$6_this$$$) : $dv$$;
};
ham_fisted.api.RangeType.prototype.cljs$core$IPrintWithWriter$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this$$$, $writer$$, $opts$$) {
  $APP.cljs.core._write($writer$$, "[");
  this.reduce(function($acc$$, $v$$) {
    $APP.cljs.core.truth_($acc$$) || $APP.cljs.core._write($writer$$, " ");
    $APP.cljs.core._write($writer$$, $v$$);
    return !1;
  }, !0);
  return $APP.cljs.core._write($writer$$, "]");
};
ham_fisted.api.RangeType.prototype.cljs$core$IMeta$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.cljs$core$IMeta$_meta$arity$1 = function($this$$$) {
  return this.meta;
};
ham_fisted.api.RangeType.prototype.cljs$core$ICounted$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.cljs$core$ICounted$_count$arity$1 = function($this$$$) {
  return this.length;
};
ham_fisted.api.RangeType.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.cljs$core$IHash$_hash$arity$1 = function($this$$$) {
  return this.hashCode();
};
ham_fisted.api.RangeType.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this$$$, $o$$) {
  var $this$__$1$$ = this;
  return function() {
    var $and__5023__auto__$$ = $o$$ != null ? $o$$.cljs$lang$protocol_mask$partition0$ & 2 || $APP.cljs.core.PROTOCOL_SENTINEL === $o$$.cljs$core$ICounted$ ? !0 : $o$$.cljs$lang$protocol_mask$partition0$ ? !1 : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.ICounted, $o$$) : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.ICounted, $o$$);
    return $and__5023__auto__$$ ? $APP.cljs.core.count($this$__$1$$) === $APP.cljs.core.count($o$$) : $and__5023__auto__$$;
  }() ? $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var $G__76440$$ = function($acc$$, $idx$$, $v$$) {
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($this$__$1$$.get($idx$$), $APP.cljs.core._nth($o$$, $idx$$)) ? !0 : $APP.cljs.core.reduced(!1);
    };
    return ham_fisted.api.idxAcc.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.idxAcc.cljs$core$IFn$_invoke$arity$1($G__76440$$) : ham_fisted.api.idxAcc.call(null, $G__76440$$);
  }(), !0, $this$__$1$$) : !1;
};
ham_fisted.api.RangeType.prototype.cljs$core$IReduce$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.cljs$core$IReduce$_reduce$arity$2 = function($r$$, $rfn$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.reduce1(ham_fisted.api.default_hash_provider, $rfn$$, this);
};
ham_fisted.api.RangeType.prototype.cljs$core$IReduce$_reduce$arity$3 = function($r$$, $rfn$$, $acc$$) {
  return this.reduce($rfn$$, $acc$$);
};
ham_fisted.api.RangeType.prototype.cljs$core$IWithMeta$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($G__76441$jscomp$inline_7289_r$jscomp$134_this$$$, $m$$) {
  $G__76441$jscomp$inline_7289_r$jscomp$134_this$$$ = this.start;
  var $G__76442$$ = this.end, $G__76443$$ = this.step;
  $G__76441$jscomp$inline_7289_r$jscomp$134_this$$$ = ham_fisted.api.range.cljs$core$IFn$_invoke$arity$3 ? ham_fisted.api.range.cljs$core$IFn$_invoke$arity$3($G__76441$jscomp$inline_7289_r$jscomp$134_this$$$, $G__76442$$, $G__76443$$) : ham_fisted.api.range.call(null, $G__76441$jscomp$inline_7289_r$jscomp$134_this$$$, $G__76442$$, $G__76443$$);
  $G__76441$jscomp$inline_7289_r$jscomp$134_this$$$.meta = $m$$;
  return $G__76441$jscomp$inline_7289_r$jscomp$134_this$$$;
};
ham_fisted.api.RangeType.prototype.cljs$core$IFn$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    case 2:
      return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
ham_fisted.api.RangeType.prototype.apply = function($self__$$, $args76438$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76438$$)));
};
ham_fisted.api.RangeType.prototype.cljs$core$IFn$_invoke$arity$1 = function($idx$$) {
  return $APP.cljs.core._nth(this, $idx$$);
};
ham_fisted.api.RangeType.prototype.cljs$core$IFn$_invoke$arity$2 = function($idx$$, $dv$$) {
  return $APP.cljs.core._nth(this, $idx$$, $dv$$);
};
ham_fisted.api.range = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.api.range.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return ham_fisted.api.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return ham_fisted.api.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$0();
};
ham_fisted.api.range.cljs$core$IFn$_invoke$arity$1 = function($end$$) {
  return ham_fisted.api.goog$module$ham_fisted$ChunkedVec.range(0, $end$$, 1, ham_fisted.api.default_hash_provider);
};
ham_fisted.api.range.cljs$core$IFn$_invoke$arity$2 = function($start$$, $end$$) {
  return ham_fisted.api.goog$module$ham_fisted$ChunkedVec.range($start$$, $end$$, 1, ham_fisted.api.default_hash_provider);
};
ham_fisted.api.range.cljs$core$IFn$_invoke$arity$3 = function($start$$, $end$$, $step$$) {
  return ham_fisted.api.goog$module$ham_fisted$ChunkedVec.range($start$$, $end$$, $step$$, ham_fisted.api.default_hash_provider);
};
ham_fisted.api.range.cljs$lang$maxFixedArity = 3;
ham_fisted.api.coll_reduce = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return ham_fisted.api.coll_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return ham_fisted.api.coll_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.coll_reduce.cljs$core$IFn$_invoke$arity$2 = function($coll$$, $rfn$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.reduce1(ham_fisted.api.default_hash_provider, $rfn$$, ham_fisted.lazy_noncaching.coll_reducer($coll$$));
};
ham_fisted.api.coll_reduce.cljs$core$IFn$_invoke$arity$3 = function($coll$$, $rfn$$, $init$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.reduce(ham_fisted.api.default_hash_provider, $rfn$$, $init$$, ham_fisted.lazy_noncaching.coll_reducer($coll$$));
};
ham_fisted.api.coll_reduce.cljs$lang$maxFixedArity = 3;
ham_fisted.api.constant_count = function($data$$) {
  if ($data$$ == null) {
    return 0;
  }
  var $temp__5823__auto__$$ = ham_fisted.api.sizeIfPossible.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.sizeIfPossible.cljs$core$IFn$_invoke$arity$1($data$$) : ham_fisted.api.sizeIfPossible.call(null, $data$$);
  return $APP.cljs.core.truth_($temp__5823__auto__$$) ? $temp__5823__auto__$$ : ($data$$ != null ? $data$$.cljs$lang$protocol_mask$partition0$ & 2 || $APP.cljs.core.PROTOCOL_SENTINEL === $data$$.cljs$core$ICounted$ || ($data$$.cljs$lang$protocol_mask$partition0$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.ICounted, $data$$)) : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.ICounted, $data$$)) ? $APP.cljs.core.count($data$$) : null;
};
ham_fisted.api.coll_transduce = function($var_args$$) {
  switch(arguments.length) {
    case 3:
      return ham_fisted.api.coll_transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return ham_fisted.api.coll_transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.coll_transduce.cljs$core$IFn$_invoke$arity$3 = function($coll$$, $xform$$, $rfn$$) {
  return ham_fisted.api.coll_transduce.cljs$core$IFn$_invoke$arity$4($coll$$, $xform$$, $rfn$$, $rfn$$.cljs$core$IFn$_invoke$arity$0 ? $rfn$$.cljs$core$IFn$_invoke$arity$0() : $rfn$$.call(null));
};
ham_fisted.api.coll_transduce.cljs$core$IFn$_invoke$arity$4 = function($coll$$, $xform$$, $rfn$$, $init$$) {
  return ham_fisted.api.coll_reduce.cljs$core$IFn$_invoke$arity$3($coll$$, $xform$$.cljs$core$IFn$_invoke$arity$1 ? $xform$$.cljs$core$IFn$_invoke$arity$1($rfn$$) : $xform$$.call(null, $rfn$$), $init$$);
};
ham_fisted.api.coll_transduce.cljs$lang$maxFixedArity = 4;
ham_fisted.api.hash_ordered = function($coll$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.hash_ordered($APP.cljs.core.hash, ham_fisted.lazy_noncaching.coll_reducer($coll$$));
};
ham_fisted.api.hash_unordered = function($coll$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.hash_unordered($APP.cljs.core.hash, ham_fisted.lazy_noncaching.coll_reducer($coll$$));
};
ham_fisted.api.cache_ordered = function($coll$$) {
  var $rv$jscomp$48_temp__5823__auto__$$ = $coll$$._hash;
  if ($APP.cljs.core.truth_($rv$jscomp$48_temp__5823__auto__$$)) {
    return $rv$jscomp$48_temp__5823__auto__$$;
  }
  $rv$jscomp$48_temp__5823__auto__$$ = ham_fisted.api.hash_ordered($coll$$);
  return $coll$$._hash = $rv$jscomp$48_temp__5823__auto__$$;
};
ham_fisted.api.cache_unordered = function($coll$$) {
  var $rv$jscomp$49_temp__5823__auto__$$ = $coll$$._hash;
  if ($APP.cljs.core.truth_($rv$jscomp$49_temp__5823__auto__$$)) {
    return $rv$jscomp$49_temp__5823__auto__$$;
  }
  $rv$jscomp$49_temp__5823__auto__$$ = ham_fisted.api.hash_unordered($coll$$);
  return $coll$$._hash = $rv$jscomp$49_temp__5823__auto__$$;
};
ham_fisted.api.reduce_put_BANG_ = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return ham_fisted.api.reduce_put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return ham_fisted.api.reduce_put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.reduce_put_BANG_.cljs$core$IFn$_invoke$arity$2 = function($m$$, $data$$) {
  return ham_fisted.api.coll_reduce.cljs$core$IFn$_invoke$arity$3($data$$, function($p1__76452_SHARP_$$, $p2__76453_SHARP_$$) {
    $p1__76452_SHARP_$$.put($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($p2__76453_SHARP_$$, 0), $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($p2__76453_SHARP_$$, 1));
    return $p1__76452_SHARP_$$;
  }, $m$$);
};
ham_fisted.api.reduce_put_BANG_.cljs$core$IFn$_invoke$arity$3 = function($xform$$, $m$$, $data$$) {
  return ham_fisted.api.coll_transduce.cljs$core$IFn$_invoke$arity$4($data$$, $xform$$, function() {
    var $G__76558$$ = null, $G__76558__2$$ = function($m__$1$$, $d$$) {
      $m__$1$$.put($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($d$$, 0), $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($d$$, 1));
      return $m__$1$$;
    };
    $G__76558$$ = function($m__$1$$, $d$$) {
      switch(arguments.length) {
        case 1:
          return $m__$1$$;
        case 2:
          return $G__76558__2$$.call(this, $m__$1$$, $d$$);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    $G__76558$$.cljs$core$IFn$_invoke$arity$1 = function($m__$1$$) {
      return $m__$1$$;
    };
    $G__76558$$.cljs$core$IFn$_invoke$arity$2 = $G__76558__2$$;
    return $G__76558$$;
  }(), $m$$);
};
ham_fisted.api.reduce_put_BANG_.cljs$lang$maxFixedArity = 3;
ham_fisted.api.pairs = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return ham_fisted.api.pairs.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.pairs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.pairs.cljs$core$IFn$_invoke$arity$1 = function($rf$$) {
  return function() {
    var $G__76560$$ = null, $G__76560__1$$ = function($m$$) {
      return $rf$$.cljs$core$IFn$_invoke$arity$1 ? $rf$$.cljs$core$IFn$_invoke$arity$1($m$$) : $rf$$.call(null, $m$$);
    }, $G__76560__2$$ = function($acc$$, $G__76459_v$$) {
      $G__76459_v$$ = new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$G__76459_v$$, $G__76459_v$$], null);
      return $rf$$.cljs$core$IFn$_invoke$arity$2 ? $rf$$.cljs$core$IFn$_invoke$arity$2($acc$$, $G__76459_v$$) : $rf$$.call(null, $acc$$, $G__76459_v$$);
    };
    $G__76560$$ = function($acc$$, $v$$) {
      switch(arguments.length) {
        case 1:
          return $G__76560__1$$.call(this, $acc$$);
        case 2:
          return $G__76560__2$$.call(this, $acc$$, $v$$);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    $G__76560$$.cljs$core$IFn$_invoke$arity$1 = $G__76560__1$$;
    $G__76560$$.cljs$core$IFn$_invoke$arity$2 = $G__76560__2$$;
    return $G__76560$$;
  }();
};
ham_fisted.api.pairs.cljs$core$IFn$_invoke$arity$2 = function($r$$, $l$$) {
  return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$r$$, $l$$], null);
};
ham_fisted.api.pairs.cljs$lang$maxFixedArity = 2;
ham_fisted.api.mut_trie_map = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.api.mut_trie_map.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return ham_fisted.api.mut_trie_map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.mut_trie_map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.mut_trie_map.cljs$core$IFn$_invoke$arity$0 = function() {
  return ham_fisted.api.bm_cons.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.bm_cons.cljs$core$IFn$_invoke$arity$1(ham_fisted.api.default_hash_provider) : ham_fisted.api.bm_cons.call(null, ham_fisted.api.default_hash_provider);
};
ham_fisted.api.mut_trie_map.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.reduce_put_BANG_.cljs$core$IFn$_invoke$arity$2(ham_fisted.api.bm_cons.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.bm_cons.cljs$core$IFn$_invoke$arity$1(ham_fisted.api.default_hash_provider) : ham_fisted.api.bm_cons.call(null, ham_fisted.api.default_hash_provider), $data$$);
};
ham_fisted.api.mut_trie_map.cljs$core$IFn$_invoke$arity$2 = function($xform$$, $data$$) {
  return ham_fisted.api.reduce_put_BANG_.cljs$core$IFn$_invoke$arity$3($xform$$, ham_fisted.api.bm_cons.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.bm_cons.cljs$core$IFn$_invoke$arity$1(ham_fisted.api.default_hash_provider) : ham_fisted.api.bm_cons.call(null, ham_fisted.api.default_hash_provider), $data$$);
};
ham_fisted.api.mut_trie_map.cljs$lang$maxFixedArity = 2;
ham_fisted.api.mut_hashtable_map = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$0 = function() {
  return ham_fisted.api.ht_cons.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.ht_cons.cljs$core$IFn$_invoke$arity$1(ham_fisted.api.default_hash_provider) : ham_fisted.api.ht_cons.call(null, ham_fisted.api.default_hash_provider);
};
ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.reduce_put_BANG_.cljs$core$IFn$_invoke$arity$2(ham_fisted.api.ht_cons.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.ht_cons.cljs$core$IFn$_invoke$arity$1(ham_fisted.api.default_hash_provider) : ham_fisted.api.ht_cons.call(null, ham_fisted.api.default_hash_provider), $data$$);
};
ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$2 = function($xform$$, $data$$) {
  return ham_fisted.api.reduce_put_BANG_.cljs$core$IFn$_invoke$arity$3($xform$$, ham_fisted.api.ht_cons.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.ht_cons.cljs$core$IFn$_invoke$arity$1(ham_fisted.api.default_hash_provider) : ham_fisted.api.ht_cons.call(null, ham_fisted.api.default_hash_provider), $data$$);
};
ham_fisted.api.mut_hashtable_map.cljs$lang$maxFixedArity = 2;
ham_fisted.api.mut_map = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.api.mut_map.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return ham_fisted.api.mut_map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.mut_map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.mut_map.cljs$core$IFn$_invoke$arity$0 = function() {
  return ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$0();
};
ham_fisted.api.mut_map.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$1($data$$);
};
ham_fisted.api.mut_map.cljs$core$IFn$_invoke$arity$2 = function($xform$$, $data$$) {
  return ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$2($xform$$, $data$$);
};
ham_fisted.api.mut_map.cljs$lang$maxFixedArity = 2;
ham_fisted.api.js_map = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.api.js_map.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return ham_fisted.api.js_map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.js_map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.js_map.cljs$core$IFn$_invoke$arity$0 = function() {
  return new Map();
};
ham_fisted.api.js_map.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.coll_reduce.cljs$core$IFn$_invoke$arity$3($data$$, function($m$$, $v$$) {
    return $m$$.set($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($v$$, 0), $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($v$$, 1));
  }, new Map());
};
ham_fisted.api.js_map.cljs$core$IFn$_invoke$arity$2 = function($xform$$, $data$$) {
  return ham_fisted.api.coll_transduce.cljs$core$IFn$_invoke$arity$4($data$$, $xform$$, function($m$$, $v$$) {
    return $m$$.set($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($v$$, 0), $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($v$$, 1));
  }, new Map());
};
ham_fisted.api.js_map.cljs$lang$maxFixedArity = 2;
ham_fisted.api.bm_type = ham_fisted.api.goog$module$ham_fisted$BitmapTrie.BitmapTrie;
ham_fisted.api.hm_type = ham_fisted.api.goog$module$ham_fisted$BitmapTrie.HashTable;
ham_fisted.api.cv_type = ham_fisted.api.goog$module$ham_fisted$ChunkedVec.ChunkedVector;
ham_fisted.api.safe_write = function($obj$$, $writer$$, $opts$$) {
  return ($obj$$ != null ? $obj$$.cljs$lang$protocol_mask$partition0$ & 2147483648 || $APP.cljs.core.PROTOCOL_SENTINEL === $obj$$.cljs$core$IPrintWithWriter$ || ($obj$$.cljs$lang$protocol_mask$partition0$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.IPrintWithWriter, $obj$$)) : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.IPrintWithWriter, $obj$$)) ? $APP.cljs.core._pr_writer($obj$$, $writer$$, $opts$$) : $APP.cljs.core._write($writer$$, $obj$$ == null ? "nil" : $obj$$);
};
ham_fisted.api.ImmutMap = function($m$$) {
  this.m = $m$$;
  this.cljs$lang$protocol_mask$partition0$ = 2164131599;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IFind$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.ImmutMap.prototype.cljs$core$IFind$_find$arity$2 = function($coll$$, $k$$) {
  return this.m.getNode($k$$);
};
ham_fisted.api.ImmutMap.prototype.reduce = function($rfn$$, $init$$) {
  return this.m.reduce($rfn$$, $init$$);
};
ham_fisted.api.ImmutMap.prototype.forEach = function($f$$) {
  return this.m.forEach($f$$);
};
ham_fisted.api.ImmutMap.prototype.get = function($k$$, $nf$$) {
  return this.m.getOrDefault($k$$, $nf$$);
};
ham_fisted.api.ImmutMap.prototype.entries = function() {
  return this.m.entries();
};
ham_fisted.api.ImmutMap.prototype.toString = function() {
  return this.m.toString();
};
ham_fisted.api.ImmutMap.prototype.size = function() {
  return this.m.size();
};
ham_fisted.api.ImmutMap.prototype.keys = function() {
  return this.m.keys();
};
ham_fisted.api.ImmutMap.prototype.values = function() {
  return this.m.values();
};
ham_fisted.api.ImmutMap.prototype.has = function($k$$) {
  return this.m.has($k$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function($o$$, $k$$) {
  return this.m.get($k$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function($o$$, $k$$, $nf$$) {
  return this.m.getOrDefault($k$$, $nf$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function($coll$$, $f$$, $init$$) {
  return $APP.cljs.core._kv_reduce(this.m, $f$$, $init$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this$$$, $writer$$, $opts$$) {
  return $APP.cljs.core._pr_writer(this.m, $writer$$, $opts$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IMeta$_meta$arity$1 = function($this$$$) {
  return this.m.meta();
};
ham_fisted.api.ImmutMap.prototype.cljs$core$ICounted$_count$arity$1 = function($this$$$) {
  return this.m.size();
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IHash$_hash$arity$1 = function($this$$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.cache_unordered($APP.cljs.core.hash, this);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this$$$, $other$$) {
  return $APP.cljs.core.equiv_map(this, $other$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function($coll$$) {
  return this.m.shallowClone();
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function($coll$$) {
  return ham_fisted.api.empty_map;
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.reduce1(ham_fisted.api.default_hash_provider, $rfn$$, this.m);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $init$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.reduce(ham_fisted.api.default_hash_provider, this.m, $rfn$$, $init$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function($G__76470_coll$$, $k$$) {
  $G__76470_coll$$ = this.m.shallowClone().mutDissoc($k$$);
  return ham_fisted.api.make_immut.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.make_immut.cljs$core$IFn$_invoke$arity$1($G__76470_coll$$) : ham_fisted.api.make_immut.call(null, $G__76470_coll$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($coll$$, $k$$) {
  return this.m.containsKey($k$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($G__76471_coll$$, $k$$, $v$$) {
  $G__76471_coll$$ = this.m.shallowClone().mutAssoc($k$$, $v$$);
  return ham_fisted.api.make_immut.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.make_immut.cljs$core$IFn$_invoke$arity$1($G__76471_coll$$) : ham_fisted.api.make_immut.call(null, $G__76471_coll$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function($this$$$) {
  return $APP.cljs.core.seq(this.m);
};
ham_fisted.api.ImmutMap.prototype.ham_fisted$protocols$IUpdateValues$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.ImmutMap.prototype.ham_fisted$protocols$IUpdateValues$_update_values$arity$2 = function($rv$jscomp$50_this$$$, $bifn$$) {
  $rv$jscomp$50_this$$$ = this.m.shallowClone();
  $rv$jscomp$50_this$$$.mutUpdateValues($bifn$$);
  return $APP.cljs.core.persistent_BANG_($rv$jscomp$50_this$$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($G__76472_this$$$, $k$$) {
  $G__76472_this$$$ = this.m.withMeta($k$$);
  return ham_fisted.api.make_immut.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.make_immut.cljs$core$IFn$_invoke$arity$1($G__76472_this$$$) : ham_fisted.api.make_immut.call(null, $G__76472_this$$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$ICollection$_conj$arity$2 = function($G__76473_coll$$, $o$$) {
  if ($APP.cljs.core.vector_QMARK_($o$$)) {
    return this.cljs$core$IAssociative$_assoc$arity$3(null, $APP.cljs.core._nth($o$$, 0), $APP.cljs.core._nth($o$$, 1));
  }
  $G__76473_coll$$ = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($m__$1$$, $o__$1$$) {
    if ($APP.cljs.core.vector_QMARK_($o__$1$$)) {
      $m__$1$$.put($APP.cljs.core._nth($o__$1$$, 0), $APP.cljs.core._nth($o__$1$$, 1));
    } else {
      throw Error("Invalid map conj data");
    }
    return $m__$1$$;
  }, this.m.shallowClone(), $o$$);
  return ham_fisted.api.make_immut.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.make_immut.cljs$core$IFn$_invoke$arity$1($G__76473_coll$$) : ham_fisted.api.make_immut.call(null, $G__76473_coll$$);
};
ham_fisted.api.ImmutMap.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    case 2:
      return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
ham_fisted.api.ImmutMap.prototype.apply = function($self__$$, $args76469$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76469$$)));
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IFn$_invoke$arity$1 = function($a$$) {
  return this.m.get($a$$);
};
ham_fisted.api.ImmutMap.prototype.cljs$core$IFn$_invoke$arity$2 = function($a$$, $d$$) {
  return this.m.getOrDefault($a$$, $d$$);
};
ham_fisted.api.ImmutMap.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1370$m], null);
};
ham_fisted.api.ImmutMap.cljs$lang$type = !0;
ham_fisted.api.ImmutMap.cljs$lang$ctorStr = "ham-fisted.api/ImmutMap";
ham_fisted.api.ImmutMap.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "ham-fisted.api/ImmutMap");
};
ham_fisted.api.__GT_ImmutMap = function($m$$) {
  return new ham_fisted.api.ImmutMap($m$$);
};
ham_fisted.api.make_immut = function($m$$) {
  $m$$.cache_hash = !0;
  return new ham_fisted.api.ImmutMap($m$$);
};
ham_fisted.api.empty_map = ham_fisted.api.make_immut(ham_fisted.api.mut_map.cljs$core$IFn$_invoke$arity$0());
ham_fisted.api.extend_mut_map_BANG_ = function($map_type$$) {
  $map_type$$.prototype.cljs$core$ITransientAssociative$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function($tcoll$$, $key$$, $val$$) {
    this.put($key$$, $val$$);
    return this;
  };
  $map_type$$.prototype.cljs$core$IFind$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$IFind$_find$arity$2 = function($m$$, $k$$) {
    return this.getNode($k$$);
  };
  $map_type$$.prototype.cljs$core$ILookup$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$ILookup$_lookup$arity$2 = function($m$$, $k$$) {
    return this.get($k$$);
  };
  $map_type$$.prototype.cljs$core$ILookup$_lookup$arity$3 = function($m$$, $k$$, $nf$$) {
    return this.getOrDefault($k$$, $nf$$);
  };
  $map_type$$.prototype.cljs$core$IKVReduce$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function($coll$$, $f$$, $init$$) {
    return this.reduceLeaves(function($p1__76475_SHARP_$$, $G__76480_p2__76476_SHARP_$$) {
      var $G__76479$$ = $G__76480_p2__76476_SHARP_$$.k;
      $G__76480_p2__76476_SHARP_$$ = $G__76480_p2__76476_SHARP_$$.v;
      return $f$$.cljs$core$IFn$_invoke$arity$3 ? $f$$.cljs$core$IFn$_invoke$arity$3($p1__76475_SHARP_$$, $G__76479$$, $G__76480_p2__76476_SHARP_$$) : $f$$.call(null, $p1__76475_SHARP_$$, $G__76479$$, $G__76480_p2__76476_SHARP_$$);
    }, $init$$);
  };
  $map_type$$.prototype.cljs$core$IPrintWithWriter$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this$$$, $writer$$, $opts$$) {
    $APP.cljs.core._write($writer$$, "{");
    this.reduceLeaves(function($acc$$, $v$$) {
      $APP.cljs.core.truth_($acc$$) || $APP.cljs.core._write($writer$$, ",");
      ham_fisted.api.safe_write($v$$.k, $writer$$, $opts$$);
      $APP.cljs.core._write($writer$$, " ");
      ham_fisted.api.safe_write($v$$.v, $writer$$, $opts$$);
      return !1;
    }, !0);
    return $APP.cljs.core._write($writer$$, "}");
  };
  $map_type$$.prototype.cljs$core$IMeta$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$IMeta$_meta$arity$1 = function($this$$$) {
    return this.meta();
  };
  $map_type$$.prototype.cljs$core$ICloneable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$ICloneable$_clone$arity$1 = function($this$$$) {
    return this.clone();
  };
  $map_type$$.prototype.cljs$core$ICounted$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$ICounted$_count$arity$1 = function($this$$$) {
    return this.size();
  };
  $map_type$$.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$IHash$_hash$arity$1 = function($this$$$) {
    return this.hashCode();
  };
  $map_type$$.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this$$$, $other$$) {
    return $APP.cljs.core.equiv_map(this, $other$$);
  };
  $map_type$$.prototype.cljs$core$IReduce$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
    return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.reduce1(ham_fisted.api.default_hash_provider, $rfn$$, this);
  };
  $map_type$$.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $init$$) {
    return this.reduce($rfn$$, $init$$);
  };
  $map_type$$.prototype.cljs$core$ITransientCollection$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function($this$$$, $val$$) {
    this.put($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($val$$, 0), $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($val$$, 1));
    return this;
  };
  $map_type$$.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function($this$$$) {
    return ham_fisted.api.make_immut(this);
  };
  $map_type$$.prototype.cljs$core$IMap$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$IMap$_dissoc$arity$2 = function($coll$$, $k$$) {
    throw Error("Unimplemented");
  };
  $map_type$$.prototype.cljs$core$ISeqable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$ISeqable$_seq$arity$1 = function($this$$$) {
    return $APP.cljs.core.es6_iterator_seq(ham_fisted.lazy_noncaching.js_iterator(this.leaves()));
  };
  $map_type$$.prototype.ham_fisted$protocols$IUpdateValues$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.ham_fisted$protocols$IUpdateValues$_update_values$arity$2 = function($this$$$, $bifn$$) {
    return this.mutUpdateValues($bifn$$);
  };
  $map_type$$.prototype.cljs$core$IWithMeta$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($this$$$, $k$$) {
    return this.withMeta($k$$);
  };
  $map_type$$.prototype.cljs$core$IFn$ = $APP.cljs.core.PROTOCOL_SENTINEL;
  $map_type$$.prototype.call = function($unused__11804__auto__$$) {
    switch(arguments.length - 1) {
      case 1:
        return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      case 2:
        return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      default:
        throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
    }
  };
  $map_type$$.prototype.apply = function($self__$$, $args76477$$) {
    return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76477$$)));
  };
  $map_type$$.prototype.cljs$core$IFn$_invoke$arity$1 = function($a$$) {
    return this.get($a$$);
  };
  return $map_type$$.prototype.cljs$core$IFn$_invoke$arity$2 = function($a$$, $d$$) {
    return this.getOrDefault($a$$, $d$$);
  };
};
ham_fisted.api.leaf_node_type = ham_fisted.api.goog$module$ham_fisted$BitmapTrie.LeafNode;
ham_fisted.api.leaf_node_type.prototype.cljs$core$IIndexed$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.leaf_node_type.prototype.cljs$core$IIndexed$_nth$arity$2 = function($this$$$, $idx$$) {
  switch($idx$$) {
    case 0:
      return this.k;
    case 1:
      return this.v;
    default:
      throw Error(["No matching clause: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($idx$$)].join(""));
  }
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$IIndexed$_nth$arity$3 = function($this$$$, $idx$$, $d$$) {
  if (typeof $idx$$ === "number" && $idx$$ >= 0 && $idx$$ < 2) {
    switch($idx$$) {
      case 0:
        return this.k;
      case 1:
        return this.v;
      default:
        throw Error(["No matching clause: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($idx$$)].join(""));
    }
  } else {
    return $d$$;
  }
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$IPrintWithWriter$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.leaf_node_type.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this$$$, $writer$$, $opts$$) {
  return $APP.cljs.core._write($writer$$, this.toString());
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$ICounted$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.leaf_node_type.prototype.cljs$core$ICounted$_count$arity$1 = function($this$$$) {
  return 2;
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$IMapEntry$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.leaf_node_type.prototype.cljs$core$IMapEntry$_key$arity$1 = function($this$$$) {
  return this.k;
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$IMapEntry$_val$arity$1 = function($this$$$) {
  return this.v;
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.leaf_node_type.prototype.cljs$core$IHash$_hash$arity$1 = function($this$$$) {
  return this.hashCode();
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.leaf_node_type.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this$$$, $o$$) {
  return 2 === $APP.cljs.core.count($o$$) ? $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.k, $APP.cljs.core._nth($o$$, 0)) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.v, $APP.cljs.core._nth($o$$, 1)) : null;
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$IReduce$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.leaf_node_type.prototype.cljs$core$IReduce$_reduce$arity$2 = function($G__76485_this$$$, $rfn$$) {
  $G__76485_this$$$ = this.k;
  var $G__76486$$ = this.v;
  return $rfn$$.cljs$core$IFn$_invoke$arity$2 ? $rfn$$.cljs$core$IFn$_invoke$arity$2($G__76485_this$$$, $G__76486$$) : $rfn$$.call(null, $G__76485_this$$$, $G__76486$$);
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $acc$$) {
  return this.reduce($rfn$$, $acc$$);
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$ISequential$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.leaf_node_type.prototype.cljs$core$IFn$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.leaf_node_type.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    case 2:
      return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
ham_fisted.api.leaf_node_type.prototype.apply = function($self__$$, $args76482$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76482$$)));
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$IFn$_invoke$arity$1 = function($a$$) {
  return $APP.cljs.core._nth(this, $a$$);
};
ham_fisted.api.leaf_node_type.prototype.cljs$core$IFn$_invoke$arity$2 = function($a$$, $d$$) {
  return $APP.cljs.core._nth(this, $a$$, $d$$);
};
ham_fisted.api.extend_mut_map_BANG_(ham_fisted.api.bm_type);
ham_fisted.api.extend_mut_map_BANG_(ham_fisted.api.hm_type);
ham_fisted.api.immut_map = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.api.immut_map.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return ham_fisted.api.immut_map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.immut_map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.immut_map.cljs$core$IFn$_invoke$arity$0 = function() {
  return ham_fisted.api.make_immut(ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$0());
};
ham_fisted.api.immut_map.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.make_immut(ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$1($data$$));
};
ham_fisted.api.immut_map.cljs$core$IFn$_invoke$arity$2 = function($xform$$, $data$$) {
  return ham_fisted.api.make_immut(ham_fisted.api.mut_hashtable_map.cljs$core$IFn$_invoke$arity$2($xform$$, $data$$));
};
ham_fisted.api.immut_map.cljs$lang$maxFixedArity = 2;
ham_fisted.api.update_values = function($m$$, $bifn$$) {
  return ($m$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $m$$.ham_fisted$protocols$IUpdateValues$ || ($m$$.cljs$lang$protocol_mask$partition$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_(ham_fisted.protocols.IUpdateValues, $m$$)) : $APP.cljs.core.native_satisfies_QMARK_(ham_fisted.protocols.IUpdateValues, $m$$)) ? ham_fisted.protocols._update_values($m$$, $bifn$$) : ham_fisted.api.immut_map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($G__76492$jscomp$inline_7294_e$$) {
    var $JSCompiler_temp_const$$ = $APP.cljs.core.PersistentVector, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.PersistentVector.EMPTY_NODE, $JSCompiler_temp_const$jscomp$1$$ = $APP.cljs.core.key($G__76492$jscomp$inline_7294_e$$);
    var $G__76491$jscomp$inline_7293_JSCompiler_inline_result$$ = $APP.cljs.core.key($G__76492$jscomp$inline_7294_e$$);
    $G__76492$jscomp$inline_7294_e$$ = $APP.cljs.core.val($G__76492$jscomp$inline_7294_e$$);
    $G__76491$jscomp$inline_7293_JSCompiler_inline_result$$ = $bifn$$.cljs$core$IFn$_invoke$arity$2 ? $bifn$$.cljs$core$IFn$_invoke$arity$2($G__76491$jscomp$inline_7293_JSCompiler_inline_result$$, $G__76492$jscomp$inline_7294_e$$) : $bifn$$.call(null, $G__76491$jscomp$inline_7293_JSCompiler_inline_result$$, $G__76492$jscomp$inline_7294_e$$);
    return new $JSCompiler_temp_const$$(null, 2, 5, $JSCompiler_temp_const$jscomp$0$$, [$JSCompiler_temp_const$jscomp$1$$, $G__76491$jscomp$inline_7293_JSCompiler_inline_result$$], null);
  }), $m$$);
};
ham_fisted.api.cv_type.prototype.cljs$core$ITransientAssociative$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function($tcoll$$, $key$$, $val$$) {
  if (typeof $key$$ === "number") {
    return $APP.cljs.core._assoc_n_BANG_(this, $key$$, $val$$);
  }
  throw Error("TransientVector's key for assoc! must be a number.");
};
ham_fisted.api.cv_type.prototype.cljs$core$ILookup$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$ILookup$_lookup$arity$2 = function($coll$$, $k$$) {
  return $APP.cljs.core._lookup(this, $k$$, null);
};
ham_fisted.api.cv_type.prototype.cljs$core$ILookup$_lookup$arity$3 = function($coll$$, $k$$, $not_found$$) {
  return typeof $k$$ === "number" ? $APP.cljs.core._nth(this, $k$$, $not_found$$) : $not_found$$;
};
ham_fisted.api.cv_type.prototype.cljs$core$IIndexed$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$IIndexed$_nth$arity$2 = function($l$jscomp$162_this$$$, $idx$jscomp$278_idx__$1$$) {
  $l$jscomp$162_this$$$ = this.length;
  $idx$jscomp$278_idx__$1$$ = $idx$jscomp$278_idx__$1$$ < 0 ? $idx$jscomp$278_idx__$1$$ + $l$jscomp$162_this$$$ : $idx$jscomp$278_idx__$1$$;
  return $idx$jscomp$278_idx__$1$$ >= 0 && $idx$jscomp$278_idx__$1$$ < $l$jscomp$162_this$$$ ? this.get($idx$jscomp$278_idx__$1$$) : null;
};
ham_fisted.api.cv_type.prototype.cljs$core$IIndexed$_nth$arity$3 = function($l$jscomp$163_this$$$, $idx$jscomp$279_idx__$1$$, $dv$$) {
  $l$jscomp$163_this$$$ = this.length;
  $idx$jscomp$279_idx__$1$$ = $idx$jscomp$279_idx__$1$$ < 0 ? $idx$jscomp$279_idx__$1$$ + $l$jscomp$163_this$$$ : $idx$jscomp$279_idx__$1$$;
  return $idx$jscomp$279_idx__$1$$ >= 0 && $idx$jscomp$279_idx__$1$$ < $l$jscomp$163_this$$$ ? this.get($idx$jscomp$279_idx__$1$$) : $dv$$;
};
ham_fisted.api.cv_type.prototype.cljs$core$IPrintWithWriter$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this$$$, $writer$$, $opts$$) {
  $APP.cljs.core._write($writer$$, "[");
  this.reduce(function($acc$$, $v$$) {
    $APP.cljs.core.truth_($acc$$) || $APP.cljs.core._write($writer$$, " ");
    ham_fisted.api.safe_write($v$$, $writer$$, $opts$$);
    return !1;
  }, !0);
  return $APP.cljs.core._write($writer$$, "]");
};
ham_fisted.api.cv_type.prototype.cljs$core$ICounted$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$ICounted$_count$arity$1 = function($this$$$) {
  return this.length;
};
ham_fisted.api.cv_type.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$IHash$_hash$arity$1 = function($this$$$) {
  return this.hashCode();
};
ham_fisted.api.cv_type.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this$$$, $o$$) {
  var $this$__$1$$ = this;
  return $APP.cljs.core.count($this$__$1$$) === $APP.cljs.core.count($o$$) ? $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var $G__76494$$ = function($acc$$, $idx$$, $v$$) {
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($this$__$1$$.get($idx$$), $APP.cljs.core._nth($o$$, $idx$$)) ? !0 : $APP.cljs.core.reduced(!1);
    };
    return ham_fisted.api.idxAcc.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.idxAcc.cljs$core$IFn$_invoke$arity$1($G__76494$$) : ham_fisted.api.idxAcc.call(null, $G__76494$$);
  }(), !0, $this$__$1$$) : !1;
};
ham_fisted.api.cv_type.prototype.cljs$core$ITransientVector$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function($tcoll$$, $n$$, $val$$) {
  return this.mutAssoc($n$$, $val$$);
};
ham_fisted.api.cv_type.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function($tcoll$$) {
  return this.mutPop();
};
ham_fisted.api.cv_type.prototype.cljs$core$IReduce$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.reduce1(ham_fisted.api.default_hash_provider, $rfn$$, this);
};
ham_fisted.api.cv_type.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $init$$) {
  return this.reduce($rfn$$, $init$$);
};
ham_fisted.api.cv_type.prototype.cljs$core$ITransientCollection$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function($this$$$, $val$$) {
  this.mutAssoc(this.size(), $val$$);
  return this;
};
ham_fisted.api.cv_type.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function($this$$$) {
  return ham_fisted.api.make_immut_list.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.make_immut_list.cljs$core$IFn$_invoke$arity$1(this) : ham_fisted.api.make_immut_list.call(null, this);
};
ham_fisted.api.cv_type.prototype.cljs$core$ISequential$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.cljs$core$IFn$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.cv_type.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    case 2:
      return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
ham_fisted.api.cv_type.prototype.apply = function($self__$$, $args76493$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76493$$)));
};
ham_fisted.api.cv_type.prototype.cljs$core$IFn$_invoke$arity$1 = function($idx$$) {
  return $APP.cljs.core._nth(this, $idx$$);
};
ham_fisted.api.cv_type.prototype.cljs$core$IFn$_invoke$arity$2 = function($idx$$, $dv$$) {
  return $APP.cljs.core._nth(this, $idx$$, $dv$$);
};
ham_fisted.api.freq_rf = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.api.freq_rf.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return ham_fisted.api.freq_rf.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.freq_rf.cljs$core$IFn$_invoke$arity$0 = function() {
  return ham_fisted.api.freq_rf.cljs$core$IFn$_invoke$arity$1(null);
};
ham_fisted.api.freq_rf.cljs$core$IFn$_invoke$arity$1 = function($options$$) {
  var $mfn$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($options$$, cljs$cst$5464$map_fn, ham_fisted.api.mut_hashtable_map), $bifn$$ = function($k$$, $v$$) {
    return $APP.cljs.core.truth_($v$$) ? $v$$ + 1 : 1;
  };
  return function() {
    var $G__76587$$ = null, $G__76587__0$$ = function() {
      return $mfn$$.cljs$core$IFn$_invoke$arity$0 ? $mfn$$.cljs$core$IFn$_invoke$arity$0() : $mfn$$.call(null);
    }, $G__76587__1$$ = function($m$$) {
      return $APP.cljs.core.persistent_BANG_($m$$);
    }, $G__76587__2$$ = function($m$$, $v$$) {
      $m$$.compute($v$$, $bifn$$);
      return $m$$;
    };
    $G__76587$$ = function($m$$, $v$$) {
      switch(arguments.length) {
        case 0:
          return $G__76587__0$$.call(this);
        case 1:
          return $G__76587__1$$.call(this, $m$$);
        case 2:
          return $G__76587__2$$.call(this, $m$$, $v$$);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    $G__76587$$.cljs$core$IFn$_invoke$arity$0 = $G__76587__0$$;
    $G__76587$$.cljs$core$IFn$_invoke$arity$1 = $G__76587__1$$;
    $G__76587$$.cljs$core$IFn$_invoke$arity$2 = $G__76587__2$$;
    return $G__76587$$;
  }();
};
ham_fisted.api.freq_rf.cljs$lang$maxFixedArity = 1;
ham_fisted.api.frequencies = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return ham_fisted.api.frequencies.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.frequencies.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return ham_fisted.api.frequencies.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.frequencies.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.frequencies.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.identity, null, $data$$);
};
ham_fisted.api.frequencies.cljs$core$IFn$_invoke$arity$2 = function($xform$$, $data$$) {
  return ham_fisted.api.frequencies.cljs$core$IFn$_invoke$arity$3($xform$$, null, $data$$);
};
ham_fisted.api.frequencies.cljs$core$IFn$_invoke$arity$3 = function($xform$$, $options$$, $data$$) {
  return ham_fisted.api.coll_transduce.cljs$core$IFn$_invoke$arity$3($data$$, $xform$$, ham_fisted.api.freq_rf.cljs$core$IFn$_invoke$arity$1($options$$));
};
ham_fisted.api.frequencies.cljs$lang$maxFixedArity = 3;
ham_fisted.api.indexed_accum_fn = function($rf$$) {
  return ham_fisted.api.idxAcc.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.idxAcc.cljs$core$IFn$_invoke$arity$1($rf$$) : ham_fisted.api.idxAcc.call(null, $rf$$);
};
ham_fisted.api.object_array = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.api.object_array.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return ham_fisted.api.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.object_array.cljs$core$IFn$_invoke$arity$0 = function() {
  return [];
};
ham_fisted.api.object_array.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  if ($data$$ == null) {
    return [];
  }
  if (typeof $data$$ === "number") {
    return Array($data$$);
  }
  if ($APP.cljs.core.truth_($data$$.toArray)) {
    return $data$$.toArray();
  }
  var $temp__5823__auto__$$ = ham_fisted.api.constant_count($data$$);
  return $APP.cljs.core.truth_($temp__5823__auto__$$) ? ham_fisted.api.coll_reduce.cljs$core$IFn$_invoke$arity$3($data$$, ham_fisted.api.indexed_accum_fn(function($acc$$, $idx$$, $v$$) {
    $acc$$[$idx$$] = $v$$;
    return $acc$$;
  }), Array($temp__5823__auto__$$)) : ham_fisted.api.coll_reduce.cljs$core$IFn$_invoke$arity$3($data$$, ham_fisted.api.indexed_accum_fn(function($acc$$, $idx$$, $v$$) {
    $acc$$.push($v$$);
    return $acc$$;
  }), []);
};
ham_fisted.api.object_array.cljs$lang$maxFixedArity = 1;
ham_fisted.api.mut_list = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$0 = function() {
  return ham_fisted.api.cv_cons.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.cv_cons.cljs$core$IFn$_invoke$arity$1(ham_fisted.api.default_hash_provider) : ham_fisted.api.cv_cons.call(null, ham_fisted.api.default_hash_provider);
};
ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  var $G__76504_G__76505$$ = ham_fisted.api.default_hash_provider;
  var $G__76506$$ = ham_fisted.api.constant_count($data$$);
  $G__76504_G__76505$$ = ham_fisted.api.cv_cons.cljs$core$IFn$_invoke$arity$2 ? ham_fisted.api.cv_cons.cljs$core$IFn$_invoke$arity$2($G__76504_G__76505$$, $G__76506$$) : ham_fisted.api.cv_cons.call(null, $G__76504_G__76505$$, $G__76506$$);
  $G__76504_G__76505$$.addAll(ham_fisted.lazy_noncaching.coll_reducer($data$$));
  return $G__76504_G__76505$$;
};
ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$2 = function($xform$$, $data$$) {
  var $G__76507$$ = ham_fisted.api.cv_cons.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.cv_cons.cljs$core$IFn$_invoke$arity$1(ham_fisted.api.default_hash_provider) : ham_fisted.api.cv_cons.call(null, ham_fisted.api.default_hash_provider);
  $G__76507$$.addAll({length:ham_fisted.api.constant_count($data$$), reduce:function($rfn$$, $acc$$) {
    $rfn$$ = $xform$$.cljs$core$IFn$_invoke$arity$1 ? $xform$$.cljs$core$IFn$_invoke$arity$1($rfn$$) : $xform$$.call(null, $rfn$$);
    return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($rfn$$, $acc$$, $data$$);
  }});
  return $G__76507$$;
};
ham_fisted.api.mut_list.cljs$lang$maxFixedArity = 2;
ham_fisted.api.ImmutList = function($l$$) {
  this.l = $l$$;
  this.cljs$lang$protocol_mask$partition0$ = 2180932127;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
ham_fisted.api.ImmutList.prototype.size = function() {
  return this.l.size();
};
ham_fisted.api.ImmutList.prototype.toArray = function() {
  return this.l.toArray();
};
ham_fisted.api.ImmutList.prototype.reduce = function($rfn$$, $init$$) {
  return this.l.reduce($rfn$$, $init$$);
};
ham_fisted.api.ImmutList.prototype.toString = function() {
  return this.l.toString();
};
ham_fisted.api.ImmutList.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function($coll$$, $f$$, $init$$) {
  return $APP.cljs.core._kv_reduce(this.l, $f$$, $init$$);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IIndexed$_nth$arity$2 = function($len$jscomp$112_this$$$, $idx$jscomp$285_idx__$1$$) {
  $len$jscomp$112_this$$$ = this.l.length;
  $idx$jscomp$285_idx__$1$$ = $idx$jscomp$285_idx__$1$$ < 0 ? $idx$jscomp$285_idx__$1$$ + $len$jscomp$112_this$$$ : $idx$jscomp$285_idx__$1$$;
  return $idx$jscomp$285_idx__$1$$ >= 0 && $idx$jscomp$285_idx__$1$$ < $len$jscomp$112_this$$$ ? this.l.get($idx$jscomp$285_idx__$1$$) : null;
};
ham_fisted.api.ImmutList.prototype.cljs$core$IIndexed$_nth$arity$3 = function($len$jscomp$113_this$$$, $idx$jscomp$286_idx__$1$$, $dv$$) {
  $len$jscomp$113_this$$$ = this.l.length;
  $idx$jscomp$286_idx__$1$$ = $idx$jscomp$286_idx__$1$$ < 0 ? $idx$jscomp$286_idx__$1$$ + $len$jscomp$113_this$$$ : $idx$jscomp$286_idx__$1$$;
  return $idx$jscomp$286_idx__$1$$ >= 0 && $idx$jscomp$286_idx__$1$$ < $len$jscomp$113_this$$$ ? this.l.get($idx$jscomp$286_idx__$1$$) : $dv$$;
};
ham_fisted.api.ImmutList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($this$$$, $writer$$, $opts$$) {
  return $APP.cljs.core._write($writer$$, this.l);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IVector$_assoc_n$arity$3 = function($coll$$, $k$$, $v$$) {
  return this.cljs$core$IAssociative$_assoc$arity$3(null, $k$$, $v$$);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IMeta$_meta$arity$1 = function($this$$$) {
  return this.l.meta;
};
ham_fisted.api.ImmutList.prototype.cljs$core$ICounted$_count$arity$1 = function($this$$$) {
  return this.l.size();
};
ham_fisted.api.ImmutList.prototype.cljs$core$IStack$_peek$arity$1 = function($len$jscomp$114_this$$$) {
  $len$jscomp$114_this$$$ = this.l.length;
  return $len$jscomp$114_this$$$ > 0 ? this.l.get($len$jscomp$114_this$$$ - 1) : null;
};
ham_fisted.api.ImmutList.prototype.cljs$core$IStack$_pop$arity$1 = function($G__76509_this$$$) {
  $G__76509_this$$$ = this.l.shallowClone().mutPop();
  return ham_fisted.api.make_immut_list.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.make_immut_list.cljs$core$IFn$_invoke$arity$1($G__76509_this$$$) : ham_fisted.api.make_immut_list.call(null, $G__76509_this$$$);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IHash$_hash$arity$1 = function($this$$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.cache_ordered($APP.cljs.core.hash, this);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this$$$, $o$$) {
  return $APP.cljs.core._equiv(this.l, $o$$);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function($this$$$) {
  return this.l.shallowClone();
};
ham_fisted.api.ImmutList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function($G__76510_coll$$) {
  $G__76510_coll$$ = ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$0().withMeta(this.l.meta);
  return ham_fisted.api.make_immut_list.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.make_immut_list.cljs$core$IFn$_invoke$arity$1($G__76510_coll$$) : ham_fisted.api.make_immut_list.call(null, $G__76510_coll$$);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$2($rfn$$, this.l);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $init$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($rfn$$, $init$$, this.l);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($coll$$, $k$$) {
  return typeof $k$$ === "number" && $k$$ >= 0 && $k$$ < this.l.size();
};
ham_fisted.api.ImmutList.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($G__76511_coll$$, $k$$, $v$$) {
  if (typeof $k$$ === "number") {
    return $G__76511_coll$$ = this.l.shallowClone().mutAssoc($k$$, $v$$), ham_fisted.api.make_immut_list.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.make_immut_list.cljs$core$IFn$_invoke$arity$1($G__76511_coll$$) : ham_fisted.api.make_immut_list.call(null, $G__76511_coll$$);
  }
  throw Error("Assoc'ed keys must be numbers");
};
ham_fisted.api.ImmutList.prototype.cljs$core$ISeqable$_seq$arity$1 = function($this$$$) {
  return $APP.cljs.core.seq(this.l);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($G__76512_this$$$, $k$$) {
  $G__76512_this$$$ = this.l.withMeta($k$$);
  return ham_fisted.api.make_immut_list.cljs$core$IFn$_invoke$arity$1 ? ham_fisted.api.make_immut_list.cljs$core$IFn$_invoke$arity$1($G__76512_this$$$) : ham_fisted.api.make_immut_list.call(null, $G__76512_this$$$);
};
ham_fisted.api.ImmutList.prototype.cljs$core$ICollection$_conj$arity$2 = function($coll$$, $o$$) {
  return this.cljs$core$IAssociative$_assoc$arity$3(null, this.l.length, $o$$);
};
ham_fisted.api.ImmutList.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    case 2:
      return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
ham_fisted.api.ImmutList.prototype.apply = function($self__$$, $args76508$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76508$$)));
};
ham_fisted.api.ImmutList.prototype.cljs$core$IFn$_invoke$arity$1 = function($idx$$) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, $idx$$);
};
ham_fisted.api.ImmutList.prototype.cljs$core$IFn$_invoke$arity$2 = function($idx$$, $dv$$) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, $idx$$, $dv$$);
};
ham_fisted.api.ImmutList.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2175$l], null);
};
ham_fisted.api.ImmutList.cljs$lang$type = !0;
ham_fisted.api.ImmutList.cljs$lang$ctorStr = "ham-fisted.api/ImmutList";
ham_fisted.api.ImmutList.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "ham-fisted.api/ImmutList");
};
ham_fisted.api.__GT_ImmutList = function($l$$) {
  return new ham_fisted.api.ImmutList($l$$);
};
ham_fisted.api.ImmutList.prototype[$APP.cljs.core.ITER_SYMBOL] = function() {
  var $subl$$ = this.l;
  return $subl$$[$APP.cljs.core.ITER_SYMBOL].call($subl$$);
};
ham_fisted.api.make_immut_list = function($l$$) {
  return new ham_fisted.api.ImmutList($l$$);
};
ham_fisted.api.immut_list = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return ham_fisted.api.immut_list.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return ham_fisted.api.immut_list.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.immut_list.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.immut_list.cljs$core$IFn$_invoke$arity$0 = function() {
  return ham_fisted.api.make_immut_list(ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$0());
};
ham_fisted.api.immut_list.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.make_immut_list(ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$1($data$$));
};
ham_fisted.api.immut_list.cljs$core$IFn$_invoke$arity$2 = function($xform$$, $data$$) {
  return ham_fisted.api.make_immut_list(ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$2($xform$$, $data$$));
};
ham_fisted.api.immut_list.cljs$lang$maxFixedArity = 2;
ham_fisted.api.mapv = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return ham_fisted.api.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return ham_fisted.api.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var $args_arr__5774__auto__$jscomp$98_argseq__5775__auto__$$ = [], $len__5749__auto___76595$$ = arguments.length, $i__5750__auto___76596$$ = 0;;) {
        if ($i__5750__auto___76596$$ < $len__5749__auto___76595$$) {
          $args_arr__5774__auto__$jscomp$98_argseq__5775__auto__$$.push(arguments[$i__5750__auto___76596$$]), $i__5750__auto___76596$$ += 1;
        } else {
          break;
        }
      }
      $args_arr__5774__auto__$jscomp$98_argseq__5775__auto__$$ = 3 < $args_arr__5774__auto__$jscomp$98_argseq__5775__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args_arr__5774__auto__$jscomp$98_argseq__5775__auto__$$.slice(3), 0, null) : null;
      return ham_fisted.api.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], $args_arr__5774__auto__$jscomp$98_argseq__5775__auto__$$);
  }
};
ham_fisted.api.mapv.cljs$core$IFn$_invoke$arity$2 = function($map_fn$$, $arg$$) {
  return $APP.cljs.core.persistent_BANG_(ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$1({length:ham_fisted.api.constant_count($arg$$), reduce:function($rfn$$, $acc$$) {
    return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc__$1$$, $G__76523_v$$) {
      $G__76523_v$$ = $map_fn$$.cljs$core$IFn$_invoke$arity$1 ? $map_fn$$.cljs$core$IFn$_invoke$arity$1($G__76523_v$$) : $map_fn$$.call(null, $G__76523_v$$);
      return $rfn$$.cljs$core$IFn$_invoke$arity$2 ? $rfn$$.cljs$core$IFn$_invoke$arity$2($acc__$1$$, $G__76523_v$$) : $rfn$$.call(null, $acc__$1$$, $G__76523_v$$);
    }, $acc$$, $arg$$);
  }}));
};
ham_fisted.api.mapv.cljs$core$IFn$_invoke$arity$3 = function($map_fn$$, $arg1$$, $arg2$$) {
  return $APP.cljs.core.persistent_BANG_(ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$1(ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$3($map_fn$$, $arg1$$, $arg2$$)));
};
ham_fisted.api.mapv.cljs$core$IFn$_invoke$arity$variadic = function($map_fn$$, $arg1$$, $arg2$$, $args$$) {
  return $APP.cljs.core.persistent_BANG_(ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$5(ham_fisted.lazy_noncaching.map, $map_fn$$, $arg1$$, $arg2$$, $args$$)));
};
ham_fisted.api.mapv.cljs$lang$applyTo = function($G__76519_seq76517$$) {
  var $G__76518$$ = $APP.cljs.core.first($G__76519_seq76517$$), $G__76520_seq76517__$1$$ = $APP.cljs.core.next($G__76519_seq76517$$);
  $G__76519_seq76517$$ = $APP.cljs.core.first($G__76520_seq76517__$1$$);
  var $seq76517__$2_seq76517__$3$$ = $APP.cljs.core.next($G__76520_seq76517__$1$$);
  $G__76520_seq76517__$1$$ = $APP.cljs.core.first($seq76517__$2_seq76517__$3$$);
  $seq76517__$2_seq76517__$3$$ = $APP.cljs.core.next($seq76517__$2_seq76517__$3$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76518$$, $G__76519_seq76517$$, $G__76520_seq76517__$1$$, $seq76517__$2_seq76517__$3$$);
};
ham_fisted.api.mapv.cljs$lang$maxFixedArity = 3;
ham_fisted.api.concatv = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$303_argseq__5756__auto__$$ = [], $len__5749__auto___76598$$ = arguments.length, $i__5750__auto___76599$$ = 0;;) {
    if ($i__5750__auto___76599$$ < $len__5749__auto___76598$$) {
      $args__5755__auto__$jscomp$303_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76599$$]), $i__5750__auto___76599$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$303_argseq__5756__auto__$$ = 0 < $args__5755__auto__$jscomp$303_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$303_argseq__5756__auto__$$.slice(0), 0, null) : null;
  return ham_fisted.api.concatv.cljs$core$IFn$_invoke$arity$variadic($args__5755__auto__$jscomp$303_argseq__5756__auto__$$);
};
ham_fisted.api.concatv.cljs$core$IFn$_invoke$arity$variadic = function($args$$) {
  return $APP.cljs.core.persistent_BANG_($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($rv$$, $v$$) {
    $APP.cljs.core.truth_($v$$) && $rv$$.addAll(ham_fisted.lazy_noncaching.coll_reducer($v$$));
    return $rv$$;
  }, ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$0(), $args$$));
};
ham_fisted.api.concatv.cljs$lang$maxFixedArity = 0;
ham_fisted.api.concatv.cljs$lang$applyTo = function($seq76524$$) {
  return this.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.seq($seq76524$$));
};
ham_fisted.api.group_by_reducer = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return ham_fisted.api.group_by_reducer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return ham_fisted.api.group_by_reducer.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return ham_fisted.api.group_by_reducer.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.group_by_reducer.cljs$core$IFn$_invoke$arity$2 = function($reducer$$, $coll$$) {
  return ham_fisted.api.group_by_reducer.cljs$core$IFn$_invoke$arity$4(null, $reducer$$, null, $coll$$);
};
ham_fisted.api.group_by_reducer.cljs$core$IFn$_invoke$arity$3 = function($key_fn$$, $reducer$$, $coll$$) {
  return ham_fisted.api.group_by_reducer.cljs$core$IFn$_invoke$arity$4($key_fn$$, $reducer$$, null, $coll$$);
};
ham_fisted.api.group_by_reducer.cljs$core$IFn$_invoke$arity$4 = function($key_fn$$, $reducer$$, $options$$, $coll$$) {
  return ham_fisted.api.goog$module$ham_fisted$BitmapTrie.groupByReduce(ham_fisted.api.default_hash_provider, ham_fisted.api.mut_hashtable_map, $key_fn$$, $reducer$$, $reducer$$, $APP.cljs.core.truth_($APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($options$$, cljs$cst$5465$skip_finalize_QMARK_)) ? null : $reducer$$, ham_fisted.lazy_noncaching.coll_reducer($coll$$));
};
ham_fisted.api.group_by_reducer.cljs$lang$maxFixedArity = 4;
ham_fisted.api.group_by = function($key_fn$$, $coll$$) {
  return ham_fisted.api.group_by_reducer.cljs$core$IFn$_invoke$arity$3($key_fn$$, function() {
    var $G__76604$$ = null, $G__76604__0$$ = function() {
      return ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$0();
    }, $G__76604__2$$ = function($acc$$, $v$$) {
      $acc$$.add($v$$);
      return $acc$$;
    };
    $G__76604$$ = function($acc$$, $v$$) {
      switch(arguments.length) {
        case 0:
          return $G__76604__0$$.call(this);
        case 1:
          return $acc$$;
        case 2:
          return $G__76604__2$$.call(this, $acc$$, $v$$);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    $G__76604$$.cljs$core$IFn$_invoke$arity$0 = $G__76604__0$$;
    $G__76604$$.cljs$core$IFn$_invoke$arity$1 = function($acc$$) {
      return $acc$$;
    };
    $G__76604$$.cljs$core$IFn$_invoke$arity$2 = $G__76604__2$$;
    return $G__76604$$;
  }(), $coll$$);
};
ham_fisted.api.group_by_reducer_cljs = function($key_fn$$, $reducer$$, $coll$$) {
  return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($JSCompiler_temp_const$jscomp$0$$) {
    var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$0$$, 0, null), $G__76531$jscomp$inline_7299_JSCompiler_inline_result$jscomp$1817_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$0$$, 1, null);
    $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.PersistentVector;
    var $JSCompiler_temp_const$$ = $APP.cljs.core.PersistentVector.EMPTY_NODE;
    $G__76531$jscomp$inline_7299_JSCompiler_inline_result$jscomp$1817_v$$ = $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($reducer$$, $reducer$$.cljs$core$IFn$_invoke$arity$0 ? $reducer$$.cljs$core$IFn$_invoke$arity$0() : $reducer$$.call(null), $G__76531$jscomp$inline_7299_JSCompiler_inline_result$jscomp$1817_v$$);
    $G__76531$jscomp$inline_7299_JSCompiler_inline_result$jscomp$1817_v$$ = $reducer$$.cljs$core$IFn$_invoke$arity$1 ? $reducer$$.cljs$core$IFn$_invoke$arity$1($G__76531$jscomp$inline_7299_JSCompiler_inline_result$jscomp$1817_v$$) : $reducer$$.call(null, $G__76531$jscomp$inline_7299_JSCompiler_inline_result$jscomp$1817_v$$);
    return new $JSCompiler_temp_const$jscomp$0$$(null, 2, 5, $JSCompiler_temp_const$$, [$k$$, $G__76531$jscomp$inline_7299_JSCompiler_inline_result$jscomp$1817_v$$], null);
  }), $APP.cljs.core.group_by($key_fn$$, $coll$$));
};
ham_fisted.api.reduce_reducer = function($reducer$$, $G__76532_data$$) {
  $G__76532_data$$ = ham_fisted.api.coll_reduce.cljs$core$IFn$_invoke$arity$3($G__76532_data$$, $reducer$$, $reducer$$.cljs$core$IFn$_invoke$arity$0 ? $reducer$$.cljs$core$IFn$_invoke$arity$0() : $reducer$$.call(null));
  return $reducer$$.cljs$core$IFn$_invoke$arity$1 ? $reducer$$.cljs$core$IFn$_invoke$arity$1($G__76532_data$$) : $reducer$$.call(null, $G__76532_data$$);
};
ham_fisted.api.consumer_reducer = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return ham_fisted.api.consumer_reducer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.consumer_reducer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.consumer_reducer.cljs$core$IFn$_invoke$arity$1 = function($cons_fn$$) {
  return function() {
    var $G__76606$$ = null, $G__76606__0$$ = function() {
      return $cons_fn$$.cljs$core$IFn$_invoke$arity$0 ? $cons_fn$$.cljs$core$IFn$_invoke$arity$0() : $cons_fn$$.call(null);
    }, $G__76606__1$$ = function($acc$$) {
      return $acc$$.deref();
    }, $G__76606__2$$ = function($acc$$, $v$$) {
      $acc$$.accept($v$$);
      return $acc$$;
    };
    $G__76606$$ = function($acc$$, $v$$) {
      switch(arguments.length) {
        case 0:
          return $G__76606__0$$.call(this);
        case 1:
          return $G__76606__1$$.call(this, $acc$$);
        case 2:
          return $G__76606__2$$.call(this, $acc$$, $v$$);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    $G__76606$$.cljs$core$IFn$_invoke$arity$0 = $G__76606__0$$;
    $G__76606$$.cljs$core$IFn$_invoke$arity$1 = $G__76606__1$$;
    $G__76606$$.cljs$core$IFn$_invoke$arity$2 = $G__76606__2$$;
    return $G__76606$$;
  }();
};
ham_fisted.api.consumer_reducer.cljs$core$IFn$_invoke$arity$2 = function($cons_fn$$, $fin_fn$$) {
  return function() {
    var $G__76607$$ = null, $G__76607__0$$ = function() {
      return $cons_fn$$.cljs$core$IFn$_invoke$arity$0 ? $cons_fn$$.cljs$core$IFn$_invoke$arity$0() : $cons_fn$$.call(null);
    }, $G__76607__1$$ = function($G__76535_acc$$) {
      $G__76535_acc$$ = $G__76535_acc$$.deref();
      return $fin_fn$$.cljs$core$IFn$_invoke$arity$1 ? $fin_fn$$.cljs$core$IFn$_invoke$arity$1($G__76535_acc$$) : $fin_fn$$.call(null, $G__76535_acc$$);
    }, $G__76607__2$$ = function($acc$$, $v$$) {
      $acc$$.accept($v$$);
      return $acc$$;
    };
    $G__76607$$ = function($acc$$, $v$$) {
      switch(arguments.length) {
        case 0:
          return $G__76607__0$$.call(this);
        case 1:
          return $G__76607__1$$.call(this, $acc$$);
        case 2:
          return $G__76607__2$$.call(this, $acc$$, $v$$);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    $G__76607$$.cljs$core$IFn$_invoke$arity$0 = $G__76607__0$$;
    $G__76607$$.cljs$core$IFn$_invoke$arity$1 = $G__76607__1$$;
    $G__76607$$.cljs$core$IFn$_invoke$arity$2 = $G__76607__2$$;
    return $G__76607$$;
  }();
};
ham_fisted.api.consumer_reducer.cljs$lang$maxFixedArity = 2;
ham_fisted.api.is_nan_QMARK_ = function($data$$) {
  var $or__5025__auto__$$ = !($APP.cljs.core.boolean_QMARK_($data$$) || typeof $data$$ === "number");
  return $or__5025__auto__$$ ? $or__5025__auto__$$ : isNaN($data$$);
};
ham_fisted.api.is_not_nan_QMARK_ = function($data$$) {
  return ($APP.cljs.core.boolean_QMARK_($data$$) || typeof $data$$ === "number") && $APP.cljs.core.not(isNaN($data$$));
};
ham_fisted.api.apply_nan_strategy = function($G__76537_G__76537__$1_options$$, $data$$) {
  $G__76537_G__76537__$1_options$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($G__76537_G__76537__$1_options$$, cljs$cst$5466$nan_strategy, cljs$cst$5467$remove);
  $G__76537_G__76537__$1_options$$ = $G__76537_G__76537__$1_options$$ instanceof $APP.cljs.core.Keyword ? $G__76537_G__76537__$1_options$$.fqn : null;
  switch($G__76537_G__76537__$1_options$$) {
    case "remove":
      return ham_fisted.lazy_noncaching.filter.cljs$core$IFn$_invoke$arity$2(ham_fisted.api.is_not_nan_QMARK_, $data$$);
    case "exception":
      return ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2(function($p1__76536_SHARP_$$) {
        if ($APP.cljs.core.truth_(ham_fisted.api.is_nan_QMARK_($p1__76536_SHARP_$$))) {
          throw Error("Nan Detected");
        }
        return $p1__76536_SHARP_$$;
      }, $data$$);
    case "keep":
      return $data$$;
    default:
      throw Error(["No matching clause: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($G__76537_G__76537__$1_options$$)].join(""));
  }
};
ham_fisted.api.sum_n_elems = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return ham_fisted.api.sum_n_elems.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return ham_fisted.api.sum_n_elems.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.sum_n_elems.cljs$core$IFn$_invoke$arity$2 = function($options$jscomp$120_s$$, $data$$) {
  $options$jscomp$120_s$$ = ham_fisted.api.reduce_reducer(ham_fisted.api.consumer_reducer.cljs$core$IFn$_invoke$arity$1(ham_fisted.api.goog$module$ham_fisted$ChunkedVec.sum), ham_fisted.api.apply_nan_strategy($options$jscomp$120_s$$, $data$$));
  return new $APP.cljs.core.PersistentArrayMap(null, 2, [cljs$cst$5468$n_elems, $options$jscomp$120_s$$.n, cljs$cst$5469$sum, $options$jscomp$120_s$$.s], null);
};
ham_fisted.api.sum_n_elems.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.sum_n_elems.cljs$core$IFn$_invoke$arity$2(null, $data$$);
};
ham_fisted.api.sum_n_elems.cljs$lang$maxFixedArity = 2;
ham_fisted.api.sum_r = ham_fisted.api.consumer_reducer.cljs$core$IFn$_invoke$arity$2(ham_fisted.api.goog$module$ham_fisted$ChunkedVec.sum, function($p1__76540_SHARP_$$) {
  return $p1__76540_SHARP_$$.s;
});
ham_fisted.api.sum = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return ham_fisted.api.sum.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return ham_fisted.api.sum.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.sum.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.sum.cljs$core$IFn$_invoke$arity$2(null, $data$$);
};
ham_fisted.api.sum.cljs$core$IFn$_invoke$arity$2 = function($options$$, $data$$) {
  return ham_fisted.api.reduce_reducer(ham_fisted.api.sum_r, ham_fisted.api.apply_nan_strategy($options$$, $data$$));
};
ham_fisted.api.sum.cljs$lang$maxFixedArity = 2;
ham_fisted.api.mean_r = ham_fisted.api.consumer_reducer.cljs$core$IFn$_invoke$arity$2(ham_fisted.api.goog$module$ham_fisted$ChunkedVec.sum, function($p1__76543_SHARP_$$) {
  return $p1__76543_SHARP_$$.s / $p1__76543_SHARP_$$.n;
});
ham_fisted.api.mean = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return ham_fisted.api.mean.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return ham_fisted.api.mean.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.mean.cljs$core$IFn$_invoke$arity$2 = function($options$$, $data$$) {
  return ham_fisted.api.reduce_reducer(ham_fisted.api.mean_r, ham_fisted.api.apply_nan_strategy($options$$, $data$$));
};
ham_fisted.api.mean.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.mean.cljs$core$IFn$_invoke$arity$2(null, $data$$);
};
ham_fisted.api.mean.cljs$lang$maxFixedArity = 2;
ham_fisted.api.VarReducer = function($c$$, $m$$, $ss$$) {
  this.c = $c$$;
  this.m = $m$$;
  this.ss = $ss$$;
};
ham_fisted.api.VarReducer.prototype.accept = function($e$jscomp$404_ss_SINGLEQUOTE_$$) {
  var $c_SINGLEQUOTE_$$ = this.c + 1, $m_SINGLEQUOTE_$$ = this.m + ($e$jscomp$404_ss_SINGLEQUOTE_$$ - this.m) / $c_SINGLEQUOTE_$$;
  $e$jscomp$404_ss_SINGLEQUOTE_$$ = this.ss + ($e$jscomp$404_ss_SINGLEQUOTE_$$ - $m_SINGLEQUOTE_$$) * ($e$jscomp$404_ss_SINGLEQUOTE_$$ - this.m);
  this.c = $c_SINGLEQUOTE_$$;
  this.m = $m_SINGLEQUOTE_$$;
  return this.ss = $e$jscomp$404_ss_SINGLEQUOTE_$$;
};
ham_fisted.api.VarReducer.prototype.deref = function() {
  return this.c === 0 ? NaN : this.c === 1 ? 0 : this.ss / (this.c - 1);
};
ham_fisted.api.VarReducer.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$2230$c, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), $APP.cljs.core.with_meta($APP.cljs$cst$1370$m, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), $APP.cljs.core.with_meta(cljs$cst$5470$ss, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, 
  !0], null))], null);
};
ham_fisted.api.VarReducer.cljs$lang$type = !0;
ham_fisted.api.VarReducer.cljs$lang$ctorStr = "ham-fisted.api/VarReducer";
ham_fisted.api.VarReducer.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "ham-fisted.api/VarReducer");
};
ham_fisted.api.__GT_VarReducer = function($c$$, $m$$, $ss$$) {
  return new ham_fisted.api.VarReducer($c$$, $m$$, $ss$$);
};
ham_fisted.api.var_r = ham_fisted.api.consumer_reducer.cljs$core$IFn$_invoke$arity$1(function() {
  return new ham_fisted.api.VarReducer(0, 0, 0);
});
ham_fisted.api.variance = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return ham_fisted.api.variance.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return ham_fisted.api.variance.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.variance.cljs$core$IFn$_invoke$arity$2 = function($options$$, $data$$) {
  return ham_fisted.api.reduce_reducer(ham_fisted.api.var_r, ham_fisted.api.apply_nan_strategy($options$$, $data$$));
};
ham_fisted.api.variance.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.variance.cljs$core$IFn$_invoke$arity$2(null, $data$$);
};
ham_fisted.api.variance.cljs$lang$maxFixedArity = 2;
ham_fisted.api.standard_deviation = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return ham_fisted.api.standard_deviation.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return ham_fisted.api.standard_deviation.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
ham_fisted.api.standard_deviation.cljs$core$IFn$_invoke$arity$2 = function($options$$, $data$$) {
  return Math.sqrt(ham_fisted.api.variance.cljs$core$IFn$_invoke$arity$2($options$$, $data$$));
};
ham_fisted.api.standard_deviation.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return ham_fisted.api.standard_deviation.cljs$core$IFn$_invoke$arity$2(null, $data$$);
};
ham_fisted.api.standard_deviation.cljs$lang$maxFixedArity = 2;
ham_fisted.api.mmax_key_r = function($key_fn$$) {
  return ham_fisted.api.consumer_reducer.cljs$core$IFn$_invoke$arity$1(function() {
    return ham_fisted.api.goog$module$ham_fisted$ChunkedVec.mmax_key($key_fn$$);
  });
};
ham_fisted.api.mmin_key_r = function($key_fn$$) {
  return ham_fisted.api.consumer_reducer.cljs$core$IFn$_invoke$arity$1(function() {
    return ham_fisted.api.goog$module$ham_fisted$ChunkedVec.mmin_key($key_fn$$);
  });
};
ham_fisted.api.mmax_key = function($key_fn$$, $data$$) {
  return ham_fisted.api.reduce_reducer(ham_fisted.api.mmax_key_r($key_fn$$), $data$$);
};
ham_fisted.api.mmin_key = function($key_fn$$, $data$$) {
  return ham_fisted.api.reduce_reducer(ham_fisted.api.mmin_key_r($key_fn$$), $data$$);
};
ham_fisted.api.akey_QMARK_ = function($data$$) {
  return $APP.cljs.core.truth_($data$$) ? $data$$[0] : null;
};
ham_fisted.api.aval = function($data$$) {
  return $data$$[1];
};
ham_fisted.api.mode = function($data$$) {
  return ham_fisted.api.akey_QMARK_(ham_fisted.api.mmax_key(ham_fisted.api.aval, ham_fisted.api.frequencies.cljs$core$IFn$_invoke$arity$1($data$$)));
};
tech.v3.datatype.base = {};
tech.v3.datatype.base.goog$module$goog$object = $APP.goog.object;
tech.v3.datatype.base.ecount = function($item$$) {
  return $item$$ == null ? null : $APP.cljs.core.count($item$$);
};
tech.v3.datatype.base.shape = function($item$$) {
  return $item$$ == null ? null : tech.v3.datatype.protocols._shape($item$$);
};
tech.v3.datatype.base.clone = function($item$$) {
  return $APP.cljs.core.clone($item$$);
};
tech.v3.datatype.base.elemwise_datatype = function($item$$) {
  return $item$$ == null ? $APP.cljs$cst$2189$object : tech.v3.datatype.protocols._elemwise_datatype($item$$);
};
tech.v3.datatype.base.datatype = function($item$$) {
  return $item$$ == null ? $APP.cljs$cst$2189$object : tech.v3.datatype.protocols._datatype($item$$);
};
tech.v3.datatype.base.as_typed_array = function($item$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
  var $JSCompiler_inline_result$$ = $APP.cljs.core.truth_($item$$) ? tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_($item$$) : $item$$;
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$$) ? tech.v3.datatype.protocols.__GT_typed_array($item$$) : null;
};
tech.v3.datatype.base.as_js_array = function($item$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
  var $JSCompiler_inline_result$$ = $APP.cljs.core.truth_($item$$) ? tech.v3.datatype.protocols._convertible_to_js_array_QMARK_($item$$) : $item$$;
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$$) ? tech.v3.datatype.protocols.__GT_js_array($item$$) : null;
};
tech.v3.datatype.base.sub_buffer_copy = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$304_argseq__5756__auto__$$ = [], $len__5749__auto___76616$$ = arguments.length, $i__5750__auto___76617$$ = 0;;) {
    if ($i__5750__auto___76617$$ < $len__5749__auto___76616$$) {
      $args__5755__auto__$jscomp$304_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76617$$]), $i__5750__auto___76617$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$304_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$304_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$304_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return tech.v3.datatype.base.sub_buffer_copy.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$304_argseq__5756__auto__$$);
};
tech.v3.datatype.base.sub_buffer_copy.cljs$core$IFn$_invoke$arity$variadic = function($item$$, $off$$, $elen_p__76568$$) {
  var $len$jscomp$115_len__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($elen_p__76568$$, 0, null);
  $elen_p__76568$$ = $APP.cljs.core.count($item$$);
  var $maxlen$$ = $elen_p__76568$$ - $off$$;
  $len$jscomp$115_len__$1$$ = $APP.cljs.core.truth_($len$jscomp$115_len__$1$$) ? $len$jscomp$115_len__$1$$ : $maxlen$$;
  if (!($elen_p__76568$$ >= $off$$ + $len$jscomp$115_len__$1$$)) {
    throw Error(["Offset ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($off$$), " len ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($len$jscomp$115_len__$1$$), " \x3d\x3e item length ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($elen_p__76568$$)].join(""));
  }
  return tech.v3.datatype.protocols._sub_buffer_copy($item$$, $off$$, $len$jscomp$115_len__$1$$);
};
tech.v3.datatype.base.sub_buffer_copy.cljs$lang$maxFixedArity = 2;
tech.v3.datatype.base.sub_buffer_copy.cljs$lang$applyTo = function($G__76567_seq76565$$) {
  var $G__76566$$ = $APP.cljs.core.first($G__76567_seq76565$$), $seq76565__$1_seq76565__$2$$ = $APP.cljs.core.next($G__76567_seq76565$$);
  $G__76567_seq76565$$ = $APP.cljs.core.first($seq76565__$1_seq76565__$2$$);
  $seq76565__$1_seq76565__$2$$ = $APP.cljs.core.next($seq76565__$1_seq76565__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76566$$, $G__76567_seq76565$$, $seq76565__$1_seq76565__$2$$);
};
tech.v3.datatype.base.sub_buffer = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$305_argseq__5756__auto__$$ = [], $len__5749__auto___76619$$ = arguments.length, $i__5750__auto___76620$$ = 0;;) {
    if ($i__5750__auto___76620$$ < $len__5749__auto___76619$$) {
      $args__5755__auto__$jscomp$305_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76620$$]), $i__5750__auto___76620$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$305_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$305_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$305_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return tech.v3.datatype.base.sub_buffer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$305_argseq__5756__auto__$$);
};
tech.v3.datatype.base.sub_buffer.cljs$core$IFn$_invoke$arity$variadic = function($item$$, $off$$, $elen$$) {
  var $len$jscomp$116_len__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($elen$$, 0, null);
  $elen$$ = $APP.cljs.core.count($item$$);
  var $maxlen$$ = $elen$$ - $off$$;
  $len$jscomp$116_len__$1$$ = $APP.cljs.core.truth_($len$jscomp$116_len__$1$$) ? $len$jscomp$116_len__$1$$ : $maxlen$$;
  if (!($elen$$ >= $off$$ + $len$jscomp$116_len__$1$$)) {
    throw Error(["Offset ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($off$$), " len ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($len$jscomp$116_len__$1$$), " \x3d\x3e item length ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($elen$$)].join(""));
  }
  return tech.v3.datatype.protocols._sub_buffer($item$$, $off$$, $len$jscomp$116_len__$1$$);
};
tech.v3.datatype.base.sub_buffer.cljs$lang$maxFixedArity = 2;
tech.v3.datatype.base.sub_buffer.cljs$lang$applyTo = function($G__76575_seq76573$$) {
  var $G__76574$$ = $APP.cljs.core.first($G__76575_seq76573$$), $seq76573__$1_seq76573__$2$$ = $APP.cljs.core.next($G__76575_seq76573$$);
  $G__76575_seq76573$$ = $APP.cljs.core.first($seq76573__$1_seq76573__$2$$);
  $seq76573__$1_seq76573__$2$$ = $APP.cljs.core.next($seq76573__$1_seq76573__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76574$$, $G__76575_seq76573$$, $seq76573__$1_seq76573__$2$$);
};
tech.v3.datatype.base.counted_QMARK_ = function($item$$) {
  return $APP.cljs.core.truth_($item$$) ? $item$$ instanceof Array ? !0 : $APP.cljs.core.counted_QMARK_($item$$) : null;
};
tech.v3.datatype.base.indexed_QMARK_ = function($item$$) {
  return $APP.cljs.core.truth_($item$$) ? $item$$ instanceof Array ? !0 : $APP.cljs.core.indexed_QMARK_($item$$) : null;
};
tech.v3.datatype.base.ensure_indexable = function($data$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.not;
  var $JSCompiler_inline_result$jscomp$1826_or__5025__auto__$$ = ($JSCompiler_inline_result$jscomp$1826_or__5025__auto__$$ = $data$$ instanceof Array) ? $JSCompiler_inline_result$jscomp$1826_or__5025__auto__$$ : tech.v3.datatype.base.indexed_QMARK_($data$$);
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$1826_or__5025__auto__$$) ? $APP.cljs.core.vec($data$$) : $data$$;
};
tech.v3.datatype.base.as_agetable = function($data$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
  var $JSCompiler_inline_result$$ = $APP.cljs.core.truth_($data$$) ? tech.v3.datatype.protocols._convertible_to_agetable_QMARK_($data$$) : $data$$;
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$$) ? tech.v3.datatype.protocols.__GT_agetable($data$$) : null;
};
tech.v3.datatype.base.set_value_BANG_ = function($item$$, $idx$$, $data$$) {
  if (!$APP.cljs.core.truth_($item$$)) {
    throw Error("Item is nil");
  }
  if (!($idx$$ < $APP.cljs.core.count($item$$))) {
    throw Error("Index is out of item length");
  }
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
  var $JSCompiler_inline_result$jscomp$1832_and__5023__auto__$$ = tech.v3.datatype.base.counted_QMARK_($data$$);
  $JSCompiler_inline_result$jscomp$1832_and__5023__auto__$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$1832_and__5023__auto__$$) ? !($idx$$ + $APP.cljs.core.count($data$$) <= $APP.cljs.core.count($item$$)) : $JSCompiler_inline_result$jscomp$1832_and__5023__auto__$$;
  if ($JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$1832_and__5023__auto__$$)) {
    throw Error(["data length + idx ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.count($data$$) + $idx$$), " is out of range of item length "].join(""), $APP.cljs.core.count($item$$));
  }
  tech.v3.datatype.protocols._set_value_BANG_($item$$, $idx$$, $data$$);
  return $item$$;
};
tech.v3.datatype.base.set_constant_BANG_ = function($item$$, $idx$$, $elem_count$$, $data$$) {
  if (!$APP.cljs.core.truth_($item$$)) {
    throw Error("Item is nil");
  }
  if (!($idx$$ + $elem_count$$ <= $APP.cljs.core.count($item$$))) {
    throw Error("Index is out of item length");
  }
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
  var $JSCompiler_inline_result$jscomp$1835_and__5023__auto__$$ = tech.v3.datatype.base.counted_QMARK_($data$$);
  $JSCompiler_inline_result$jscomp$1835_and__5023__auto__$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$1835_and__5023__auto__$$) ? !($idx$$ + $APP.cljs.core.count($data$$) <= $APP.cljs.core.count($item$$)) : $JSCompiler_inline_result$jscomp$1835_and__5023__auto__$$;
  if ($JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$1835_and__5023__auto__$$)) {
    throw Error(["data length + idx ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.count($data$$) + $idx$$), " is out of range of item length "].join(""), $APP.cljs.core.count($item$$));
  }
  tech.v3.datatype.protocols._set_constant_BANG_($item$$, $idx$$, $elem_count$$, $data$$);
  return $item$$;
};
tech.v3.datatype.base.integer_range_QMARK_ = function($item$$) {
  var $and__5023__auto__$jscomp$305_or__5025__auto__$$ = $item$$ instanceof $APP.cljs.core.IntegerRange;
  return $and__5023__auto__$jscomp$305_or__5025__auto__$$ ? $and__5023__auto__$jscomp$305_or__5025__auto__$$ : ($and__5023__auto__$jscomp$305_or__5025__auto__$$ = $item$$ instanceof ham_fisted.api.RangeType) ? $item$$.isInteger() : $and__5023__auto__$jscomp$305_or__5025__auto__$$;
};
tech.v3.datatype.base.consumer_acc = function($acc$$, $v$$) {
  $acc$$.cljs$core$IFn$_invoke$arity$1 ? $acc$$.cljs$core$IFn$_invoke$arity$1($v$$) : $acc$$.call(null, $v$$);
  return $acc$$;
};
tech.v3.datatype.base.as_js_iterator = function($data$$) {
  if ($APP.cljs.core.truth_($data$$)) {
    var $temp__5825__auto__$$ = tech.v3.datatype.base.goog$module$goog$object.get($data$$, $APP.cljs.core.ITER_SYMBOL);
    return $APP.cljs.core.truth_($temp__5825__auto__$$) ? $temp__5825__auto__$$.call($data$$) : null;
  }
  return null;
};
tech.v3.datatype.base.as_iterator = function($data$$) {
  return $APP.cljs.core.truth_($APP.cljs.core.truth_($data$$) ? $data$$ != null ? $data$$.cljs$lang$protocol_mask$partition1$ & 131072 || $APP.cljs.core.PROTOCOL_SENTINEL === $data$$.cljs$core$IIterable$ ? !0 : $data$$.cljs$lang$protocol_mask$partition1$ ? !1 : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.IIterable, $data$$) : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.IIterable, $data$$) : $data$$) ? $APP.cljs.core._iterator($data$$) : null;
};
tech.v3.datatype.base.indexed_iterate_BANG_ = function($consume_fn$$, $item$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($acc$$, $idx$$, $v$$) {
    $acc$$.cljs$core$IFn$_invoke$arity$2 ? $acc$$.cljs$core$IFn$_invoke$arity$2($idx$$, $v$$) : $acc$$.call(null, $idx$$, $v$$);
    return $acc$$;
  }), $consume_fn$$, $item$$);
};
tech.v3.datatype.base.iterate_BANG_ = function($consume_fn$$, $item$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(tech.v3.datatype.base.consumer_acc, $consume_fn$$, $item$$);
};
tech.v3.datatype.base.reader_data__GT_str = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return tech.v3.datatype.base.reader_data__GT_str.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return tech.v3.datatype.base.reader_data__GT_str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.base.reader_data__GT_str.cljs$core$IFn$_invoke$arity$2 = function($rdr$$, $dtype$$) {
  var $n_elems$$ = $APP.cljs.core.count($rdr$$), $ellipses_QMARK_$$ = $n_elems$$ > 25;
  $rdr$$ = $ellipses_QMARK_$$ ? $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.base.sub_buffer.cljs$core$IFn$_invoke$arity$variadic($rdr$$, 0, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([10], 0)), tech.v3.datatype.base.sub_buffer.cljs$core$IFn$_invoke$arity$variadic($rdr$$, $n_elems$$ - 10, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([10], 0))) : $rdr$$;
  $dtype$$ = tech.v3.datatype.casting.numeric_type_QMARK_($dtype$$) ? tech.v3.datatype.format_sequence.format_sequence.cljs$core$IFn$_invoke$arity$1($rdr$$) : $rdr$$;
  return $ellipses_QMARK_$$ ? $APP.clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ", $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.take.cljs$core$IFn$_invoke$arity$2(10, $dtype$$), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, ["..."], null), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.drop.cljs$core$IFn$_invoke$arity$2(10, $dtype$$)], 0))) : $APP.clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ", 
  $dtype$$);
};
tech.v3.datatype.base.reader_data__GT_str.cljs$core$IFn$_invoke$arity$1 = function($rdr$$) {
  return tech.v3.datatype.base.reader_data__GT_str.cljs$core$IFn$_invoke$arity$2($rdr$$, tech.v3.datatype.base.elemwise_datatype($rdr$$));
};
tech.v3.datatype.base.reader_data__GT_str.cljs$lang$maxFixedArity = 2;
tech.v3.datatype.base.reader__GT_str = function($rdr$$, $typename$$) {
  var $simple_print_QMARK_$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.meta($rdr$$), cljs$cst$5471$simple_print_QMARK_), $cnt$$ = $APP.cljs.core.count($rdr$$), $dtype$$ = tech.v3.datatype.base.elemwise_datatype($rdr$$);
  $rdr$$ = tech.v3.datatype.base.reader_data__GT_str.cljs$core$IFn$_invoke$arity$2($rdr$$, $dtype$$);
  return $APP.cljs.core.truth_($simple_print_QMARK_$$) ? ["[", $rdr$$, "]"].join("") : ["#", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($typename$$), "[[", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($dtype$$), " ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($cnt$$), "][", $rdr$$, "]]"].join("");
};
tech.v3.datatype.base.list_coalesce_BANG_ = function($data$$, $container$$) {
  $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5462$scalar, tech.v3.datatype.argtypes.argtype($data$$)) ? tech.v3.datatype.protocols._add($container$$, $data$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5462$scalar, tech.v3.datatype.argtypes.argtype($APP.cljs.core.first($data$$))) ? tech.v3.datatype.protocols._add_all($container$$, $data$$) : tech.v3.datatype.base.iterate_BANG_(function($p1__76610_SHARP_$$) {
    return tech.v3.datatype.base.list_coalesce_BANG_.cljs$core$IFn$_invoke$arity$2 ? tech.v3.datatype.base.list_coalesce_BANG_.cljs$core$IFn$_invoke$arity$2($p1__76610_SHARP_$$, $container$$) : tech.v3.datatype.base.list_coalesce_BANG_.call(null, $p1__76610_SHARP_$$, $container$$);
  }, $data$$);
  return $container$$;
};
tech.v3.datatype.base.generalized_shape = function($G__76624_data$jscomp$256_data__$1$$) {
  if ($G__76624_data$jscomp$256_data__$1$$ == null || $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5462$scalar, tech.v3.datatype.argtypes.argtype($G__76624_data$jscomp$256_data__$1$$))) {
    return $APP.cljs.core.PersistentVector.EMPTY;
  }
  if ($G__76624_data$jscomp$256_data__$1$$ != null ? $APP.cljs.core.PROTOCOL_SENTINEL === $G__76624_data$jscomp$256_data__$1$$.tech$v3$datatype$protocols$PShape$ || ($G__76624_data$jscomp$256_data__$1$$.cljs$lang$protocol_mask$partition$ ? 0 : $APP.cljs.core.native_satisfies_QMARK_(tech.v3.datatype.protocols.PShape, $G__76624_data$jscomp$256_data__$1$$)) : $APP.cljs.core.native_satisfies_QMARK_(tech.v3.datatype.protocols.PShape, $G__76624_data$jscomp$256_data__$1$$)) {
    return tech.v3.datatype.protocols._shape($G__76624_data$jscomp$256_data__$1$$);
  }
  var $G__76623_shp$$ = $APP.cljs.core.transient$(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.count($G__76624_data$jscomp$256_data__$1$$)], null));
  for ($G__76624_data$jscomp$256_data__$1$$ = $APP.cljs.core.first($G__76624_data$jscomp$256_data__$1$$);;) {
    if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5462$scalar, tech.v3.datatype.argtypes.argtype($G__76624_data$jscomp$256_data__$1$$))) {
      return $APP.cljs.core.persistent_BANG_($G__76623_shp$$);
    }
    $G__76623_shp$$ = $APP.cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2($G__76623_shp$$, $APP.cljs.core.count($G__76624_data$jscomp$256_data__$1$$));
    $G__76624_data$jscomp$256_data__$1$$ = $APP.cljs.core.first($G__76624_data$jscomp$256_data__$1$$);
  }
};
$APP.cljs.core.PersistentVector.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.PersistentVector.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($item$$, $offset$$, $len$$) {
  return $APP.cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(this, $offset$$, $offset$$ + $len$$);
};
tech.v3.datatype.arrays = {};
tech.v3.datatype.arrays.ary_types = $APP.cljs.core.PersistentHashMap.fromArrays([Float64Array, Int16Array, Float32Array, Uint8ClampedArray, Uint8Array, Int32Array, Uint16Array, Uint32Array, BigInt64Array, BigUint64Array, Int8Array], [$APP.cljs$cst$3329$float64, $APP.cljs$cst$3334$int16, $APP.cljs$cst$3336$float32, $APP.cljs$cst$3330$uint8, $APP.cljs$cst$3330$uint8, $APP.cljs$cst$3337$int32, $APP.cljs$cst$3333$uint16, $APP.cljs$cst$3335$uint32, cljs$cst$5460$int64, cljs$cst$5461$uint64, $APP.cljs$cst$3331$int8]);
tech.v3.datatype.arrays.typed_array_types = $APP.cljs.core.set($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.second, tech.v3.datatype.arrays.ary_types));
tech.v3.datatype.arrays.equiv_agetable = function($this$$jscomp$1204_this$__$1$$, $other$$) {
  $this$$jscomp$1204_this$__$1$$ = tech.v3.datatype.base.as_agetable($this$$jscomp$1204_this$__$1$$);
  var $n_elems$$ = $APP.cljs.core.count($this$$jscomp$1204_this$__$1$$), $JSCompiler_temp_const$jscomp$1837_temp__5823__auto__$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$1836_idx$$ = $JSCompiler_temp_const$jscomp$1837_temp__5823__auto__$$.truth_;
  var $JSCompiler_inline_result$$ = $APP.cljs.core.truth_($this$$jscomp$1204_this$__$1$$) ? $n_elems$$ === tech.v3.datatype.base.ecount($other$$) : $this$$jscomp$1204_this$__$1$$;
  if ($JSCompiler_temp_const$jscomp$1836_idx$$.call($JSCompiler_temp_const$jscomp$1837_temp__5823__auto__$$, $JSCompiler_inline_result$$)) {
    if ($JSCompiler_temp_const$jscomp$1837_temp__5823__auto__$$ = tech.v3.datatype.base.as_agetable($other$$), $APP.cljs.core.truth_($JSCompiler_temp_const$jscomp$1837_temp__5823__auto__$$)) {
      for ($JSCompiler_temp_const$jscomp$1836_idx$$ = 0;;) {
        if ($JSCompiler_temp_const$jscomp$1836_idx$$ < $n_elems$$) {
          if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($this$$jscomp$1204_this$__$1$$[$JSCompiler_temp_const$jscomp$1836_idx$$], $JSCompiler_temp_const$jscomp$1837_temp__5823__auto__$$[$JSCompiler_temp_const$jscomp$1836_idx$$])) {
            $JSCompiler_temp_const$jscomp$1836_idx$$ += 1;
            continue;
          } else {
            return !1;
          }
        } else {
          return !0;
        }
        break;
      }
    } else {
      for ($JSCompiler_temp_const$jscomp$1836_idx$$ = 0;;) {
        if ($JSCompiler_temp_const$jscomp$1836_idx$$ < $n_elems$$) {
          if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($this$$jscomp$1204_this$__$1$$[$JSCompiler_temp_const$jscomp$1836_idx$$], $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($other$$, $JSCompiler_temp_const$jscomp$1836_idx$$))) {
            $JSCompiler_temp_const$jscomp$1836_idx$$ += 1;
            continue;
          } else {
            return !1;
          }
        } else {
          return !0;
        }
        break;
      }
    }
  } else {
    return !1;
  }
};
tech.v3.datatype.arrays.equiv_nthable = function($this$$$, $other$$) {
  var $n_elems$$ = $APP.cljs.core.count($this$$$), $JSCompiler_temp_const$jscomp$1840_temp__5823__auto__$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$1839_idx$$ = $JSCompiler_temp_const$jscomp$1840_temp__5823__auto__$$.truth_;
  var $JSCompiler_inline_result$$ = $APP.cljs.core.truth_($this$$$) ? $n_elems$$ === tech.v3.datatype.base.ecount($other$$) : $this$$$;
  if ($JSCompiler_temp_const$jscomp$1839_idx$$.call($JSCompiler_temp_const$jscomp$1840_temp__5823__auto__$$, $JSCompiler_inline_result$$)) {
    if ($JSCompiler_temp_const$jscomp$1840_temp__5823__auto__$$ = tech.v3.datatype.base.as_agetable($other$$), $APP.cljs.core.truth_($JSCompiler_temp_const$jscomp$1840_temp__5823__auto__$$)) {
      for ($JSCompiler_temp_const$jscomp$1839_idx$$ = 0;;) {
        if ($JSCompiler_temp_const$jscomp$1839_idx$$ < $n_elems$$) {
          if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($this$$$, $JSCompiler_temp_const$jscomp$1839_idx$$), $JSCompiler_temp_const$jscomp$1840_temp__5823__auto__$$[$JSCompiler_temp_const$jscomp$1839_idx$$])) {
            $JSCompiler_temp_const$jscomp$1839_idx$$ += 1;
            continue;
          } else {
            return !1;
          }
        } else {
          return !0;
        }
        break;
      }
    } else {
      for ($JSCompiler_temp_const$jscomp$1839_idx$$ = 0;;) {
        if ($JSCompiler_temp_const$jscomp$1839_idx$$ < $n_elems$$) {
          if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($this$$$, $JSCompiler_temp_const$jscomp$1839_idx$$), $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($other$$, $JSCompiler_temp_const$jscomp$1839_idx$$))) {
            $JSCompiler_temp_const$jscomp$1839_idx$$ += 1;
            continue;
          } else {
            return !1;
          }
        } else {
          return !0;
        }
        break;
      }
    }
  } else {
    return !1;
  }
};
tech.v3.datatype.arrays.nth_impl = function($n$$, $n_elems$$, $def_val$$, $get_fn$$, $container$$) {
  var $n__$1$$ = $n$$ < 0 ? $n_elems$$ + $n$$ : $n$$;
  if ($n__$1$$ >= 0 && $n__$1$$ < $n_elems$$) {
    return $get_fn$$.cljs$core$IFn$_invoke$arity$2 ? $get_fn$$.cljs$core$IFn$_invoke$arity$2($container$$, $n__$1$$) : $get_fn$$.call(null, $container$$, $n__$1$$);
  }
  if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($def_val$$, cljs$cst$5472$tech_DOT_v3_DOT_datatype_DOT_arrays_SLASH_exception)) {
    throw Error(['Index "', $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($n$$), '" out of range [', $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(-$n_elems$$), " ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($n_elems$$ - 1), "]"].join(""));
  }
  return $def_val$$;
};
tech.v3.datatype.arrays.AgetIter = function($data$$, $n_elems$$, $i$$) {
  this.data = $data$$;
  this.n_elems = $n_elems$$;
  this.i = $i$$;
};
tech.v3.datatype.arrays.AgetIter.prototype.hasNext = function() {
  return this.i < this.n_elems;
};
tech.v3.datatype.arrays.AgetIter.prototype.next = function() {
  var $ret$$ = this.data[this.i];
  this.i += 1;
  return $ret$$;
};
tech.v3.datatype.arrays.AgetIter.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data, cljs$cst$5473$n_elems, $APP.cljs.core.with_meta($APP.cljs$cst$19$i, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null))], null);
};
tech.v3.datatype.arrays.AgetIter.cljs$lang$type = !0;
tech.v3.datatype.arrays.AgetIter.cljs$lang$ctorStr = "tech.v3.datatype.arrays/AgetIter";
tech.v3.datatype.arrays.AgetIter.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.datatype.arrays/AgetIter");
};
tech.v3.datatype.arrays.__GT_AgetIter = function($data$$, $n_elems$$, $i$$) {
  return new tech.v3.datatype.arrays.AgetIter($data$$, $n_elems$$, $i$$);
};
tech.v3.datatype.arrays.aget_iter = function($data$jscomp$259_temp__5823__auto__$$) {
  $data$jscomp$259_temp__5823__auto__$$ = tech.v3.datatype.base.as_agetable($data$jscomp$259_temp__5823__auto__$$);
  if ($APP.cljs.core.truth_($data$jscomp$259_temp__5823__auto__$$)) {
    return new tech.v3.datatype.arrays.AgetIter($data$jscomp$259_temp__5823__auto__$$, $APP.cljs.core.count($data$jscomp$259_temp__5823__auto__$$), 0);
  }
  throw Error("Data is not agetable");
};
tech.v3.datatype.arrays.NthIter = function($data$$, $n_elems$$, $i$$) {
  this.data = $data$$;
  this.n_elems = $n_elems$$;
  this.i = $i$$;
};
tech.v3.datatype.arrays.NthIter.prototype.hasNext = function() {
  return this.i < this.n_elems;
};
tech.v3.datatype.arrays.NthIter.prototype.next = function() {
  var $ret$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.data, this.i);
  this.i += 1;
  return $ret$$;
};
tech.v3.datatype.arrays.NthIter.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data, cljs$cst$5473$n_elems, $APP.cljs.core.with_meta($APP.cljs$cst$19$i, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null))], null);
};
tech.v3.datatype.arrays.NthIter.cljs$lang$type = !0;
tech.v3.datatype.arrays.NthIter.cljs$lang$ctorStr = "tech.v3.datatype.arrays/NthIter";
tech.v3.datatype.arrays.NthIter.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.datatype.arrays/NthIter");
};
tech.v3.datatype.arrays.__GT_NthIter = function($data$$, $n_elems$$, $i$$) {
  return new tech.v3.datatype.arrays.NthIter($data$$, $n_elems$$, $i$$);
};
tech.v3.datatype.arrays.nth_iter = function($data$$) {
  return new tech.v3.datatype.arrays.NthIter($data$$, $APP.cljs.core.count($data$$), 0);
};
tech.v3.datatype.arrays.index_iter = function($data$$) {
  var $temp__5823__auto__$$ = tech.v3.datatype.base.as_agetable($data$$);
  return $APP.cljs.core.truth_($temp__5823__auto__$$) ? tech.v3.datatype.arrays.aget_iter($temp__5823__auto__$$) : tech.v3.datatype.arrays.nth_iter($data$$);
};
for (var seq__76625_76665 = $APP.cljs.core.seq($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.first, tech.v3.datatype.arrays.ary_types)), chunk__76626_76666 = null, count__76627_76667 = 0, i__76628_76668 = 0;;) {
  if (i__76628_76668 < count__76627_76667) {
    var ary_type_76669 = chunk__76626_76666.cljs$core$IIndexed$_nth$arity$2(null, i__76628_76668), cast_fn_76670 = tech.v3.datatype.casting.cast_fn(tech.v3.datatype.arrays.ary_types.cljs$core$IFn$_invoke$arity$1 ? tech.v3.datatype.arrays.ary_types.cljs$core$IFn$_invoke$arity$1(ary_type_76669) : tech.v3.datatype.arrays.ary_types.call(null, ary_type_76669));
    ary_type_76669.prototype.tech$v3$datatype$protocols$PSetValue$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.tech$v3$datatype$protocols$PSetValue$_set_value_BANG_$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($item$$, $idx$$, $data$$) {
        typeof $data$$ === "number" || $data$$ instanceof BigInt ? this[$idx$$] = $cast_fn_76670$$.cljs$core$IFn$_invoke$arity$1 ? $cast_fn_76670$$.cljs$core$IFn$_invoke$arity$1($data$$) : $cast_fn_76670$$.call(null, $data$$) : $APP.cljs.core.truth_(tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_($data$$)) ? this.set(tech.v3.datatype.protocols.__GT_typed_array($data$$), $idx$$) : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($seq__76625_76665$$, 
        $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $item__$1$$, $cast_fn_76670$$, $ary_type_76669$$) {
          return function($acc$$, $iidx$$, $v$$) {
            $acc$$[$idx$$ + $iidx$$] = $cast_fn_76670$$.cljs$core$IFn$_invoke$arity$1 ? $cast_fn_76670$$.cljs$core$IFn$_invoke$arity$1($v$$) : $cast_fn_76670$$.call(null, $v$$);
            return $acc$$;
          };
        }($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, this, $cast_fn_76670$$, $ary_type_76669$$)), this, $data$$);
        return this;
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$IIndexed$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.cljs$core$IIndexed$_nth$arity$2 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($array$$, $n$$) {
        return tech.v3.datatype.arrays.nth_impl($n$$, this.length, cljs$cst$5472$tech_DOT_v3_DOT_datatype_DOT_arrays_SLASH_exception, $APP.cljs.core.aget, this);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$IIndexed$_nth$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($array$$, $n$$, $not_found$$) {
        return tech.v3.datatype.arrays.nth_impl($n$$, this.length, $not_found$$, $APP.cljs.core.aget, this);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$IPrintWithWriter$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($rdr$$, $writer$$, $opts$$) {
        return $APP.cljs.core._write($writer$$, tech.v3.datatype.base.reader__GT_str(this, "typed-array"));
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.tech$v3$datatype$protocols$PToTypedArray$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.tech$v3$datatype$protocols$PToTypedArray$_convertible_to_typed_array_QMARK_$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($item$$) {
        return !0;
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.tech$v3$datatype$protocols$PToTypedArray$__GT_typed_array$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($item$$) {
        return this;
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$ICloneable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.cljs$core$ICloneable$_clone$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($item$jscomp$131_retval$$) {
        $item$jscomp$131_retval$$ = new $item$jscomp$131_retval$$.constructor(this.length);
        $item$jscomp$131_retval$$.set(this);
        return $item$jscomp$131_retval$$;
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$ICounted$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.cljs$core$ICounted$_count$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($array$$) {
        return this.length;
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.tech$v3$datatype$protocols$PSetConstant$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.tech$v3$datatype$protocols$PSetConstant$_set_constant_BANG_$arity$4 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($item$$, $offset$$, $elem_count$$, $data$$) {
        return this.fill($cast_fn_76670$$.cljs$core$IFn$_invoke$arity$1 ? $cast_fn_76670$$.cljs$core$IFn$_invoke$arity$1($data$$) : $cast_fn_76670$$.call(null, $data$$), $offset$$, $offset$$ + $elem_count$$);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.cljs$core$IHash$_hash$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($o$$) {
        return ham_fisted.api.hash_ordered(this);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($this$$$, $other$$) {
        return tech.v3.datatype.arrays.equiv_agetable(this, $other$$);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($item$$) {
        return tech.v3.datatype.arrays.ary_types.cljs$core$IFn$_invoke$arity$1 ? tech.v3.datatype.arrays.ary_types.cljs$core$IFn$_invoke$arity$1($ary_type_76669$$) : tech.v3.datatype.arrays.ary_types.call(null, $ary_type_76669$$);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.tech$v3$datatype$protocols$PSubBufferCopy$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($item$$, $off$$, $len$$) {
        return this.slice($off$$, $off$$ + $len$$);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$IReduce$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.cljs$core$IReduce$_reduce$arity$2 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($array$$, $f$$) {
        return $APP.cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(this, $f$$);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$IReduce$_reduce$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($array$$, $f$$, $start$$) {
        return $APP.cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(this, $f$$, $start$$);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$ISeq$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.cljs$core$ISeq$_first$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($array$$) {
        return this[0];
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$ISeq$_rest$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($array$$) {
        return this.subarray(1);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$ISeqable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.cljs$core$ISeqable$_seq$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($array$$) {
        return $APP.cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(this);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.cljs$core$ISequential$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($item$$, $off$$, $len$$) {
        return this.subarray($off$$, $off$$ + $len$$);
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    ary_type_76669.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
    ary_type_76669.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76670$$, $ary_type_76669$$) {
      return function($item$$) {
        return cljs$cst$5474$typed_array;
      };
    }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76670, ary_type_76669);
    var G__76671 = seq__76625_76665, G__76672 = chunk__76626_76666, G__76673 = count__76627_76667, G__76674 = i__76628_76668 + 1;
    seq__76625_76665 = G__76671;
    chunk__76626_76666 = G__76672;
    count__76627_76667 = G__76673;
    i__76628_76668 = G__76674;
  } else {
    var temp__5825__auto___76675 = $APP.cljs.core.seq(seq__76625_76665);
    if (temp__5825__auto___76675) {
      var seq__76625_76676__$1 = temp__5825__auto___76675;
      if ($APP.cljs.core.chunked_seq_QMARK_(seq__76625_76676__$1)) {
        var c__5548__auto___76677 = $APP.cljs.core.chunk_first(seq__76625_76676__$1), G__76678 = $APP.cljs.core.chunk_rest(seq__76625_76676__$1), G__76679 = c__5548__auto___76677, G__76680 = $APP.cljs.core.count(c__5548__auto___76677), G__76681 = 0;
        seq__76625_76665 = G__76678;
        chunk__76626_76666 = G__76679;
        count__76627_76667 = G__76680;
        i__76628_76668 = G__76681;
      } else {
        var ary_type_76682 = $APP.cljs.core.first(seq__76625_76676__$1), cast_fn_76683 = tech.v3.datatype.casting.cast_fn(tech.v3.datatype.arrays.ary_types.cljs$core$IFn$_invoke$arity$1 ? tech.v3.datatype.arrays.ary_types.cljs$core$IFn$_invoke$arity$1(ary_type_76682) : tech.v3.datatype.arrays.ary_types.call(null, ary_type_76682));
        ary_type_76682.prototype.tech$v3$datatype$protocols$PSetValue$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.tech$v3$datatype$protocols$PSetValue$_set_value_BANG_$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($item$$, $idx$$, $data$$) {
            typeof $data$$ === "number" || $data$$ instanceof BigInt ? this[$idx$$] = $cast_fn_76683$$.cljs$core$IFn$_invoke$arity$1 ? $cast_fn_76683$$.cljs$core$IFn$_invoke$arity$1($data$$) : $cast_fn_76683$$.call(null, $data$$) : $APP.cljs.core.truth_(tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_($data$$)) ? this.set(tech.v3.datatype.protocols.__GT_typed_array($data$$), $idx$$) : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($seq__76625_76665$$, 
            $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $item__$1$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
              return function($acc$$, $iidx$$, $v$$) {
                $acc$$[$idx$$ + $iidx$$] = $cast_fn_76683$$.cljs$core$IFn$_invoke$arity$1 ? $cast_fn_76683$$.cljs$core$IFn$_invoke$arity$1($v$$) : $cast_fn_76683$$.call(null, $v$$);
                return $acc$$;
              };
            }($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, this, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$)), this, $data$$);
            return this;
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$IIndexed$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.cljs$core$IIndexed$_nth$arity$2 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($array$$, $n$$) {
            return tech.v3.datatype.arrays.nth_impl($n$$, this.length, cljs$cst$5472$tech_DOT_v3_DOT_datatype_DOT_arrays_SLASH_exception, $APP.cljs.core.aget, this);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$IIndexed$_nth$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($array$$, $n$$, $not_found$$) {
            return tech.v3.datatype.arrays.nth_impl($n$$, this.length, $not_found$$, $APP.cljs.core.aget, this);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$IPrintWithWriter$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($rdr$$, $writer$$, $opts$$) {
            return $APP.cljs.core._write($writer$$, tech.v3.datatype.base.reader__GT_str(this, "typed-array"));
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.tech$v3$datatype$protocols$PToTypedArray$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.tech$v3$datatype$protocols$PToTypedArray$_convertible_to_typed_array_QMARK_$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($item$$) {
            return !0;
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.tech$v3$datatype$protocols$PToTypedArray$__GT_typed_array$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($item$$) {
            return this;
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$ICloneable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.cljs$core$ICloneable$_clone$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($item$jscomp$140_retval$$) {
            $item$jscomp$140_retval$$ = new $item$jscomp$140_retval$$.constructor(this.length);
            $item$jscomp$140_retval$$.set(this);
            return $item$jscomp$140_retval$$;
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$ICounted$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.cljs$core$ICounted$_count$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($array$$) {
            return this.length;
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.tech$v3$datatype$protocols$PSetConstant$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.tech$v3$datatype$protocols$PSetConstant$_set_constant_BANG_$arity$4 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($item$$, $offset$$, $elem_count$$, $data$$) {
            return this.fill($cast_fn_76683$$.cljs$core$IFn$_invoke$arity$1 ? $cast_fn_76683$$.cljs$core$IFn$_invoke$arity$1($data$$) : $cast_fn_76683$$.call(null, $data$$), $offset$$, $offset$$ + $elem_count$$);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.cljs$core$IHash$_hash$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($o$$) {
            return ham_fisted.api.hash_ordered(this);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($this$$$, $other$$) {
            return tech.v3.datatype.arrays.equiv_agetable(this, $other$$);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($item$$) {
            return tech.v3.datatype.arrays.ary_types.cljs$core$IFn$_invoke$arity$1 ? tech.v3.datatype.arrays.ary_types.cljs$core$IFn$_invoke$arity$1($ary_type_76682$$) : tech.v3.datatype.arrays.ary_types.call(null, $ary_type_76682$$);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.tech$v3$datatype$protocols$PSubBufferCopy$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($item$$, $off$$, $len$$) {
            return this.slice($off$$, $off$$ + $len$$);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$IReduce$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.cljs$core$IReduce$_reduce$arity$2 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($array$$, $f$$) {
            return $APP.cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(this, $f$$);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$IReduce$_reduce$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($array$$, $f$$, $start$$) {
            return $APP.cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(this, $f$$, $start$$);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$ISeq$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.cljs$core$ISeq$_first$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($array$$) {
            return this[0];
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$ISeq$_rest$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($array$$) {
            return this.subarray(1);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$ISeqable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.cljs$core$ISeqable$_seq$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($array$$) {
            return $APP.cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(this);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.cljs$core$ISequential$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($item$$, $off$$, $len$$) {
            return this.subarray($off$$, $off$$ + $len$$);
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        ary_type_76682.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
        ary_type_76682.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($seq__76625_76665$$, $chunk__76626_76666$$, $count__76627_76667$$, $i__76628_76668$$, $cast_fn_76683$$, $ary_type_76682$$, $seq__76625_76676__$1$$, $temp__5825__auto___76675$$) {
          return function($item$$) {
            return cljs$cst$5474$typed_array;
          };
        }(seq__76625_76665, chunk__76626_76666, count__76627_76667, i__76628_76668, cast_fn_76683, ary_type_76682, seq__76625_76676__$1, temp__5825__auto___76675);
        var G__76684 = $APP.cljs.core.next(seq__76625_76676__$1), G__76685 = null, G__76686 = 0, G__76687 = 0;
        seq__76625_76665 = G__76684;
        chunk__76626_76666 = G__76685;
        count__76627_76667 = G__76686;
        i__76628_76668 = G__76687;
      }
    } else {
      break;
    }
  }
}
tech.v3.datatype.protocols.PSetValue.array = !0;
tech.v3.datatype.protocols._set_value_BANG_.array = function($item$$, $idx$$, $data$$) {
  if (typeof $data$$ === "number") {
    $item$$[$idx$$] = $data$$;
  } else {
    if ($APP.cljs.core.truth_(tech.v3.datatype.base.as_agetable($data$$))) {
      $data$$ = tech.v3.datatype.base.as_agetable($data$$);
      for (var $idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$ = $APP.cljs.core.count($data$$), $didx_76690_didx_76704_rend_76694_startpos_76695$$ = 0;;) {
        if ($didx_76690_didx_76704_rend_76694_startpos_76695$$ < $idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$) {
          $item$$[$idx$$ + $didx_76690_didx_76704_rend_76694_startpos_76695$$] = $data$$[$didx_76690_didx_76704_rend_76694_startpos_76695$$], $didx_76690_didx_76704_rend_76694_startpos_76695$$ += 1;
        } else {
          break;
        }
      }
    } else {
      if ($APP.cljs.core.truth_(tech.v3.datatype.base.integer_range_QMARK_($data$$))) {
        if ($idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$ = $data$$.start, $idx$$ = $data$$.step, $didx_76690_didx_76704_rend_76694_startpos_76695$$ = $data$$.end, $didx_76690_didx_76704_rend_76694_startpos_76695$$ = $idx$$ > 0 ? $idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$ : $didx_76690_didx_76704_rend_76694_startpos_76695$$, $data$$ = $APP.cljs.core.count($data$$), $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, $idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$) && 
        $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $idx$$)) {
          for ($idx$$ = 0;;) {
            if ($idx$$ < $data$$) {
              $item$$[$idx$$] = $idx$$, $idx$$ += 1;
            } else {
              break;
            }
          }
        } else {
          for ($idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$ = 0;;) {
            if ($idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$ < $data$$) {
              $item$$[$idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$] = $didx_76690_didx_76704_rend_76694_startpos_76695$$ + $idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$ * $idx$$, $idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$ += 1;
            } else {
              break;
            }
          }
        }
      } else {
        for ($idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$ = $APP.cljs.core.count($data$$), $didx_76690_didx_76704_rend_76694_startpos_76695$$ = 0;;) {
          if ($didx_76690_didx_76704_rend_76694_startpos_76695$$ < $idx_76701__$1_n__5616__auto___76689_n__5616__auto___76703_start_76692$$) {
            $item$$[$idx$$ + $didx_76690_didx_76704_rend_76694_startpos_76695$$] = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($data$$, $didx_76690_didx_76704_rend_76694_startpos_76695$$), $didx_76690_didx_76704_rend_76694_startpos_76695$$ += 1;
          } else {
            break;
          }
        }
      }
    }
  }
  return $item$$;
};
tech.v3.datatype.protocols.PToJSArray.array = !0;
tech.v3.datatype.protocols._convertible_to_js_array_QMARK_.array = function($buf$$) {
  return !0;
};
tech.v3.datatype.protocols.__GT_js_array.array = function($buf$$) {
  return $buf$$;
};
$APP.cljs.core.ICloneable.array = !0;
$APP.cljs.core._clone.array = function($item$$) {
  return $item$$.slice(0, $APP.cljs.core.count($item$$));
};
tech.v3.datatype.protocols.PSetConstant.array = !0;
tech.v3.datatype.protocols._set_constant_BANG_.array = function($item$$, $offset$$, $elem_count$$, $data$$) {
  return $item$$.fill($data$$, $offset$$, $offset$$ + $elem_count$$);
};
$APP.cljs.core.IHash.array = !0;
$APP.cljs.core._hash.array = function($o$$) {
  return ham_fisted.api.hash_ordered($o$$);
};
$APP.cljs.core.IEquiv.array = !0;
$APP.cljs.core._equiv.array = function($this$$$, $other$$) {
  return tech.v3.datatype.arrays.equiv_agetable($this$$$, $other$$);
};
tech.v3.datatype.protocols.PSubBufferCopy.array = !0;
tech.v3.datatype.protocols._sub_buffer_copy.array = function($item$$, $off$$, $len$$) {
  return $item$$.slice($off$$, $off$$ + $len$$);
};
$APP.cljs.core.IReduce.array = !0;
$APP.cljs.core._reduce.array = function() {
  var $G__76706$$ = null, $G__76706__2$$ = function($this$$$, $rfn$$) {
    return $APP.cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2($this$$$, $rfn$$);
  }, $G__76706__3$$ = function($this$$$, $rfn$$, $init$$) {
    return $APP.cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3($this$$$, $rfn$$, $init$$);
  };
  $G__76706$$ = function($this$$$, $rfn$$, $init$$) {
    switch(arguments.length) {
      case 2:
        return $G__76706__2$$.call(this, $this$$$, $rfn$$);
      case 3:
        return $G__76706__3$$.call(this, $this$$$, $rfn$$, $init$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__76706$$.cljs$core$IFn$_invoke$arity$2 = $G__76706__2$$;
  $G__76706$$.cljs$core$IFn$_invoke$arity$3 = $G__76706__3$$;
  return $G__76706$$;
}();
tech.v3.datatype.protocols.PSubBuffer.array = !0;
tech.v3.datatype.protocols._sub_buffer.array = function($item$$, $off$$, $len$$) {
  return $item$$.slice($off$$, $off$$ + $len$$);
};
tech.v3.datatype.protocols.PDatatype.array = !0;
tech.v3.datatype.protocols._datatype.array = function($item$$) {
  return $APP.cljs$cst$5475$js_array;
};
tech.v3.datatype.arrays.bool_val__GT_byte = function($val$$) {
  return typeof $val$$ === "number" ? 0.0 === $val$$ ? 0 : 1 : $APP.cljs.core.truth_($val$$) ? 1 : 0;
};
tech.v3.datatype.arrays.booleans__GT_bytes = function($data$$) {
  return tech.v3.datatype.argtypes.scalar_QMARK_($data$$) ? tech.v3.datatype.arrays.bool_val__GT_byte($data$$) : ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.arrays.bool_val__GT_byte, $data$$);
};
tech.v3.datatype.arrays.byte__GT_boolean = function($val$$) {
  return 0 === $val$$ ? !1 : !0;
};
tech.v3.datatype.arrays.bool_ary_nth = function($buf$$, $n$$) {
  return tech.v3.datatype.arrays.byte__GT_boolean($APP.cljs.core._nth($buf$$, $n$$));
};
tech.v3.datatype.arrays.BooleanArray = function($buf$$, $metadata$$) {
  this.buf = $buf$$;
  this.metadata = $metadata$$;
  this.cljs$lang$protocol_mask$partition0$ = 2179858515;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PAgetable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PAgetable$_convertible_to_agetable_QMARK_$arity$1 = function($_this$$) {
  return !1;
};
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PSetValue$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PSetValue$_set_value_BANG_$arity$3 = function($item$$, $idx$$, $data$$) {
  tech.v3.datatype.protocols._set_value_BANG_(this.buf, $idx$$, tech.v3.datatype.arrays.booleans__GT_bytes($data$$));
  return this;
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IIndexed$_nth$arity$2 = function($array$$, $n$$) {
  return tech.v3.datatype.arrays.nth_impl($n$$, $APP.cljs.core.count(this.buf), cljs$cst$5472$tech_DOT_v3_DOT_datatype_DOT_arrays_SLASH_exception, tech.v3.datatype.arrays.bool_ary_nth, this.buf);
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IIndexed$_nth$arity$3 = function($array$$, $n$$, $not_found$$) {
  return tech.v3.datatype.arrays.nth_impl($n$$, $APP.cljs.core.count(this.buf), $not_found$$, tech.v3.datatype.arrays.bool_ary_nth, this.buf);
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($rdr$$, $writer$$, $_opts$$) {
  return $APP.cljs.core._write($writer$$, tech.v3.datatype.base.reader__GT_str(this, "typed-array"));
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IIterable$_iterator$arity$1 = function($this$$$) {
  return tech.v3.datatype.arrays.nth_iter(this);
};
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PToTypedArray$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PToTypedArray$_convertible_to_typed_array_QMARK_$arity$1 = function($_this$$) {
  return !0;
};
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PToTypedArray$__GT_typed_array$arity$1 = function($_this$$) {
  return this.buf;
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IMeta$_meta$arity$1 = function($_coll$$) {
  return this.metadata;
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$ICloneable$_clone$arity$1 = function($G__76630__item$$) {
  $G__76630__item$$ = $APP.cljs.core.clone(this.buf);
  var $G__76631$$ = this.metadata;
  return tech.v3.datatype.arrays.make_boolean_array.cljs$core$IFn$_invoke$arity$2 ? tech.v3.datatype.arrays.make_boolean_array.cljs$core$IFn$_invoke$arity$2($G__76630__item$$, $G__76631$$) : tech.v3.datatype.arrays.make_boolean_array.call(null, $G__76630__item$$, $G__76631$$);
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$ICounted$_count$arity$1 = function($_item$$) {
  return $APP.cljs.core.count(this.buf);
};
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PSetConstant$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PSetConstant$_set_constant_BANG_$arity$4 = function($item$$, $offset$$, $elem_count$$, $data$$) {
  tech.v3.datatype.protocols._set_constant_BANG_(this.buf, $offset$$, $elem_count$$, tech.v3.datatype.arrays.bool_val__GT_byte($data$$));
  return this;
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IHash$_hash$arity$1 = function($o$$) {
  return ham_fisted.api.hash_ordered(this);
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this$$$, $other$$) {
  return tech.v3.datatype.arrays.equiv_nthable(this, $other$$);
};
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($_item$$) {
  return cljs$cst$5456$boolean;
};
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PSubBufferCopy$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3 = function($G__76632__item$$, $G__76633_off$$, $len$$) {
  $G__76632__item$$ = tech.v3.datatype.protocols._sub_buffer_copy(this.buf, $G__76633_off$$, $len$$);
  $G__76633_off$$ = this.metadata;
  return tech.v3.datatype.arrays.make_boolean_array.cljs$core$IFn$_invoke$arity$2 ? tech.v3.datatype.arrays.make_boolean_array.cljs$core$IFn$_invoke$arity$2($G__76632__item$$, $G__76633_off$$) : tech.v3.datatype.arrays.make_boolean_array.call(null, $G__76632__item$$, $G__76633_off$$);
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$2($rfn$$, ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.arrays.byte__GT_boolean, this.buf));
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $init$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3($rfn$$, $init$$, ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.arrays.byte__GT_boolean, this.buf));
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$ISeq$_first$arity$1 = function($_array$$) {
  return tech.v3.datatype.arrays.byte__GT_boolean($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.buf, 0));
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$ISeq$_rest$arity$1 = function($array$$) {
  return tech.v3.datatype.base.sub_buffer.cljs$core$IFn$_invoke$arity$variadic(this, 1, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.count(this.buf) - 1], 0));
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$ISeqable$_seq$arity$1 = function($_array$$) {
  return $APP.cljs.core.count(this.buf) === 0 ? null : $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.arrays.byte__GT_boolean, this.buf);
};
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.BooleanArray.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($G__76634__item$$, $G__76635_off$$, $len$$) {
  $G__76634__item$$ = tech.v3.datatype.protocols._sub_buffer(this.buf, $G__76635_off$$, $len$$);
  $G__76635_off$$ = this.metadata;
  return tech.v3.datatype.arrays.make_boolean_array.cljs$core$IFn$_invoke$arity$2 ? tech.v3.datatype.arrays.make_boolean_array.cljs$core$IFn$_invoke$arity$2($G__76634__item$$, $G__76635_off$$) : tech.v3.datatype.arrays.make_boolean_array.call(null, $G__76634__item$$, $G__76635_off$$);
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($coll$$, $new_meta$$) {
  return $new_meta$$ === this.metadata ? this : new tech.v3.datatype.arrays.BooleanArray(this.buf, $new_meta$$);
};
tech.v3.datatype.arrays.BooleanArray.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    case 2:
      return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
tech.v3.datatype.arrays.BooleanArray.prototype.apply = function($self__$$, $args76629$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76629$$)));
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IFn$_invoke$arity$1 = function($n$$) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, $n$$);
};
tech.v3.datatype.arrays.BooleanArray.prototype.cljs$core$IFn$_invoke$arity$2 = function($n$$, $not_found$$) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, $n$$, $not_found$$);
};
tech.v3.datatype.arrays.BooleanArray.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$29$buf, cljs$cst$5476$metadata], null);
};
tech.v3.datatype.arrays.BooleanArray.cljs$lang$type = !0;
tech.v3.datatype.arrays.BooleanArray.cljs$lang$ctorStr = "tech.v3.datatype.arrays/BooleanArray";
tech.v3.datatype.arrays.BooleanArray.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.datatype.arrays/BooleanArray");
};
tech.v3.datatype.arrays.__GT_BooleanArray = function($buf$$, $metadata$$) {
  return new tech.v3.datatype.arrays.BooleanArray($buf$$, $metadata$$);
};
tech.v3.datatype.arrays.make_boolean_array = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$306_argseq__5756__auto__$$ = [], $len__5749__auto___76710$$ = arguments.length, $i__5750__auto___76711$$ = 0;;) {
    if ($i__5750__auto___76711$$ < $len__5749__auto___76710$$) {
      $args__5755__auto__$jscomp$306_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76711$$]), $i__5750__auto___76711$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$306_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$306_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$306_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return tech.v3.datatype.arrays.make_boolean_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$306_argseq__5756__auto__$$);
};
tech.v3.datatype.arrays.make_boolean_array.cljs$core$IFn$_invoke$arity$variadic = function($buf$$, $metadata$$) {
  $metadata$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($metadata$$, 0, null);
  return new tech.v3.datatype.arrays.BooleanArray($buf$$, $metadata$$);
};
tech.v3.datatype.arrays.make_boolean_array.cljs$lang$maxFixedArity = 1;
tech.v3.datatype.arrays.make_boolean_array.cljs$lang$applyTo = function($seq76637_seq76637__$1$$) {
  var $G__76638$$ = $APP.cljs.core.first($seq76637_seq76637__$1$$);
  $seq76637_seq76637__$1$$ = $APP.cljs.core.next($seq76637_seq76637__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76638$$, $seq76637_seq76637__$1$$);
};
tech.v3.datatype.arrays.TypedBuffer = function($buf$$, $elem_dtype$$, $metadata$$) {
  this.buf = $buf$$;
  this.elem_dtype = $elem_dtype$$;
  this.metadata = $metadata$$;
  this.cljs$lang$protocol_mask$partition0$ = 2179858515;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PSetValue$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PSetValue$_set_value_BANG_$arity$3 = function($item$$, $idx$$, $data$$) {
  tech.v3.datatype.protocols._set_value_BANG_(this.buf, $idx$$, $data$$);
  return this;
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IIndexed$_nth$arity$2 = function($array$$, $n$$) {
  return tech.v3.datatype.arrays.nth_impl($n$$, $APP.cljs.core.count(this), cljs$cst$5472$tech_DOT_v3_DOT_datatype_DOT_arrays_SLASH_exception, $APP.cljs.core.nth, this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IIndexed$_nth$arity$3 = function($array$$, $n$$, $not_found$$) {
  return tech.v3.datatype.arrays.nth_impl($n$$, $APP.cljs.core.count(this), $not_found$$, $APP.cljs.core.nth, this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($rdr$$, $writer$$, $_opts$$) {
  return $APP.cljs.core._write($writer$$, tech.v3.datatype.base.reader__GT_str(this, "typed-buffer"));
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IIterable$_iterator$arity$1 = function($_this$$) {
  return tech.v3.datatype.arrays.index_iter(this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PToJSArray$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PToJSArray$_convertible_to_js_array_QMARK_$arity$1 = function($_item$$) {
  return tech.v3.datatype.protocols._convertible_to_js_array_QMARK_(this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PToJSArray$__GT_js_array$arity$1 = function($_item$$) {
  return tech.v3.datatype.protocols.__GT_js_array(this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PToTypedArray$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PToTypedArray$_convertible_to_typed_array_QMARK_$arity$1 = function($_item$$) {
  return tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_(this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PToTypedArray$__GT_typed_array$arity$1 = function($_item$$) {
  return tech.v3.datatype.protocols.__GT_typed_array(this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IMeta$_meta$arity$1 = function($_coll$$) {
  return this.metadata;
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$ICloneable$_clone$arity$1 = function($G__76644__item$$) {
  $G__76644__item$$ = $APP.cljs.core.clone(this.buf);
  var $G__76645$$ = this.elem_dtype, $G__76646$$ = this.metadata;
  return tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$3 ? tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$3($G__76644__item$$, $G__76645$$, $G__76646$$) : tech.v3.datatype.arrays.make_typed_buffer.call(null, $G__76644__item$$, $G__76645$$, $G__76646$$);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function($_item$$) {
  return $APP.cljs.core.count(this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PSetConstant$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PSetConstant$_set_constant_BANG_$arity$4 = function($item$$, $offset$$, $elem_count$$, $data$$) {
  tech.v3.datatype.protocols._set_constant_BANG_(this.buf, $offset$$, $elem_count$$, $data$$);
  return this;
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IHash$_hash$arity$1 = function($_o$$) {
  return ham_fisted.api.hash_ordered(this);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($_this$jscomp$28_temp__5823__auto__$$, $other$$) {
  $_this$jscomp$28_temp__5823__auto__$$ = tech.v3.datatype.base.as_agetable(this.buf);
  return $APP.cljs.core.truth_($_this$jscomp$28_temp__5823__auto__$$) ? tech.v3.datatype.arrays.equiv_agetable($_this$jscomp$28_temp__5823__auto__$$, $other$$) : tech.v3.datatype.arrays.equiv_nthable(this.buf, $other$$);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($_item$$) {
  return this.elem_dtype;
};
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PSubBufferCopy$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3 = function($G__76647__item$$, $G__76648_off$$, $G__76649_len$$) {
  $G__76647__item$$ = tech.v3.datatype.base.sub_buffer_copy.cljs$core$IFn$_invoke$arity$variadic(this.buf, $G__76648_off$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$G__76649_len$$], 0));
  $G__76648_off$$ = this.elem_dtype;
  $G__76649_len$$ = this.metadata;
  return tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$3 ? tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$3($G__76647__item$$, $G__76648_off$$, $G__76649_len$$) : tech.v3.datatype.arrays.make_typed_buffer.call(null, $G__76647__item$$, $G__76648_off$$, $G__76649_len$$);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PFastAccessor$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PFastAccessor$__GT_fast_nth$arity$1 = function($this$$$) {
  return tech.v3.datatype.protocols.__GT_fast_nth(this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IReduce$_reduce$arity$2 = function($_array$$, $f$$) {
  return $APP.cljs.core._reduce(this.buf, $f$$);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IReduce$_reduce$arity$3 = function($_array$$, $f$$, $start$$) {
  return $APP.cljs.core._reduce(this.buf, $f$$, $start$$);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$ISeq$_first$arity$1 = function($_array$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.buf, 0);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$ISeq$_rest$arity$1 = function($_array$$) {
  return tech.v3.datatype.protocols._sub_buffer(this.buf, 1, $APP.cljs.core.count(this.buf) - 1);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$ISeqable$_seq$arity$1 = function($_array$$) {
  return $APP.cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.arrays.TypedBuffer.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($G__76650__item$$, $G__76651_off$$, $G__76652_len$$) {
  $G__76650__item$$ = tech.v3.datatype.base.sub_buffer.cljs$core$IFn$_invoke$arity$variadic(this.buf, $G__76651_off$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$G__76652_len$$], 0));
  $G__76651_off$$ = this.elem_dtype;
  $G__76652_len$$ = this.metadata;
  return tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$3 ? tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$3($G__76650__item$$, $G__76651_off$$, $G__76652_len$$) : tech.v3.datatype.arrays.make_typed_buffer.call(null, $G__76650__item$$, $G__76651_off$$, $G__76652_len$$);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($coll$$, $new_meta$$) {
  return $new_meta$$ === this.metadata ? this : tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$3 ? tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$3(this.buf, this.elem_dtype, $new_meta$$) : tech.v3.datatype.arrays.make_typed_buffer.call(null, this.buf, this.elem_dtype, $new_meta$$);
};
tech.v3.datatype.arrays.TypedBuffer.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
tech.v3.datatype.arrays.TypedBuffer.prototype.apply = function($self__$$, $args76643$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76643$$)));
};
tech.v3.datatype.arrays.TypedBuffer.prototype.cljs$core$IFn$_invoke$arity$1 = function($n$$) {
  return tech.v3.datatype.arrays.nth_impl($n$$, $APP.cljs.core.count(this), null, $APP.cljs.core.nth, this.buf);
};
tech.v3.datatype.arrays.TypedBuffer.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$29$buf, cljs$cst$5477$elem_dtype, cljs$cst$5476$metadata], null);
};
tech.v3.datatype.arrays.TypedBuffer.cljs$lang$type = !0;
tech.v3.datatype.arrays.TypedBuffer.cljs$lang$ctorStr = "tech.v3.datatype.arrays/TypedBuffer";
tech.v3.datatype.arrays.TypedBuffer.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.datatype.arrays/TypedBuffer");
};
tech.v3.datatype.arrays.__GT_TypedBuffer = function($buf$$, $elem_dtype$$, $metadata$$) {
  return new tech.v3.datatype.arrays.TypedBuffer($buf$$, $elem_dtype$$, $metadata$$);
};
tech.v3.datatype.arrays.make_typed_buffer = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$307_argseq__5756__auto__$$ = [], $len__5749__auto___76726$$ = arguments.length, $i__5750__auto___76727$$ = 0;;) {
    if ($i__5750__auto___76727$$ < $len__5749__auto___76726$$) {
      $args__5755__auto__$jscomp$307_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76727$$]), $i__5750__auto___76727$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$307_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$307_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$307_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$307_argseq__5756__auto__$$);
};
tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$variadic = function($buf$$, $metadata$$) {
  var $dtype$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($metadata$$, 0, null);
  $metadata$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($metadata$$, 1, null);
  $dtype$$ = $APP.cljs.core.truth_($dtype$$) ? $dtype$$ : tech.v3.datatype.base.elemwise_datatype($buf$$);
  return new tech.v3.datatype.arrays.TypedBuffer($buf$$, $dtype$$, $metadata$$);
};
tech.v3.datatype.arrays.make_typed_buffer.cljs$lang$maxFixedArity = 1;
tech.v3.datatype.arrays.make_typed_buffer.cljs$lang$applyTo = function($seq76654_seq76654__$1$$) {
  var $G__76655$$ = $APP.cljs.core.first($seq76654_seq76654__$1$$);
  $seq76654_seq76654__$1$$ = $APP.cljs.core.next($seq76654_seq76654__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76655$$, $seq76654_seq76654__$1$$);
};
tech.v3.datatype.arrays.tbuf = function($item$$) {
  return tech.v3.datatype.arrays.make_typed_buffer($item$$);
};
tech.v3.datatype.arrays.make_array = function($dtype$$, $len$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($dtype$$, cljs$cst$5456$boolean) ? tech.v3.datatype.arrays.make_boolean_array.cljs$core$IFn$_invoke$arity$variadic(new Int8Array($len$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null], 0)) : tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$variadic(function() {
    switch($dtype$$ instanceof $APP.cljs.core.Keyword ? $dtype$$.fqn : null) {
      case "int8":
        return new Int8Array($len$$);
      case "uint8":
        return new Uint8Array($len$$);
      case "int16":
        return new Int16Array($len$$);
      case "uint16":
        return new Uint16Array($len$$);
      case "int32":
        return new Int32Array($len$$);
      case "uint32":
        return new Uint32Array($len$$);
      case "int64":
        return new BigInt64Array($len$$);
      case "uint64":
        return new BigUint64Array($len$$);
      case "float32":
        return new Float32Array($len$$);
      case "float64":
        return new Float64Array($len$$);
      default:
        return Array($len$$);
    }
  }(), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$dtype$$], 0));
};
$APP.cljs.core.IntegerRange.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.IntegerRange.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($r$$) {
  return cljs$cst$5460$int64;
};
$APP.cljs.core.IntegerRange.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.IntegerRange.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($n_start_r$$, $n_end_off$$, $len$$) {
  $n_start_r$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this, $n_end_off$$);
  $n_end_off$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this, $n_end_off$$ + $len$$);
  return $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$3($n_start_r$$, $n_end_off$$, this.step);
};
$APP.cljs.core.IntegerRange.prototype.tech$v3$datatype$protocols$PSubBufferCopy$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.IntegerRange.prototype.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3 = function($r$$, $off$$, $len$$) {
  return tech.v3.datatype.protocols._sub_buffer(this, $off$$, $len$$);
};
ham_fisted.api.RangeType.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($r$$) {
  return $APP.cljs.core.truth_(this.isInteger()) ? cljs$cst$5460$int64 : $APP.cljs$cst$3329$float64;
};
ham_fisted.api.RangeType.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($n_start$jscomp$1_r$$, $n_end$jscomp$1_off$$, $len$$) {
  $n_start$jscomp$1_r$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this, $n_end$jscomp$1_off$$);
  $n_end$jscomp$1_off$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this, $n_end$jscomp$1_off$$ + $len$$);
  return ham_fisted.api.range.cljs$core$IFn$_invoke$arity$3($n_start$jscomp$1_r$$, $n_end$jscomp$1_off$$, this.step);
};
ham_fisted.api.RangeType.prototype.tech$v3$datatype$protocols$PSubBufferCopy$ = $APP.cljs.core.PROTOCOL_SENTINEL;
ham_fisted.api.RangeType.prototype.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3 = function($r$$, $off$$, $len$$) {
  return tech.v3.datatype.protocols._sub_buffer(this, $off$$, $len$$);
};
tech.v3.datatype.arrays.indexed_buffer = function($indexes$$, $buf$$) {
  if ($APP.cljs.core.truth_(function() {
    var $and__5023__auto__$$ = tech.v3.datatype.base.integer_range_QMARK_($indexes$$);
    return $APP.cljs.core.truth_($and__5023__auto__$$) ? 1 === $indexes$$.step : $and__5023__auto__$$;
  }())) {
    var $dst_buf_dtype$jscomp$7_n_elems$$ = $APP.cljs.core.count($buf$$), $n_indexes_rend$$ = $indexes$$.end;
    return $indexes$$.start === 0 && $n_indexes_rend$$ === $dst_buf_dtype$jscomp$7_n_elems$$ ? $buf$$ : tech.v3.datatype.base.sub_buffer.cljs$core$IFn$_invoke$arity$variadic($buf$$, $indexes$$.start, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$indexes$$.end - $indexes$$.start], 0));
  }
  var $buf__$1$$ = tech.v3.datatype.base.ensure_indexable($buf$$);
  $dst_buf_dtype$jscomp$7_n_elems$$ = tech.v3.datatype.protocols._elemwise_datatype($buf__$1$$);
  $buf$$ = tech.v3.datatype.base.ensure_indexable($indexes$$);
  $n_indexes_rend$$ = $APP.cljs.core.count($buf$$);
  var $retval$$ = tech.v3.datatype.arrays.make_array($dst_buf_dtype$jscomp$7_n_elems$$, $n_indexes_rend$$);
  $dst_buf_dtype$jscomp$7_n_elems$$ = function() {
    var $or__5025__auto__$$ = tech.v3.datatype.base.as_js_array($retval$$);
    return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : tech.v3.datatype.base.as_typed_array($retval$$);
  }();
  var $temp__5823__auto___76731$$ = function() {
    var $or__5025__auto__$$ = tech.v3.datatype.base.as_js_array($buf__$1$$);
    return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : tech.v3.datatype.base.as_typed_array($buf__$1$$);
  }();
  $APP.cljs.core.truth_($temp__5823__auto___76731$$) ? $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($acc$$, $dstidx$$, $idx$$) {
    $acc$$[$dstidx$$] = $temp__5823__auto___76731$$[$idx$$];
    return $acc$$;
  }), $dst_buf_dtype$jscomp$7_n_elems$$, $buf$$) : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($acc$$, $dstidx$$, $idx$$) {
    $acc$$[$dstidx$$] = $APP.cljs.core._nth($buf__$1$$, $idx$$);
    return $acc$$;
  }), $dst_buf_dtype$jscomp$7_n_elems$$, $buf$$);
  return $retval$$;
};
tech.v3.datatype.copy_make_container = {};
tech.v3.datatype.copy_make_container.make_container = function($container$jscomp$4_dtype$$, $len_or_data$$) {
  var $data$$ = typeof $len_or_data$$ === "number" ? null : function() {
    var $JSCompiler_temp_const$jscomp$1843_temp__5823__auto__$jscomp$317_temp__5823__auto____$1$$ = tech.v3.datatype.base.as_typed_array($len_or_data$$);
    if ($APP.cljs.core.truth_($JSCompiler_temp_const$jscomp$1843_temp__5823__auto__$jscomp$317_temp__5823__auto____$1$$)) {
      return $JSCompiler_temp_const$jscomp$1843_temp__5823__auto__$jscomp$317_temp__5823__auto____$1$$;
    }
    $JSCompiler_temp_const$jscomp$1843_temp__5823__auto__$jscomp$317_temp__5823__auto____$1$$ = tech.v3.datatype.base.as_js_array($len_or_data$$);
    if ($APP.cljs.core.truth_($JSCompiler_temp_const$jscomp$1843_temp__5823__auto__$jscomp$317_temp__5823__auto____$1$$)) {
      return $JSCompiler_temp_const$jscomp$1843_temp__5823__auto__$jscomp$317_temp__5823__auto____$1$$;
    }
    $JSCompiler_temp_const$jscomp$1843_temp__5823__auto__$jscomp$317_temp__5823__auto____$1$$ = $APP.cljs.core;
    var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$1843_temp__5823__auto__$jscomp$317_temp__5823__auto____$1$$.truth_;
    var $JSCompiler_inline_result$jscomp$1844_and__5023__auto__$$ = tech.v3.datatype.base.counted_QMARK_($len_or_data$$);
    $JSCompiler_inline_result$jscomp$1844_and__5023__auto__$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$1844_and__5023__auto__$$) ? tech.v3.datatype.base.indexed_QMARK_($len_or_data$$) : $JSCompiler_inline_result$jscomp$1844_and__5023__auto__$$;
    return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$1843_temp__5823__auto__$jscomp$317_temp__5823__auto____$1$$, $JSCompiler_inline_result$jscomp$1844_and__5023__auto__$$) ? $len_or_data$$ : $APP.cljs.core.vec($len_or_data$$);
  }(), $dlen$$ = typeof $len_or_data$$ === "number" ? $len_or_data$$ : $APP.cljs.core.count($data$$);
  $container$jscomp$4_dtype$$ = tech.v3.datatype.arrays.make_array($container$jscomp$4_dtype$$, $dlen$$);
  $APP.cljs.core.truth_($APP.cljs.core.not_empty($data$$)) && tech.v3.datatype.base.set_value_BANG_($container$jscomp$4_dtype$$, 0, $data$$);
  return $container$jscomp$4_dtype$$;
};
tech.v3.datatype.list = {};
tech.v3.datatype.list.PrimitiveList = function($buf$$, $agetable_QMARK_$$, $dtype$$, $cast_fn$$, $ptr$$, $buflen$$, $metadata$$) {
  this.buf = $buf$$;
  this.agetable_QMARK_ = $agetable_QMARK_$$;
  this.dtype = $dtype$$;
  this.cast_fn = $cast_fn$$;
  this.ptr = $ptr$$;
  this.buflen = $buflen$$;
  this.metadata = $metadata$$;
  this.cljs$lang$protocol_mask$partition0$ = 2179858515;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PAgetable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PAgetable$_convertible_to_agetable_QMARK_$arity$1 = function($_this$$) {
  return tech.v3.datatype.protocols._convertible_to_agetable_QMARK_(this.buf);
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PAgetable$__GT_agetable$arity$1 = function($_this$$) {
  return tech.v3.datatype.protocols.__GT_agetable(tech.v3.datatype.protocols._sub_buffer(this.buf, 0, this.ptr));
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PSetValue$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PSetValue$_set_value_BANG_$arity$3 = function($item$$, $idx$$, $data$$) {
  tech.v3.datatype.base.set_value_BANG_(tech.v3.datatype.protocols._sub_buffer(this.buf, 0, this.ptr), $idx$$, $data$$);
  return this;
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IIndexed$_nth$arity$2 = function($array$$, $n$$) {
  return tech.v3.datatype.arrays.nth_impl($n$$, $APP.cljs.core.count(this), cljs$cst$5472$tech_DOT_v3_DOT_datatype_DOT_arrays_SLASH_exception, $APP.cljs.core.nth, this.buf);
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IIndexed$_nth$arity$3 = function($array$$, $n$$, $not_found$$) {
  return tech.v3.datatype.arrays.nth_impl($n$$, $APP.cljs.core.count(this), $not_found$$, $APP.cljs.core.nth, this.buf);
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($rdr$$, $writer$$, $_opts$$) {
  return $APP.cljs.core._write($writer$$, tech.v3.datatype.base.reader__GT_str(this, "list"));
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IIterable$_iterator$arity$1 = function($this$$$) {
  return tech.v3.datatype.arrays.nth_iter(this);
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PToJSArray$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PToJSArray$_convertible_to_js_array_QMARK_$arity$1 = function($_this$$) {
  return tech.v3.datatype.protocols._convertible_to_js_array_QMARK_(this.buf);
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PToJSArray$__GT_js_array$arity$1 = function($_this$$) {
  return tech.v3.datatype.protocols.__GT_js_array(tech.v3.datatype.protocols._sub_buffer(this.buf, 0, this.ptr));
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PToTypedArray$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PToTypedArray$_convertible_to_typed_array_QMARK_$arity$1 = function($_this$$) {
  return tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_(this.buf);
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PToTypedArray$__GT_typed_array$arity$1 = function($_this$$) {
  return tech.v3.datatype.protocols.__GT_typed_array(tech.v3.datatype.protocols._sub_buffer(this.buf, 0, this.ptr));
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IMeta$_meta$arity$1 = function($_this$$) {
  return this.metadata;
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$ICloneable$_clone$arity$1 = function($G__76713__this$$) {
  $G__76713__this$$ = $APP.cljs.core.clone(tech.v3.datatype.protocols._sub_buffer(this.buf, 0, this.ptr));
  var $G__76714$$ = this.dtype, $G__76715$$ = this.ptr;
  return tech.v3.datatype.list.make_primitive_list.cljs$core$IFn$_invoke$arity$3 ? tech.v3.datatype.list.make_primitive_list.cljs$core$IFn$_invoke$arity$3($G__76713__this$$, $G__76714$$, $G__76715$$) : tech.v3.datatype.list.make_primitive_list.call(null, $G__76713__this$$, $G__76714$$, $G__76715$$);
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$ICounted$_count$arity$1 = function($_this$$) {
  return this.ptr;
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PSetConstant$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PSetConstant$_set_constant_BANG_$arity$4 = function($_item$$, $offset$$, $elem_count$$, $data$$) {
  return tech.v3.datatype.base.set_constant_BANG_(tech.v3.datatype.protocols._sub_buffer(this.buf, 0, this.ptr), $offset$$, $elem_count$$, $data$$);
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IHash$_hash$arity$1 = function($o$$) {
  return ham_fisted.api.hash_ordered(this);
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this$$$, $other$$) {
  return tech.v3.datatype.arrays.equiv_nthable(this, $other$$);
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($_this$$) {
  return this.dtype;
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PSubBufferCopy$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3 = function($_item$$, $offset$$, $length$$) {
  return tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$variadic(tech.v3.datatype.protocols._sub_buffer_copy(this.buf, $offset$$, $length$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this.dtype, this.metadata], 0));
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
  return $APP.cljs.core._reduce(tech.v3.datatype.protocols._sub_buffer(this.buf, 0, this.ptr), $rfn$$);
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $init$$) {
  return $APP.cljs.core._reduce(tech.v3.datatype.protocols._sub_buffer(this.buf, 0, this.ptr), $rfn$$, $init$$);
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$ISeq$_first$arity$1 = function($_array$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.buf, 0);
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$ISeq$_rest$arity$1 = function($_array$$) {
  return tech.v3.datatype.protocols._sub_buffer(this.buf, 1, $APP.cljs.core.count(this.buf) - 1);
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$ISeqable$_seq$arity$1 = function($_array$$) {
  return $APP.cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(tech.v3.datatype.protocols._sub_buffer(this.buf, 0, this.ptr));
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PListLike$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PListLike$_add$arity$2 = function($new_agetable_QMARK__76767_this$$$, $elem$$) {
  if (this.ptr === this.buflen) {
    var $JSCompiler_inline_result$$ = tech.v3.datatype.copy_make_container.make_container(this.dtype, 2 * this.buflen), $abuf_76766$$ = tech.v3.datatype.base.as_agetable($JSCompiler_inline_result$$);
    $new_agetable_QMARK__76767_this$$$ = $APP.cljs.core.boolean$($abuf_76766$$);
    tech.v3.datatype.base.set_value_BANG_($JSCompiler_inline_result$$, 0, this.buf);
    $JSCompiler_inline_result$$ = $APP.cljs.core.truth_($abuf_76766$$) ? $abuf_76766$$ : $JSCompiler_inline_result$$;
    this.buf = $JSCompiler_inline_result$$;
    this.agetable_QMARK_ = $new_agetable_QMARK__76767_this$$$;
    this.buflen *= 2;
  }
  $APP.cljs.core.truth_(this.agetable_QMARK_) ? this.buf[this.ptr] = this.cast_fn.cljs$core$IFn$_invoke$arity$1 ? this.cast_fn.cljs$core$IFn$_invoke$arity$1($elem$$) : this.cast_fn.call(null, $elem$$) : tech.v3.datatype.protocols._set_value_BANG_(this.buf, this.ptr, $elem$$);
  this.ptr += 1;
  return this;
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PListLike$_add_all$arity$2 = function($n_elems_76768_this$$$, $container$$) {
  var $this$__$1$$ = this;
  if ($APP.cljs.core.indexed_QMARK_($container$$)) {
    $n_elems_76768_this$$$ = $APP.cljs.core.count($container$$);
    if (this.ptr + $n_elems_76768_this$$$ > this.buflen) {
      var $new_len_76769$$ = 2 * (this.ptr + $n_elems_76768_this$$$), $new_buf_76770$$ = tech.v3.datatype.copy_make_container.make_container(this.dtype, $new_len_76769$$), $abuf_76771$$ = tech.v3.datatype.base.as_agetable($new_buf_76770$$), $new_agetable_QMARK__76772$$ = $APP.cljs.core.boolean$($abuf_76771$$);
      tech.v3.datatype.base.set_value_BANG_($new_buf_76770$$, 0, this.buf);
      this.buf = $APP.cljs.core.truth_($abuf_76771$$) ? $abuf_76771$$ : $new_buf_76770$$;
      this.agetable_QMARK_ = $new_agetable_QMARK__76772$$;
      this.buflen = $new_len_76769$$;
    }
    tech.v3.datatype.base.set_value_BANG_(this.buf, this.ptr, $container$$);
    this.ptr += $n_elems_76768_this$$$;
  } else {
    tech.v3.datatype.base.iterate_BANG_(function($p1__76707_SHARP_$$) {
      return $this$__$1$$.tech$v3$datatype$protocols$PListLike$_add$arity$2(null, $p1__76707_SHARP_$$);
    }, $container$$);
  }
  return $this$__$1$$;
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PListLike$_ensure_capacity$arity$2 = function($new_len_76774_this$$$, $capacity$$) {
  if (this.buflen < $capacity$$) {
    $new_len_76774_this$$$ = this.buflen;
    var $JSCompiler_inline_result$$ = tech.v3.datatype.copy_make_container.make_container(this.dtype, $new_len_76774_this$$$), $abuf_76776$$ = tech.v3.datatype.base.as_agetable($JSCompiler_inline_result$$);
    $capacity$$ = $APP.cljs.core.boolean$($abuf_76776$$);
    tech.v3.datatype.base.set_value_BANG_($JSCompiler_inline_result$$, 0, this.buf);
    $JSCompiler_inline_result$$ = $APP.cljs.core.truth_($abuf_76776$$) ? $abuf_76776$$ : $JSCompiler_inline_result$$;
    this.buf = $JSCompiler_inline_result$$;
    this.agetable_QMARK_ = $capacity$$;
    this.buflen = $new_len_76774_this$$$;
  }
  return this;
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($_item$$, $offset$$, $length$$) {
  return tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$variadic(tech.v3.datatype.protocols._sub_buffer(this.buf, $offset$$, $length$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this.dtype, this.metadata], 0));
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($_this$$, $new_meta$$) {
  return tech.v3.datatype.list.make_primitive_list.cljs$core$IFn$_invoke$arity$4 ? tech.v3.datatype.list.make_primitive_list.cljs$core$IFn$_invoke$arity$4(this.buf, this.dtype, this.ptr, $new_meta$$) : tech.v3.datatype.list.make_primitive_list.call(null, this.buf, this.dtype, this.ptr, $new_meta$$);
};
tech.v3.datatype.list.PrimitiveList.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
tech.v3.datatype.list.PrimitiveList.prototype.apply = function($self__$$, $args76708$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76708$$)));
};
tech.v3.datatype.list.PrimitiveList.prototype.cljs$core$IFn$_invoke$arity$1 = function($n$jscomp$460_n__$1$$) {
  $n$jscomp$460_n__$1$$ = $n$jscomp$460_n__$1$$ < 0 ? $APP.cljs.core.count(this) + $n$jscomp$460_n__$1$$ : $n$jscomp$460_n__$1$$;
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.buf, $n$jscomp$460_n__$1$$);
};
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.list.PrimitiveList.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($_this$$) {
  return $APP.cljs$cst$201$list;
};
tech.v3.datatype.list.PrimitiveList.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 7, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$29$buf, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), $APP.cljs.core.with_meta(cljs$cst$5478$agetable_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), cljs$cst$5479$dtype, cljs$cst$5480$cast_fn, $APP.cljs.core.with_meta(cljs$cst$5481$ptr, 
  new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), $APP.cljs.core.with_meta(cljs$cst$5482$buflen, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), cljs$cst$5476$metadata], null);
};
tech.v3.datatype.list.PrimitiveList.cljs$lang$type = !0;
tech.v3.datatype.list.PrimitiveList.cljs$lang$ctorStr = "tech.v3.datatype.list/PrimitiveList";
tech.v3.datatype.list.PrimitiveList.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.datatype.list/PrimitiveList");
};
tech.v3.datatype.list.__GT_PrimitiveList = function($buf$$, $agetable_QMARK_$$, $dtype$$, $cast_fn$$, $ptr$$, $buflen$$, $metadata$$) {
  return new tech.v3.datatype.list.PrimitiveList($buf$$, $agetable_QMARK_$$, $dtype$$, $cast_fn$$, $ptr$$, $buflen$$, $metadata$$);
};
tech.v3.datatype.list.make_primitive_list = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$308_argseq__5756__auto__$$ = [], $len__5749__auto___76780$$ = arguments.length, $i__5750__auto___76781$$ = 0;;) {
    if ($i__5750__auto___76781$$ < $len__5749__auto___76780$$) {
      $args__5755__auto__$jscomp$308_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76781$$]), $i__5750__auto___76781$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$308_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$308_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$308_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return tech.v3.datatype.list.make_primitive_list.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$308_argseq__5756__auto__$$);
};
tech.v3.datatype.list.make_primitive_list.cljs$core$IFn$_invoke$arity$variadic = function($buf$$, $metadata$$) {
  var $dtype$jscomp$11_dtype__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($metadata$$, 0, null), $ptr$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($metadata$$, 1, null);
  $metadata$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($metadata$$, 2, null);
  $dtype$jscomp$11_dtype__$1$$ = $APP.cljs.core.truth_($dtype$jscomp$11_dtype__$1$$) ? $dtype$jscomp$11_dtype__$1$$ : tech.v3.datatype.protocols._elemwise_datatype($buf$$);
  $ptr$$ = $APP.cljs.core.truth_($ptr$$) ? $ptr$$ : 0;
  var $buflen$$ = $APP.cljs.core.count($buf$$), $abuf$$ = tech.v3.datatype.base.as_agetable($buf$$), $agetable_QMARK_$$ = $APP.cljs.core.truth_($abuf$$) ? !0 : !1;
  return new tech.v3.datatype.list.PrimitiveList($APP.cljs.core.truth_($abuf$$) ? $abuf$$ : $buf$$, $agetable_QMARK_$$, $dtype$jscomp$11_dtype__$1$$, tech.v3.datatype.casting.cast_fn($dtype$jscomp$11_dtype__$1$$), $ptr$$, $buflen$$, $metadata$$);
};
tech.v3.datatype.list.make_primitive_list.cljs$lang$maxFixedArity = 1;
tech.v3.datatype.list.make_primitive_list.cljs$lang$applyTo = function($seq76737_seq76737__$1$$) {
  var $G__76738$$ = $APP.cljs.core.first($seq76737_seq76737__$1$$);
  $seq76737_seq76737__$1$$ = $APP.cljs.core.next($seq76737_seq76737__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76738$$, $seq76737_seq76737__$1$$);
};
tech.v3.datatype.list.make_list = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$309_argseq__5756__auto__$$ = [], $len__5749__auto___76785$$ = arguments.length, $i__5750__auto___76786$$ = 0;;) {
    if ($i__5750__auto___76786$$ < $len__5749__auto___76785$$) {
      $args__5755__auto__$jscomp$309_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76786$$]), $i__5750__auto___76786$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$309_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$309_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$309_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return tech.v3.datatype.list.make_list.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$309_argseq__5756__auto__$$);
};
tech.v3.datatype.list.make_list.cljs$core$IFn$_invoke$arity$variadic = function($dtype$$, $initial_bufsize__$1_or__5025__auto__$$) {
  $initial_bufsize__$1_or__5025__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($initial_bufsize__$1_or__5025__auto__$$, 0, null);
  $initial_bufsize__$1_or__5025__auto__$$ = $APP.cljs.core.truth_($initial_bufsize__$1_or__5025__auto__$$) ? $initial_bufsize__$1_or__5025__auto__$$ : 4;
  return tech.v3.datatype.list.make_primitive_list.cljs$core$IFn$_invoke$arity$variadic(tech.v3.datatype.arrays.make_array($dtype$$, $initial_bufsize__$1_or__5025__auto__$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$dtype$$, 0], 0));
};
tech.v3.datatype.list.make_list.cljs$lang$maxFixedArity = 1;
tech.v3.datatype.list.make_list.cljs$lang$applyTo = function($seq76747_seq76747__$1$$) {
  var $G__76748$$ = $APP.cljs.core.first($seq76747_seq76747__$1$$);
  $seq76747_seq76747__$1$$ = $APP.cljs.core.next($seq76747_seq76747__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76748$$, $seq76747_seq76747__$1$$);
};
tech.v3.datatype.bitmap = {};
Set.prototype.cljs$core$ICounted$ = $APP.cljs.core.PROTOCOL_SENTINEL;
Set.prototype.cljs$core$ICounted$_count$arity$1 = function($s$$) {
  return this.size;
};
Set.prototype.cljs$core$ICloneable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
Set.prototype.cljs$core$ICloneable$_clone$arity$1 = function($s$$) {
  return new Set(this);
};
tech.v3.datatype.bitmap.__GT_iterable = function($data$$) {
  return $APP.cljs.core.truth_($data$$.values) ? $data$$ : $APP.cljs.core.clj__GT_js($data$$);
};
tech.v3.datatype.bitmap.as_iterable = function($data$$) {
  return $APP.cljs.core.truth_($data$$.values) ? $data$$ : null;
};
tech.v3.datatype.bitmap.__GT_js_set = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return tech.v3.datatype.bitmap.__GT_js_set.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return tech.v3.datatype.bitmap.__GT_js_set.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.bitmap.__GT_js_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return new Set();
};
tech.v3.datatype.bitmap.__GT_js_set.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return $data$$ == null ? tech.v3.datatype.bitmap.__GT_js_set.cljs$core$IFn$_invoke$arity$0() : $data$$ instanceof Set ? $data$$ : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($p1__76757_SHARP_$$, $p2__76758_SHARP_$$) {
    $p1__76757_SHARP_$$.add($p2__76758_SHARP_$$);
    return $p1__76757_SHARP_$$;
  }, new Set(), $data$$);
};
tech.v3.datatype.bitmap.__GT_js_set.cljs$lang$maxFixedArity = 1;
tech.v3.datatype.bitmap.__GT_bitmap = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return tech.v3.datatype.bitmap.__GT_bitmap.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return tech.v3.datatype.bitmap.__GT_bitmap.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.bitmap.__GT_bitmap.cljs$core$IFn$_invoke$arity$0 = function() {
  return tech.v3.datatype.bitmap.__GT_js_set.cljs$core$IFn$_invoke$arity$0();
};
tech.v3.datatype.bitmap.__GT_bitmap.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return tech.v3.datatype.bitmap.__GT_js_set.cljs$core$IFn$_invoke$arity$1($data$$);
};
tech.v3.datatype.bitmap.__GT_bitmap.cljs$lang$maxFixedArity = 1;
Set.prototype.tech$v3$datatype$protocols$PBitmapSet$ = $APP.cljs.core.PROTOCOL_SENTINEL;
Set.prototype.tech$v3$datatype$protocols$PBitmapSet$_set_or$arity$2 = function($lhs$$, $rhs$$) {
  $lhs$$ = tech.v3.datatype.bitmap.__GT_iterable($rhs$$);
  var $retval$$ = new Set(this);
  tech.v3.datatype.base.iterate_BANG_(function($p1__76790_SHARP_$$) {
    return $retval$$.add($p1__76790_SHARP_$$);
  }, $lhs$$);
  return $retval$$;
};
Set.prototype.tech$v3$datatype$protocols$PBitmapSet$_set_and$arity$2 = function($lhs$jscomp$16_rhs__$1$$, $rhs$$) {
  var $lhs__$1$$ = this;
  $lhs$jscomp$16_rhs__$1$$ = tech.v3.datatype.bitmap.__GT_iterable($rhs$$);
  var $retval$$ = new Set();
  tech.v3.datatype.base.iterate_BANG_(function($p1__76791_SHARP_$$) {
    return $APP.cljs.core.truth_($lhs__$1$$.has($p1__76791_SHARP_$$)) ? $retval$$.add($p1__76791_SHARP_$$) : null;
  }, $lhs$jscomp$16_rhs__$1$$);
  return $retval$$;
};
Set.prototype.tech$v3$datatype$protocols$PBitmapSet$_set_and_not$arity$2 = function($lhs$$, $rhs$$) {
  var $retval$$ = new Set(this);
  tech.v3.datatype.base.iterate_BANG_(function($p1__76792_SHARP_$$) {
    return $retval$$.delete($p1__76792_SHARP_$$);
  }, $rhs$$);
  return $retval$$;
};
Set.prototype.tech$v3$datatype$protocols$PBitmapSet$_set_offset$arity$2 = function($lhs$$, $off$$) {
  var $retval$$ = new Set();
  tech.v3.datatype.base.iterate_BANG_(function($p1__76793_SHARP_$$) {
    return $retval$$.add($p1__76793_SHARP_$$ + $off$$);
  }, this);
  return $retval$$;
};
$APP.cljs.core.PersistentHashSet.prototype.tech$v3$datatype$protocols$PBitmapSet$ = $APP.cljs.core.PROTOCOL_SENTINEL;
$APP.cljs.core.PersistentHashSet.prototype.tech$v3$datatype$protocols$PBitmapSet$_set_or$arity$2 = function($lhs$$, $rhs$$) {
  return $APP.clojure.set.union.cljs$core$IFn$_invoke$arity$2(this, $rhs$$);
};
$APP.cljs.core.PersistentHashSet.prototype.tech$v3$datatype$protocols$PBitmapSet$_set_and$arity$2 = function($lhs$$, $rhs$$) {
  return $APP.clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(this, $rhs$$);
};
$APP.cljs.core.PersistentHashSet.prototype.tech$v3$datatype$protocols$PBitmapSet$_set_and_not$arity$2 = function($lhs$$, $rhs$$) {
  return $APP.clojure.set.difference.cljs$core$IFn$_invoke$arity$2(this, $rhs$$);
};
$APP.cljs.core.PersistentHashSet.prototype.tech$v3$datatype$protocols$PBitmapSet$_set_offset$arity$2 = function($lhs$$, $off$$) {
  var $retval$$ = new Set();
  tech.v3.datatype.base.iterate_BANG_(function($p1__76798_SHARP_$$) {
    return $retval$$.add($p1__76798_SHARP_$$ + $off$$);
  }, this);
  return $retval$$;
};
tech.v3.datatype.bitmap.set__GT_ordered_indexes = function($data$$) {
  var $indexes$$ = tech.v3.datatype.list.make_list.cljs$core$IFn$_invoke$arity$variadic($APP.cljs$cst$3337$int32, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.count($data$$)], 0)), $buffer$$ = tech.v3.datatype.base.as_agetable($indexes$$);
  tech.v3.datatype.base.iterate_BANG_(function($p1__76799_SHARP_$$) {
    return $indexes$$.tech$v3$datatype$protocols$PListLike$_add$arity$2(null, $p1__76799_SHARP_$$);
  }, $data$$);
  $buffer$$.sort();
  return $indexes$$;
};
tech.v3.datatype.bitmap.bitmap__GT_efficient_random_access_reader = function($bitmap$$) {
  return tech.v3.datatype.bitmap.set__GT_ordered_indexes($bitmap$$);
};
tech.v3.datatype.bitmap.js_set__GT_clj = function($js_set_values$$) {
  $js_set_values$$ = $js_set_values$$.values();
  for (var $retval$$ = $APP.cljs.core.transient$($APP.cljs.core.set(null));;) {
    var $next_val$$ = $js_set_values$$.next();
    if ($APP.cljs.core.truth_($next_val$$.done)) {
      return $APP.cljs.core.persistent_BANG_($retval$$);
    }
    $retval$$ = $APP.cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2($retval$$, $next_val$$.value);
  }
};
tech.v3.datatype.reader_vec = {};
tech.v3.datatype.reader_vec.ReaderVec = function($meta$$, $idx__GT_val$$, $cnt$$, $dtype$$, $__hash$$) {
  this.meta = $meta$$;
  this.idx__GT_val = $idx__GT_val$$;
  this.cnt = $cnt$$;
  this.dtype = $dtype$$;
  this.__hash = $__hash$$;
  this.cljs$lang$protocol_mask$partition0$ = 2315150111;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IFind$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IFind$_find$arity$2 = function($_coll$jscomp$2_n__$1$$, $n$$) {
  $_coll$jscomp$2_n__$1$$ = $n$$ < 0 ? this.cnt + $n$$ : $n$$;
  return 0 <= $_coll$jscomp$2_n__$1$$ && $_coll$jscomp$2_n__$1$$ < this.cnt ? new $APP.cljs.core.MapEntry($_coll$jscomp$2_n__$1$$, this.idx__GT_val.cljs$core$IFn$_invoke$arity$1 ? this.idx__GT_val.cljs$core$IFn$_invoke$arity$1($_coll$jscomp$2_n__$1$$) : this.idx__GT_val.call(null, $_coll$jscomp$2_n__$1$$), null) : null;
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.toString = function() {
  return $APP.cljs.core.pr_str_STAR_(this);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.equiv = function($other$$) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, $other$$);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.indexOf = function() {
  var $G__76794$$ = null, $G__76794__1$$ = function($x$$) {
    return $APP.cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, $x$$, 0);
  }, $G__76794__2$$ = function($x$$, $start$$) {
    return $APP.cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, $x$$, $start$$);
  };
  $G__76794$$ = function($x$$, $start$$) {
    switch(arguments.length) {
      case 1:
        return $G__76794__1$$.call(this, $x$$);
      case 2:
        return $G__76794__2$$.call(this, $x$$, $start$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__76794$$.cljs$core$IFn$_invoke$arity$1 = $G__76794__1$$;
  $G__76794$$.cljs$core$IFn$_invoke$arity$2 = $G__76794__2$$;
  return $G__76794$$;
}();
tech.v3.datatype.reader_vec.ReaderVec.prototype.lastIndexOf = function() {
  var $G__76795$$ = null, $G__76795__1$$ = function($x$$) {
    return $APP.cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, $x$$, $APP.cljs.core.count(this));
  }, $G__76795__2$$ = function($x$$, $start$$) {
    return $APP.cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, $x$$, $start$$);
  };
  $G__76795$$ = function($x$$, $start$$) {
    switch(arguments.length) {
      case 1:
        return $G__76795__1$$.call(this, $x$$);
      case 2:
        return $G__76795__2$$.call(this, $x$$, $start$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__76795$$.cljs$core$IFn$_invoke$arity$1 = $G__76795__1$$;
  $G__76795$$.cljs$core$IFn$_invoke$arity$2 = $G__76795__2$$;
  return $G__76795$$;
}();
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$ILookup$_lookup$arity$2 = function($coll$$, $k$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k$$, null);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$ILookup$_lookup$arity$3 = function($coll$$, $k$$, $not_found$$) {
  return typeof $k$$ === "number" ? this.cljs$core$IIndexed$_nth$arity$3(null, $k$$, $not_found$$) : $not_found$$;
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function($_v$$, $f$$, $init$$) {
  var $self__$$ = this;
  return $APP.cljs.core._reduce(function($p1__76722_SHARP_$$, $p2__76723_SHARP_$$) {
    var $G__76736$$ = $self__$$.idx__GT_val.cljs$core$IFn$_invoke$arity$1 ? $self__$$.idx__GT_val.cljs$core$IFn$_invoke$arity$1($p2__76723_SHARP_$$) : $self__$$.idx__GT_val.call(null, $p2__76723_SHARP_$$);
    return $f$$.cljs$core$IFn$_invoke$arity$3 ? $f$$.cljs$core$IFn$_invoke$arity$3($p1__76722_SHARP_$$, $p2__76723_SHARP_$$, $G__76736$$) : $f$$.call(null, $p1__76722_SHARP_$$, $p2__76723_SHARP_$$, $G__76736$$);
  }, $init$$, ham_fisted.api.range.cljs$core$IFn$_invoke$arity$1($self__$$.cnt));
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IIndexed$_nth$arity$2 = function($_coll$jscomp$3_n__$1$$, $n$$) {
  $_coll$jscomp$3_n__$1$$ = $n$$ < 0 ? $n$$ + this.cnt : $n$$;
  if (!($_coll$jscomp$3_n__$1$$ < this.cnt)) {
    throw Error(["nth out of range:", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($_coll$jscomp$3_n__$1$$), " \x3e\x3d ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.cnt)].join(""));
  }
  return this.idx__GT_val.cljs$core$IFn$_invoke$arity$1 ? this.idx__GT_val.cljs$core$IFn$_invoke$arity$1($_coll$jscomp$3_n__$1$$) : this.idx__GT_val.call(null, $_coll$jscomp$3_n__$1$$);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IIndexed$_nth$arity$3 = function($_coll$jscomp$4_n__$1$$, $n$$, $not_found$$) {
  $_coll$jscomp$4_n__$1$$ = $n$$ < 0 ? $n$$ + this.cnt : $n$$;
  this.idx__GT_val.cljs$core$IFn$_invoke$arity$1 ? this.idx__GT_val.cljs$core$IFn$_invoke$arity$1($_coll$jscomp$4_n__$1$$) : this.idx__GT_val.call(null, $_coll$jscomp$4_n__$1$$);
  return $not_found$$;
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($rdr$$, $writer$$, $_opts$$) {
  return $APP.cljs.core._write($writer$$, tech.v3.datatype.base.reader__GT_str(this, "reader"));
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function($coll$jscomp$1088_n__$1$$, $idx$jscomp$302_n$$, $val$$) {
  $coll$jscomp$1088_n__$1$$ = $idx$jscomp$302_n$$ < 0 ? this.cnt + $idx$jscomp$302_n$$ : $idx$jscomp$302_n$$;
  if (0 <= $coll$jscomp$1088_n__$1$$ && $coll$jscomp$1088_n__$1$$ < this.cnt) {
    $idx$jscomp$302_n$$ = 0;
    for (var $G__76797_nvec$$ = $APP.cljs.core.transient$($APP.cljs.core.PersistentVector.EMPTY);;) {
      if ($idx$jscomp$302_n$$ < this.cnt) {
        var $G__76796$$ = $idx$jscomp$302_n$$ + 1;
        $G__76797_nvec$$ = $idx$jscomp$302_n$$ === $coll$jscomp$1088_n__$1$$ ? $APP.cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2($G__76797_nvec$$, $val$$) : $APP.cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2($G__76797_nvec$$, this.idx__GT_val.cljs$core$IFn$_invoke$arity$1 ? this.idx__GT_val.cljs$core$IFn$_invoke$arity$1($coll$jscomp$1088_n__$1$$) : this.idx__GT_val.call(null, $coll$jscomp$1088_n__$1$$));
        $idx$jscomp$302_n$$ = $G__76796$$;
      } else {
        return $APP.cljs.core.persistent_BANG_($G__76797_nvec$$);
      }
    }
  } else {
    if ($coll$jscomp$1088_n__$1$$ === this.cnt) {
      return this.cljs$core$ICollection$_conj$arity$2(null, $val$$);
    }
    throw Error(["Index ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($coll$jscomp$1088_n__$1$$), " out of bounds  [0,", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.cnt), "]"].join(""));
  }
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IIterable$_iterator$arity$1 = function($this$$$) {
  return tech.v3.datatype.arrays.nth_iter(this);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IMeta$_meta$arity$1 = function($_coll$$) {
  return this.meta;
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$ICloneable$_clone$arity$1 = function($this$$$) {
  return tech.v3.datatype.copy_make_container.make_container(this.dtype, this);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$ICounted$_count$arity$1 = function($_coll$$) {
  return this.cnt;
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IStack$_peek$arity$1 = function($coll$$) {
  return this.cnt > 0 ? this.cljs$core$IIndexed$_nth$arity$2(null, this.cnt - 1) : null;
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IStack$_pop$arity$1 = function($G__76743__coll$$) {
  if (this.cnt === 0) {
    throw Error("Can't pop empty vector");
  }
  if (1 === this.cnt) {
    return $APP.cljs.core._with_meta($APP.cljs.core.PersistentVector.EMPTY, this.meta);
  }
  $G__76743__coll$$ = this.cnt - 1;
  var $G__76744$$ = this.dtype, $G__76745$$ = this.idx__GT_val, $G__76746$$ = this.meta;
  return tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$4 ? tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$4($G__76743__coll$$, $G__76744$$, $G__76745$$, $G__76746$$) : tech.v3.datatype.reader_vec.reader_vec.call(null, $G__76743__coll$$, $G__76744$$, $G__76745$$, $G__76746$$);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IReversible$_rseq$arity$1 = function($coll$$) {
  var $self__$$ = this;
  return $self__$$.cnt > 0 ? $APP.cljs.core.seq(ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2(function($p1__76724_SHARP_$$) {
    return $self__$$.idx__GT_val.cljs$core$IFn$_invoke$arity$1 ? $self__$$.idx__GT_val.cljs$core$IFn$_invoke$arity$1($p1__76724_SHARP_$$) : $self__$$.idx__GT_val.call(null, $p1__76724_SHARP_$$);
  }, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$3($self__$$.cnt - 1, -1, -1))) : null;
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IHash$_hash$arity$1 = function($coll$jscomp$1091_h__5134__auto__$jscomp$200_h__5134__auto____$1$$) {
  $coll$jscomp$1091_h__5134__auto__$jscomp$200_h__5134__auto____$1$$ = this.__hash;
  return $coll$jscomp$1091_h__5134__auto__$jscomp$200_h__5134__auto____$1$$ != null ? $coll$jscomp$1091_h__5134__auto__$jscomp$200_h__5134__auto____$1$$ : this.__hash = $coll$jscomp$1091_h__5134__auto__$jscomp$200_h__5134__auto____$1$$ = $APP.cljs.core.hash_ordered_coll(this);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($coll$$, $other$$) {
  return tech.v3.datatype.arrays.equiv_nthable(this, $other$$);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function($coll$$) {
  return ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$1(this);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.reader_vec.ReaderVec.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($_this$$) {
  return this.dtype;
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.tech$v3$datatype$protocols$PSubBufferCopy$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.reader_vec.ReaderVec.prototype.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3 = function($this$$$, $off$$, $len$$) {
  return this.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3(null, $off$$, $len$$);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function($_coll$$) {
  return $APP.cljs.core._with_meta($APP.cljs.core.PersistentVector.EMPTY, this.meta);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
  var $self__$$ = this;
  return $APP.cljs.core._reduce(ham_fisted.api.range.cljs$core$IFn$_invoke$arity$1($self__$$.cnt), function($p1__76717_SHARP_$$, $G__76754_p2__76718_SHARP_$$) {
    $G__76754_p2__76718_SHARP_$$ = $self__$$.idx__GT_val.cljs$core$IFn$_invoke$arity$1 ? $self__$$.idx__GT_val.cljs$core$IFn$_invoke$arity$1($G__76754_p2__76718_SHARP_$$) : $self__$$.idx__GT_val.call(null, $G__76754_p2__76718_SHARP_$$);
    return $rfn$$.cljs$core$IFn$_invoke$arity$2 ? $rfn$$.cljs$core$IFn$_invoke$arity$2($p1__76717_SHARP_$$, $G__76754_p2__76718_SHARP_$$) : $rfn$$.call(null, $p1__76717_SHARP_$$, $G__76754_p2__76718_SHARP_$$);
  });
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $acc$$) {
  var $self__$$ = this;
  return $APP.cljs.core._reduce(ham_fisted.api.range.cljs$core$IFn$_invoke$arity$1($self__$$.cnt), function($p1__76719_SHARP_$$, $G__76756_p2__76720_SHARP_$$) {
    $G__76756_p2__76720_SHARP_$$ = $self__$$.idx__GT_val.cljs$core$IFn$_invoke$arity$1 ? $self__$$.idx__GT_val.cljs$core$IFn$_invoke$arity$1($G__76756_p2__76720_SHARP_$$) : $self__$$.idx__GT_val.call(null, $G__76756_p2__76720_SHARP_$$);
    return $rfn$$.cljs$core$IFn$_invoke$arity$2 ? $rfn$$.cljs$core$IFn$_invoke$arity$2($p1__76719_SHARP_$$, $G__76756_p2__76720_SHARP_$$) : $rfn$$.call(null, $p1__76719_SHARP_$$, $G__76756_p2__76720_SHARP_$$);
  }, $acc$$);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($coll$$, $k$$, $v$$) {
  if (typeof $k$$ === "number") {
    return this.cljs$core$IVector$_assoc_n$arity$3(null, $k$$, $v$$);
  }
  throw Error("Vector's key for assoc must be a number.");
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($_coll$jscomp$9_k__$1$$, $k$$) {
  return $APP.cljs.core.integer_QMARK_($k$$) ? ($_coll$jscomp$9_k__$1$$ = $k$$ < 0 ? this.cnt + $k$$ : $k$$, 0 <= $_coll$jscomp$9_k__$1$$ && $_coll$jscomp$9_k__$1$$ < this.cnt) : !1;
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$ISeqable$_seq$arity$1 = function($coll$$) {
  var $coll__$1$$ = this;
  return this.cnt === 0 ? null : $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__76716_SHARP_$$) {
    return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($coll__$1$$, $p1__76716_SHARP_$$);
  }, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1(this.cnt));
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.reader_vec.ReaderVec.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($G__76761__this$$, $G__76762_off$$, $len$$) {
  var $self__$$ = this, $off__$1$$ = $G__76762_off$$ < 0 ? $self__$$.cnt + $G__76762_off$$ : $G__76762_off$$;
  $G__76761__this$$ = $off__$1$$ + $len$$;
  if (!($G__76761__this$$ <= $self__$$.cnt)) {
    throw Error(["Off+len is out of range: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($G__76761__this$$), " \x3e ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($self__$$.cnt)].join(""));
  }
  $G__76761__this$$ = $self__$$.dtype;
  $G__76762_off$$ = function($G__76764_p1__76725_SHARP_$$) {
    $G__76764_p1__76725_SHARP_$$ = $off__$1$$ + $G__76764_p1__76725_SHARP_$$;
    return $self__$$.idx__GT_val.cljs$core$IFn$_invoke$arity$1 ? $self__$$.idx__GT_val.cljs$core$IFn$_invoke$arity$1($G__76764_p1__76725_SHARP_$$) : $self__$$.idx__GT_val.call(null, $G__76764_p1__76725_SHARP_$$);
  };
  var $G__76763$$ = $self__$$.meta;
  return tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$4 ? tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$4($len$$, $G__76761__this$$, $G__76762_off$$, $G__76763$$) : tech.v3.datatype.reader_vec.reader_vec.call(null, $len$$, $G__76761__this$$, $G__76762_off$$, $G__76763$$);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($coll$$, $new_meta$$) {
  return $new_meta$$ === this.meta ? this : tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$4 ? tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$4(this.cnt, this.dtype, this.idx__GT_val, this.meta) : tech.v3.datatype.reader_vec.reader_vec.call(null, this.cnt, this.dtype, this.idx__GT_val, this.meta);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$ICollection$_conj$arity$2 = function($coll$$, $o$$) {
  return $APP.cljs.core.persistent_BANG_($APP.cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.transient$(this), $o$$));
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    case 2:
      return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.apply = function($self__$$, $args76730$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76730$$)));
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IFn$_invoke$arity$1 = function($k$$) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, $k$$);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.cljs$core$IFn$_invoke$arity$2 = function($k$$, $not_found$$) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, $k$$, $not_found$$);
};
tech.v3.datatype.reader_vec.ReaderVec.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.reader_vec.ReaderVec.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($_this$$) {
  return $APP.cljs$cst$2639$reader;
};
tech.v3.datatype.reader_vec.ReaderVec.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$20$meta, cljs$cst$5483$idx__GT_val, $APP.cljs$cst$59$cnt, cljs$cst$5479$dtype, $APP.cljs.core.with_meta($APP.cljs$cst$26$__hash, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$10$mutable, !0], null))], null);
};
tech.v3.datatype.reader_vec.ReaderVec.cljs$lang$type = !0;
tech.v3.datatype.reader_vec.ReaderVec.cljs$lang$ctorStr = "tech.v3.datatype.reader-vec/ReaderVec";
tech.v3.datatype.reader_vec.ReaderVec.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.datatype.reader-vec/ReaderVec");
};
tech.v3.datatype.reader_vec.__GT_ReaderVec = function($meta$$, $idx__GT_val$$, $cnt$$, $dtype$$, $__hash$$) {
  return new tech.v3.datatype.reader_vec.ReaderVec($meta$$, $idx__GT_val$$, $cnt$$, $dtype$$, $__hash$$);
};
tech.v3.datatype.reader_vec.reader_vec = function($var_args$$) {
  switch(arguments.length) {
    case 4:
      return tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 3:
      return tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$4 = function($n_elems$$, $dtype$$, $idx__GT_val$$, $meta$$) {
  return new tech.v3.datatype.reader_vec.ReaderVec($meta$$, $idx__GT_val$$, $n_elems$$, $dtype$$, null);
};
tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$3 = function($n_elems$$, $dtype$$, $idx__GT_val$$) {
  return tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$4($n_elems$$, $dtype$$, $idx__GT_val$$, null);
};
tech.v3.datatype.reader_vec.reader_vec.cljs$lang$maxFixedArity = 4;
tech.v3.datatype.emap1_vec = {};
tech.v3.datatype.emap1_vec.Emap1Vec = function($meta$$, $map_fn$$, $dtype$$, $src$$, $__hash$$) {
  this.meta = $meta$$;
  this.map_fn = $map_fn$$;
  this.dtype = $dtype$$;
  this.src = $src$$;
  this.__hash = $__hash$$;
  this.cljs$lang$protocol_mask$partition0$ = 2315125011;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IFind$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IFind$_find$arity$2 = function($_coll$jscomp$10_length$$, $n$jscomp$465_n__$1$$) {
  $_coll$jscomp$10_length$$ = $APP.cljs.core.count(this.src);
  $n$jscomp$465_n__$1$$ = $n$jscomp$465_n__$1$$ < 0 ? $_coll$jscomp$10_length$$ + $n$jscomp$465_n__$1$$ : $n$jscomp$465_n__$1$$;
  return 0 <= $n$jscomp$465_n__$1$$ && $n$jscomp$465_n__$1$$ < $_coll$jscomp$10_length$$ ? new $APP.cljs.core.MapEntry($n$jscomp$465_n__$1$$, this.cljs$core$IIndexed$_nth$arity$2(null, $n$jscomp$465_n__$1$$), null) : null;
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.toString = function() {
  return $APP.cljs.core.pr_str_STAR_(this);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.equiv = function($other$$) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, $other$$);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.indexOf = function() {
  var $G__76844$$ = null, $G__76844__1$$ = function($x$$) {
    return $APP.cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, $x$$, 0);
  }, $G__76844__2$$ = function($x$$, $start$$) {
    return $APP.cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, $x$$, $start$$);
  };
  $G__76844$$ = function($x$$, $start$$) {
    switch(arguments.length) {
      case 1:
        return $G__76844__1$$.call(this, $x$$);
      case 2:
        return $G__76844__2$$.call(this, $x$$, $start$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__76844$$.cljs$core$IFn$_invoke$arity$1 = $G__76844__1$$;
  $G__76844$$.cljs$core$IFn$_invoke$arity$2 = $G__76844__2$$;
  return $G__76844$$;
}();
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.lastIndexOf = function() {
  var $G__76847$$ = null, $G__76847__1$$ = function($x$$) {
    return $APP.cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, $x$$, $APP.cljs.core.count(this));
  }, $G__76847__2$$ = function($x$$, $start$$) {
    return $APP.cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, $x$$, $start$$);
  };
  $G__76847$$ = function($x$$, $start$$) {
    switch(arguments.length) {
      case 1:
        return $G__76847__1$$.call(this, $x$$);
      case 2:
        return $G__76847__2$$.call(this, $x$$, $start$$);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  $G__76847$$.cljs$core$IFn$_invoke$arity$1 = $G__76847__1$$;
  $G__76847$$.cljs$core$IFn$_invoke$arity$2 = $G__76847__2$$;
  return $G__76847$$;
}();
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$ILookup$_lookup$arity$2 = function($coll$$, $k$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k$$, null);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$ILookup$_lookup$arity$3 = function($coll$$, $k$$, $not_found$$) {
  return typeof $k$$ === "number" ? this.cljs$core$IIndexed$_nth$arity$3(null, $k$$, $not_found$$) : $not_found$$;
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function($_v$$, $f$$, $init$$) {
  var $self__$$ = this;
  return $APP.cljs.core._reduce(function($p1__76809_SHARP_$$, $p2__76810_SHARP_$$) {
    var $G__76814$$ = $self__$$.map_fn.cljs$core$IFn$_invoke$arity$1 ? $self__$$.map_fn.cljs$core$IFn$_invoke$arity$1($p2__76810_SHARP_$$) : $self__$$.map_fn.call(null, $p2__76810_SHARP_$$);
    return $f$$.cljs$core$IFn$_invoke$arity$3 ? $f$$.cljs$core$IFn$_invoke$arity$3($p1__76809_SHARP_$$, $p2__76810_SHARP_$$, $G__76814$$) : $f$$.call(null, $p1__76809_SHARP_$$, $p2__76810_SHARP_$$, $G__76814$$);
  }, $init$$, $self__$$.src);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IIndexed$_nth$arity$2 = function($_coll$jscomp$11_l$$, $G__76815_n$jscomp$466_n__$1$$) {
  $_coll$jscomp$11_l$$ = $APP.cljs.core.count(this.src);
  $G__76815_n$jscomp$466_n__$1$$ = $G__76815_n$jscomp$466_n__$1$$ < 0 ? $G__76815_n$jscomp$466_n__$1$$ + $_coll$jscomp$11_l$$ : $G__76815_n$jscomp$466_n__$1$$;
  if (!($G__76815_n$jscomp$466_n__$1$$ < $_coll$jscomp$11_l$$)) {
    throw Error(["nth out of range:", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($G__76815_n$jscomp$466_n__$1$$), " \x3e\x3d ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($_coll$jscomp$11_l$$)].join(""));
  }
  $G__76815_n$jscomp$466_n__$1$$ = $APP.cljs.core._nth(this.src, $G__76815_n$jscomp$466_n__$1$$);
  return this.map_fn.cljs$core$IFn$_invoke$arity$1 ? this.map_fn.cljs$core$IFn$_invoke$arity$1($G__76815_n$jscomp$466_n__$1$$) : this.map_fn.call(null, $G__76815_n$jscomp$466_n__$1$$);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IIndexed$_nth$arity$3 = function($_coll$jscomp$12_l$$, $G__76816_76849_n$$, $not_found$$) {
  $_coll$jscomp$12_l$$ = $APP.cljs.core.count(this.src);
  $G__76816_76849_n$$ = $APP.cljs.core._nth(this.src, $G__76816_76849_n$$ < 0 ? $G__76816_76849_n$$ + $_coll$jscomp$12_l$$ : $G__76816_76849_n$$);
  this.map_fn.cljs$core$IFn$_invoke$arity$1 ? this.map_fn.cljs$core$IFn$_invoke$arity$1($G__76816_76849_n$$) : this.map_fn.call(null, $G__76816_76849_n$$);
  return $not_found$$;
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($rdr$$, $writer$$, $_opts$$) {
  return $APP.cljs.core._write($writer$$, tech.v3.datatype.base.reader__GT_str(this, "reader"));
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IIterable$_iterator$arity$1 = function($this$$$) {
  return tech.v3.datatype.arrays.nth_iter(this);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IMeta$_meta$arity$1 = function($_coll$$) {
  return this.meta;
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$ICloneable$_clone$arity$1 = function($this$$$) {
  return tech.v3.datatype.copy_make_container.make_container(this.dtype, this);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$ICounted$_count$arity$1 = function($_coll$$) {
  return $APP.cljs.core.count(this.src);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IReversible$_rseq$arity$1 = function($coll$$) {
  return $APP.cljs.core.seq(ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2(this.map_fn, $APP.cljs.core._rseq(this.src)));
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IHash$_hash$arity$1 = function($coll$jscomp$1108_h__5134__auto__$jscomp$201_h__5134__auto____$1$$) {
  $coll$jscomp$1108_h__5134__auto__$jscomp$201_h__5134__auto____$1$$ = this.__hash;
  return $coll$jscomp$1108_h__5134__auto__$jscomp$201_h__5134__auto____$1$$ != null ? $coll$jscomp$1108_h__5134__auto__$jscomp$201_h__5134__auto____$1$$ : this.__hash = $coll$jscomp$1108_h__5134__auto__$jscomp$201_h__5134__auto____$1$$ = $APP.cljs.core.hash_ordered_coll(this);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($coll$$, $other$$) {
  return tech.v3.datatype.arrays.equiv_nthable(this, $other$$);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($_this$$) {
  return this.dtype;
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.tech$v3$datatype$protocols$PSubBufferCopy$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.tech$v3$datatype$protocols$PSubBufferCopy$_sub_buffer_copy$arity$3 = function($this$$$, $off$$, $len$$) {
  return this.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3(null, $off$$, $len$$);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
  var $self__$$ = this;
  return $APP.cljs.core._reduce($self__$$.src, function($p1__76805_SHARP_$$, $G__76818_p2__76806_SHARP_$$) {
    $G__76818_p2__76806_SHARP_$$ = $self__$$.map_fn.cljs$core$IFn$_invoke$arity$1 ? $self__$$.map_fn.cljs$core$IFn$_invoke$arity$1($G__76818_p2__76806_SHARP_$$) : $self__$$.map_fn.call(null, $G__76818_p2__76806_SHARP_$$);
    return $rfn$$.cljs$core$IFn$_invoke$arity$2 ? $rfn$$.cljs$core$IFn$_invoke$arity$2($p1__76805_SHARP_$$, $G__76818_p2__76806_SHARP_$$) : $rfn$$.call(null, $p1__76805_SHARP_$$, $G__76818_p2__76806_SHARP_$$);
  });
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $acc$$) {
  var $self__$$ = this;
  return $APP.cljs.core._reduce($self__$$.src, function($p1__76807_SHARP_$$, $G__76820_p2__76808_SHARP_$$) {
    $G__76820_p2__76808_SHARP_$$ = $self__$$.map_fn.cljs$core$IFn$_invoke$arity$1 ? $self__$$.map_fn.cljs$core$IFn$_invoke$arity$1($G__76820_p2__76808_SHARP_$$) : $self__$$.map_fn.call(null, $G__76820_p2__76808_SHARP_$$);
    return $rfn$$.cljs$core$IFn$_invoke$arity$2 ? $rfn$$.cljs$core$IFn$_invoke$arity$2($p1__76807_SHARP_$$, $G__76820_p2__76808_SHARP_$$) : $rfn$$.call(null, $p1__76807_SHARP_$$, $G__76820_p2__76808_SHARP_$$);
  }, $acc$$);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$ISeqable$_seq$arity$1 = function($coll$$) {
  return $APP.cljs.core.seq(ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2(this.map_fn, this.src));
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($G__76821__this$$, $G__76823_off$$, $G__76824_len$$) {
  $G__76821__this$$ = this.dtype;
  var $G__76822$$ = this.map_fn;
  $G__76823_off$$ = tech.v3.datatype.protocols._sub_buffer(this.src, $G__76823_off$$, $G__76824_len$$);
  $G__76824_len$$ = this.meta;
  return tech.v3.datatype.emap1_vec.emap1_vec.cljs$core$IFn$_invoke$arity$4 ? tech.v3.datatype.emap1_vec.emap1_vec.cljs$core$IFn$_invoke$arity$4($G__76821__this$$, $G__76822$$, $G__76823_off$$, $G__76824_len$$) : tech.v3.datatype.emap1_vec.emap1_vec.call(null, $G__76821__this$$, $G__76822$$, $G__76823_off$$, $G__76824_len$$);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($coll$$, $new_meta$$) {
  return $new_meta$$ === this.meta ? this : new tech.v3.datatype.emap1_vec.Emap1Vec(this.meta, this.map_fn, this.dtype, this.src, $new_meta$$);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    case 2:
      return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.apply = function($self__$$, $args76811$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args76811$$)));
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IFn$_invoke$arity$1 = function($k$$) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, $k$$);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.cljs$core$IFn$_invoke$arity$2 = function($k$$, $not_found$$) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, $k$$, $not_found$$);
};
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.emap1_vec.Emap1Vec.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($_this$$) {
  return $APP.cljs$cst$2639$reader;
};
tech.v3.datatype.emap1_vec.Emap1Vec.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$20$meta, cljs$cst$5484$map_fn, cljs$cst$5479$dtype, $APP.cljs$cst$2811$src, $APP.cljs.core.with_meta($APP.cljs$cst$26$__hash, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$10$mutable, !0], null))], null);
};
tech.v3.datatype.emap1_vec.Emap1Vec.cljs$lang$type = !0;
tech.v3.datatype.emap1_vec.Emap1Vec.cljs$lang$ctorStr = "tech.v3.datatype.emap1-vec/Emap1Vec";
tech.v3.datatype.emap1_vec.Emap1Vec.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.datatype.emap1-vec/Emap1Vec");
};
tech.v3.datatype.emap1_vec.__GT_Emap1Vec = function($meta$$, $map_fn$$, $dtype$$, $src$$, $__hash$$) {
  return new tech.v3.datatype.emap1_vec.Emap1Vec($meta$$, $map_fn$$, $dtype$$, $src$$, $__hash$$);
};
tech.v3.datatype.emap1_vec.emap1_vec = function($var_args$$) {
  switch(arguments.length) {
    case 4:
      return tech.v3.datatype.emap1_vec.emap1_vec.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 3:
      return tech.v3.datatype.emap1_vec.emap1_vec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.emap1_vec.emap1_vec.cljs$core$IFn$_invoke$arity$4 = function($dtype$$, $map_fn$$, $data$$, $meta$$) {
  return new tech.v3.datatype.emap1_vec.Emap1Vec($meta$$, $map_fn$$, $dtype$$, $data$$, null);
};
tech.v3.datatype.emap1_vec.emap1_vec.cljs$core$IFn$_invoke$arity$3 = function($dtype$$, $map_fn$$, $data$$) {
  return tech.v3.datatype.emap1_vec.emap1_vec.cljs$core$IFn$_invoke$arity$4($dtype$$, $map_fn$$, $data$$, null);
};
tech.v3.datatype.emap1_vec.emap1_vec.cljs$lang$maxFixedArity = 4;
tech.v3.datatype.ecount = function($item$$) {
  return tech.v3.datatype.base.ecount($item$$);
};
tech.v3.datatype.shape = function($item$$) {
  return tech.v3.datatype.base.generalized_shape($item$$);
};
tech.v3.datatype.clone = function($item$$) {
  return tech.v3.datatype.base.clone($item$$);
};
tech.v3.datatype.elemwise_datatype = function($item$$) {
  return tech.v3.datatype.base.elemwise_datatype($item$$);
};
tech.v3.datatype.datatype = function($item$$) {
  return tech.v3.datatype.base.datatype($item$$);
};
tech.v3.datatype.numeric_type_QMARK_ = function($dtype$$) {
  return $APP.cljs.core.truth_($dtype$$) ? tech.v3.datatype.casting.numeric_type_QMARK_($dtype$$) : null;
};
tech.v3.datatype.as_typed_array = function($item$$) {
  return tech.v3.datatype.base.as_typed_array($item$$);
};
tech.v3.datatype.as_js_array = function($item$$) {
  return tech.v3.datatype.base.as_js_array($item$$);
};
tech.v3.datatype.ensure_indexable = function($item$$) {
  return tech.v3.datatype.base.ensure_indexable($item$$);
};
tech.v3.datatype.as_agetable = function($item$$) {
  return tech.v3.datatype.base.as_agetable($item$$);
};
tech.v3.datatype.__GT_fast_nth = function($item$$) {
  return tech.v3.datatype.protocols.__GT_fast_nth($item$$);
};
tech.v3.datatype.as_datatype_accurate_agetable = function($item$$) {
  var $temp__5825__auto__$$ = tech.v3.datatype.as_agetable($item$$);
  return $APP.cljs.core.truth_($temp__5825__auto__$$) ? $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.elemwise_datatype($item$$), tech.v3.datatype.elemwise_datatype($temp__5825__auto__$$)) ? $temp__5825__auto__$$ : null : null;
};
tech.v3.datatype.integer_range_QMARK_ = function($item$$) {
  return tech.v3.datatype.base.integer_range_QMARK_($item$$);
};
tech.v3.datatype.iterate_BANG_ = function($consume_fn$$, $data$$) {
  return tech.v3.datatype.base.iterate_BANG_($consume_fn$$, $data$$);
};
tech.v3.datatype.indexed_iterate_BANG_ = function($consume_fn$$, $data$$) {
  return tech.v3.datatype.base.indexed_iterate_BANG_($consume_fn$$, $data$$);
};
tech.v3.datatype.sub_buffer_copy = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$310_argseq__5756__auto__$$ = [], $len__5749__auto___76958$$ = arguments.length, $i__5750__auto___76959$$ = 0;;) {
    if ($i__5750__auto___76959$$ < $len__5749__auto___76958$$) {
      $args__5755__auto__$jscomp$310_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76959$$]), $i__5750__auto___76959$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$310_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$310_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$310_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return tech.v3.datatype.sub_buffer_copy.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$310_argseq__5756__auto__$$);
};
tech.v3.datatype.sub_buffer_copy.cljs$core$IFn$_invoke$arity$variadic = function($item$$, $off$$, $len$$) {
  $len$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($len$$, 0, null);
  return tech.v3.datatype.base.sub_buffer_copy.cljs$core$IFn$_invoke$arity$variadic($item$$, $off$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$len$$], 0));
};
tech.v3.datatype.sub_buffer_copy.cljs$lang$maxFixedArity = 2;
tech.v3.datatype.sub_buffer_copy.cljs$lang$applyTo = function($G__76900_seq76898$$) {
  var $G__76899$$ = $APP.cljs.core.first($G__76900_seq76898$$), $seq76898__$1_seq76898__$2$$ = $APP.cljs.core.next($G__76900_seq76898$$);
  $G__76900_seq76898$$ = $APP.cljs.core.first($seq76898__$1_seq76898__$2$$);
  $seq76898__$1_seq76898__$2$$ = $APP.cljs.core.next($seq76898__$1_seq76898__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76899$$, $G__76900_seq76898$$, $seq76898__$1_seq76898__$2$$);
};
tech.v3.datatype.sub_buffer = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$311_argseq__5756__auto__$$ = [], $len__5749__auto___76962$$ = arguments.length, $i__5750__auto___76963$$ = 0;;) {
    if ($i__5750__auto___76963$$ < $len__5749__auto___76962$$) {
      $args__5755__auto__$jscomp$311_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76963$$]), $i__5750__auto___76963$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$311_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$311_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$311_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return tech.v3.datatype.sub_buffer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$311_argseq__5756__auto__$$);
};
tech.v3.datatype.sub_buffer.cljs$core$IFn$_invoke$arity$variadic = function($item$$, $off$$, $len$$) {
  $len$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($len$$, 0, null);
  return tech.v3.datatype.base.sub_buffer.cljs$core$IFn$_invoke$arity$variadic($item$$, $off$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$len$$], 0));
};
tech.v3.datatype.sub_buffer.cljs$lang$maxFixedArity = 2;
tech.v3.datatype.sub_buffer.cljs$lang$applyTo = function($G__76907_seq76905$$) {
  var $G__76906$$ = $APP.cljs.core.first($G__76907_seq76905$$), $seq76905__$1_seq76905__$2$$ = $APP.cljs.core.next($G__76907_seq76905$$);
  $G__76907_seq76905$$ = $APP.cljs.core.first($seq76905__$1_seq76905__$2$$);
  $seq76905__$1_seq76905__$2$$ = $APP.cljs.core.next($seq76905__$1_seq76905__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76906$$, $G__76907_seq76905$$, $seq76905__$1_seq76905__$2$$);
};
tech.v3.datatype.counted_QMARK_ = function($item$$) {
  return tech.v3.datatype.base.counted_QMARK_($item$$);
};
tech.v3.datatype.indexed_QMARK_ = function($item$$) {
  return tech.v3.datatype.base.indexed_QMARK_($item$$);
};
tech.v3.datatype.set_value_BANG_ = function($item$$, $idx$$, $data$$) {
  return tech.v3.datatype.base.set_value_BANG_($item$$, $idx$$, $data$$);
};
tech.v3.datatype.set_constant_BANG_ = function($item$$, $idx$$, $elem_count$$, $value$$) {
  return tech.v3.datatype.base.set_constant_BANG_($item$$, $idx$$, $elem_count$$, $value$$);
};
tech.v3.datatype.copy_BANG_ = function($src$$, $dest$$) {
  return tech.v3.datatype.set_value_BANG_($dest$$, 0, $src$$);
};
tech.v3.datatype.make_container = function($dtype$$, $len_or_data$$) {
  return tech.v3.datatype.copy_make_container.make_container($dtype$$, $len_or_data$$);
};
tech.v3.datatype.ensure_typed_array = function($item$jscomp$176_temp__5823__auto__$$) {
  var $item_dt$$ = tech.v3.datatype.elemwise_datatype($item$jscomp$176_temp__5823__auto__$$);
  if (!$APP.cljs.core.truth_(tech.v3.datatype.numeric_type_QMARK_($item_dt$$))) {
    throw Error(["Data is not a numeric datatype: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($item_dt$$)].join(""));
  }
  var $or__5025__auto__$$ = tech.v3.datatype.as_typed_array($item$jscomp$176_temp__5823__auto__$$);
  $item$jscomp$176_temp__5823__auto__$$ = $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : tech.v3.datatype.as_typed_array(tech.v3.datatype.make_container($item_dt$$, $item$jscomp$176_temp__5823__auto__$$));
  if ($APP.cljs.core.truth_($item$jscomp$176_temp__5823__auto__$$)) {
    return $item$jscomp$176_temp__5823__auto__$$;
  }
  throw Error("Unable to convert data to a typed array");
};
tech.v3.datatype.make_list = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$312_argseq__5756__auto__$$ = [], $len__5749__auto___76966$$ = arguments.length, $i__5750__auto___76967$$ = 0;;) {
    if ($i__5750__auto___76967$$ < $len__5749__auto___76966$$) {
      $args__5755__auto__$jscomp$312_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76967$$]), $i__5750__auto___76967$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$312_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$312_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$312_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return tech.v3.datatype.make_list.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$312_argseq__5756__auto__$$);
};
tech.v3.datatype.make_list.cljs$core$IFn$_invoke$arity$variadic = function($dtype$$, $init_buf_size_p__76914$$) {
  $init_buf_size_p__76914$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($init_buf_size_p__76914$$, 0, null);
  return tech.v3.datatype.list.make_list.cljs$core$IFn$_invoke$arity$variadic($dtype$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$init_buf_size_p__76914$$], 0));
};
tech.v3.datatype.make_list.cljs$lang$maxFixedArity = 1;
tech.v3.datatype.make_list.cljs$lang$applyTo = function($seq76912_seq76912__$1$$) {
  var $G__76913$$ = $APP.cljs.core.first($seq76912_seq76912__$1$$);
  $seq76912_seq76912__$1$$ = $APP.cljs.core.next($seq76912_seq76912__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76913$$, $seq76912_seq76912__$1$$);
};
tech.v3.datatype.add_BANG_ = function($list$$, $item$$) {
  tech.v3.datatype.protocols._add($list$$, $item$$);
  return $list$$;
};
tech.v3.datatype.add_all_BANG_ = function($list$$, $items$$) {
  tech.v3.datatype.protocols._add_all($list$$, $items$$);
  return $list$$;
};
tech.v3.datatype.ensure_capacity_BANG_ = function($list$$, $buflen$$) {
  return tech.v3.datatype.protocols._ensure_capacity($list$$, $buflen$$);
};
tech.v3.datatype.list_coalesce_BANG_ = function($data$$, $container$$) {
  return tech.v3.datatype.base.list_coalesce_BANG_($data$$, $container$$);
};
tech.v3.datatype.__GT_js_set = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return tech.v3.datatype.__GT_js_set.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return tech.v3.datatype.__GT_js_set.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.__GT_js_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return tech.v3.datatype.bitmap.__GT_js_set.cljs$core$IFn$_invoke$arity$0();
};
tech.v3.datatype.__GT_js_set.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return tech.v3.datatype.bitmap.__GT_js_set.cljs$core$IFn$_invoke$arity$1($data$$);
};
tech.v3.datatype.__GT_js_set.cljs$lang$maxFixedArity = 1;
tech.v3.datatype.__GT_set = function($data$$) {
  return $APP.cljs.core.set_QMARK_($data$$) || $data$$ instanceof Set ? $data$$ : $data$$ == null ? $APP.cljs.core.set(null) : $APP.cljs.core.truth_(tech.v3.datatype.numeric_type_QMARK_(tech.v3.datatype.elemwise_datatype($data$$))) ? tech.v3.datatype.__GT_js_set.cljs$core$IFn$_invoke$arity$1($data$$) : $APP.cljs.core.set($data$$);
};
tech.v3.datatype.set_or = function($lhs$$, $rhs$$) {
  return tech.v3.datatype.protocols._set_or($lhs$$, $rhs$$);
};
tech.v3.datatype.set_and = function($lhs$$, $rhs$$) {
  return tech.v3.datatype.protocols._set_and($lhs$$, $rhs$$);
};
tech.v3.datatype.set_and_not = function($lhs$$, $rhs$$) {
  return tech.v3.datatype.protocols._set_and_not($lhs$$, $rhs$$);
};
tech.v3.datatype.set_offset = function($lhs$$, $off$$) {
  return tech.v3.datatype.protocols._set_offset($lhs$$, $off$$);
};
tech.v3.datatype.set__GT_ordered_indexes = function($data$$) {
  return tech.v3.datatype.bitmap.set__GT_ordered_indexes($data$$);
};
tech.v3.datatype.set_predicate = function($set$$) {
  if ($set$$ instanceof Set) {
    return function($p1__76920_SHARP_$$) {
      return $set$$.has($p1__76920_SHARP_$$);
    };
  }
  if ($APP.cljs.core.set_QMARK_($set$$)) {
    return $set$$;
  }
  throw Error("Item passed in is not a js set nor a cljs.core set.");
};
tech.v3.datatype.set_predicate_complement = function($set$$) {
  if ($set$$ instanceof Set) {
    return function($p1__76921_SHARP_$$) {
      return $APP.cljs.core.not($set$$.has($p1__76921_SHARP_$$));
    };
  }
  if ($APP.cljs.core.set_QMARK_($set$$)) {
    return function($p1__76922_SHARP_$$) {
      return $APP.cljs.core.not($set$$.cljs$core$IFn$_invoke$arity$1 ? $set$$.cljs$core$IFn$_invoke$arity$1($p1__76922_SHARP_$$) : $set$$.call(null, $p1__76922_SHARP_$$));
    };
  }
  throw Error("Item passed in is not a js set nor a cljs.core set.");
};
tech.v3.datatype.indexed_buffer = function($indexes$$, $data$$) {
  return tech.v3.datatype.arrays.indexed_buffer($indexes$$, $data$$);
};
tech.v3.datatype.reify_reader = function($var_args$$) {
  switch(arguments.length) {
    case 3:
      return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$3 = function($dtype$$, $n_elems$$, $idx__GT_val_fn$$) {
  return tech.v3.datatype.reader_vec.reader_vec.cljs$core$IFn$_invoke$arity$3($n_elems$$, $dtype$$, $idx__GT_val_fn$$);
};
tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$2 = function($n_elems$$, $idx__GT_val_fn$$) {
  return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$3($APP.cljs$cst$2189$object, $n_elems$$, $idx__GT_val_fn$$);
};
tech.v3.datatype.reify_reader.cljs$lang$maxFixedArity = 3;
tech.v3.datatype.reverse = function($item$$) {
  if ($APP.cljs.core.empty_QMARK_($item$$)) {
    return $item$$;
  }
  if ($APP.cljs.core.truth_(tech.v3.datatype.base.integer_range_QMARK_($item$$))) {
    var $ec$$ = tech.v3.datatype.ecount($item$$), $start$$ = $item$$.start, $step$$ = $item$$.step;
    return $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$3($start$$ + $step$$ * $ec$$ - $step$$, $start$$ - $step$$, -$step$$);
  }
  if ($APP.cljs.core.truth_(tech.v3.datatype.base.indexed_QMARK_($item$$))) {
    $ec$$ = tech.v3.datatype.ecount($item$$);
    var $dec_ec$$ = $ec$$ - 1;
    return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$3(tech.v3.datatype.elemwise_datatype($item$$), $ec$$, function() {
      var $temp__5823__auto__$$ = tech.v3.datatype.base.as_agetable($item$$);
      return $APP.cljs.core.truth_($temp__5823__auto__$$) ? function($p1__76927_SHARP_$$) {
        return $temp__5823__auto__$$[$dec_ec$$ - $p1__76927_SHARP_$$];
      } : function($p1__76928_SHARP_$$) {
        return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($item$$, $dec_ec$$ - $p1__76928_SHARP_$$);
      };
    }());
  }
  return $APP.cljs.core.reverse($item$$);
};
tech.v3.datatype.t_tech$v3$datatype76948 = function($map_fn$$, $ret_dtype$$, $args$$, $meta76949$$) {
  this.map_fn = $map_fn$$;
  this.ret_dtype = $ret_dtype$$;
  this.args = $args$$;
  this.meta76949 = $meta76949$$;
  this.cljs$lang$protocol_mask$partition0$ = 8781824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
tech.v3.datatype.t_tech$v3$datatype76948.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($_76950$$, $meta76949__$1$$) {
  return new tech.v3.datatype.t_tech$v3$datatype76948(this.map_fn, this.ret_dtype, this.args, $meta76949__$1$$);
};
tech.v3.datatype.t_tech$v3$datatype76948.prototype.cljs$core$IMeta$_meta$arity$1 = function($_76950$$) {
  return this.meta76949;
};
tech.v3.datatype.t_tech$v3$datatype76948.prototype.cljs$core$ISeqable$_seq$arity$1 = function($r$$) {
  return $APP.cljs.core.every_QMARK_($APP.cljs.core.seq, this.args) ? $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.map, this.map_fn, this.args) : null;
};
tech.v3.datatype.t_tech$v3$datatype76948.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.datatype.t_tech$v3$datatype76948.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($this$$$) {
  return this.ret_dtype;
};
tech.v3.datatype.t_tech$v3$datatype76948.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5484$map_fn, cljs$cst$5485$ret_dtype, $APP.cljs$cst$1246$args, cljs$cst$5486$meta76949], null);
};
tech.v3.datatype.t_tech$v3$datatype76948.cljs$lang$type = !0;
tech.v3.datatype.t_tech$v3$datatype76948.cljs$lang$ctorStr = "tech.v3.datatype/t_tech$v3$datatype76948";
tech.v3.datatype.t_tech$v3$datatype76948.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.datatype/t_tech$v3$datatype76948");
};
tech.v3.datatype.__GT_t_tech$v3$datatype76948 = function($map_fn$$, $ret_dtype$$, $args$$, $meta76949$$) {
  return new tech.v3.datatype.t_tech$v3$datatype76948($map_fn$$, $ret_dtype$$, $args$$, $meta76949$$);
};
tech.v3.datatype.emap = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$313_argseq__5756__auto__$$ = [], $len__5749__auto___76982$$ = arguments.length, $i__5750__auto___76983$$ = 0;;) {
    if ($i__5750__auto___76983$$ < $len__5749__auto___76982$$) {
      $args__5755__auto__$jscomp$313_argseq__5756__auto__$$.push(arguments[$i__5750__auto___76983$$]), $i__5750__auto___76983$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$313_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$313_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$313_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return tech.v3.datatype.emap.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$313_argseq__5756__auto__$$);
};
tech.v3.datatype.emap.cljs$core$IFn$_invoke$arity$variadic = function($map_fn$$, $ret_dtype$$, $args$$) {
  if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, $APP.cljs.core.count($args$$))) {
    throw Error("No args provided, not a transducing function");
  }
  $ret_dtype$$ = $APP.cljs.core.truth_($ret_dtype$$) ? $ret_dtype$$ : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.casting.widest_datatype, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.elemwise_datatype, $args$$));
  if ($APP.cljs.core.every_QMARK_(tech.v3.datatype.indexed_QMARK_, $args$$)) {
    var $n_elems$$ = $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.min, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count, $args$$));
    switch($APP.cljs.core.count($args$$)) {
      case 1:
        return tech.v3.datatype.emap1_vec.emap1_vec.cljs$core$IFn$_invoke$arity$3($ret_dtype$$, $map_fn$$, $APP.cljs.core.first($args$$));
      case 2:
        var $arg1$$ = $APP.cljs.core.first($args$$), $arg2$$ = $APP.cljs.core.second($args$$), $aa1$$ = tech.v3.datatype.base.as_agetable($arg1$$), $aa2$$ = tech.v3.datatype.base.as_agetable($arg2$$);
        return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$3($ret_dtype$$, $n_elems$$, $APP.cljs.core.truth_($APP.cljs.core.truth_($aa1$$) ? $aa2$$ : $aa1$$) ? function($G__76939_p1__76930_SHARP_$$) {
          var $G__76938$$ = $aa1$$[$G__76939_p1__76930_SHARP_$$];
          $G__76939_p1__76930_SHARP_$$ = $aa2$$[$G__76939_p1__76930_SHARP_$$];
          return $map_fn$$.cljs$core$IFn$_invoke$arity$2 ? $map_fn$$.cljs$core$IFn$_invoke$arity$2($G__76938$$, $G__76939_p1__76930_SHARP_$$) : $map_fn$$.call(null, $G__76938$$, $G__76939_p1__76930_SHARP_$$);
        } : function($G__76941_p1__76931_SHARP_$$) {
          var $G__76940$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($arg1$$, $G__76941_p1__76931_SHARP_$$);
          $G__76941_p1__76931_SHARP_$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($arg2$$, $G__76941_p1__76931_SHARP_$$);
          return $map_fn$$.cljs$core$IFn$_invoke$arity$2 ? $map_fn$$.cljs$core$IFn$_invoke$arity$2($G__76940$$, $G__76941_p1__76931_SHARP_$$) : $map_fn$$.call(null, $G__76940$$, $G__76941_p1__76931_SHARP_$$);
        });
      case 3:
        $arg1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($args$$, 0);
        $arg2$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($args$$, 1);
        var $arg3$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($args$$, 2);
        return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$3($ret_dtype$$, $n_elems$$, function($G__76946_p1__76932_SHARP_$$) {
          var $G__76944$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($arg1$$, $G__76946_p1__76932_SHARP_$$), $G__76945$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($arg2$$, $G__76946_p1__76932_SHARP_$$);
          $G__76946_p1__76932_SHARP_$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($arg3$$, $G__76946_p1__76932_SHARP_$$);
          return $map_fn$$.cljs$core$IFn$_invoke$arity$3 ? $map_fn$$.cljs$core$IFn$_invoke$arity$3($G__76944$$, $G__76945$$, $G__76946_p1__76932_SHARP_$$) : $map_fn$$.call(null, $G__76944$$, $G__76945$$, $G__76946_p1__76932_SHARP_$$);
        });
      default:
        return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$3($ret_dtype$$, $n_elems$$, function($idx$$) {
          return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($map_fn$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__76933_SHARP_$$) {
            return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($p1__76933_SHARP_$$, $idx$$);
          }, $args$$));
        });
    }
  } else {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($ret_dtype$$, $APP.cljs$cst$2189$object) ? $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.map, $map_fn$$, $args$$) : new tech.v3.datatype.t_tech$v3$datatype76948($map_fn$$, $ret_dtype$$, $args$$, $APP.cljs.core.PersistentArrayMap.EMPTY);
  }
};
tech.v3.datatype.emap.cljs$lang$maxFixedArity = 2;
tech.v3.datatype.emap.cljs$lang$applyTo = function($G__76936_seq76934$$) {
  var $G__76935$$ = $APP.cljs.core.first($G__76936_seq76934$$), $seq76934__$1_seq76934__$2$$ = $APP.cljs.core.next($G__76936_seq76934$$);
  $G__76936_seq76934$$ = $APP.cljs.core.first($seq76934__$1_seq76934__$2$$);
  $seq76934__$1_seq76934__$2$$ = $APP.cljs.core.next($seq76934__$1_seq76934__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__76935$$, $G__76936_seq76934$$, $seq76934__$1_seq76934__$2$$);
};
tech.v3.datatype.argops = {};
tech.v3.datatype.argops.argsort = function($var_args$$) {
  switch(arguments.length) {
    case 3:
      return tech.v3.datatype.argops.argsort.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return tech.v3.datatype.argops.argsort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return tech.v3.datatype.argops.argsort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.argops.argsort.cljs$core$IFn$_invoke$arity$3 = function($compare_fn_indexes$$, $options$$, $data$$) {
  var $comp$$ = $APP.cljs.core.truth_($compare_fn_indexes$$) ? $APP.cljs.core.comparator($compare_fn_indexes$$) : $APP.cljs.core.truth_(cljs$cst$5487$comparator.cljs$core$IFn$_invoke$arity$1($options$$)) ? cljs$cst$5487$comparator.cljs$core$IFn$_invoke$arity$1($options$$) : $APP.cljs.core.compare, $data__$1$$ = tech.v3.datatype.base.ensure_indexable($data$$);
  $compare_fn_indexes$$ = $APP.cljs.core.count($data__$1$$);
  $compare_fn_indexes$$ = tech.v3.datatype.copy_make_container.make_container($APP.cljs$cst$3337$int32, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($compare_fn_indexes$$));
  $data$$ = tech.v3.datatype.base.as_typed_array($compare_fn_indexes$$);
  var $nan_strategy$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($options$$, cljs$cst$5466$nan_strategy, $APP.cljs$cst$1653$last), $missing_QMARK__76868$$ = tech.v3.datatype.casting.numeric_type_QMARK_(tech.v3.datatype.base.elemwise_datatype($data__$1$$)) ? isNaN : $APP.cljs.core.nil_QMARK_;
  $options$$ = function() {
    var $temp__5823__auto__$$ = tech.v3.datatype.base.as_agetable($data__$1$$);
    return $APP.cljs.core.truth_($temp__5823__auto__$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$temp__5823__auto__$$, $APP.cljs.core.aget], null) : new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$data__$1$$, $APP.cljs.core.nth], null);
  }();
  var $data_76870__$2$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($options$$, 0, null), $get_fn_76871$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($options$$, 1, null);
  $data$$.sort(function($lhs$$, $lhs_nan_QMARK__rhs_idx$$) {
    $lhs$$ = $get_fn_76871$$.cljs$core$IFn$_invoke$arity$2 ? $get_fn_76871$$.cljs$core$IFn$_invoke$arity$2($data_76870__$2$$, $lhs$$) : $get_fn_76871$$.call(null, $data_76870__$2$$, $lhs$$);
    var $rhs$$ = $get_fn_76871$$.cljs$core$IFn$_invoke$arity$2 ? $get_fn_76871$$.cljs$core$IFn$_invoke$arity$2($data_76870__$2$$, $lhs_nan_QMARK__rhs_idx$$) : $get_fn_76871$$.call(null, $data_76870__$2$$, $lhs_nan_QMARK__rhs_idx$$);
    $lhs_nan_QMARK__rhs_idx$$ = $missing_QMARK__76868$$.cljs$core$IFn$_invoke$arity$1 ? $missing_QMARK__76868$$.cljs$core$IFn$_invoke$arity$1($lhs$$) : $missing_QMARK__76868$$.call(null, $lhs$$);
    var $JSCompiler_inline_result$$ = $missing_QMARK__76868$$.cljs$core$IFn$_invoke$arity$1 ? $missing_QMARK__76868$$.cljs$core$IFn$_invoke$arity$1($rhs$$) : $missing_QMARK__76868$$.call(null, $rhs$$), $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_;
    $JSCompiler_inline_result$$ = $APP.cljs.core.truth_($lhs_nan_QMARK__rhs_idx$$) ? $lhs_nan_QMARK__rhs_idx$$ : $JSCompiler_inline_result$$;
    if ($JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$$)) {
      $lhs$$ = $APP.cljs.core._EQ_;
      if ($APP.cljs.core.truth_($lhs$$.cljs$core$IFn$_invoke$arity$2 ? $lhs$$.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2628$exception, $nan_strategy$$) : $lhs$$.call(null, $APP.cljs$cst$2628$exception, $nan_strategy$$))) {
        throw Error("NaN detected");
      }
      if ($APP.cljs.core.truth_($lhs$$.cljs$core$IFn$_invoke$arity$2 ? $lhs$$.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1653$last, $nan_strategy$$) : $lhs$$.call(null, $APP.cljs$cst$1653$last, $nan_strategy$$))) {
        return $APP.cljs.core.truth_($lhs_nan_QMARK__rhs_idx$$) ? 1 : -1;
      }
      if ($APP.cljs.core.truth_($lhs$$.cljs$core$IFn$_invoke$arity$2 ? $lhs$$.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1655$first, $nan_strategy$$) : $lhs$$.call(null, $APP.cljs$cst$1655$first, $nan_strategy$$))) {
        return $APP.cljs.core.truth_($lhs_nan_QMARK__rhs_idx$$) ? -1 : 1;
      }
      throw Error(["No matching clause: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($nan_strategy$$)].join(""));
    }
    return $comp$$.cljs$core$IFn$_invoke$arity$2 ? $comp$$.cljs$core$IFn$_invoke$arity$2($lhs$$, $rhs$$) : $comp$$.call(null, $lhs$$, $rhs$$);
  });
  return $compare_fn_indexes$$;
};
tech.v3.datatype.argops.argsort.cljs$core$IFn$_invoke$arity$2 = function($compare_fn$$, $data$$) {
  return tech.v3.datatype.argops.argsort.cljs$core$IFn$_invoke$arity$3($compare_fn$$, null, $data$$);
};
tech.v3.datatype.argops.argsort.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return tech.v3.datatype.argops.argsort.cljs$core$IFn$_invoke$arity$3(null, null, $data$$);
};
tech.v3.datatype.argops.argsort.cljs$lang$maxFixedArity = 3;
tech.v3.datatype.argops.numeric_truthy = function($val$$) {
  return typeof $val$$ === "number" ? $APP.cljs.core.not(isNaN($val$$)) && $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(0, $val$$) : $val$$;
};
tech.v3.datatype.argops.IndexReducer = function($list$$, $start$$, $last_val$$, $increment$$) {
  this.list = $list$$;
  this.start = $start$$;
  this.last_val = $last_val$$;
  this.increment = $increment$$;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
tech.v3.datatype.argops.IndexReducer.prototype.accept = function($elem$$) {
  if (this.start == null) {
    this.start = $elem$$;
  } else {
    var $new_inc_76878$$ = $elem$$ - this.last_val;
    $new_inc_76878$$ !== this.increment && ($APP.cljs.core.truth_(isNaN(this.increment)) ? tech.v3.datatype.protocols._add(this.list, $elem$$) : $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(0, $new_inc_76878$$) && this.increment == null ? this.increment = $new_inc_76878$$ : $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(this.increment, $new_inc_76878$$) && (this.increment == null ? tech.v3.datatype.protocols._add(this.list, this.start) : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($p1__76834_SHARP_$$, 
    $p2__76835_SHARP_$$) {
      return tech.v3.datatype.protocols._add($p1__76834_SHARP_$$, $p2__76835_SHARP_$$);
    }, this.list, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$3(this.start, this.last_val + this.increment, this.increment)), tech.v3.datatype.protocols._add(this.list, $elem$$), this.increment = NaN));
  }
  return this.last_val = $elem$$;
};
tech.v3.datatype.argops.IndexReducer.prototype.cljs$core$IDeref$_deref$arity$1 = function($JSCompiler_temp_const$jscomp$1851_this$$$) {
  $JSCompiler_temp_const$jscomp$1851_this$$$ = $APP.cljs.core;
  var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$1851_this$$$.with_meta;
  if (this.start == null) {
    var $JSCompiler_temp$jscomp$1852_JSCompiler_temp$jscomp$1853_JSCompiler_temp$jscomp$1854_JSCompiler_temp_const$$ = $APP.cljs.core.PersistentVector.EMPTY;
  } else {
    if ($APP.cljs.core.truth_(isNaN(this.increment))) {
      $JSCompiler_temp$jscomp$1852_JSCompiler_temp$jscomp$1853_JSCompiler_temp$jscomp$1854_JSCompiler_temp_const$$ = tech.v3.datatype.base.sub_buffer.cljs$core$IFn$_invoke$arity$variadic(this.list, 0, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tech.v3.datatype.base.ecount(this.list)], 0));
    } else {
      if (this.increment == null) {
        $JSCompiler_temp$jscomp$1852_JSCompiler_temp$jscomp$1853_JSCompiler_temp$jscomp$1854_JSCompiler_temp_const$$ = ham_fisted.api.range.cljs$core$IFn$_invoke$arity$2(this.start, this.start + 1);
      } else {
        $JSCompiler_temp$jscomp$1852_JSCompiler_temp$jscomp$1853_JSCompiler_temp$jscomp$1854_JSCompiler_temp_const$$ = ham_fisted.api.range;
        var $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp$jscomp$1852_JSCompiler_temp$jscomp$1853_JSCompiler_temp$jscomp$1854_JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$1$$ = this.start, $JSCompiler_temp_const$jscomp$2$$ = this.last_val;
        var $JSCompiler_inline_result$jscomp$1859_or__5025__auto__$$ = this.increment;
        $JSCompiler_inline_result$jscomp$1859_or__5025__auto__$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$1859_or__5025__auto__$$) ? $JSCompiler_inline_result$jscomp$1859_or__5025__auto__$$ : this.last_val - this.start;
        $JSCompiler_temp$jscomp$1852_JSCompiler_temp$jscomp$1853_JSCompiler_temp$jscomp$1854_JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp$jscomp$1852_JSCompiler_temp$jscomp$1853_JSCompiler_temp$jscomp$1854_JSCompiler_temp_const$$, $JSCompiler_temp_const$jscomp$1$$, $JSCompiler_temp_const$jscomp$2$$ + $JSCompiler_inline_result$jscomp$1859_or__5025__auto__$$, this.increment);
      }
    }
  }
  return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$1851_this$$$, $JSCompiler_temp$jscomp$1852_JSCompiler_temp$jscomp$1853_JSCompiler_temp$jscomp$1854_JSCompiler_temp_const$$, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$5488$tech_DOT_v3_DOT_datatype_DOT_argops_SLASH_processed, !0], null));
};
tech.v3.datatype.argops.IndexReducer.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1143$list, $APP.cljs.core.with_meta($APP.cljs$cst$58$start, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), $APP.cljs.core.with_meta(cljs$cst$5489$last_val, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), $APP.cljs.core.with_meta(cljs$cst$5490$increment, new $APP.cljs.core.PersistentArrayMap(null, 
  1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null))], null);
};
tech.v3.datatype.argops.IndexReducer.cljs$lang$type = !0;
tech.v3.datatype.argops.IndexReducer.cljs$lang$ctorStr = "tech.v3.datatype.argops/IndexReducer";
tech.v3.datatype.argops.IndexReducer.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.datatype.argops/IndexReducer");
};
tech.v3.datatype.argops.__GT_IndexReducer = function($list$$, $start$$, $last_val$$, $increment$$) {
  return new tech.v3.datatype.argops.IndexReducer($list$$, $start$$, $last_val$$, $increment$$);
};
tech.v3.datatype.argops.index_reducer = function() {
  return new tech.v3.datatype.argops.IndexReducer(tech.v3.datatype.list.make_list($APP.cljs$cst$3337$int32), null, null, null);
};
tech.v3.datatype.argops.index_reducer_rf = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return tech.v3.datatype.argops.index_reducer_rf.cljs$core$IFn$_invoke$arity$0();
    case 2:
      return tech.v3.datatype.argops.index_reducer_rf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return tech.v3.datatype.argops.index_reducer_rf.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.argops.index_reducer_rf.cljs$core$IFn$_invoke$arity$0 = function() {
  return tech.v3.datatype.argops.index_reducer();
};
tech.v3.datatype.argops.index_reducer_rf.cljs$core$IFn$_invoke$arity$2 = function($acc$$, $v$$) {
  $acc$$.accept($v$$);
  return $acc$$;
};
tech.v3.datatype.argops.index_reducer_rf.cljs$core$IFn$_invoke$arity$1 = function($acc$$) {
  return $APP.cljs.core.deref($acc$$);
};
tech.v3.datatype.argops.index_reducer_rf.cljs$lang$maxFixedArity = 2;
tech.v3.datatype.argops.argfilter = function($var_args$$) {
  switch(arguments.length) {
    case 3:
      return tech.v3.datatype.argops.argfilter.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return tech.v3.datatype.argops.argfilter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return tech.v3.datatype.argops.argfilter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.argops.argfilter.cljs$core$IFn$_invoke$arity$3 = function($pred$$, $options$$, $data$$) {
  return $APP.cljs.core.deref($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($acc$$, $idx$$, $v$$) {
    $APP.cljs.core.truth_(tech.v3.datatype.argops.numeric_truthy($pred$$.cljs$core$IFn$_invoke$arity$1 ? $pred$$.cljs$core$IFn$_invoke$arity$1($v$$) : $pred$$.call(null, $v$$))) && $acc$$.accept($idx$$);
    return $acc$$;
  }), tech.v3.datatype.argops.index_reducer(), $data$$));
};
tech.v3.datatype.argops.argfilter.cljs$core$IFn$_invoke$arity$2 = function($pred$$, $data$$) {
  return tech.v3.datatype.argops.argfilter.cljs$core$IFn$_invoke$arity$3($pred$$, null, $data$$);
};
tech.v3.datatype.argops.argfilter.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return $APP.cljs.core.deref($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($acc$$, $idx$$, $v$$) {
    $APP.cljs.core.truth_(tech.v3.datatype.argops.numeric_truthy($v$$)) && $acc$$.accept($idx$$);
    return $acc$$;
  }), tech.v3.datatype.argops.index_reducer(), $data$$));
};
tech.v3.datatype.argops.argfilter.cljs$lang$maxFixedArity = 3;
tech.v3.datatype.argops.arggroup = function($data$$) {
  var $afn$$ = function($_k$$) {
    return tech.v3.datatype.argops.index_reducer();
  };
  return $APP.cljs.core.persistent_BANG_(ham_fisted.api.update_values($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($acc$$, $idx$$, $v$$) {
    $acc$$.computeIfAbsent($v$$, $afn$$).accept($idx$$);
    return $acc$$;
  }), ham_fisted.api.mut_map.cljs$core$IFn$_invoke$arity$0(), $data$$), function($k$$, $v$$) {
    return $APP.cljs.core.deref($v$$);
  }));
};
tech.v3.datatype.argops.arglast_every = function($n_elems$jscomp$14_rdr$$, $pred$$) {
  var $G__76884_rdr__$1$$ = tech.v3.datatype.base.ensure_indexable($n_elems$jscomp$14_rdr$$);
  $n_elems$jscomp$14_rdr$$ = $APP.cljs.core.count($G__76884_rdr__$1$$);
  var $G__76887_temp__5823__auto__$$ = tech.v3.datatype.base.as_agetable($G__76884_rdr__$1$$);
  if ($APP.cljs.core.truth_($G__76887_temp__5823__auto__$$)) {
    for (var $idx$$ = 1, $G__76885_G__76888_max_idx$$ = 0, $G__76886_G__76889_max_value$$ = $G__76887_temp__5823__auto__$$[0];;) {
      if ($n_elems$jscomp$14_rdr$$ === $idx$$) {
        return $G__76885_G__76888_max_idx$$;
      }
      var $cur_val$$ = $G__76887_temp__5823__auto__$$[$idx$$], $found_QMARK_$$ = $pred$$.cljs$core$IFn$_invoke$arity$2 ? $pred$$.cljs$core$IFn$_invoke$arity$2($cur_val$$, $G__76886_G__76889_max_value$$) : $pred$$.call(null, $cur_val$$, $G__76886_G__76889_max_value$$);
      $G__76884_rdr__$1$$ = $idx$$ + 1;
      $G__76885_G__76888_max_idx$$ = $APP.cljs.core.truth_($found_QMARK_$$) ? $idx$$ : $G__76885_G__76888_max_idx$$;
      $G__76886_G__76889_max_value$$ = $APP.cljs.core.truth_($found_QMARK_$$) ? $cur_val$$ : $G__76886_G__76889_max_value$$;
      $idx$$ = $G__76884_rdr__$1$$;
    }
  } else {
    for ($idx$$ = 1, $G__76885_G__76888_max_idx$$ = 0, $G__76886_G__76889_max_value$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($G__76884_rdr__$1$$, 0);;) {
      if ($n_elems$jscomp$14_rdr$$ === $idx$$) {
        return $G__76885_G__76888_max_idx$$;
      }
      $cur_val$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($G__76884_rdr__$1$$, $idx$$);
      $found_QMARK_$$ = $pred$$.cljs$core$IFn$_invoke$arity$2 ? $pred$$.cljs$core$IFn$_invoke$arity$2($cur_val$$, $G__76886_G__76889_max_value$$) : $pred$$.call(null, $cur_val$$, $G__76886_G__76889_max_value$$);
      $G__76887_temp__5823__auto__$$ = $idx$$ + 1;
      $G__76885_G__76888_max_idx$$ = $APP.cljs.core.truth_($found_QMARK_$$) ? $idx$$ : $G__76885_G__76888_max_idx$$;
      $G__76886_G__76889_max_value$$ = $APP.cljs.core.truth_($found_QMARK_$$) ? $cur_val$$ : $G__76886_G__76889_max_value$$;
      $idx$$ = $G__76887_temp__5823__auto__$$;
    }
  }
};
tech.v3.datatype.argops.argmax = function($rdr$$) {
  return tech.v3.datatype.argops.arglast_every($rdr$$, $APP.cljs.core._GT_);
};
tech.v3.datatype.argops.argmin = function($rdr$$) {
  return tech.v3.datatype.argops.arglast_every($rdr$$, $APP.cljs.core._LT_);
};
tech.v3.datatype.argops.binary_search = function($var_args$$) {
  switch(arguments.length) {
    case 3:
      return tech.v3.datatype.argops.binary_search.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return tech.v3.datatype.argops.binary_search.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.datatype.argops.binary_search.cljs$core$IFn$_invoke$arity$3 = function($data$jscomp$300_data__$1$$, $target$$, $comp$jscomp$9_options$$) {
  $comp$jscomp$9_options$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($comp$jscomp$9_options$$, cljs$cst$5487$comparator, $APP.cljs.core.compare);
  $data$jscomp$300_data__$1$$ = tech.v3.datatype.base.ensure_indexable($data$jscomp$300_data__$1$$);
  for (var $comp__$1_mid$jscomp$1_n_elems$$ = $APP.cljs.core.count($data$jscomp$300_data__$1$$), $low$$ = $APP.cljs.core.long$(0), $G__76892_G__76894_high$$ = $comp__$1_mid$jscomp$1_n_elems$$;;) {
    if ($low$$ < $G__76892_G__76894_high$$) {
      $comp__$1_mid$jscomp$1_n_elems$$ = $low$$ + $APP.cljs.core.quot($G__76892_G__76894_high$$ - $low$$, 2);
      var $buf_data_compare_result$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($data$jscomp$300_data__$1$$, $comp__$1_mid$jscomp$1_n_elems$$);
      $buf_data_compare_result$$ = $comp$jscomp$9_options$$.cljs$core$IFn$_invoke$arity$2 ? $comp$jscomp$9_options$$.cljs$core$IFn$_invoke$arity$2($buf_data_compare_result$$, $target$$) : $comp$jscomp$9_options$$.call(null, $buf_data_compare_result$$, $target$$);
      0 === $buf_data_compare_result$$ ? $low$$ = $G__76892_G__76894_high$$ = $comp__$1_mid$jscomp$1_n_elems$$ : $buf_data_compare_result$$ < 0 && $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2($comp__$1_mid$jscomp$1_n_elems$$, $low$$) ? $low$$ = $comp__$1_mid$jscomp$1_n_elems$$ : $G__76892_G__76894_high$$ = $comp__$1_mid$jscomp$1_n_elems$$;
    } else {
      for (;;) {
        $buf_data_compare_result$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($data$jscomp$300_data__$1$$, $low$$);
        $comp__$1_mid$jscomp$1_n_elems$$ = $comp$jscomp$9_options$$.cljs$core$IFn$_invoke$arity$2 ? $comp$jscomp$9_options$$.cljs$core$IFn$_invoke$arity$2($target$$, $buf_data_compare_result$$) : $comp$jscomp$9_options$$.call(null, $target$$, $buf_data_compare_result$$);
        if ($comp__$1_mid$jscomp$1_n_elems$$ < 0 || 0 === $low$$) {
          return $low$$;
        }
        if ($comp__$1_mid$jscomp$1_n_elems$$ > 0) {
          return $low$$ + 1;
        }
        --$low$$;
      }
      break;
    }
  }
};
tech.v3.datatype.argops.binary_search.cljs$core$IFn$_invoke$arity$2 = function($data$$, $target$$) {
  return tech.v3.datatype.argops.binary_search.cljs$core$IFn$_invoke$arity$3($data$$, $target$$, null);
};
tech.v3.datatype.argops.binary_search.cljs$lang$maxFixedArity = 3;
var cljc = {java_time:{}};
cljc.java_time.extn = {};
cljc.java_time.extn.calendar_awareness = {};
cljc.java_time.extn.calendar_awareness.helpful_exception_messages_QMARK_ = function() {
  return null;
};
cljc.java_time.extn.calendar_awareness.helpful_exception_message = "Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue";
var module$node_modules$$js_joda$core$dist$js_joda = $APP.shadow.js.require(0, {});
var java = {time:{}};
java.time.goog$module$goog$object = $APP.goog.object;
java.time.Period = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "Period");
java.time.Instant = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "Instant");
java.time.Duration = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "Duration");
java.time.LocalDate = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "LocalDate");
java.time.LocalTime = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "LocalTime");
java.time.ZonedDateTime = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "ZonedDateTime");
java.time.LocalDateTime = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "LocalDateTime");
java.time.MonthDay = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "MonthDay");
java.time.Year = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "Year");
java.time.YearMonth = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "YearMonth");
java.time.ZoneId = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "ZoneId");
java.time.DayOfWeek = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "DayOfWeek");
java.time.Month = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "Month");
java.time.Clock = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "Clock");
java.time.ZoneOffset = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "ZoneOffset");
java.time.OffsetDateTime = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "OffsetDateTime");
java.time.OffsetTime = java.time.goog$module$goog$object.get(module$node_modules$$js_joda$core$dist$js_joda, "OffsetTime");
java.time.MonthDay.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.MonthDay.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.YearMonth.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.YearMonth.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.Year.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Year.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.ZonedDateTime.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.ZonedDateTime.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.OffsetTime.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.OffsetTime.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.Instant.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Instant.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.ZoneId.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.ZoneId.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.LocalDate.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.LocalDate.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.LocalTime.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.LocalTime.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.OffsetDateTime.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.OffsetDateTime.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.LocalDateTime.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.LocalDateTime.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.Month.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Month.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.Period.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Period.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.DayOfWeek.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.DayOfWeek.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.Duration.prototype.cljs$core$IComparable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Duration.prototype.cljs$core$IComparable$_compare$arity$2 = function($x$$, $y$$) {
  return this.compareTo($y$$);
};
java.time.MonthDay.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.MonthDay.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.YearMonth.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.YearMonth.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.Year.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Year.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.ZonedDateTime.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.ZonedDateTime.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.OffsetTime.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.OffsetTime.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.Instant.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Instant.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.ZoneId.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.ZoneId.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.LocalDate.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.LocalDate.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.LocalTime.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.LocalTime.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.OffsetDateTime.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.OffsetDateTime.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.LocalDateTime.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.LocalDateTime.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.Month.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Month.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.Period.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Period.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.DayOfWeek.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.DayOfWeek.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.Duration.prototype.cljs$core$IEquiv$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Duration.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($x$$, $y$$) {
  return this.equals($y$$);
};
java.time.MonthDay.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.MonthDay.prototype.cljs$core$IHash$_hash$arity$1 = function($JSCompiler_temp_const$jscomp$1860_x$$) {
  $JSCompiler_temp_const$jscomp$1860_x$$ = this.dayOfMonth();
  var $JSCompiler_inline_result$$ = this.month().value();
  return $JSCompiler_temp_const$jscomp$1860_x$$ + ($JSCompiler_inline_result$$ << 6);
};
java.time.YearMonth.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.YearMonth.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.year() ^ this.monthValue() << 27;
};
java.time.Year.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Year.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.value();
};
java.time.ZonedDateTime.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.ZonedDateTime.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.hashCode();
};
java.time.OffsetTime.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.OffsetTime.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.hashCode();
};
java.time.Instant.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Instant.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.hashCode();
};
java.time.ZoneId.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.ZoneId.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.hashCode();
};
java.time.LocalDate.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.LocalDate.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.hashCode();
};
java.time.LocalTime.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.LocalTime.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.hashCode();
};
java.time.OffsetDateTime.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.OffsetDateTime.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.hashCode();
};
java.time.LocalDateTime.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.LocalDateTime.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.hashCode();
};
java.time.Month.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Month.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.value();
};
java.time.Period.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Period.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.hashCode();
};
java.time.DayOfWeek.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.DayOfWeek.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.value();
};
java.time.Duration.prototype.cljs$core$IHash$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Duration.prototype.cljs$core$IHash$_hash$arity$1 = function($x$$) {
  return this.nano() * 51 + (this.seconds() ^ this.seconds() >>> 32 | 0);
};
cljc.java_time.local_date = {};
cljc.java_time.local_date.goog$module$goog$object = $APP.goog.object;
cljc.java_time.local_date.max = cljc.java_time.local_date.goog$module$goog$object.get(java.time.LocalDate, "MAX");
cljc.java_time.local_date.min = cljc.java_time.local_date.goog$module$goog$object.get(java.time.LocalDate, "MIN");
cljc.java_time.local_date.minus_weeks = function($this13154$$, $long13155$$) {
  return $this13154$$.minusWeeks($long13155$$);
};
cljc.java_time.local_date.plus_weeks = function($this13156$$, $long13157$$) {
  return $this13156$$.plusWeeks($long13157$$);
};
cljc.java_time.local_date.length_of_year = function($this13158$$) {
  return $this13158$$.lengthOfYear();
};
cljc.java_time.local_date.range = function($this13159$$, $java_time_temporal_TemporalField13160$$) {
  return $this13159$$.range($java_time_temporal_TemporalField13160$$);
};
cljc.java_time.local_date.get_era = function($this13161$$) {
  return $this13161$$.era();
};
cljc.java_time.local_date.of = function($G__13163$$, $G__13164$$, $G__13165$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.LocalDate, "of", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$G__13163$$, $G__13164$$, $G__13165$$], 0));
};
cljc.java_time.local_date.with_month = function($this13166$$, $int13167$$) {
  return $this13166$$.withMonth($int13167$$);
};
cljc.java_time.local_date.is_equal = function($this13168$$, $java_time_chrono_ChronoLocalDate13169$$) {
  return $this13168$$.isEqual($java_time_chrono_ChronoLocalDate13169$$);
};
cljc.java_time.local_date.get_year = function($this13170$$) {
  return $this13170$$.year();
};
cljc.java_time.local_date.to_epoch_day = function($this13171$$) {
  return $this13171$$.toEpochDay();
};
cljc.java_time.local_date.get_day_of_year = function($this13172$$) {
  return $this13172$$.dayOfYear();
};
cljc.java_time.local_date.plus = function($var_args$$) {
  switch(arguments.length) {
    case 3:
      return cljc.java_time.local_date.plus.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return cljc.java_time.local_date.plus.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.local_date.plus.cljs$core$IFn$_invoke$arity$3 = function($this13173$$, $long13174$$, $java_time_temporal_TemporalUnit13175$$) {
  return $this13173$$.plus($long13174$$, $java_time_temporal_TemporalUnit13175$$);
};
cljc.java_time.local_date.plus.cljs$core$IFn$_invoke$arity$2 = function($this13176$$, $java_time_temporal_TemporalAmount13177$$) {
  return $this13176$$.plus($java_time_temporal_TemporalAmount13177$$);
};
cljc.java_time.local_date.plus.cljs$lang$maxFixedArity = 3;
cljc.java_time.local_date.is_leap_year = function($this13178$$) {
  return $this13178$$.isLeapYear();
};
cljc.java_time.local_date.query = function($this13179$$, $java_time_temporal_TemporalQuery13180$$) {
  return $this13179$$.query($java_time_temporal_TemporalQuery13180$$);
};
cljc.java_time.local_date.get_day_of_week = function($this13181$$) {
  return $this13181$$.dayOfWeek();
};
cljc.java_time.local_date.to_string = function($this13182$$) {
  return $this13182$$.toString();
};
cljc.java_time.local_date.plus_months = function($this13183$$, $long13184$$) {
  return $this13183$$.plusMonths($long13184$$);
};
cljc.java_time.local_date.is_before = function($this13185$$, $java_time_chrono_ChronoLocalDate13186$$) {
  return $this13185$$.isBefore($java_time_chrono_ChronoLocalDate13186$$);
};
cljc.java_time.local_date.minus_months = function($this13187$$, $long13188$$) {
  return $this13187$$.minusMonths($long13188$$);
};
cljc.java_time.local_date.minus = function($var_args$$) {
  switch(arguments.length) {
    case 3:
      return cljc.java_time.local_date.minus.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return cljc.java_time.local_date.minus.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.local_date.minus.cljs$core$IFn$_invoke$arity$3 = function($this13189$$, $long13190$$, $java_time_temporal_TemporalUnit13191$$) {
  return $this13189$$.minus($long13190$$, $java_time_temporal_TemporalUnit13191$$);
};
cljc.java_time.local_date.minus.cljs$core$IFn$_invoke$arity$2 = function($this13192$$, $java_time_temporal_TemporalAmount13193$$) {
  return $this13192$$.minus($java_time_temporal_TemporalAmount13193$$);
};
cljc.java_time.local_date.minus.cljs$lang$maxFixedArity = 3;
cljc.java_time.local_date.plus_days = function($this13194$$, $long13195$$) {
  return $this13194$$.plusDays($long13195$$);
};
cljc.java_time.local_date.get_long = function($this13196$$, $java_time_temporal_TemporalField13197$$) {
  return $this13196$$.getLong($java_time_temporal_TemporalField13197$$);
};
cljc.java_time.local_date.with_year = function($this13198$$, $int13199$$) {
  return $this13198$$.withYear($int13199$$);
};
cljc.java_time.local_date.length_of_month = function($this13200$$) {
  return $this13200$$.lengthOfMonth();
};
cljc.java_time.local_date.until = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return cljc.java_time.local_date.until.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljc.java_time.local_date.until.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.local_date.until.cljs$core$IFn$_invoke$arity$2 = function($this13201$$, $java_time_chrono_ChronoLocalDate13202$$) {
  return $this13201$$.until($java_time_chrono_ChronoLocalDate13202$$);
};
cljc.java_time.local_date.until.cljs$core$IFn$_invoke$arity$3 = function($this13203$$, $java_time_temporal_Temporal13204$$, $java_time_temporal_TemporalUnit13205$$) {
  return $this13203$$.until($java_time_temporal_Temporal13204$$, $java_time_temporal_TemporalUnit13205$$);
};
cljc.java_time.local_date.until.cljs$lang$maxFixedArity = 3;
cljc.java_time.local_date.of_epoch_day = function($long13206$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.LocalDate, "ofEpochDay", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$long13206$$], 0));
};
cljc.java_time.local_date.with_day_of_month = function($this13207$$, $int13208$$) {
  return $this13207$$.withDayOfMonth($int13208$$);
};
cljc.java_time.local_date.get_day_of_month = function($this13209$$) {
  return $this13209$$.dayOfMonth();
};
cljc.java_time.local_date.from = function($java_time_temporal_TemporalAccessor13210$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.LocalDate, "from", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$java_time_temporal_TemporalAccessor13210$$], 0));
};
cljc.java_time.local_date.is_after = function($this13211$$, $java_time_chrono_ChronoLocalDate13212$$) {
  return $this13211$$.isAfter($java_time_chrono_ChronoLocalDate13212$$);
};
cljc.java_time.local_date.is_supported = function($this13213$$, $G__13214$$) {
  return $this13213$$.isSupported($G__13214$$);
};
cljc.java_time.local_date.minus_years = function($this13215$$, $long13216$$) {
  return $this13215$$.minusYears($long13216$$);
};
cljc.java_time.local_date.get_chronology = function($this13217$$) {
  return $this13217$$.chronology();
};
cljc.java_time.local_date.parse = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return cljc.java_time.local_date.parse.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return cljc.java_time.local_date.parse.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.local_date.parse.cljs$core$IFn$_invoke$arity$2 = function($java_lang_CharSequence13218$$, $java_time_format_DateTimeFormatter13219$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.LocalDate, "parse", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$java_lang_CharSequence13218$$, $java_time_format_DateTimeFormatter13219$$], 0));
};
cljc.java_time.local_date.parse.cljs$core$IFn$_invoke$arity$1 = function($java_lang_CharSequence13220$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.LocalDate, "parse", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$java_lang_CharSequence13220$$], 0));
};
cljc.java_time.local_date.parse.cljs$lang$maxFixedArity = 2;
cljc.java_time.local_date.hash_code = function($this13221$$) {
  return $this13221$$.hashCode();
};
cljc.java_time.local_date.adjust_into = function($this13222$$, $java_time_temporal_Temporal13223$$) {
  return $this13222$$.adjustInto($java_time_temporal_Temporal13223$$);
};
cljc.java_time.local_date.with$ = function($var_args$$) {
  switch(arguments.length) {
    case 3:
      return cljc.java_time.local_date.with$.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return cljc.java_time.local_date.with$.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.local_date.with$.cljs$core$IFn$_invoke$arity$3 = function($this13224$$, $java_time_temporal_TemporalField13225$$, $long13226$$) {
  return $this13224$$.with($java_time_temporal_TemporalField13225$$, $long13226$$);
};
cljc.java_time.local_date.with$.cljs$core$IFn$_invoke$arity$2 = function($this13227$$, $java_time_temporal_TemporalAdjuster13228$$) {
  return $this13227$$.with($java_time_temporal_TemporalAdjuster13228$$);
};
cljc.java_time.local_date.with$.cljs$lang$maxFixedArity = 3;
cljc.java_time.local_date.now = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return cljc.java_time.local_date.now.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljc.java_time.local_date.now.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.local_date.now.cljs$core$IFn$_invoke$arity$0 = function() {
  return $APP.cljs.core.js_invoke(java.time.LocalDate, "now");
};
cljc.java_time.local_date.now.cljs$core$IFn$_invoke$arity$1 = function($G__13230$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.LocalDate, "now", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$G__13230$$], 0));
};
cljc.java_time.local_date.now.cljs$lang$maxFixedArity = 1;
cljc.java_time.local_date.at_start_of_day = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return cljc.java_time.local_date.at_start_of_day.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return cljc.java_time.local_date.at_start_of_day.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.local_date.at_start_of_day.cljs$core$IFn$_invoke$arity$2 = function($this13231$$, $java_time_ZoneId13232$$) {
  return $this13231$$.atStartOfDay($java_time_ZoneId13232$$);
};
cljc.java_time.local_date.at_start_of_day.cljs$core$IFn$_invoke$arity$1 = function($this13233$$) {
  return $this13233$$.atStartOfDay();
};
cljc.java_time.local_date.at_start_of_day.cljs$lang$maxFixedArity = 2;
cljc.java_time.local_date.get_month_value = function($this13234$$) {
  return $this13234$$.monthValue();
};
cljc.java_time.local_date.with_day_of_year = function($this13235$$, $int13236$$) {
  return $this13235$$.withDayOfYear($int13236$$);
};
cljc.java_time.local_date.compare_to = function($this13237$$, $java_time_chrono_ChronoLocalDate13238$$) {
  return $this13237$$.compareTo($java_time_chrono_ChronoLocalDate13238$$);
};
cljc.java_time.local_date.get_month = function($this13239$$) {
  return $this13239$$.month();
};
cljc.java_time.local_date.of_year_day = function($int13240$$, $int13241$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.LocalDate, "ofYearDay", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$int13240$$, $int13241$$], 0));
};
cljc.java_time.local_date.get = function($this13242$$, $java_time_temporal_TemporalField13243$$) {
  return $this13242$$.get($java_time_temporal_TemporalField13243$$);
};
cljc.java_time.local_date.equals = function($this13244$$, $java_lang_Object13245$$) {
  return $this13244$$.equals($java_lang_Object13245$$);
};
cljc.java_time.local_date.at_time = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return cljc.java_time.local_date.at_time.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljc.java_time.local_date.at_time.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljc.java_time.local_date.at_time.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 3:
      return cljc.java_time.local_date.at_time.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.local_date.at_time.cljs$core$IFn$_invoke$arity$2 = function($this13246$$, $G__13247$$) {
  return $this13246$$.atTime($G__13247$$);
};
cljc.java_time.local_date.at_time.cljs$core$IFn$_invoke$arity$4 = function($this13248$$, $int13249$$, $int13250$$, $int13251$$) {
  return $this13248$$.atTime($int13249$$, $int13250$$, $int13251$$);
};
cljc.java_time.local_date.at_time.cljs$core$IFn$_invoke$arity$5 = function($this13252$$, $int13253$$, $int13254$$, $int13255$$, $int13256$$) {
  return $this13252$$.atTime($int13253$$, $int13254$$, $int13255$$, $int13256$$);
};
cljc.java_time.local_date.at_time.cljs$core$IFn$_invoke$arity$3 = function($this13257$$, $int13258$$, $int13259$$) {
  return $this13257$$.atTime($int13258$$, $int13259$$);
};
cljc.java_time.local_date.at_time.cljs$lang$maxFixedArity = 5;
cljc.java_time.local_date.format = function($this13260$$, $java_time_format_DateTimeFormatter13261$$) {
  return $this13260$$.format($java_time_format_DateTimeFormatter13261$$);
};
cljc.java_time.local_date.plus_years = function($this13262$$, $long13263$$) {
  return $this13262$$.plusYears($long13263$$);
};
cljc.java_time.local_date.minus_days = function($this13264$$, $long13265$$) {
  return $this13264$$.minusDays($long13265$$);
};
cljc.java_time.instant = {};
cljc.java_time.instant.goog$module$goog$object = $APP.goog.object;
cljc.java_time.instant.min = cljc.java_time.instant.goog$module$goog$object.get(java.time.Instant, "MIN");
cljc.java_time.instant.epoch = cljc.java_time.instant.goog$module$goog$object.get(java.time.Instant, "EPOCH");
cljc.java_time.instant.max = cljc.java_time.instant.goog$module$goog$object.get(java.time.Instant, "MAX");
cljc.java_time.instant.truncated_to = function($this14122$$, $java_time_temporal_TemporalUnit14123$$) {
  return $this14122$$.truncatedTo($java_time_temporal_TemporalUnit14123$$);
};
cljc.java_time.instant.range = function($e__76867__auto___this14124$$, $java_time_temporal_TemporalField14125$$) {
  try {
    return $e__76867__auto___this14124$$.range($java_time_temporal_TemporalField14125$$);
  } catch ($e76923$$) {
    if ($e76923$$ instanceof Error) {
      throw $e__76867__auto___this14124$$ = $e76923$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto___this14124$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto___this14124$$, "stack"))].join(""));
    }
    throw $e76923$$;
  }
};
cljc.java_time.instant.of_epoch_second = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return cljc.java_time.instant.of_epoch_second.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return cljc.java_time.instant.of_epoch_second.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.instant.of_epoch_second.cljs$core$IFn$_invoke$arity$2 = function($long14126$$, $long14127$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.Instant, "ofEpochSecond", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$long14126$$, $long14127$$], 0));
};
cljc.java_time.instant.of_epoch_second.cljs$core$IFn$_invoke$arity$1 = function($long14128$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.Instant, "ofEpochSecond", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$long14128$$], 0));
};
cljc.java_time.instant.of_epoch_second.cljs$lang$maxFixedArity = 2;
cljc.java_time.instant.at_offset = function($this14129$$, $java_time_ZoneOffset14130$$) {
  return $this14129$$.atOffset($java_time_ZoneOffset14130$$);
};
cljc.java_time.instant.minus_millis = function($this14131$$, $long14132$$) {
  return $this14131$$.minusMillis($long14132$$);
};
cljc.java_time.instant.get_nano = function($this14133$$) {
  return $this14133$$.nano();
};
cljc.java_time.instant.plus_millis = function($this14134$$, $long14135$$) {
  return $this14134$$.plusMillis($long14135$$);
};
cljc.java_time.instant.minus_seconds = function($this14136$$, $long14137$$) {
  return $this14136$$.minusSeconds($long14137$$);
};
cljc.java_time.instant.plus_nanos = function($this14138$$, $long14139$$) {
  return $this14138$$.plusNanos($long14139$$);
};
cljc.java_time.instant.plus = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return cljc.java_time.instant.plus.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljc.java_time.instant.plus.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.instant.plus.cljs$core$IFn$_invoke$arity$2 = function($e__76867__auto__$$, $java_time_temporal_TemporalAmount14141$$) {
  try {
    return $e__76867__auto__$$.plus($java_time_temporal_TemporalAmount14141$$);
  } catch ($e76947$$) {
    if ($e76947$$ instanceof Error) {
      throw $e__76867__auto__$$ = $e76947$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "stack"))].join(""));
    }
    throw $e76947$$;
  }
};
cljc.java_time.instant.plus.cljs$core$IFn$_invoke$arity$3 = function($e__76867__auto__$$, $long14143$$, $java_time_temporal_TemporalUnit14144$$) {
  try {
    return $e__76867__auto__$$.plus($long14143$$, $java_time_temporal_TemporalUnit14144$$);
  } catch ($e76951$$) {
    if ($e76951$$ instanceof Error) {
      throw $e__76867__auto__$$ = $e76951$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "stack"))].join(""));
    }
    throw $e76951$$;
  }
};
cljc.java_time.instant.plus.cljs$lang$maxFixedArity = 3;
cljc.java_time.instant.query = function($this14145$$, $java_time_temporal_TemporalQuery14146$$) {
  return $this14145$$.query($java_time_temporal_TemporalQuery14146$$);
};
cljc.java_time.instant.to_string = function($this14147$$) {
  return $this14147$$.toString();
};
cljc.java_time.instant.is_before = function($this14148$$, $java_time_Instant14149$$) {
  return $this14148$$.isBefore($java_time_Instant14149$$);
};
cljc.java_time.instant.minus = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return cljc.java_time.instant.minus.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljc.java_time.instant.minus.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.instant.minus.cljs$core$IFn$_invoke$arity$2 = function($e__76867__auto__$$, $java_time_temporal_TemporalAmount14151$$) {
  try {
    return $e__76867__auto__$$.minus($java_time_temporal_TemporalAmount14151$$);
  } catch ($e76956$$) {
    if ($e76956$$ instanceof Error) {
      throw $e__76867__auto__$$ = $e76956$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "stack"))].join(""));
    }
    throw $e76956$$;
  }
};
cljc.java_time.instant.minus.cljs$core$IFn$_invoke$arity$3 = function($e__76867__auto__$$, $long14153$$, $java_time_temporal_TemporalUnit14154$$) {
  try {
    return $e__76867__auto__$$.minus($long14153$$, $java_time_temporal_TemporalUnit14154$$);
  } catch ($e76957$$) {
    if ($e76957$$ instanceof Error) {
      throw $e__76867__auto__$$ = $e76957$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "stack"))].join(""));
    }
    throw $e76957$$;
  }
};
cljc.java_time.instant.minus.cljs$lang$maxFixedArity = 3;
cljc.java_time.instant.at_zone = function($this14155$$, $java_time_ZoneId14156$$) {
  return $this14155$$.atZone($java_time_ZoneId14156$$);
};
cljc.java_time.instant.of_epoch_milli = function($long14157$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.Instant, "ofEpochMilli", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$long14157$$], 0));
};
cljc.java_time.instant.get_long = function($this14158$$, $java_time_temporal_TemporalField14159$$) {
  return $this14158$$.getLong($java_time_temporal_TemporalField14159$$);
};
cljc.java_time.instant.until = function($e__76867__auto__$$, $java_time_temporal_Temporal14161$$, $java_time_temporal_TemporalUnit14162$$) {
  try {
    return $e__76867__auto__$$.until($java_time_temporal_Temporal14161$$, $java_time_temporal_TemporalUnit14162$$);
  } catch ($e76961$$) {
    if ($e76961$$ instanceof Error) {
      throw $e__76867__auto__$$ = $e76961$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "stack"))].join(""));
    }
    throw $e76961$$;
  }
};
cljc.java_time.instant.from = function($e__76867__auto__$$) {
  try {
    return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.Instant, "from", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$e__76867__auto__$$], 0));
  } catch ($e76965$$) {
    if ($e76965$$ instanceof Error) {
      throw $e__76867__auto__$$ = $e76965$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "stack"))].join(""));
    }
    throw $e76965$$;
  }
};
cljc.java_time.instant.is_after = function($this14164$$, $java_time_Instant14165$$) {
  return $this14164$$.isAfter($java_time_Instant14165$$);
};
cljc.java_time.instant.minus_nanos = function($this14166$$, $long14167$$) {
  return $this14166$$.minusNanos($long14167$$);
};
cljc.java_time.instant.is_supported = function($this14168$$, $G__14169$$) {
  return $this14168$$.isSupported($G__14169$$);
};
cljc.java_time.instant.parse = function($java_lang_CharSequence14170$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.Instant, "parse", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$java_lang_CharSequence14170$$], 0));
};
cljc.java_time.instant.hash_code = function($this14171$$) {
  return $this14171$$.hashCode();
};
cljc.java_time.instant.adjust_into = function($e__76867__auto__$$, $java_time_temporal_Temporal14173$$) {
  try {
    return $e__76867__auto__$$.adjustInto($java_time_temporal_Temporal14173$$);
  } catch ($e76972$$) {
    if ($e76972$$ instanceof Error) {
      throw $e__76867__auto__$$ = $e76972$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "stack"))].join(""));
    }
    throw $e76972$$;
  }
};
cljc.java_time.instant.with$ = function($var_args$$) {
  switch(arguments.length) {
    case 3:
      return cljc.java_time.instant.with$.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return cljc.java_time.instant.with$.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.instant.with$.cljs$core$IFn$_invoke$arity$3 = function($e__76867__auto__$$, $java_time_temporal_TemporalField14175$$, $long14176$$) {
  try {
    return $e__76867__auto__$$.with($java_time_temporal_TemporalField14175$$, $long14176$$);
  } catch ($e76976$$) {
    if ($e76976$$ instanceof Error) {
      throw $e__76867__auto__$$ = $e76976$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "stack"))].join(""));
    }
    throw $e76976$$;
  }
};
cljc.java_time.instant.with$.cljs$core$IFn$_invoke$arity$2 = function($e__76867__auto__$$, $java_time_temporal_TemporalAdjuster14178$$) {
  try {
    return $e__76867__auto__$$.with($java_time_temporal_TemporalAdjuster14178$$);
  } catch ($e76979$$) {
    if ($e76979$$ instanceof Error) {
      throw $e__76867__auto__$$ = $e76979$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "stack"))].join(""));
    }
    throw $e76979$$;
  }
};
cljc.java_time.instant.with$.cljs$lang$maxFixedArity = 3;
cljc.java_time.instant.now = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return cljc.java_time.instant.now.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljc.java_time.instant.now.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljc.java_time.instant.now.cljs$core$IFn$_invoke$arity$0 = function() {
  return $APP.cljs.core.js_invoke(java.time.Instant, "now");
};
cljc.java_time.instant.now.cljs$core$IFn$_invoke$arity$1 = function($java_time_Clock14179$$) {
  return $APP.cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(java.time.Instant, "now", $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$java_time_Clock14179$$], 0));
};
cljc.java_time.instant.now.cljs$lang$maxFixedArity = 1;
cljc.java_time.instant.to_epoch_milli = function($this14180$$) {
  return $this14180$$.toEpochMilli();
};
cljc.java_time.instant.get_epoch_second = function($this14181$$) {
  return $this14181$$.epochSecond();
};
cljc.java_time.instant.compare_to = function($this14182$$, $java_time_Instant14183$$) {
  return $this14182$$.compareTo($java_time_Instant14183$$);
};
cljc.java_time.instant.plus_seconds = function($this14184$$, $long14185$$) {
  return $this14184$$.plusSeconds($long14185$$);
};
cljc.java_time.instant.get = function($e__76867__auto__$$, $java_time_temporal_TemporalField14187$$) {
  try {
    return $e__76867__auto__$$.get($java_time_temporal_TemporalField14187$$);
  } catch ($e76986$$) {
    if ($e76986$$ instanceof Error) {
      throw $e__76867__auto__$$ = $e76986$$, Error(["Hi there! - It looks like you might be trying to do something with a java.time.Instant that would require it to be 'calendar-aware',\n   but in fact Instant has no facility with working with years, months, days etc. Think of it as just \n   a milli/nanosecond offset from the UNIX epoch.\n   \n   To get around this, consider converting the Instant to a \n   ZonedDateTime first or for formatting/parsing specifically, you might add a zone to your formatter.\n    see https://stackoverflow.com/a/27483371/1700930. \n    \n    You can disable these custom exceptions by setting -Dcljc.java-time.disable-helpful-exception-messages\x3dtrue\n original message ", 
      $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "message")), "\n cause of exception: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljc.java_time.instant.goog$module$goog$object.get($e__76867__auto__$$, "stack"))].join(""));
    }
    throw $e76986$$;
  }
};
cljc.java_time.instant.equals = function($this14188$$, $java_lang_Object14189$$) {
  return $this14188$$.equals($java_lang_Object14189$$);
};
tech.v3.datatype.datetime = {};
java.time.LocalDate.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.LocalDate.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($item$$) {
  return cljs$cst$5491$local_date;
};
java.time.Instant.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
java.time.Instant.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($item$$) {
  return $APP.cljs$cst$5492$instant;
};
tech.v3.datatype.datetime.datetime_datatype_QMARK_ = function($JSCompiler_inline_result$jscomp$1864_dtype$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.truth_, $fexpr__77009$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$5492$instant, null, cljs$cst$5491$local_date, null], null), null);
  $JSCompiler_inline_result$jscomp$1864_dtype$$ = $fexpr__77009$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__77009$$.cljs$core$IFn$_invoke$arity$1($JSCompiler_inline_result$jscomp$1864_dtype$$) : $fexpr__77009$$.call(null, $JSCompiler_inline_result$jscomp$1864_dtype$$);
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$1864_dtype$$) ? !0 : !1;
};
tech.v3.datatype.datetime.local_date = function() {
  return cljc.java_time.local_date.now.cljs$core$IFn$_invoke$arity$0();
};
tech.v3.datatype.datetime.local_date__GT_epoch_days = function($ld$$) {
  return cljc.java_time.local_date.to_epoch_day($ld$$);
};
tech.v3.datatype.datetime.epoch_days__GT_local_date = function($ed$$) {
  return cljc.java_time.local_date.of_epoch_day($ed$$);
};
tech.v3.datatype.datetime.instant = function() {
  return cljc.java_time.instant.now.cljs$core$IFn$_invoke$arity$0();
};
tech.v3.datatype.datetime.epoch_milliseconds__GT_instant = function($em$$) {
  return cljc.java_time.instant.of_epoch_milli($em$$);
};
tech.v3.datatype.datetime.instant__GT_epoch_milliseconds = function($in$$$) {
  return cljc.java_time.instant.to_epoch_milli($in$$$);
};
tech.v3.datatype.datetime.epoch_microseconds__GT_instant = function($em$$) {
  return cljc.java_time.instant.of_epoch_milli($em$$ / 1000);
};
tech.v3.datatype.datetime.instant__GT_epoch_microseconds = function($in$$$) {
  return 1000 * cljc.java_time.instant.to_epoch_milli($in$$$);
};
tech.v3.dataset = {};
tech.v3.dataset.string_table = {};
tech.v3.dataset.string_table.intern_string = function($strval$$, $str_table$$) {
  var $temp__5823__auto__$$ = $str_table$$.get($strval$$);
  if ($APP.cljs.core.truth_($temp__5823__auto__$$)) {
    return $temp__5823__auto__$$;
  }
  $str_table$$.set($strval$$, $strval$$);
  return $strval$$;
};
tech.v3.dataset.string_table.StringTable = function($container$$, $str_table$$, $metadata$$) {
  this.container = $container$$;
  this.str_table = $str_table$$;
  this.metadata = $metadata$$;
  this.cljs$lang$protocol_mask$partition0$ = 2148401171;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
tech.v3.dataset.string_table.StringTable.prototype.cljs$core$IIndexed$_nth$arity$2 = function($_this$$, $n$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.container, $n$$);
};
tech.v3.dataset.string_table.StringTable.prototype.cljs$core$IIndexed$_nth$arity$3 = function($_this$$, $n$$, $not_found$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3(this.container, $n$$, $not_found$$);
};
tech.v3.dataset.string_table.StringTable.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($_array$$, $writer$$, $_opts$$) {
  return $APP.cljs.core._write($writer$$, ["#string-table", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.take.cljs$core$IFn$_invoke$arity$2(20, $APP.cljs.core.seq(this.container)))].join(""));
};
tech.v3.dataset.string_table.StringTable.prototype.cljs$core$IMeta$_meta$arity$1 = function($_this$$) {
  return this.metadata;
};
tech.v3.dataset.string_table.StringTable.prototype.cljs$core$ICloneable$_clone$arity$1 = function($_this$$) {
  return $APP.cljs.core.clone(this.container);
};
tech.v3.dataset.string_table.StringTable.prototype.cljs$core$ICounted$_count$arity$1 = function($_this$$) {
  return $APP.cljs.core.count(this.container);
};
tech.v3.dataset.string_table.StringTable.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.string_table.StringTable.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($_this$$) {
  return $APP.cljs$cst$198$string;
};
tech.v3.dataset.string_table.StringTable.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
  return $APP.cljs.core._reduce(this.container, $rfn$$);
};
tech.v3.dataset.string_table.StringTable.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $acc$$) {
  return $APP.cljs.core._reduce(this.container, $rfn$$, $acc$$);
};
tech.v3.dataset.string_table.StringTable.prototype.tech$v3$datatype$protocols$PListLike$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.string_table.StringTable.prototype.tech$v3$datatype$protocols$PListLike$_add$arity$2 = function($this$$$, $val$$) {
  $this$$$ = $APP.cljs.core.truth_($val$$) ? tech.v3.dataset.string_table.intern_string($val$$, this.str_table) : $val$$;
  tech.v3.datatype.protocols._add(this.container, $this$$$);
  return this;
};
tech.v3.dataset.string_table.StringTable.prototype.tech$v3$datatype$protocols$PListLike$_add_all$arity$2 = function($this$$$, $data$$) {
  var $this$__$1$$ = this;
  tech.v3.datatype.iterate_BANG_(function($p1__77011_SHARP_$$) {
    return $this$__$1$$.tech$v3$datatype$protocols$PListLike$_add$arity$2(null, $p1__77011_SHARP_$$);
  }, $data$$);
  return $this$__$1$$;
};
tech.v3.dataset.string_table.StringTable.prototype.tech$v3$datatype$protocols$PListLike$_ensure_capacity$arity$2 = function($_this$$, $buflen$$) {
  return tech.v3.datatype.protocols._ensure_capacity(this.container, $buflen$$);
};
tech.v3.dataset.string_table.StringTable.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.string_table.StringTable.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($_this$$, $off$$, $len$$) {
  return new tech.v3.dataset.string_table.StringTable(tech.v3.datatype.sub_buffer.cljs$core$IFn$_invoke$arity$variadic(this.container, $off$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$len$$], 0)), this.str_table, this.metadata);
};
tech.v3.dataset.string_table.StringTable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($_this$$, $metadata__$1$$) {
  return new tech.v3.dataset.string_table.StringTable(this.container, this.str_table, $metadata__$1$$);
};
tech.v3.dataset.string_table.StringTable.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
tech.v3.dataset.string_table.StringTable.prototype.apply = function($self__$$, $args77012$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args77012$$)));
};
tech.v3.dataset.string_table.StringTable.prototype.cljs$core$IFn$_invoke$arity$1 = function($idx$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this, $idx$$);
};
tech.v3.dataset.string_table.StringTable.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$5493$container, cljs$cst$5494$str_table, cljs$cst$5476$metadata], null);
};
tech.v3.dataset.string_table.StringTable.cljs$lang$type = !0;
tech.v3.dataset.string_table.StringTable.cljs$lang$ctorStr = "tech.v3.dataset.string-table/StringTable";
tech.v3.dataset.string_table.StringTable.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.dataset.string-table/StringTable");
};
tech.v3.dataset.string_table.__GT_StringTable = function($container$$, $str_table$$, $metadata$$) {
  return new tech.v3.dataset.string_table.StringTable($container$$, $str_table$$, $metadata$$);
};
tech.v3.dataset.string_table.make_string_table = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$314_argseq__5756__auto__$$ = [], $len__5749__auto___77021$$ = arguments.length, $i__5750__auto___77022$$ = 0;;) {
    if ($i__5750__auto___77022$$ < $len__5749__auto___77021$$) {
      $args__5755__auto__$jscomp$314_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77022$$]), $i__5750__auto___77022$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$314_argseq__5756__auto__$$ = 0 < $args__5755__auto__$jscomp$314_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$314_argseq__5756__auto__$$.slice(0), 0, null) : null;
  return tech.v3.dataset.string_table.make_string_table.cljs$core$IFn$_invoke$arity$variadic($args__5755__auto__$jscomp$314_argseq__5756__auto__$$);
};
tech.v3.dataset.string_table.make_string_table.cljs$core$IFn$_invoke$arity$variadic = function($p__77015_strdata$$) {
  $p__77015_strdata$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__77015_strdata$$, 0, null);
  var $retval$$ = new tech.v3.dataset.string_table.StringTable(tech.v3.datatype.make_list($APP.cljs$cst$198$string), new Map(), null);
  $APP.cljs.core.truth_($p__77015_strdata$$) && $retval$$.tech$v3$datatype$protocols$PListLike$_add_all$arity$2(null, $p__77015_strdata$$);
  return $retval$$;
};
tech.v3.dataset.string_table.make_string_table.cljs$lang$maxFixedArity = 0;
tech.v3.dataset.string_table.make_string_table.cljs$lang$applyTo = function($seq77014$$) {
  return this.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.seq($seq77014$$));
};
tech.v3.dataset.protocols = {};
tech.v3.dataset.protocols.PRowCount = function() {
};
var tech$v3$dataset$protocols$PRowCount$_row_count$dyn_77024 = function($this$$$) {
  var $m__5372__auto__$jscomp$816_m__5374__auto__$$ = tech.v3.dataset.protocols._row_count[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$816_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$816_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$816_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$816_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$816_m__5374__auto__$$ = tech.v3.dataset.protocols._row_count._;
  if ($m__5372__auto__$jscomp$816_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$816_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$816_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$816_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("PRowCount.-row-count", $this$$$);
};
tech.v3.dataset.protocols._row_count = function($this$$$) {
  return $this$$$ != null && $this$$$.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1 != null ? $this$$$.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1($this$$$) : tech$v3$dataset$protocols$PRowCount$_row_count$dyn_77024($this$$$);
};
tech.v3.dataset.protocols.PColumnCount = function() {
};
var tech$v3$dataset$protocols$PColumnCount$_column_count$dyn_77025 = function($this$$$) {
  var $m__5372__auto__$jscomp$817_m__5374__auto__$$ = tech.v3.dataset.protocols._column_count[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$817_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$817_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$817_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$817_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$817_m__5374__auto__$$ = tech.v3.dataset.protocols._column_count._;
  if ($m__5372__auto__$jscomp$817_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$817_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$817_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$817_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("PColumnCount.-column-count", $this$$$);
};
tech.v3.dataset.protocols._column_count = function($this$$$) {
  return $this$$$ != null && $this$$$.tech$v3$dataset$protocols$PColumnCount$_column_count$arity$1 != null ? $this$$$.tech$v3$dataset$protocols$PColumnCount$_column_count$arity$1($this$$$) : tech$v3$dataset$protocols$PColumnCount$_column_count$dyn_77025($this$$$);
};
tech.v3.dataset.protocols.PMissing = function() {
};
var tech$v3$dataset$protocols$PMissing$_missing$dyn_77026 = function($this$$$) {
  var $m__5372__auto__$jscomp$818_m__5374__auto__$$ = tech.v3.dataset.protocols._missing[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$818_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$818_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$818_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$818_m__5374__auto__$$.call(null, $this$$$);
  }
  $m__5372__auto__$jscomp$818_m__5374__auto__$$ = tech.v3.dataset.protocols._missing._;
  if ($m__5372__auto__$jscomp$818_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$818_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$818_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($this$$$) : $m__5372__auto__$jscomp$818_m__5374__auto__$$.call(null, $this$$$);
  }
  throw $APP.cljs.core.missing_protocol("PMissing.-missing", $this$$$);
};
tech.v3.dataset.protocols._missing = function($this$$$) {
  return $this$$$ != null && $this$$$.tech$v3$dataset$protocols$PMissing$_missing$arity$1 != null ? $this$$$.tech$v3$dataset$protocols$PMissing$_missing$arity$1($this$$$) : tech$v3$dataset$protocols$PMissing$_missing$dyn_77026($this$$$);
};
tech.v3.dataset.protocols.PSelectRows = function() {
};
var tech$v3$dataset$protocols$PSelectRows$_select_rows$dyn_77027 = function($this$$$, $rowidxs$$) {
  var $m__5372__auto__$jscomp$819_m__5374__auto__$$ = tech.v3.dataset.protocols._select_rows[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$819_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$819_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$819_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $rowidxs$$) : $m__5372__auto__$jscomp$819_m__5374__auto__$$.call(null, $this$$$, $rowidxs$$);
  }
  $m__5372__auto__$jscomp$819_m__5374__auto__$$ = tech.v3.dataset.protocols._select_rows._;
  if ($m__5372__auto__$jscomp$819_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$819_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$819_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $rowidxs$$) : $m__5372__auto__$jscomp$819_m__5374__auto__$$.call(null, $this$$$, $rowidxs$$);
  }
  throw $APP.cljs.core.missing_protocol("PSelectRows.-select-rows", $this$$$);
};
tech.v3.dataset.protocols._select_rows = function($this$$$, $rowidxs$$) {
  return $this$$$ != null && $this$$$.tech$v3$dataset$protocols$PSelectRows$_select_rows$arity$2 != null ? $this$$$.tech$v3$dataset$protocols$PSelectRows$_select_rows$arity$2($this$$$, $rowidxs$$) : tech$v3$dataset$protocols$PSelectRows$_select_rows$dyn_77027($this$$$, $rowidxs$$);
};
tech.v3.dataset.protocols.PSelectColumns = function() {
};
var tech$v3$dataset$protocols$PSelectColumns$_select_columns$dyn_77028 = function($this$$$, $colnames$$) {
  var $m__5372__auto__$jscomp$820_m__5374__auto__$$ = tech.v3.dataset.protocols._select_columns[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$820_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$820_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$820_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $colnames$$) : $m__5372__auto__$jscomp$820_m__5374__auto__$$.call(null, $this$$$, $colnames$$);
  }
  $m__5372__auto__$jscomp$820_m__5374__auto__$$ = tech.v3.dataset.protocols._select_columns._;
  if ($m__5372__auto__$jscomp$820_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$820_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$820_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $colnames$$) : $m__5372__auto__$jscomp$820_m__5374__auto__$$.call(null, $this$$$, $colnames$$);
  }
  throw $APP.cljs.core.missing_protocol("PSelectColumns.-select-columns", $this$$$);
};
tech.v3.dataset.protocols._select_columns = function($this$$$, $colnames$$) {
  return $this$$$ != null && $this$$$.tech$v3$dataset$protocols$PSelectColumns$_select_columns$arity$2 != null ? $this$$$.tech$v3$dataset$protocols$PSelectColumns$_select_columns$arity$2($this$$$, $colnames$$) : tech$v3$dataset$protocols$PSelectColumns$_select_columns$dyn_77028($this$$$, $colnames$$);
};
tech.v3.dataset.protocols.PColumn = function() {
};
var tech$v3$dataset$protocols$PColumn$_is_column_QMARK_$dyn_77029 = function($col$$) {
  var $m__5372__auto__$jscomp$821_m__5374__auto__$$ = tech.v3.dataset.protocols._is_column_QMARK_[$APP.goog.typeOf($col$$ == null ? null : $col$$)];
  if ($m__5372__auto__$jscomp$821_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$821_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$821_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($col$$) : $m__5372__auto__$jscomp$821_m__5374__auto__$$.call(null, $col$$);
  }
  $m__5372__auto__$jscomp$821_m__5374__auto__$$ = tech.v3.dataset.protocols._is_column_QMARK_._;
  if ($m__5372__auto__$jscomp$821_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$821_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$821_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($col$$) : $m__5372__auto__$jscomp$821_m__5374__auto__$$.call(null, $col$$);
  }
  throw $APP.cljs.core.missing_protocol("PColumn.-is-column?", $col$$);
};
tech.v3.dataset.protocols._is_column_QMARK_ = function($col$$) {
  return $col$$ != null && $col$$.tech$v3$dataset$protocols$PColumn$_is_column_QMARK_$arity$1 != null ? $col$$.tech$v3$dataset$protocols$PColumn$_is_column_QMARK_$arity$1($col$$) : tech$v3$dataset$protocols$PColumn$_is_column_QMARK_$dyn_77029($col$$);
};
var tech$v3$dataset$protocols$PColumn$_column_buffer$dyn_77030 = function($col$$) {
  var $m__5372__auto__$jscomp$822_m__5374__auto__$$ = tech.v3.dataset.protocols._column_buffer[$APP.goog.typeOf($col$$ == null ? null : $col$$)];
  if ($m__5372__auto__$jscomp$822_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$822_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$822_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($col$$) : $m__5372__auto__$jscomp$822_m__5374__auto__$$.call(null, $col$$);
  }
  $m__5372__auto__$jscomp$822_m__5374__auto__$$ = tech.v3.dataset.protocols._column_buffer._;
  if ($m__5372__auto__$jscomp$822_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$822_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$822_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($col$$) : $m__5372__auto__$jscomp$822_m__5374__auto__$$.call(null, $col$$);
  }
  throw $APP.cljs.core.missing_protocol("PColumn.-column-buffer", $col$$);
};
tech.v3.dataset.protocols._column_buffer = function($col$$) {
  return $col$$ != null && $col$$.tech$v3$dataset$protocols$PColumn$_column_buffer$arity$1 != null ? $col$$.tech$v3$dataset$protocols$PColumn$_column_buffer$arity$1($col$$) : tech$v3$dataset$protocols$PColumn$_column_buffer$dyn_77030($col$$);
};
tech.v3.dataset.protocols.PDataset = function() {
};
var tech$v3$dataset$protocols$PDataset$_column$dyn_77031 = function($ds$$, $colname$$) {
  var $m__5372__auto__$jscomp$823_m__5374__auto__$$ = tech.v3.dataset.protocols._column[$APP.goog.typeOf($ds$$ == null ? null : $ds$$)];
  if ($m__5372__auto__$jscomp$823_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$823_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$823_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($ds$$, $colname$$) : $m__5372__auto__$jscomp$823_m__5374__auto__$$.call(null, $ds$$, $colname$$);
  }
  $m__5372__auto__$jscomp$823_m__5374__auto__$$ = tech.v3.dataset.protocols._column._;
  if ($m__5372__auto__$jscomp$823_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$823_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$823_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($ds$$, $colname$$) : $m__5372__auto__$jscomp$823_m__5374__auto__$$.call(null, $ds$$, $colname$$);
  }
  throw $APP.cljs.core.missing_protocol("PDataset.-column", $ds$$);
};
tech.v3.dataset.protocols._column = function($ds$$, $colname$$) {
  return $ds$$ != null && $ds$$.tech$v3$dataset$protocols$PDataset$_column$arity$2 != null ? $ds$$.tech$v3$dataset$protocols$PDataset$_column$arity$2($ds$$, $colname$$) : tech$v3$dataset$protocols$PDataset$_column$dyn_77031($ds$$, $colname$$);
};
var tech$v3$dataset$protocols$PDataset$_columns$dyn_77033 = function($ds$$) {
  var $m__5372__auto__$jscomp$824_m__5374__auto__$$ = tech.v3.dataset.protocols._columns[$APP.goog.typeOf($ds$$ == null ? null : $ds$$)];
  if ($m__5372__auto__$jscomp$824_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$824_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$824_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($ds$$) : $m__5372__auto__$jscomp$824_m__5374__auto__$$.call(null, $ds$$);
  }
  $m__5372__auto__$jscomp$824_m__5374__auto__$$ = tech.v3.dataset.protocols._columns._;
  if ($m__5372__auto__$jscomp$824_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$824_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$824_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($ds$$) : $m__5372__auto__$jscomp$824_m__5374__auto__$$.call(null, $ds$$);
  }
  throw $APP.cljs.core.missing_protocol("PDataset.-columns", $ds$$);
};
tech.v3.dataset.protocols._columns = function($ds$$) {
  return $ds$$ != null && $ds$$.tech$v3$dataset$protocols$PDataset$_columns$arity$1 != null ? $ds$$.tech$v3$dataset$protocols$PDataset$_columns$arity$1($ds$$) : tech$v3$dataset$protocols$PDataset$_columns$dyn_77033($ds$$);
};
var tech$v3$dataset$protocols$PDataset$_columns_as_map$dyn_77034 = function($ds$$) {
  var $m__5372__auto__$jscomp$825_m__5374__auto__$$ = tech.v3.dataset.protocols._columns_as_map[$APP.goog.typeOf($ds$$ == null ? null : $ds$$)];
  if ($m__5372__auto__$jscomp$825_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$825_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$825_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($ds$$) : $m__5372__auto__$jscomp$825_m__5374__auto__$$.call(null, $ds$$);
  }
  $m__5372__auto__$jscomp$825_m__5374__auto__$$ = tech.v3.dataset.protocols._columns_as_map._;
  if ($m__5372__auto__$jscomp$825_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$825_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$825_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($ds$$) : $m__5372__auto__$jscomp$825_m__5374__auto__$$.call(null, $ds$$);
  }
  throw $APP.cljs.core.missing_protocol("PDataset.-columns-as-map", $ds$$);
};
tech.v3.dataset.protocols._columns_as_map = function($ds$$) {
  return $ds$$ != null && $ds$$.tech$v3$dataset$protocols$PDataset$_columns_as_map$arity$1 != null ? $ds$$.tech$v3$dataset$protocols$PDataset$_columns_as_map$arity$1($ds$$) : tech$v3$dataset$protocols$PDataset$_columns_as_map$dyn_77034($ds$$);
};
var tech$v3$dataset$protocols$PDataset$_rows$dyn_77035 = function($ds$$) {
  var $m__5372__auto__$jscomp$826_m__5374__auto__$$ = tech.v3.dataset.protocols._rows[$APP.goog.typeOf($ds$$ == null ? null : $ds$$)];
  if ($m__5372__auto__$jscomp$826_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$826_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$826_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($ds$$) : $m__5372__auto__$jscomp$826_m__5374__auto__$$.call(null, $ds$$);
  }
  $m__5372__auto__$jscomp$826_m__5374__auto__$$ = tech.v3.dataset.protocols._rows._;
  if ($m__5372__auto__$jscomp$826_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$826_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$826_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($ds$$) : $m__5372__auto__$jscomp$826_m__5374__auto__$$.call(null, $ds$$);
  }
  throw $APP.cljs.core.missing_protocol("PDataset.-rows", $ds$$);
};
tech.v3.dataset.protocols._rows = function($ds$$) {
  return $ds$$ != null && $ds$$.tech$v3$dataset$protocols$PDataset$_rows$arity$1 != null ? $ds$$.tech$v3$dataset$protocols$PDataset$_rows$arity$1($ds$$) : tech$v3$dataset$protocols$PDataset$_rows$dyn_77035($ds$$);
};
var tech$v3$dataset$protocols$PDataset$_rowvecs$dyn_77038 = function($ds$$) {
  var $m__5372__auto__$jscomp$827_m__5374__auto__$$ = tech.v3.dataset.protocols._rowvecs[$APP.goog.typeOf($ds$$ == null ? null : $ds$$)];
  if ($m__5372__auto__$jscomp$827_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$827_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$827_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($ds$$) : $m__5372__auto__$jscomp$827_m__5374__auto__$$.call(null, $ds$$);
  }
  $m__5372__auto__$jscomp$827_m__5374__auto__$$ = tech.v3.dataset.protocols._rowvecs._;
  if ($m__5372__auto__$jscomp$827_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$827_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$827_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($ds$$) : $m__5372__auto__$jscomp$827_m__5374__auto__$$.call(null, $ds$$);
  }
  throw $APP.cljs.core.missing_protocol("PDataset.-rowvecs", $ds$$);
};
tech.v3.dataset.protocols._rowvecs = function($ds$$) {
  return $ds$$ != null && $ds$$.tech$v3$dataset$protocols$PDataset$_rowvecs$arity$1 != null ? $ds$$.tech$v3$dataset$protocols$PDataset$_rowvecs$arity$1($ds$$) : tech$v3$dataset$protocols$PDataset$_rowvecs$dyn_77038($ds$$);
};
var tech$v3$dataset$protocols$PDataset$_row_at$dyn_77039 = function($ds$$, $idx$$) {
  var $m__5372__auto__$jscomp$828_m__5374__auto__$$ = tech.v3.dataset.protocols._row_at[$APP.goog.typeOf($ds$$ == null ? null : $ds$$)];
  if ($m__5372__auto__$jscomp$828_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$828_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$828_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($ds$$, $idx$$) : $m__5372__auto__$jscomp$828_m__5374__auto__$$.call(null, $ds$$, $idx$$);
  }
  $m__5372__auto__$jscomp$828_m__5374__auto__$$ = tech.v3.dataset.protocols._row_at._;
  if ($m__5372__auto__$jscomp$828_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$828_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$828_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($ds$$, $idx$$) : $m__5372__auto__$jscomp$828_m__5374__auto__$$.call(null, $ds$$, $idx$$);
  }
  throw $APP.cljs.core.missing_protocol("PDataset.-row-at", $ds$$);
};
tech.v3.dataset.protocols._row_at = function($ds$$, $idx$$) {
  return $ds$$ != null && $ds$$.tech$v3$dataset$protocols$PDataset$_row_at$arity$2 != null ? $ds$$.tech$v3$dataset$protocols$PDataset$_row_at$arity$2($ds$$, $idx$$) : tech$v3$dataset$protocols$PDataset$_row_at$dyn_77039($ds$$, $idx$$);
};
var tech$v3$dataset$protocols$PDataset$_rowvec_at$dyn_77040 = function($ds$$, $idx$$) {
  var $m__5372__auto__$jscomp$829_m__5374__auto__$$ = tech.v3.dataset.protocols._rowvec_at[$APP.goog.typeOf($ds$$ == null ? null : $ds$$)];
  if ($m__5372__auto__$jscomp$829_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$829_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$829_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($ds$$, $idx$$) : $m__5372__auto__$jscomp$829_m__5374__auto__$$.call(null, $ds$$, $idx$$);
  }
  $m__5372__auto__$jscomp$829_m__5374__auto__$$ = tech.v3.dataset.protocols._rowvec_at._;
  if ($m__5372__auto__$jscomp$829_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$829_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$829_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($ds$$, $idx$$) : $m__5372__auto__$jscomp$829_m__5374__auto__$$.call(null, $ds$$, $idx$$);
  }
  throw $APP.cljs.core.missing_protocol("PDataset.-rowvec-at", $ds$$);
};
tech.v3.dataset.protocols._rowvec_at = function($ds$$, $idx$$) {
  return $ds$$ != null && $ds$$.tech$v3$dataset$protocols$PDataset$_rowvec_at$arity$2 != null ? $ds$$.tech$v3$dataset$protocols$PDataset$_rowvec_at$arity$2($ds$$, $idx$$) : tech$v3$dataset$protocols$PDataset$_rowvec_at$dyn_77040($ds$$, $idx$$);
};
tech.v3.dataset.protocols.PDatasetParser = function() {
};
var tech$v3$dataset$protocols$PDatasetParser$_add_row$dyn_77041 = function($p$$, $row$$) {
  var $m__5372__auto__$jscomp$830_m__5374__auto__$$ = tech.v3.dataset.protocols._add_row[$APP.goog.typeOf($p$$ == null ? null : $p$$)];
  if ($m__5372__auto__$jscomp$830_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$830_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$830_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($p$$, $row$$) : $m__5372__auto__$jscomp$830_m__5374__auto__$$.call(null, $p$$, $row$$);
  }
  $m__5372__auto__$jscomp$830_m__5374__auto__$$ = tech.v3.dataset.protocols._add_row._;
  if ($m__5372__auto__$jscomp$830_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$830_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$830_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($p$$, $row$$) : $m__5372__auto__$jscomp$830_m__5374__auto__$$.call(null, $p$$, $row$$);
  }
  throw $APP.cljs.core.missing_protocol("PDatasetParser.-add-row", $p$$);
};
tech.v3.dataset.protocols._add_row = function($p$$, $row$$) {
  return $p$$ != null && $p$$.tech$v3$dataset$protocols$PDatasetParser$_add_row$arity$2 != null ? $p$$.tech$v3$dataset$protocols$PDatasetParser$_add_row$arity$2($p$$, $row$$) : tech$v3$dataset$protocols$PDatasetParser$_add_row$dyn_77041($p$$, $row$$);
};
var tech$v3$dataset$protocols$PDatasetParser$_add_rows$dyn_77044 = function($p$$, $rows$$) {
  var $m__5372__auto__$jscomp$831_m__5374__auto__$$ = tech.v3.dataset.protocols._add_rows[$APP.goog.typeOf($p$$ == null ? null : $p$$)];
  if ($m__5372__auto__$jscomp$831_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$831_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$831_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($p$$, $rows$$) : $m__5372__auto__$jscomp$831_m__5374__auto__$$.call(null, $p$$, $rows$$);
  }
  $m__5372__auto__$jscomp$831_m__5374__auto__$$ = tech.v3.dataset.protocols._add_rows._;
  if ($m__5372__auto__$jscomp$831_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$831_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$831_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($p$$, $rows$$) : $m__5372__auto__$jscomp$831_m__5374__auto__$$.call(null, $p$$, $rows$$);
  }
  throw $APP.cljs.core.missing_protocol("PDatasetParser.-add-rows", $p$$);
};
tech.v3.dataset.protocols._add_rows = function($p$$, $rows$$) {
  return $p$$ != null && $p$$.tech$v3$dataset$protocols$PDatasetParser$_add_rows$arity$2 != null ? $p$$.tech$v3$dataset$protocols$PDatasetParser$_add_rows$arity$2($p$$, $rows$$) : tech$v3$dataset$protocols$PDatasetParser$_add_rows$dyn_77044($p$$, $rows$$);
};
var tech$v3$dataset$protocols$PDatasetParser$_parser__GT_rf$dyn_77046 = function($p$$) {
  var $m__5372__auto__$jscomp$832_m__5374__auto__$$ = tech.v3.dataset.protocols._parser__GT_rf[$APP.goog.typeOf($p$$ == null ? null : $p$$)];
  if ($m__5372__auto__$jscomp$832_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$832_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$832_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($p$$) : $m__5372__auto__$jscomp$832_m__5374__auto__$$.call(null, $p$$);
  }
  $m__5372__auto__$jscomp$832_m__5374__auto__$$ = tech.v3.dataset.protocols._parser__GT_rf._;
  if ($m__5372__auto__$jscomp$832_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$832_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $m__5372__auto__$jscomp$832_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$1($p$$) : $m__5372__auto__$jscomp$832_m__5374__auto__$$.call(null, $p$$);
  }
  throw $APP.cljs.core.missing_protocol("PDatasetParser.-parser-\x3erf", $p$$);
};
tech.v3.dataset.protocols._parser__GT_rf = function($p$$) {
  return $p$$ != null && $p$$.tech$v3$dataset$protocols$PDatasetParser$_parser__GT_rf$arity$1 != null ? $p$$.tech$v3$dataset$protocols$PDatasetParser$_parser__GT_rf$arity$1($p$$) : tech$v3$dataset$protocols$PDatasetParser$_parser__GT_rf$dyn_77046($p$$);
};
tech.v3.dataset.protocols.PMissing.object = !0;
tech.v3.dataset.protocols._missing.object = function($this$$$) {
  return new Set();
};
tech.v3.dataset.protocols.PColumn.object = !0;
tech.v3.dataset.protocols._is_column_QMARK_.object = function($col$$) {
  return !1;
};
tech.v3.dataset.protocols.PRowCount.object = !0;
tech.v3.dataset.protocols._row_count.object = function($this$$$) {
  return $APP.cljs.core.count($this$$$);
};
tech.v3.dataset.protocols.PColumnCount.object = !0;
tech.v3.dataset.protocols._column_count.object = function($this$$$) {
  return 0;
};
tech.v3.dataset.protocols.PColumn.array = !0;
tech.v3.dataset.protocols._is_column_QMARK_.array = function($col$$) {
  return !1;
};
tech.v3.dataset.protocols.PColumn["boolean"] = !0;
tech.v3.dataset.protocols._is_column_QMARK_["boolean"] = function($col$$) {
  return !1;
};
tech.v3.dataset.protocols.PColumn.number = !0;
tech.v3.dataset.protocols._is_column_QMARK_.number = function($col$$) {
  return !1;
};
tech.v3.dataset.protocols.PColumn["null"] = !0;
tech.v3.dataset.protocols._is_column_QMARK_["null"] = function($col$$) {
  return !1;
};
tech.v3.dataset.impl = {};
tech.v3.dataset.impl.column = {};
tech.v3.dataset.impl.column.datatype__GT_missing_value = function($dtype$$) {
  switch($dtype$$ instanceof $APP.cljs.core.Keyword ? $dtype$$.fqn : null) {
    case "boolean":
      return !1;
    case "int8":
      return -128;
    case "int16":
      return -32768;
    case "int32":
      return -2147483648;
    case "int64":
      return -9223372036854775808;
    case "float32":
      return NaN;
    case "float64":
      return NaN;
    default:
      return tech.v3.datatype.casting.numeric_type_QMARK_($dtype$$) ? 0 : null;
  }
};
tech.v3.dataset.impl.column.make_container = function($dtype$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$198$string, $dtype$$) ? tech.v3.dataset.string_table.make_string_table() : tech.v3.datatype.make_list($dtype$$);
};
tech.v3.dataset.impl.column.inclusive_in_range = function($val$$, $start$$, $end$$) {
  return $val$$ >= $start$$ && $val$$ <= $end$$;
};
tech.v3.dataset.impl.column.clamp = function($val$jscomp$177_y__5111__auto__$$, $start$$, $end$$) {
  $val$jscomp$177_y__5111__auto__$$ = $val$jscomp$177_y__5111__auto__$$ < $end$$ ? $val$jscomp$177_y__5111__auto__$$ : $end$$;
  return $start$$ > $val$jscomp$177_y__5111__auto__$$ ? $start$$ : $val$jscomp$177_y__5111__auto__$$;
};
tech.v3.dataset.impl.column.clip_integer_range = function($n_rows_rend__$1$$, $rng$$) {
  var $rstart$$ = $rng$$.start, $rend$$ = $rng$$.end;
  if (tech.v3.dataset.impl.column.inclusive_in_range($rstart$$, 0, $n_rows_rend__$1$$ - 1) && tech.v3.dataset.impl.column.inclusive_in_range($rend$$, -1, $n_rows_rend__$1$$ + 1)) {
    return $rng$$;
  }
  $rstart$$ = tech.v3.dataset.impl.column.clamp($rstart$$, 0, $n_rows_rend__$1$$ - 1);
  $n_rows_rend__$1$$ = tech.v3.dataset.impl.column.clamp($rend$$, -1, $n_rows_rend__$1$$);
  return ham_fisted.api.range.cljs$core$IFn$_invoke$arity$3($rstart$$, $n_rows_rend__$1$$, $rng$$.step);
};
tech.v3.dataset.impl.column.scan_indexes = function($n_rows$$, $rowidxs$$) {
  return $APP.cljs.core.with_meta($APP.cljs.core.transduce.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p1__77043_SHARP_$$) {
    var $rv$$ = $p1__77043_SHARP_$$ < 0 ? $p1__77043_SHARP_$$ + $n_rows$$ : $p1__77043_SHARP_$$;
    if ($rv$$ < 0 || $rv$$ >= $n_rows$$) {
      throw Error(["Index (", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($p1__77043_SHARP_$$), ") is out of range: [0-", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($n_rows$$), ")"].join(""));
    }
    return $rv$$;
  }), tech.v3.datatype.argops.index_reducer_rf, $rowidxs$$), new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$5488$tech_DOT_v3_DOT_datatype_DOT_argops_SLASH_processed, !0], null));
};
tech.v3.dataset.impl.column.process_row_indexes = function($n_rows$$, $rowidxs$$) {
  if ($APP.cljs.core.truth_($APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.meta($rowidxs$$), cljs$cst$5488$tech_DOT_v3_DOT_datatype_DOT_argops_SLASH_processed))) {
    return $rowidxs$$;
  }
  if ($APP.cljs.core.truth_(tech.v3.datatype.base.integer_range_QMARK_($rowidxs$$))) {
    var $start$$ = $rowidxs$$.start, $step$$ = $rowidxs$$.step;
    $APP.cljs.core.count($rowidxs$$);
    return 0 >= $start$$ && $step$$ > 0 ? $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(tech.v3.dataset.impl.column.clip_integer_range($n_rows$$, $rowidxs$$), $APP.cljs.core.assoc, cljs$cst$5488$tech_DOT_v3_DOT_datatype_DOT_argops_SLASH_processed, !0) : tech.v3.dataset.impl.column.scan_indexes($n_rows$$, $rowidxs$$);
  }
  return tech.v3.dataset.impl.column.scan_indexes($n_rows$$, $rowidxs$$);
};
tech.v3.dataset.impl.column.Column = function($buf$$, $missing$$, $metadata$$, $numeric_QMARK_$$) {
  this.buf = $buf$$;
  this.missing = $missing$$;
  this.metadata = $metadata$$;
  this.numeric_QMARK_ = $numeric_QMARK_$$;
  this.cljs$lang$protocol_mask$partition0$ = 2179858451;
  this.cljs$lang$protocol_mask$partition1$ = 143360;
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PAgetable$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PAgetable$_convertible_to_agetable_QMARK_$arity$1 = function($_this$jscomp$56_and__5023__auto__$$) {
  $_this$jscomp$56_and__5023__auto__$$ = tech.v3.datatype.protocols._convertible_to_agetable_QMARK_(this.buf);
  return $APP.cljs.core.truth_($_this$jscomp$56_and__5023__auto__$$) ? 0 === this.missing.size : $_this$jscomp$56_and__5023__auto__$$;
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PAgetable$__GT_agetable$arity$1 = function($_this$$) {
  return tech.v3.datatype.protocols.__GT_agetable(this.buf);
};
tech.v3.dataset.impl.column.Column.prototype.toString = function() {
  return $APP.cljs.core.pr_str_STAR_(this);
};
tech.v3.dataset.impl.column.Column.prototype.equiv = function($other$$) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, $other$$);
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PSetValue$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PSetValue$_set_value_BANG_$arity$3 = function($_this$$, $idx$$, $data$$) {
  if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2639$reader, tech.v3.datatype.argtypes.argtype($data$$))) {
    $_this$$ = $APP.cljs.core.count($data$$);
    for (var $elidx_77109$$ = 0;;) {
      if ($elidx_77109$$ < $_this$$) {
        this.missing.remove($idx$$ + $elidx_77109$$), $elidx_77109$$ += 1;
      } else {
        break;
      }
    }
  } else {
    this.missing.remove($idx$$);
  }
  return tech.v3.datatype.protocols._set_value_BANG_(this.buf, $idx$$, $data$$);
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$dataset$protocols$PRowCount$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1 = function($_this$$) {
  return $APP.cljs.core.count(this.buf);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IIndexed$_nth$arity$2 = function($_this$$, $n$$) {
  var $self__$$ = this;
  return tech.v3.datatype.arrays.nth_impl($n$$, $APP.cljs.core.count($self__$$.buf), cljs$cst$5472$tech_DOT_v3_DOT_datatype_DOT_arrays_SLASH_exception, function($buf__$1$$, $n__$1$$) {
    return $APP.cljs.core.truth_($self__$$.missing.has($n__$1$$)) ? $APP.cljs.core.truth_($self__$$.numeric_QMARK_) ? NaN : null : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($buf__$1$$, $n__$1$$);
  }, $self__$$.buf);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IIndexed$_nth$arity$3 = function($_this$$, $n$$, $not_found$$) {
  var $self__$$ = this;
  return tech.v3.datatype.arrays.nth_impl($n$$, $APP.cljs.core.count($self__$$.buf), $not_found$$, function($buf__$1$$, $n__$1$$) {
    return $APP.cljs.core.truth_($self__$$.missing.has($n__$1$$)) ? $APP.cljs.core.truth_($self__$$.numeric_QMARK_) ? NaN : null : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($buf__$1$$, $n__$1$$);
  }, $self__$$.buf);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($array$$, $writer$$, $_opts$$) {
  return $APP.cljs.core._write($writer$$, tech.v3.datatype.base.reader__GT_str(this, "column"));
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IIterable$_iterator$arity$1 = function($this$$$) {
  return tech.v3.datatype.arrays.nth_iter(this);
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PToJSArray$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PToJSArray$_convertible_to_js_array_QMARK_$arity$1 = function($_this$jscomp$62_and__5023__auto__$$) {
  $_this$jscomp$62_and__5023__auto__$$ = tech.v3.datatype.protocols._convertible_to_js_array_QMARK_(this.buf);
  return $APP.cljs.core.truth_($_this$jscomp$62_and__5023__auto__$$) ? 0 === this.missing.size : $_this$jscomp$62_and__5023__auto__$$;
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PToJSArray$__GT_js_array$arity$1 = function($_this$$) {
  return tech.v3.datatype.protocols.__GT_js_array(this.buf);
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PToTypedArray$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PToTypedArray$_convertible_to_typed_array_QMARK_$arity$1 = function($_this$jscomp$64_and__5023__auto__$$) {
  $_this$jscomp$64_and__5023__auto__$$ = tech.v3.datatype.protocols._convertible_to_typed_array_QMARK_(this.buf);
  return $APP.cljs.core.truth_($_this$jscomp$64_and__5023__auto__$$) ? 0 === this.missing.size : $_this$jscomp$64_and__5023__auto__$$;
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PToTypedArray$__GT_typed_array$arity$1 = function($_this$$) {
  return tech.v3.datatype.protocols.__GT_typed_array(this.buf);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IMeta$_meta$arity$1 = function($_coll$$) {
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(this.metadata, cljs$cst$5495$row_count, $APP.cljs.core.count(this.buf), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$5496$datatype, tech.v3.datatype.elemwise_datatype(this.buf)], 0));
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$ICloneable$_clone$arity$1 = function($G__77075__this$$) {
  $G__77075__this$$ = $APP.cljs.core.clone(this.buf);
  var $G__77076$$ = $APP.cljs.core.clone(this.missing), $G__77077$$ = this.metadata, $G__77078$$ = this.numeric_QMARK_;
  return tech.v3.dataset.impl.column.new_column.cljs$core$IFn$_invoke$arity$4 ? tech.v3.dataset.impl.column.new_column.cljs$core$IFn$_invoke$arity$4($G__77075__this$$, $G__77076$$, $G__77077$$, $G__77078$$) : tech.v3.dataset.impl.column.new_column.call(null, $G__77075__this$$, $G__77076$$, $G__77077$$, $G__77078$$);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$ICounted$_count$arity$1 = function($_this$$) {
  return $APP.cljs.core.count(this.buf);
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PSetConstant$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PSetConstant$_set_constant_BANG_$arity$4 = function($_this$$, $idx$$, $elem_count$$, $value$$) {
  for ($_this$$ = 0;;) {
    if ($_this$$ < $elem_count$$) {
      this.missing.remove($_this$$ + $idx$$), $_this$$ += 1;
    } else {
      break;
    }
  }
  return tech.v3.datatype.protocols._set_constant_BANG_(this.buf, $idx$$, $elem_count$$, $value$$);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IHash$_hash$arity$1 = function($o$$) {
  return ham_fisted.api.hash_ordered(this);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($this$$$, $other$$) {
  return tech.v3.datatype.arrays.equiv_nthable(this, $other$$);
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($_this$$) {
  return tech.v3.datatype.elemwise_datatype(this.buf);
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$dataset$protocols$PMissing$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$dataset$protocols$PMissing$_missing$arity$1 = function($_this$$) {
  return this.missing;
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$dataset$protocols$PColumn$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$dataset$protocols$PColumn$_is_column_QMARK_$arity$1 = function($_this$$) {
  return !0;
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$dataset$protocols$PColumn$_column_buffer$arity$1 = function($_this$$) {
  return this.buf;
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PFastAccessor$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PFastAccessor$__GT_fast_nth$arity$1 = function($this$$$) {
  var $self__$$ = this, $buf_nth$$ = tech.v3.datatype.protocols.__GT_fast_nth($self__$$.buf);
  return 0 === $APP.cljs.core.count($self__$$.missing) ? $buf_nth$$ : $APP.cljs.core.truth_($self__$$.numeric_QMARK_) ? function($n$$) {
    return $APP.cljs.core.truth_($self__$$.missing.has($n$$)) ? NaN : $buf_nth$$.cljs$core$IFn$_invoke$arity$1 ? $buf_nth$$.cljs$core$IFn$_invoke$arity$1($n$$) : $buf_nth$$.call(null, $n$$);
  } : function($n$$) {
    return $APP.cljs.core.truth_($self__$$.missing.has($n$$)) ? null : $buf_nth$$.cljs$core$IFn$_invoke$arity$1 ? $buf_nth$$.cljs$core$IFn$_invoke$arity$1($n$$) : $buf_nth$$.call(null, $n$$);
  };
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$INamed$_name$arity$1 = function($_this$$) {
  return $APP.cljs$cst$272$name.cljs$core$IFn$_invoke$arity$1(this.metadata);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $f$$) {
  var $self__$$ = this;
  if (0 === $APP.cljs.core.count($self__$$.missing)) {
    return $APP.cljs.core._reduce($self__$$.buf, $f$$);
  }
  var $missing_value$$ = $APP.cljs.core.truth_($self__$$.numeric_QMARK_) ? NaN : null;
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(ham_fisted.api.indexed_accum_fn(function($acc$$, $idx$$, $v$$) {
    return $APP.cljs.core.truth_($self__$$.missing.has($idx$$)) ? $f$$.cljs$core$IFn$_invoke$arity$2 ? $f$$.cljs$core$IFn$_invoke$arity$2($acc$$, $missing_value$$) : $f$$.call(null, $acc$$, $missing_value$$) : $f$$.cljs$core$IFn$_invoke$arity$2 ? $f$$.cljs$core$IFn$_invoke$arity$2($acc$$, $v$$) : $f$$.call(null, $acc$$, $v$$);
  }), $self__$$.buf);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $f$$, $start$$) {
  var $self__$$ = this;
  if (0 === $APP.cljs.core.count($self__$$.missing)) {
    return $APP.cljs.core._reduce($self__$$.buf, $f$$, $start$$);
  }
  var $missing_value$$ = $APP.cljs.core.truth_($self__$$.numeric_QMARK_) ? NaN : null;
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($acc$$, $idx$$, $v$$) {
    return $APP.cljs.core.truth_($self__$$.missing.has($idx$$)) ? $f$$.cljs$core$IFn$_invoke$arity$2 ? $f$$.cljs$core$IFn$_invoke$arity$2($acc$$, $missing_value$$) : $f$$.call(null, $acc$$, $missing_value$$) : $f$$.cljs$core$IFn$_invoke$arity$2 ? $f$$.cljs$core$IFn$_invoke$arity$2($acc$$, $v$$) : $f$$.call(null, $acc$$, $v$$);
  }), $start$$, $self__$$.buf);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$ISeqable$_seq$arity$1 = function($ec$jscomp$1_this$$$) {
  var $this$__$1$$ = this;
  $ec$jscomp$1_this$$$ = $APP.cljs.core.count($this$__$1$$);
  return 0 === $ec$jscomp$1_this$$$ ? null : $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__77047_SHARP_$$) {
    return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($this$__$1$$, $p1__77047_SHARP_$$);
  }, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($ec$jscomp$1_this$$$));
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PSubBuffer$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PSubBuffer$_sub_buffer$arity$3 = function($col$$, $G__77082_off$$, $G__77083_len$$) {
  $col$$ = tech.v3.datatype.base.sub_buffer.cljs$core$IFn$_invoke$arity$variadic(this.buf, $G__77082_off$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$G__77083_len$$], 0));
  for (var $new_missing$$ = new Set(), $idx_77116$$ = 0;;) {
    if ($idx_77116$$ < $G__77083_len$$) {
      $APP.cljs.core.truth_(this.missing.has($G__77082_off$$ + $idx_77116$$)) && $new_missing$$.add($idx_77116$$), $idx_77116$$ += 1;
    } else {
      break;
    }
  }
  $G__77082_off$$ = $APP.cljs.core.meta(this);
  $G__77083_len$$ = this.numeric_QMARK_;
  return tech.v3.dataset.impl.column.new_column.cljs$core$IFn$_invoke$arity$4 ? tech.v3.dataset.impl.column.new_column.cljs$core$IFn$_invoke$arity$4($col$$, $new_missing$$, $G__77082_off$$, $G__77083_len$$) : tech.v3.dataset.impl.column.new_column.call(null, $col$$, $new_missing$$, $G__77082_off$$, $G__77083_len$$);
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($coll$$, $new_meta$$) {
  return $new_meta$$ === this.metadata ? this : tech.v3.dataset.impl.column.new_column.cljs$core$IFn$_invoke$arity$4 ? tech.v3.dataset.impl.column.new_column.cljs$core$IFn$_invoke$arity$4(this.buf, this.missing, $new_meta$$, this.numeric_QMARK_) : tech.v3.dataset.impl.column.new_column.call(null, this.buf, this.missing, $new_meta$$, this.numeric_QMARK_);
};
tech.v3.dataset.impl.column.Column.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
tech.v3.dataset.impl.column.Column.prototype.apply = function($self__$$, $args77063$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args77063$$)));
};
tech.v3.dataset.impl.column.Column.prototype.cljs$core$IFn$_invoke$arity$1 = function($n$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this, $n$$);
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($_this$$) {
  return $APP.cljs$cst$216$column;
};
tech.v3.dataset.impl.column.Column.prototype.tech$v3$dataset$protocols$PSelectRows$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.column.Column.prototype.tech$v3$dataset$protocols$PSelectRows$_select_rows$arity$2 = function($G__77097__this$$, $G__77099_rowidxs$$) {
  var $self__$$ = this;
  $G__77097__this$$ = tech.v3.dataset.impl.column.process_row_indexes(tech.v3.datatype.ecount($self__$$.buf), $G__77099_rowidxs$$);
  var $new_missing$$ = new Set();
  0 !== $APP.cljs.core.count($self__$$.missing) && tech.v3.datatype.indexed_iterate_BANG_(function($p1__77056_SHARP_$$, $p2__77055_SHARP_$$) {
    return $APP.cljs.core.truth_($self__$$.missing.has($p2__77055_SHARP_$$)) ? $new_missing$$.add($p1__77056_SHARP_$$) : null;
  }, $G__77097__this$$);
  $G__77097__this$$ = tech.v3.datatype.indexed_buffer($G__77097__this$$, $self__$$.buf);
  $G__77099_rowidxs$$ = $self__$$.metadata;
  var $G__77100$$ = $self__$$.numeric_QMARK_;
  return tech.v3.dataset.impl.column.new_column.cljs$core$IFn$_invoke$arity$4 ? tech.v3.dataset.impl.column.new_column.cljs$core$IFn$_invoke$arity$4($G__77097__this$$, $new_missing$$, $G__77099_rowidxs$$, $G__77100$$) : tech.v3.dataset.impl.column.new_column.call(null, $G__77097__this$$, $new_missing$$, $G__77099_rowidxs$$, $G__77100$$);
};
tech.v3.dataset.impl.column.Column.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$29$buf, cljs$cst$5497$missing, cljs$cst$5476$metadata, cljs$cst$5498$numeric_QMARK_], null);
};
tech.v3.dataset.impl.column.Column.cljs$lang$type = !0;
tech.v3.dataset.impl.column.Column.cljs$lang$ctorStr = "tech.v3.dataset.impl.column/Column";
tech.v3.dataset.impl.column.Column.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.dataset.impl.column/Column");
};
tech.v3.dataset.impl.column.__GT_Column = function($buf$$, $missing$$, $metadata$$, $numeric_QMARK_$$) {
  return new tech.v3.dataset.impl.column.Column($buf$$, $missing$$, $metadata$$, $numeric_QMARK_$$);
};
tech.v3.dataset.impl.column.new_column = function($buf$$, $missing$$, $metadata$$, $numeric_QMARK_$$) {
  return new tech.v3.dataset.impl.column.Column($buf$$, $missing$$, $metadata$$, $numeric_QMARK_$$);
};
tech.v3.dataset.io = {};
tech.v3.dataset.io.column_parsers = {};
tech.v3.dataset.io.column_parsers.PParser = function() {
};
var tech$v3$dataset$io$column_parsers$PParser$_add_value_BANG_$dyn_77125 = function($this$$$, $idx$$, $val$$) {
  var $m__5372__auto__$jscomp$833_m__5374__auto__$$ = tech.v3.dataset.io.column_parsers._add_value_BANG_[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$833_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$833_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$833_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($this$$$, $idx$$, $val$$) : $m__5372__auto__$jscomp$833_m__5374__auto__$$.call(null, $this$$$, $idx$$, $val$$);
  }
  $m__5372__auto__$jscomp$833_m__5374__auto__$$ = tech.v3.dataset.io.column_parsers._add_value_BANG_._;
  if ($m__5372__auto__$jscomp$833_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$833_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3 ? $m__5372__auto__$jscomp$833_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$3($this$$$, $idx$$, $val$$) : $m__5372__auto__$jscomp$833_m__5374__auto__$$.call(null, $this$$$, $idx$$, $val$$);
  }
  throw $APP.cljs.core.missing_protocol("PParser.-add-value!", $this$$$);
};
tech.v3.dataset.io.column_parsers._add_value_BANG_ = function($this$$$, $idx$$, $val$$) {
  return $this$$$ != null && $this$$$.tech$v3$dataset$io$column_parsers$PParser$_add_value_BANG_$arity$3 != null ? $this$$$.tech$v3$dataset$io$column_parsers$PParser$_add_value_BANG_$arity$3($this$$$, $idx$$, $val$$) : tech$v3$dataset$io$column_parsers$PParser$_add_value_BANG_$dyn_77125($this$$$, $idx$$, $val$$);
};
var tech$v3$dataset$io$column_parsers$PParser$_finalize$dyn_77126 = function($this$$$, $rowcount$$) {
  var $m__5372__auto__$jscomp$834_m__5374__auto__$$ = tech.v3.dataset.io.column_parsers._finalize[$APP.goog.typeOf($this$$$ == null ? null : $this$$$)];
  if ($m__5372__auto__$jscomp$834_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$834_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$834_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $rowcount$$) : $m__5372__auto__$jscomp$834_m__5374__auto__$$.call(null, $this$$$, $rowcount$$);
  }
  $m__5372__auto__$jscomp$834_m__5374__auto__$$ = tech.v3.dataset.io.column_parsers._finalize._;
  if ($m__5372__auto__$jscomp$834_m__5374__auto__$$ != null) {
    return $m__5372__auto__$jscomp$834_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2 ? $m__5372__auto__$jscomp$834_m__5374__auto__$$.cljs$core$IFn$_invoke$arity$2($this$$$, $rowcount$$) : $m__5372__auto__$jscomp$834_m__5374__auto__$$.call(null, $this$$$, $rowcount$$);
  }
  throw $APP.cljs.core.missing_protocol("PParser.-finalize", $this$$$);
};
tech.v3.dataset.io.column_parsers._finalize = function($this$$$, $rowcount$$) {
  return $this$$$ != null && $this$$$.tech$v3$dataset$io$column_parsers$PParser$_finalize$arity$2 != null ? $this$$$.tech$v3$dataset$io$column_parsers$PParser$_finalize$arity$2($this$$$, $rowcount$$) : tech$v3$dataset$io$column_parsers$PParser$_finalize$dyn_77126($this$$$, $rowcount$$);
};
tech.v3.dataset.io.column_parsers.add_missing_BANG_ = function($n__5616__auto___rowcount$$, $missing_val$$, $data$$, $missing$$) {
  var $cur_count$$ = $APP.cljs.core.count($data$$);
  $n__5616__auto___rowcount$$ -= $cur_count$$;
  for (var $idx$$ = 0;;) {
    if ($idx$$ < $n__5616__auto___rowcount$$) {
      $missing$$.add($idx$$ + $cur_count$$), tech.v3.datatype.protocols._add($data$$, $missing_val$$), $idx$$ += 1;
    } else {
      return null;
    }
  }
};
tech.v3.dataset.io.column_parsers.missing_QMARK_ = function($val$$, $missing_val$$) {
  return typeof $val$$ === "number" ? isNaN($val$$) : $val$$ == null ? !0 : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($val$$, cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing) ? !0 : $APP.cljs.core.boolean_QMARK_($val$$) ? null : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($val$$, $missing_val$$);
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118 = function($colname$$, $dtype$$, $data$$, $missing_val$$, $missing$$, $meta77119$$) {
  this.colname = $colname$$;
  this.dtype = $dtype$$;
  this.data = $data$$;
  this.missing_val = $missing_val$$;
  this.missing = $missing$$;
  this.meta77119 = $meta77119$$;
  this.cljs$lang$protocol_mask$partition0$ = 393234;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($_77120$$, $meta77119__$1$$) {
  return new tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118(this.colname, this.dtype, this.data, this.missing_val, this.missing, $meta77119__$1$$);
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.cljs$core$IMeta$_meta$arity$1 = function($_77120$$) {
  return this.meta77119;
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.cljs$core$ICounted$_count$arity$1 = function($this$$$) {
  return $APP.cljs.core.count(this.data);
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($this$$$) {
  return this.dtype;
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.tech$v3$datatype$protocols$PListLike$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.tech$v3$datatype$protocols$PListLike$_add$arity$2 = function($this$$$, $val$$) {
  return $APP.cljs.core.truth_(tech.v3.dataset.io.column_parsers.missing_QMARK_($val$$, this.missing_val)) ? (this.missing.add($APP.cljs.core.count(this.data)), tech.v3.datatype.protocols._add(this.data, this.missing_val)) : tech.v3.datatype.protocols._add(this.data, $val$$);
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.tech$v3$datatype$protocols$PListLike$_add_all$arity$2 = function($temp__5823__auto__$jscomp$323_this$$$, $cur_off_new_data$$) {
  var $this$__$1$$ = this;
  $temp__5823__auto__$jscomp$323_this$$$ = tech.v3.datatype.as_datatype_accurate_agetable($cur_off_new_data$$);
  if ($APP.cljs.core.truth_($temp__5823__auto__$jscomp$323_this$$$)) {
    $cur_off_new_data$$ = $APP.cljs.core.count(this.data);
    tech.v3.datatype.protocols._add_all(this.data, $temp__5823__auto__$jscomp$323_this$$$);
    for (var $n__5616__auto__$$ = $APP.cljs.core.count($temp__5823__auto__$jscomp$323_this$$$), $idx$$ = 0;;) {
      if ($idx$$ < $n__5616__auto__$$) {
        var $dval_77128$$ = $temp__5823__auto__$jscomp$323_this$$$[$idx$$];
        $APP.cljs.core.truth_(tech.v3.dataset.io.column_parsers.missing_QMARK_($dval_77128$$, this.missing_val)) && this.missing.add($idx$$ + $cur_off_new_data$$, $dval_77128$$);
        $idx$$ += 1;
      } else {
        return null;
      }
    }
  } else {
    return tech.v3.datatype.iterate_BANG_(function($p1__77114_SHARP_$$) {
      return $this$__$1$$.tech$v3$datatype$protocols$PListLike$_add$arity$2(null, $p1__77114_SHARP_$$);
    }, $cur_off_new_data$$);
  }
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.tech$v3$dataset$io$column_parsers$PParser$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.tech$v3$dataset$io$column_parsers$PParser$_add_value_BANG_$arity$3 = function($this$$$, $idx$$, $val$$) {
  tech.v3.dataset.io.column_parsers.add_missing_BANG_($idx$$, this.missing_val, this.data, this.missing);
  return this.tech$v3$datatype$protocols$PListLike$_add$arity$2(null, $val$$);
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.tech$v3$dataset$io$column_parsers$PParser$_finalize$arity$2 = function($data__$1$jscomp$8_or__5025__auto__$jscomp$inline_7344_this$$$, $rowcount$$) {
  tech.v3.dataset.io.column_parsers.add_missing_BANG_($rowcount$$, this.missing_val, this.data, this.missing);
  $data__$1$jscomp$8_or__5025__auto__$jscomp$inline_7344_this$$$ = tech.v3.datatype.as_datatype_accurate_agetable(this.data);
  $data__$1$jscomp$8_or__5025__auto__$jscomp$inline_7344_this$$$ = $APP.cljs.core.truth_($data__$1$jscomp$8_or__5025__auto__$jscomp$inline_7344_this$$$) ? $data__$1$jscomp$8_or__5025__auto__$jscomp$inline_7344_this$$$ : this.data;
  return tech.v3.dataset.impl.column.new_column($data__$1$jscomp$8_or__5025__auto__$jscomp$inline_7344_this$$$, this.missing, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$272$name, this.colname], null), tech.v3.datatype.casting.numeric_type_QMARK_(tech.v3.datatype.elemwise_datatype($data__$1$jscomp$8_or__5025__auto__$jscomp$inline_7344_this$$$)));
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.cljs$core$INamed$_name$arity$1 = function($this$$$) {
  return this.colname;
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.cljs$core$IIndexed$_nth$arity$2 = function($JSCompiler_temp_const$jscomp$1866_this$$$, $idx$$) {
  $JSCompiler_temp_const$jscomp$1866_this$$$ = $APP.cljs.core;
  var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$1866_this$$$.truth_;
  var $JSCompiler_inline_result$jscomp$1867_or__5025__auto__$$ = ($JSCompiler_inline_result$jscomp$1867_or__5025__auto__$$ = $idx$$ >= $APP.cljs.core.count(this.data)) ? $JSCompiler_inline_result$jscomp$1867_or__5025__auto__$$ : this.missing.has($idx$$);
  return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$1866_this$$$, $JSCompiler_inline_result$jscomp$1867_or__5025__auto__$$) ? this.missing_val : $APP.cljs.core._nth(this.data, $idx$$);
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.prototype.cljs$core$IIndexed$_nth$arity$3 = function($JSCompiler_temp_const$jscomp$1869_this$$$, $idx$$, $dv$$) {
  $JSCompiler_temp_const$jscomp$1869_this$$$ = $APP.cljs.core;
  var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$1869_this$$$.truth_;
  var $JSCompiler_inline_result$jscomp$1870_or__5025__auto__$$ = ($JSCompiler_inline_result$jscomp$1870_or__5025__auto__$$ = $idx$$ >= $APP.cljs.core.count(this.data)) ? $JSCompiler_inline_result$jscomp$1870_or__5025__auto__$$ : this.missing.has($idx$$);
  return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$1869_this$$$, $JSCompiler_inline_result$jscomp$1870_or__5025__auto__$$) ? $dv$$ : $APP.cljs.core._nth(this.data, $idx$$);
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5500$colname, cljs$cst$5479$dtype, $APP.cljs$cst$380$data, cljs$cst$5501$missing_val, cljs$cst$5497$missing, cljs$cst$5502$meta77119], null);
};
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.cljs$lang$type = !0;
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.cljs$lang$ctorStr = "tech.v3.dataset.io.column-parsers/t_tech$v3$dataset$io$column_parsers77118";
tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.dataset.io.column-parsers/t_tech$v3$dataset$io$column_parsers77118");
};
tech.v3.dataset.io.column_parsers.__GT_t_tech$v3$dataset$io$column_parsers77118 = function($colname$$, $dtype$$, $data$$, $missing_val$$, $missing$$, $meta77119$$) {
  return new tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118($colname$$, $dtype$$, $data$$, $missing_val$$, $missing$$, $meta77119$$);
};
tech.v3.dataset.io.column_parsers.fixed_type_parser = function($colname$$, $dtype$$) {
  var $data$$ = tech.v3.dataset.impl.column.make_container($dtype$$), $missing_val$$ = tech.v3.datatype.casting.numeric_type_QMARK_($dtype$$) ? NaN : tech.v3.dataset.impl.column.datatype__GT_missing_value($dtype$$), $missing$$ = new Set();
  return new tech.v3.dataset.io.column_parsers.t_tech$v3$dataset$io$column_parsers77118($colname$$, $dtype$$, $data$$, $missing_val$$, $missing$$, $APP.cljs.core.PersistentArrayMap.EMPTY);
};
tech.v3.dataset.io.column_parsers.ObjParse = function($container$$, $container_dtype$$, $missing_val$$, $missing$$, $colname$$) {
  this.container = $container$$;
  this.container_dtype = $container_dtype$$;
  this.missing_val = $missing_val$$;
  this.missing = $missing$$;
  this.colname = $colname$$;
  this.cljs$lang$protocol_mask$partition0$ = 18;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
tech.v3.dataset.io.column_parsers.ObjParse.prototype.cljs$core$ICounted$_count$arity$1 = function($_this$$) {
  return $APP.cljs.core.count(this.container);
};
tech.v3.dataset.io.column_parsers.ObjParse.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.io.column_parsers.ObjParse.prototype.tech$v3$datatype$protocols$PElemwiseDatatype$_elemwise_datatype$arity$1 = function($_this$$) {
  return tech.v3.datatype.elemwise_datatype(this.container);
};
tech.v3.dataset.io.column_parsers.ObjParse.prototype.tech$v3$datatype$protocols$PListLike$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.io.column_parsers.ObjParse.prototype.tech$v3$datatype$protocols$PListLike$_add$arity$2 = function($_this$$, $val$$) {
  if ($APP.cljs.core.truth_(tech.v3.dataset.io.column_parsers.missing_QMARK_($val$$, this.missing_val))) {
    return this.missing.add($APP.cljs.core.count(this.container)), tech.v3.datatype.protocols._add(this.container, this.missing_val);
  }
  $_this$$ = tech.v3.datatype.datatype($val$$);
  if (!$APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.container_dtype, $APP.cljs$cst$2189$object) && !$APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($_this$$, this.container_dtype)) {
    var $n__5616__auto___77137_n_missing$$ = $APP.cljs.core.count(this.missing);
    if ($n__5616__auto___77137_n_missing$$ >= $APP.cljs.core.count(this.container)) {
      for (var $idx_77138_new_container_77130$$ = tech.v3.dataset.impl.column.make_container($_this$$), $new_missing_77131$$ = tech.v3.dataset.impl.column.datatype__GT_missing_value($_this$$), $_idx_77133$$ = 0;;) {
        if ($_idx_77133$$ < $n__5616__auto___77137_n_missing$$) {
          tech.v3.datatype.protocols._add($idx_77138_new_container_77130$$, $new_missing_77131$$), $_idx_77133$$ += 1;
        } else {
          break;
        }
      }
      this.container = $idx_77138_new_container_77130$$;
      this.container_dtype = $_this$$;
      this.missing_val = $new_missing_77131$$;
    } else {
      $_this$$ = tech.v3.dataset.impl.column.make_container($APP.cljs$cst$2189$object);
      $n__5616__auto___77137_n_missing$$ = $APP.cljs.core.count(this.container);
      for ($idx_77138_new_container_77130$$ = 0;;) {
        if ($idx_77138_new_container_77130$$ < $n__5616__auto___77137_n_missing$$) {
          $APP.cljs.core.truth_(this.missing.has($idx_77138_new_container_77130$$)) ? tech.v3.datatype.protocols._add($_this$$, null) : tech.v3.datatype.protocols._add($_this$$, $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.container, $idx_77138_new_container_77130$$)), $idx_77138_new_container_77130$$ += 1;
        } else {
          break;
        }
      }
      this.container = $_this$$;
      this.container_dtype = $APP.cljs$cst$2189$object;
      this.missing_val = null;
    }
  }
  return tech.v3.datatype.protocols._add(this.container, $val$$);
};
tech.v3.dataset.io.column_parsers.ObjParse.prototype.tech$v3$datatype$protocols$PListLike$_add_all$arity$2 = function($cur_off$jscomp$1_data_dtype_77142_this$$$, $data$jscomp$308_n__5616__auto__$$) {
  var $this$__$1$$ = this, $agetable_data$$ = tech.v3.datatype.as_datatype_accurate_agetable($data$jscomp$308_n__5616__auto__$$);
  if ($APP.cljs.core.truth_($APP.cljs.core.truth_($agetable_data$$) ? $APP.cljs.core.count(this.missing) >= $APP.cljs.core.count(this.container) || $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.container_dtype, tech.v3.datatype.elemwise_datatype($agetable_data$$)) : $agetable_data$$)) {
    if ($APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(this.container_dtype, tech.v3.datatype.elemwise_datatype($agetable_data$$))) {
      $cur_off$jscomp$1_data_dtype_77142_this$$$ = tech.v3.datatype.elemwise_datatype($agetable_data$$);
      $data$jscomp$308_n__5616__auto__$$ = tech.v3.dataset.impl.column.make_container($cur_off$jscomp$1_data_dtype_77142_this$$$);
      for (var $idx$$ = tech.v3.dataset.impl.column.datatype__GT_missing_value($cur_off$jscomp$1_data_dtype_77142_this$$$), $n__5616__auto___77146$$ = $APP.cljs.core.count(this.missing), $_idx_77147$$ = 0;;) {
        if ($_idx_77147$$ < $n__5616__auto___77146$$) {
          tech.v3.datatype.protocols._add($data$jscomp$308_n__5616__auto__$$, $idx$$), $_idx_77147$$ += 1;
        } else {
          break;
        }
      }
      this.container = $data$jscomp$308_n__5616__auto__$$;
      this.container_dtype = $cur_off$jscomp$1_data_dtype_77142_this$$$;
      this.missing_val = $idx$$;
    }
    $cur_off$jscomp$1_data_dtype_77142_this$$$ = $APP.cljs.core.count(this.container);
    tech.v3.datatype.protocols._add_all(this.container, $agetable_data$$);
    if ($APP.cljs.core.truth_(function() {
      var $G__77124$$ = tech.v3.datatype.elemwise_datatype($agetable_data$$), $fexpr__77123$$ = new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$3336$float32, null, $APP.cljs$cst$3329$float64, null, $APP.cljs$cst$2189$object, null], null), null);
      return $fexpr__77123$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__77123$$.cljs$core$IFn$_invoke$arity$1($G__77124$$) : $fexpr__77123$$.call(null, $G__77124$$);
    }())) {
      for ($data$jscomp$308_n__5616__auto__$$ = $APP.cljs.core.count($agetable_data$$), $idx$$ = 0;;) {
        if ($idx$$ < $data$jscomp$308_n__5616__auto__$$) {
          var $dval_77149$$ = $agetable_data$$[$idx$$];
          $APP.cljs.core.truth_(function() {
            var $or__5025__auto__$$ = $dval_77149$$ == null;
            return $or__5025__auto__$$ ? $or__5025__auto__$$ : isNaN($dval_77149$$);
          }()) && this.missing.add($idx$$ + $cur_off$jscomp$1_data_dtype_77142_this$$$);
          $idx$$ += 1;
        } else {
          return null;
        }
      }
    } else {
      return null;
    }
  } else {
    return tech.v3.datatype.iterate_BANG_(function($p1__77122_SHARP_$$) {
      return $this$__$1$$.tech$v3$datatype$protocols$PListLike$_add$arity$2(null, $p1__77122_SHARP_$$);
    }, $data$jscomp$308_n__5616__auto__$$);
  }
};
tech.v3.dataset.io.column_parsers.ObjParse.prototype.tech$v3$dataset$io$column_parsers$PParser$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.io.column_parsers.ObjParse.prototype.tech$v3$dataset$io$column_parsers$PParser$_add_value_BANG_$arity$3 = function($this$$$, $idx$$, $val$$) {
  tech.v3.dataset.io.column_parsers.add_missing_BANG_($idx$$, this.missing_val, this.container, this.missing);
  return this.tech$v3$datatype$protocols$PListLike$_add$arity$2(null, $val$$);
};
tech.v3.dataset.io.column_parsers.ObjParse.prototype.tech$v3$dataset$io$column_parsers$PParser$_finalize$arity$2 = function($_this$jscomp$79_data$jscomp$309_or__5025__auto__$$, $rowcount$$) {
  tech.v3.dataset.io.column_parsers.add_missing_BANG_($rowcount$$, this.missing_val, this.container, this.missing);
  $_this$jscomp$79_data$jscomp$309_or__5025__auto__$$ = tech.v3.datatype.as_datatype_accurate_agetable(this.container);
  $_this$jscomp$79_data$jscomp$309_or__5025__auto__$$ = $APP.cljs.core.truth_($_this$jscomp$79_data$jscomp$309_or__5025__auto__$$) ? $_this$jscomp$79_data$jscomp$309_or__5025__auto__$$ : this.container;
  return tech.v3.dataset.impl.column.new_column($_this$jscomp$79_data$jscomp$309_or__5025__auto__$$, this.missing, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$272$name, this.colname], null), tech.v3.datatype.casting.numeric_type_QMARK_(tech.v3.datatype.elemwise_datatype($_this$jscomp$79_data$jscomp$309_or__5025__auto__$$)));
};
tech.v3.dataset.io.column_parsers.ObjParse.prototype.cljs$core$INamed$_name$arity$1 = function($this$$$) {
  return this.colname;
};
tech.v3.dataset.io.column_parsers.ObjParse.prototype.cljs$core$IIndexed$_nth$arity$2 = function($JSCompiler_temp_const$jscomp$1872_this$$$, $idx$$) {
  $JSCompiler_temp_const$jscomp$1872_this$$$ = $APP.cljs.core;
  var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$1872_this$$$.truth_;
  var $JSCompiler_inline_result$jscomp$1873_or__5025__auto__$$ = ($JSCompiler_inline_result$jscomp$1873_or__5025__auto__$$ = $idx$$ >= $APP.cljs.core.count(this.container)) ? $JSCompiler_inline_result$jscomp$1873_or__5025__auto__$$ : this.missing.has($idx$$);
  return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$1872_this$$$, $JSCompiler_inline_result$jscomp$1873_or__5025__auto__$$) ? this.missing_val : $APP.cljs.core._nth(this.container, $idx$$);
};
tech.v3.dataset.io.column_parsers.ObjParse.prototype.cljs$core$IIndexed$_nth$arity$3 = function($JSCompiler_temp_const$jscomp$1875_this$$$, $idx$$, $dv$$) {
  $JSCompiler_temp_const$jscomp$1875_this$$$ = $APP.cljs.core;
  var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$1875_this$$$.truth_;
  var $JSCompiler_inline_result$jscomp$1876_or__5025__auto__$$ = ($JSCompiler_inline_result$jscomp$1876_or__5025__auto__$$ = $idx$$ >= $APP.cljs.core.count(this.container)) ? $JSCompiler_inline_result$jscomp$1876_or__5025__auto__$$ : this.missing.has($idx$$);
  return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$1875_this$$$, $JSCompiler_inline_result$jscomp$1876_or__5025__auto__$$) ? $dv$$ : $APP.cljs.core._nth(this.container, $idx$$);
};
tech.v3.dataset.io.column_parsers.ObjParse.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.with_meta($APP.cljs$cst$5493$container, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), $APP.cljs.core.with_meta(cljs$cst$5503$container_dtype, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), $APP.cljs.core.with_meta(cljs$cst$5501$missing_val, new $APP.cljs.core.PersistentArrayMap(null, 
  1, [$APP.cljs$cst$1981$unsynchronized_mutable, !0], null)), cljs$cst$5497$missing, cljs$cst$5500$colname], null);
};
tech.v3.dataset.io.column_parsers.ObjParse.cljs$lang$type = !0;
tech.v3.dataset.io.column_parsers.ObjParse.cljs$lang$ctorStr = "tech.v3.dataset.io.column-parsers/ObjParse";
tech.v3.dataset.io.column_parsers.ObjParse.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.dataset.io.column-parsers/ObjParse");
};
tech.v3.dataset.io.column_parsers.__GT_ObjParse = function($container$$, $container_dtype$$, $missing_val$$, $missing$$, $colname$$) {
  return new tech.v3.dataset.io.column_parsers.ObjParse($container$$, $container_dtype$$, $missing_val$$, $missing$$, $colname$$);
};
tech.v3.dataset.io.column_parsers.promotional_object_parser = function($colname$$) {
  return new tech.v3.dataset.io.column_parsers.ObjParse(tech.v3.dataset.impl.column.make_container(cljs$cst$5456$boolean), cljs$cst$5456$boolean, !1, new Set(), $colname$$);
};
tech.v3.dataset.columnwise_map = {};
tech.v3.dataset.columnwise_map.ColAryRowIter = function($col_ary$$, $n_cols$$, $col_idx$$, $row_idx$$) {
  this.col_ary = $col_ary$$;
  this.n_cols = $n_cols$$;
  this.col_idx = $col_idx$$;
  this.row_idx = $row_idx$$;
};
tech.v3.dataset.columnwise_map.ColAryRowIter.prototype.hasNext = function() {
  return this.col_idx < this.n_cols;
};
tech.v3.dataset.columnwise_map.ColAryRowIter.prototype.next = function() {
  var $col_val$$ = this.col_ary.cljs$core$IFn$_invoke$arity$1 ? this.col_ary.cljs$core$IFn$_invoke$arity$1(this.col_idx) : this.col_ary.call(null, this.col_idx);
  this.col_idx += 1;
  return new $APP.cljs.core.MapEntry($APP.cljs.core.name($col_val$$), $col_val$$.cljs$core$IFn$_invoke$arity$1 ? $col_val$$.cljs$core$IFn$_invoke$arity$1(this.row_idx) : $col_val$$.call(null, this.row_idx), null);
};
tech.v3.dataset.columnwise_map.ColAryRowIter.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5504$col_ary, cljs$cst$5505$n_cols, $APP.cljs.core.with_meta(cljs$cst$5506$col_idx, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$10$mutable, !0], null)), cljs$cst$5507$row_idx], null);
};
tech.v3.dataset.columnwise_map.ColAryRowIter.cljs$lang$type = !0;
tech.v3.dataset.columnwise_map.ColAryRowIter.cljs$lang$ctorStr = "tech.v3.dataset.columnwise-map/ColAryRowIter";
tech.v3.dataset.columnwise_map.ColAryRowIter.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.dataset.columnwise-map/ColAryRowIter");
};
tech.v3.dataset.columnwise_map.__GT_ColAryRowIter = function($col_ary$$, $n_cols$$, $col_idx$$, $row_idx$$) {
  return new tech.v3.dataset.columnwise_map.ColAryRowIter($col_ary$$, $n_cols$$, $col_idx$$, $row_idx$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap = function($meta$$, $col_ary$$, $colname__GT_col$$, $row_idx$$, $__hash$$) {
  this.meta = $meta$$;
  this.col_ary = $col_ary$$;
  this.colname__GT_col = $colname__GT_col$$;
  this.row_idx = $row_idx$$;
  this.__hash = $__hash$$;
  this.cljs$lang$protocol_mask$partition0$ = 2164131599;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IFind$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IFind$_find$arity$2 = function($JSCompiler_temp_const$jscomp$1877__coll$$, $k$$) {
  var $JSCompiler_inline_result$jscomp$1878_fexpr__77045$jscomp$inline_7356_temp__5825__auto__$$ = this.colname__GT_col.cljs$core$IFn$_invoke$arity$1 ? this.colname__GT_col.cljs$core$IFn$_invoke$arity$1($k$$) : this.colname__GT_col.call(null, $k$$);
  return $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$1878_fexpr__77045$jscomp$inline_7356_temp__5825__auto__$$) ? ($JSCompiler_temp_const$jscomp$1877__coll$$ = $APP.cljs.core.MapEntry, $JSCompiler_inline_result$jscomp$1878_fexpr__77045$jscomp$inline_7356_temp__5825__auto__$$ = this.col_ary.cljs$core$IFn$_invoke$arity$1 ? this.col_ary.cljs$core$IFn$_invoke$arity$1($JSCompiler_inline_result$jscomp$1878_fexpr__77045$jscomp$inline_7356_temp__5825__auto__$$) : this.col_ary.call(null, $JSCompiler_inline_result$jscomp$1878_fexpr__77045$jscomp$inline_7356_temp__5825__auto__$$), 
  $JSCompiler_inline_result$jscomp$1878_fexpr__77045$jscomp$inline_7356_temp__5825__auto__$$ = $JSCompiler_inline_result$jscomp$1878_fexpr__77045$jscomp$inline_7356_temp__5825__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $JSCompiler_inline_result$jscomp$1878_fexpr__77045$jscomp$inline_7356_temp__5825__auto__$$.cljs$core$IFn$_invoke$arity$1(this.row_idx) : $JSCompiler_inline_result$jscomp$1878_fexpr__77045$jscomp$inline_7356_temp__5825__auto__$$.call(null, this.row_idx), new $JSCompiler_temp_const$jscomp$1877__coll$$($k$$, 
  $JSCompiler_inline_result$jscomp$1878_fexpr__77045$jscomp$inline_7356_temp__5825__auto__$$, null)) : null;
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.toString = function() {
  return $APP.cljs.core.pr_str_STAR_(this);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.equiv = function($other$$) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, $other$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.keys = function() {
  return $APP.cljs.core.es6_iterator($APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.name, tech.v3.dataset.protocols._columns(this)));
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.entries = function() {
  return $APP.cljs.core.es6_entries_iterator(tech.v3.dataset.protocols._columns_as_map(this));
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.values = function() {
  return $APP.cljs.core.es6_iterator(tech.v3.dataset.protocols._columns(this));
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.has = function($k$$) {
  return $APP.cljs.core.contains_QMARK_(this, $k$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.get = function($k$$, $not_found$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k$$, $not_found$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.forEach = function($f$$) {
  for (var $G__77089_seq__77048_seq__77048__$1_temp__5825__auto__$$ = $APP.cljs.core.seq(this), $c__5548__auto__$$ = null, $G__77091_count__77050$$ = 0, $i__77051$$ = 0;;) {
    if ($i__77051$$ < $G__77091_count__77050$$) {
      var $v$$ = $c__5548__auto__$$.cljs$core$IIndexed$_nth$arity$2(null, $i__77051$$), $G__77090_k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($v$$, 0, null);
      $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($v$$, 1, null);
      $f$$.cljs$core$IFn$_invoke$arity$2 ? $f$$.cljs$core$IFn$_invoke$arity$2($v$$, $G__77090_k$$) : $f$$.call(null, $v$$, $G__77090_k$$);
      $i__77051$$ += 1;
    } else {
      if ($G__77089_seq__77048_seq__77048__$1_temp__5825__auto__$$ = $APP.cljs.core.seq($G__77089_seq__77048_seq__77048__$1_temp__5825__auto__$$)) {
        $APP.cljs.core.chunked_seq_QMARK_($G__77089_seq__77048_seq__77048__$1_temp__5825__auto__$$) ? ($c__5548__auto__$$ = $APP.cljs.core.chunk_first($G__77089_seq__77048_seq__77048__$1_temp__5825__auto__$$), $G__77089_seq__77048_seq__77048__$1_temp__5825__auto__$$ = $APP.cljs.core.chunk_rest($G__77089_seq__77048_seq__77048__$1_temp__5825__auto__$$), $G__77090_k$$ = $c__5548__auto__$$, $G__77091_count__77050$$ = $APP.cljs.core.count($c__5548__auto__$$), $c__5548__auto__$$ = $G__77090_k$$) : ($c__5548__auto__$$ = 
        $APP.cljs.core.first($G__77089_seq__77048_seq__77048__$1_temp__5825__auto__$$), $G__77090_k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($c__5548__auto__$$, 0, null), $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($c__5548__auto__$$, 1, null), $f$$.cljs$core$IFn$_invoke$arity$2 ? $f$$.cljs$core$IFn$_invoke$arity$2($v$$, $G__77090_k$$) : $f$$.call(null, $v$$, $G__77090_k$$), $G__77089_seq__77048_seq__77048__$1_temp__5825__auto__$$ = $APP.cljs.core.next($G__77089_seq__77048_seq__77048__$1_temp__5825__auto__$$), 
        $c__5548__auto__$$ = null, $G__77091_count__77050$$ = 0), $i__77051$$ = 0;
      } else {
        return null;
      }
    }
  }
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function($coll$$, $k$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k$$, null);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function($_coll$jscomp$17_temp__5823__auto__$$, $k$$, $fexpr__77067_not_found$$) {
  $_coll$jscomp$17_temp__5823__auto__$$ = this.colname__GT_col.cljs$core$IFn$_invoke$arity$1 ? this.colname__GT_col.cljs$core$IFn$_invoke$arity$1($k$$) : this.colname__GT_col.call(null, $k$$);
  return $APP.cljs.core.truth_($_coll$jscomp$17_temp__5823__auto__$$) ? ($fexpr__77067_not_found$$ = this.col_ary.cljs$core$IFn$_invoke$arity$1 ? this.col_ary.cljs$core$IFn$_invoke$arity$1($_coll$jscomp$17_temp__5823__auto__$$) : this.col_ary.call(null, $_coll$jscomp$17_temp__5823__auto__$$), $fexpr__77067_not_found$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__77067_not_found$$.cljs$core$IFn$_invoke$arity$1(this.row_idx) : $fexpr__77067_not_found$$.call(null, this.row_idx)) : $fexpr__77067_not_found$$;
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function($_coll$jscomp$18_n_cols$$, $f$$, $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$) {
  $_coll$jscomp$18_n_cols$$ = $APP.cljs.core.count(this.col_ary);
  for (var $idx$$ = 0, $G__77068$jscomp$inline_7358_init__$1$$ = $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$;;) {
    if ($idx$$ < $_coll$jscomp$18_n_cols$$) {
      $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$ = this.col_ary.cljs$core$IFn$_invoke$arity$1 ? this.col_ary.cljs$core$IFn$_invoke$arity$1($idx$$) : this.col_ary.call(null, $idx$$);
      var $G__77069$$ = $APP.cljs.core.name($G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$);
      $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$ = $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$.cljs$core$IFn$_invoke$arity$1 ? $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$.cljs$core$IFn$_invoke$arity$1(this.row_idx) : $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$.call(null, this.row_idx);
      $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$ = $f$$.cljs$core$IFn$_invoke$arity$3 ? $f$$.cljs$core$IFn$_invoke$arity$3($G__77068$jscomp$inline_7358_init__$1$$, $G__77069$$, $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$) : $f$$.call(null, $G__77068$jscomp$inline_7358_init__$1$$, $G__77069$$, $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$);
      if ($APP.cljs.core.reduced_QMARK_($G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$)) {
        return $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$;
      }
      $idx$$ += 1;
      $G__77068$jscomp$inline_7358_init__$1$$ = $G__77070$jscomp$inline_7360_G__77102_col$jscomp$86_init$jscomp$93_init__$2$$;
    } else {
      return $G__77068$jscomp$inline_7358_init__$1$$;
    }
  }
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($cmap$$, $writer$$, $opts$$) {
  return $APP.cljs.core._pr_writer($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, this), $writer$$, $opts$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function($_coll$$) {
  return new tech.v3.dataset.columnwise_map.ColAryRowIter(this.col_ary, $APP.cljs.core.count(this.col_ary), 0, this.row_idx);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IMeta$_meta$arity$1 = function($_coll$$) {
  return this.meta;
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function($coll$$) {
  return $APP.cljs.core.with_meta($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, this), this.meta);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$ICounted$_count$arity$1 = function($_coll$$) {
  return $APP.cljs.core.count(this.col_ary);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IHash$_hash$arity$1 = function($coll$jscomp$1125_h__5134__auto__$jscomp$202_h__5134__auto____$1$$) {
  $coll$jscomp$1125_h__5134__auto__$jscomp$202_h__5134__auto____$1$$ = this.__hash;
  return $coll$jscomp$1125_h__5134__auto__$jscomp$202_h__5134__auto____$1$$ != null ? $coll$jscomp$1125_h__5134__auto__$jscomp$202_h__5134__auto____$1$$ : this.__hash = $coll$jscomp$1125_h__5134__auto__$jscomp$202_h__5134__auto____$1$$ = $APP.cljs.core.hash_unordered_coll(this);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($coll$$, $other$$) {
  return $APP.cljs.core.equiv_map(this, $other$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function($_coll$jscomp$22_n_cols$$) {
  $_coll$jscomp$22_n_cols$$ = $APP.cljs.core.count(this.col_ary);
  for (var $G__77103_retval$$ = $APP.cljs.core.transient$($APP.cljs.core.PersistentArrayMap.EMPTY), $G__77104_idx$$ = 0;;) {
    if ($G__77104_idx$$ < $_coll$jscomp$22_n_cols$$) {
      var $col$$ = this.col_ary.cljs$core$IFn$_invoke$arity$1 ? this.col_ary.cljs$core$IFn$_invoke$arity$1($G__77104_idx$$) : this.col_ary.call(null, $G__77104_idx$$);
      $G__77103_retval$$ = $APP.cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3($G__77103_retval$$, $APP.cljs.core.name($col$$), $col$$.cljs$core$IFn$_invoke$arity$1 ? $col$$.cljs$core$IFn$_invoke$arity$1(this.row_idx) : $col$$.call(null, this.row_idx));
      $G__77104_idx$$ += 1;
    } else {
      return $G__77103_retval$$;
    }
  }
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function($_coll$$) {
  return $APP.cljs.core._with_meta($APP.cljs.core.PersistentHashMap.EMPTY, this.meta);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function($this$$$, $rfn$$) {
  var $self__$$ = this;
  return $APP.cljs.core._reduce($self__$$.col_ary, function($acc$$, $G__77072_col$$) {
    $G__77072_col$$ = new $APP.cljs.core.MapEntry($APP.cljs.core.name($G__77072_col$$), $G__77072_col$$.cljs$core$IFn$_invoke$arity$1 ? $G__77072_col$$.cljs$core$IFn$_invoke$arity$1($self__$$.row_idx) : $G__77072_col$$.call(null, $self__$$.row_idx), null);
    return $rfn$$.cljs$core$IFn$_invoke$arity$2 ? $rfn$$.cljs$core$IFn$_invoke$arity$2($acc$$, $G__77072_col$$) : $rfn$$.call(null, $acc$$, $G__77072_col$$);
  });
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function($this$$$, $rfn$$, $acc$$) {
  var $self__$$ = this;
  return $APP.cljs.core._reduce($self__$$.col_ary, function($acc__$1$$, $G__77074_col$$) {
    $G__77074_col$$ = new $APP.cljs.core.MapEntry($APP.cljs.core.name($G__77074_col$$), $G__77074_col$$.cljs$core$IFn$_invoke$arity$1 ? $G__77074_col$$.cljs$core$IFn$_invoke$arity$1($self__$$.row_idx) : $G__77074_col$$.call(null, $self__$$.row_idx), null);
    return $rfn$$.cljs$core$IFn$_invoke$arity$2 ? $rfn$$.cljs$core$IFn$_invoke$arity$2($acc__$1$$, $G__77074_col$$) : $rfn$$.call(null, $acc__$1$$, $G__77074_col$$);
  }, $acc$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function($coll$$, $k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$) {
  $k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$ = this.colname__GT_col.cljs$core$IFn$_invoke$arity$1 ? this.colname__GT_col.cljs$core$IFn$_invoke$arity$1($k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$) : this.colname__GT_col.call(null, $k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$);
  return $APP.cljs.core.truth_($k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$) ? ($coll$$ = $APP.cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(this.col_ary, 0, $k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$), $k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$ = $APP.cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(this.col_ary, $k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$ + 1), $coll$$ = $APP.cljs.core.vec($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($coll$$, 
  $k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$)), $k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($p1__77037_SHARP_$$, $p2__77036_SHARP_$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.name($p2__77036_SHARP_$$), $p1__77037_SHARP_$$], null);
  }, $coll$$)), new tech.v3.dataset.columnwise_map.ColumnwiseMap(this.meta, $coll$$, $k$jscomp$778_new_colmap_right_vec_temp__5823__auto__$$, this.row_idx, null)) : this;
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($coll$$, $k$$, $v$$) {
  return $APP.cljs.core.persistent_BANG_($APP.cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.transient$(this), $k$$, $v$$));
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($_coll$$, $k$$) {
  return $APP.cljs.core._contains_key_QMARK_(this.colname__GT_col, $k$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function($_coll$$) {
  var $self__$$ = this;
  return $APP.cljs.core.count($self__$$.col_ary) > 0 ? $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($col$$) {
    return new $APP.cljs.core.MapEntry($APP.cljs.core.name($col$$), $col$$.cljs$core$IFn$_invoke$arity$1 ? $col$$.cljs$core$IFn$_invoke$arity$1($self__$$.row_idx) : $col$$.call(null, $self__$$.row_idx), null);
  }, $self__$$.col_ary) : null;
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($coll$$, $new_meta$$) {
  return $new_meta$$ === this.meta ? this : new tech.v3.dataset.columnwise_map.ColumnwiseMap($new_meta$$, this.col_ary, this.colname__GT_col, this.row_idx, this.__hash);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$ICollection$_conj$arity$2 = function($coll$$, $entry$$) {
  return $APP.cljs.core._conj($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, this), $entry$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    case 2:
      return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.apply = function($self__$$, $args77042$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args77042$$)));
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IFn$_invoke$arity$1 = function($k$$) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, $k$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.cljs$core$IFn$_invoke$arity$2 = function($k$$, $not_found$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k$$, $not_found$$);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.tech$v3$datatype$protocols$PDatatype$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.columnwise_map.ColumnwiseMap.prototype.tech$v3$datatype$protocols$PDatatype$_datatype$arity$1 = function($_this$$) {
  return cljs$cst$5458$persistent_map;
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$20$meta, cljs$cst$5504$col_ary, cljs$cst$5508$colname__GT_col, cljs$cst$5507$row_idx, $APP.cljs.core.with_meta($APP.cljs$cst$26$__hash, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$10$mutable, !0], null))], null);
};
tech.v3.dataset.columnwise_map.ColumnwiseMap.cljs$lang$type = !0;
tech.v3.dataset.columnwise_map.ColumnwiseMap.cljs$lang$ctorStr = "tech.v3.dataset.columnwise-map/ColumnwiseMap";
tech.v3.dataset.columnwise_map.ColumnwiseMap.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.dataset.columnwise-map/ColumnwiseMap");
};
tech.v3.dataset.columnwise_map.__GT_ColumnwiseMap = function($meta$$, $col_ary$$, $colname__GT_col$$, $row_idx$$, $__hash$$) {
  return new tech.v3.dataset.columnwise_map.ColumnwiseMap($meta$$, $col_ary$$, $colname__GT_col$$, $row_idx$$, $__hash$$);
};
tech.v3.dataset.columnwise_map.columnwise_map = function($col_ary$$, $colname__GT_col$$, $row_idx$$) {
  return new tech.v3.dataset.columnwise_map.ColumnwiseMap(null, $col_ary$$, $colname__GT_col$$, $row_idx$$, null);
};
tech.v3.dataset.impl.dataset = {};
tech.v3.dataset.impl.dataset.extend_data = function($data$$, $n_rows$$) {
  var $n_data$$ = $APP.cljs.core.count($data$$);
  if ($n_data$$ < $n_rows$$) {
    var $dtype$jscomp$31_new_data$$ = tech.v3.datatype.elemwise_datatype($data$$), $missing_val$$ = tech.v3.dataset.impl.column.datatype__GT_missing_value($dtype$jscomp$31_new_data$$);
    $dtype$jscomp$31_new_data$$ = tech.v3.datatype.make_container($dtype$jscomp$31_new_data$$, $n_rows$$);
    tech.v3.datatype.set_value_BANG_($dtype$jscomp$31_new_data$$, 0, $data$$);
    tech.v3.datatype.protocols._set_constant_BANG_($dtype$jscomp$31_new_data$$, $n_data$$, $n_rows$$ - $n_data$$, $missing_val$$);
    return $dtype$jscomp$31_new_data$$;
  }
  return $n_data$$ > $n_rows$$ ? tech.v3.datatype.protocols._sub_buffer($data$$, 0, $n_rows$$) : $data$$;
};
tech.v3.dataset.impl.dataset.scan_missing = function($data$$) {
  var $missing$$ = new Set(), $missing_val$$ = tech.v3.datatype.casting.numeric_type_QMARK_(tech.v3.datatype.elemwise_datatype($data$$)) ? NaN : null;
  tech.v3.datatype.indexed_iterate_BANG_(function($p1__77141_SHARP_$$, $p2__77140_SHARP_$$) {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($missing_val$$, $p2__77140_SHARP_$$) ? $missing$$.add($p1__77141_SHARP_$$) : null;
  }, $data$$);
  return $missing$$;
};
tech.v3.dataset.impl.dataset.scan_data = function($data$$, $colname$$, $n_rows$$) {
  $colname$$ = tech.v3.dataset.io.column_parsers.promotional_object_parser($colname$$);
  tech.v3.datatype.add_all_BANG_($colname$$, $APP.cljs.core.take.cljs$core$IFn$_invoke$arity$2($n_rows$$, $data$$));
  return $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2($colname$$.tech$v3$dataset$io$column_parsers$PParser$_finalize$arity$2(null, $n_rows$$), function($p1__77150_SHARP_$$) {
    return $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.meta($data$$), $p1__77150_SHARP_$$], 0));
  });
};
tech.v3.dataset.impl.dataset.__GT_column = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$315_argseq__5756__auto__$$ = [], $len__5749__auto___77301$$ = arguments.length, $i__5750__auto___77302$$ = 0;;) {
    if ($i__5750__auto___77302$$ < $len__5749__auto___77301$$) {
      $args__5755__auto__$jscomp$315_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77302$$]), $i__5750__auto___77302$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$315_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$315_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$315_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return tech.v3.dataset.impl.dataset.__GT_column.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$315_argseq__5756__auto__$$);
};
tech.v3.dataset.impl.dataset.__GT_column.cljs$core$IFn$_invoke$arity$variadic = function($data$$, $colmap_darg_data__$1$$) {
  var $colname$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($colmap_darg_data__$1$$, 0, null), $n_rows$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($colmap_darg_data__$1$$, 1, null);
  if ($APP.cljs.core.truth_(tech.v3.dataset.protocols._is_column_QMARK_($data$$))) {
    return $data$$;
  }
  $colmap_darg_data__$1$$ = tech.v3.datatype.argtypes.argtype($data$$);
  var $dtype$$ = tech.v3.datatype.elemwise_datatype($data$$), $colname__$1$$ = function() {
    if ($APP.cljs.core.truth_($colname$$)) {
      return $colname$$;
    }
    var $or__5025__auto____$1$$ = cljs$cst$5509$tech_DOT_v3_DOT_dataset_SLASH_name.cljs$core$IFn$_invoke$arity$1($data$$);
    return $APP.cljs.core.truth_($or__5025__auto____$1$$) ? $or__5025__auto____$1$$ : cljs$cst$5510$_unnamed;
  }();
  $colmap_darg_data__$1$$ = $APP.cljs.core.map_QMARK_($data$$) && $APP.cljs.core.contains_QMARK_($data$$, cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data) ? function() {
    var $data_map__$1_map__77158__$1$$ = $APP.cljs.core.__destructure_map($data$$), $data__$1$jscomp$10_missing$jscomp$13_missing__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($data_map__$1_map__77158__$1$$, cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data), $force_datatype_QMARK_$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($data_map__$1_map__77158__$1$$, cljs$cst$5512$tech_DOT_v3_DOT_dataset_SLASH_force_datatype_QMARK_), $n_rows__$1$$ = $APP.cljs.core.truth_($n_rows$$) ? $n_rows$$ : 
    $APP.cljs.core.truth_(tech.v3.datatype.counted_QMARK_($data__$1$jscomp$10_missing$jscomp$13_missing__$1$$)) ? $APP.cljs.core.count($data__$1$jscomp$10_missing$jscomp$13_missing__$1$$) : null;
    $data_map__$1_map__77158__$1$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2189$object, tech.v3.datatype.elemwise_datatype($data__$1$jscomp$10_missing$jscomp$13_missing__$1$$)) && $APP.cljs.core.not($force_datatype_QMARK_$$) ? $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$data_map__$1_map__77158__$1$$, tech.v3.dataset.impl.dataset.scan_data($data__$1$jscomp$10_missing$jscomp$13_missing__$1$$, $colname__$1$$, 
    $n_rows__$1$$)], 0)) : $data_map__$1_map__77158__$1$$;
    $data__$1$jscomp$10_missing$jscomp$13_missing__$1$$ = $data_map__$1_map__77158__$1$$.cljs$core$IFn$_invoke$arity$1 ? $data_map__$1_map__77158__$1$$.cljs$core$IFn$_invoke$arity$1(cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing) : $data_map__$1_map__77158__$1$$.call(null, cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing);
    $data__$1$jscomp$10_missing$jscomp$13_missing__$1$$ = $APP.cljs.core.not($data__$1$jscomp$10_missing$jscomp$13_missing__$1$$) ? tech.v3.dataset.impl.dataset.scan_missing($data_map__$1_map__77158__$1$$.cljs$core$IFn$_invoke$arity$1 ? $data_map__$1_map__77158__$1$$.cljs$core$IFn$_invoke$arity$1(cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data) : $data_map__$1_map__77158__$1$$.call(null, cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data)) : $data__$1$jscomp$10_missing$jscomp$13_missing__$1$$;
    return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic($data_map__$1_map__77158__$1$$, cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing, $data__$1$jscomp$10_missing$jscomp$13_missing__$1$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$5512$tech_DOT_v3_DOT_dataset_SLASH_force_datatype_QMARK_, !0], 0));
  }() : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5463$iterable, $colmap_darg_data__$1$$) || $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2189$object, $dtype$$) ? function() {
    var $n_rows__$1$$ = $APP.cljs.core.truth_($n_rows$$) ? $n_rows$$ : $APP.cljs.core.truth_(tech.v3.datatype.counted_QMARK_($data$$)) ? $APP.cljs.core.count($data$$) : null;
    if (!$APP.cljs.core.truth_($n_rows__$1$$)) {
      throw Error("Potentially infinite iteration");
    }
    return tech.v3.dataset.impl.dataset.scan_data($data$$, $colname__$1$$, $n_rows__$1$$);
  }() : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2639$reader, $colmap_darg_data__$1$$) ? function() {
    var $data__$1$jscomp$11_n_rows__$1$$ = $APP.cljs.core.truth_($n_rows$$) ? $n_rows$$ : $APP.cljs.core.count($data$$);
    $data__$1$jscomp$11_n_rows__$1$$ = tech.v3.dataset.impl.dataset.extend_data($data$$, $data__$1$jscomp$11_n_rows__$1$$);
    return new $APP.cljs.core.PersistentArrayMap(null, 3, [cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data, $data__$1$jscomp$11_n_rows__$1$$, cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing, tech.v3.dataset.impl.dataset.scan_missing($data__$1$jscomp$11_n_rows__$1$$), cljs$cst$5509$tech_DOT_v3_DOT_dataset_SLASH_name, $colname__$1$$], null);
  }() : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5462$scalar, $colmap_darg_data__$1$$) ? function() {
    var $container$$ = tech.v3.datatype.make_container($dtype$$, $n_rows$$), $idx_77306_missing_QMARK_$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($data$$, tech.v3.dataset.impl.column.datatype__GT_missing_value($dtype$$)), $missing$$ = new Set();
    tech.v3.datatype.protocols._set_constant_BANG_($container$$, 0, $n_rows$$, $data$$);
    if ($idx_77306_missing_QMARK_$$) {
      for ($idx_77306_missing_QMARK_$$ = 0;;) {
        if ($idx_77306_missing_QMARK_$$ < $n_rows$$) {
          $missing$$.add($idx_77306_missing_QMARK_$$), $idx_77306_missing_QMARK_$$ += 1;
        } else {
          break;
        }
      }
    }
    return new $APP.cljs.core.PersistentArrayMap(null, 3, [cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data, $container$$, cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing, $missing$$, cljs$cst$5509$tech_DOT_v3_DOT_dataset_SLASH_name, $colname__$1$$], null);
  }() : null;
  if ($APP.cljs.core.truth_(tech.v3.dataset.protocols._is_column_QMARK_($colmap_darg_data__$1$$))) {
    return $colmap_darg_data__$1$$;
  }
  var $map__77159__$1_metadata$$ = $APP.cljs.core.__destructure_map($colmap_darg_data__$1$$), $name$jscomp$241_name__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__77159__$1_metadata$$, cljs$cst$5509$tech_DOT_v3_DOT_dataset_SLASH_name);
  $colmap_darg_data__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__77159__$1_metadata$$, cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data);
  var $missing$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__77159__$1_metadata$$, cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing);
  $map__77159__$1_metadata$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__77159__$1_metadata$$, cljs$cst$5513$tech_DOT_v3_DOT_dataset_SLASH_metadata);
  $missing$$ = $APP.cljs.core.truth_($missing$$) ? $missing$$ : new Set();
  $name$jscomp$241_name__$1$$ = $APP.cljs.core.truth_($colname__$1$$) ? $colname__$1$$ : $APP.cljs.core.truth_($name$jscomp$241_name__$1$$) ? $name$jscomp$241_name__$1$$ : cljs$cst$5510$_unnamed;
  return tech.v3.dataset.impl.column.new_column($colmap_darg_data__$1$$, $missing$$, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($map__77159__$1_metadata$$, $APP.cljs$cst$272$name, $name$jscomp$241_name__$1$$), tech.v3.datatype.casting.numeric_type_QMARK_(tech.v3.datatype.elemwise_datatype($colmap_darg_data__$1$$)));
};
tech.v3.dataset.impl.dataset.__GT_column.cljs$lang$maxFixedArity = 1;
tech.v3.dataset.impl.dataset.__GT_column.cljs$lang$applyTo = function($seq77152_seq77152__$1$$) {
  var $G__77153$$ = $APP.cljs.core.first($seq77152_seq77152__$1$$);
  $seq77152_seq77152__$1$$ = $APP.cljs.core.next($seq77152_seq77152__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77153$$, $seq77152_seq77152__$1$$);
};
tech.v3.dataset.impl.dataset.col_ary__GT_map_entries = function($col_ary$$) {
  var $ne$$ = $APP.cljs.core.count($col_ary$$);
  return $ne$$ === 0 ? null : tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$2($ne$$, function($col$jscomp$91_idx$$) {
    $col$jscomp$91_idx$$ = $col_ary$$.cljs$core$IFn$_invoke$arity$1 ? $col_ary$$.cljs$core$IFn$_invoke$arity$1($col$jscomp$91_idx$$) : $col_ary$$.call(null, $col$jscomp$91_idx$$);
    return new $APP.cljs.core.MapEntry($APP.cljs.core.name($col$jscomp$91_idx$$), $col$jscomp$91_idx$$, null);
  });
};
tech.v3.dataset.impl.dataset.Dataset = function($col_ary$$, $colname__GT_col$$, $metadata$$) {
  this.col_ary = $col_ary$$;
  this.colname__GT_col = $colname__GT_col$$;
  this.metadata = $metadata$$;
  this.cljs$lang$protocol_mask$partition0$ = 2162558799;
  this.cljs$lang$protocol_mask$partition1$ = 143360;
};
tech.v3.dataset.impl.dataset.Dataset.prototype.toString = function() {
  return $APP.cljs.core.pr_str_STAR_(this);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.equiv = function($other$$) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, $other$$);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$ILookup$_lookup$arity$2 = function($coll$$, $k$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k$$, null);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$ILookup$_lookup$arity$3 = function($_coll$jscomp$26_temp__5823__auto__$$, $k$$, $not_found$$) {
  $_coll$jscomp$26_temp__5823__auto__$$ = this.colname__GT_col.cljs$core$IFn$_invoke$arity$1 ? this.colname__GT_col.cljs$core$IFn$_invoke$arity$1($k$$) : this.colname__GT_col.call(null, $k$$);
  return $APP.cljs.core.truth_($_coll$jscomp$26_temp__5823__auto__$$) ? this.col_ary.cljs$core$IFn$_invoke$arity$1 ? this.col_ary.cljs$core$IFn$_invoke$arity$1($_coll$jscomp$26_temp__5823__auto__$$) : this.col_ary.call(null, $_coll$jscomp$26_temp__5823__auto__$$) : $not_found$$;
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PRowCount$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1 = function($_this$jscomp$81_temp__5823__auto__$$) {
  $_this$jscomp$81_temp__5823__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3(this.col_ary, 0, null);
  return $APP.cljs.core.truth_($_this$jscomp$81_temp__5823__auto__$$) ? $APP.cljs.core.count($_this$jscomp$81_temp__5823__auto__$$) : 0;
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function($JSCompiler_temp_const$jscomp$1885_array$$, $writer$$, $G__77170$jscomp$inline_7365_JSCompiler_inline_result$jscomp$1886_opts$$) {
  $JSCompiler_temp_const$jscomp$1885_array$$ = $APP.cljs.core;
  var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$1885_array$$._write, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs$cst$272$name.cljs$core$IFn$_invoke$arity$2(this.metadata, "unnamed")), $JSCompiler_temp_const$jscomp$1$$ = $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1(null)), $JSCompiler_temp_const$jscomp$2$$ = $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.tech$v3$dataset$protocols$PColumnCount$_column_count$arity$1(null)), 
  $JSCompiler_temp_const$jscomp$3$$ = $APP.cljs.core.str, $JSCompiler_temp_const$jscomp$4$$ = $JSCompiler_temp_const$jscomp$3$$.cljs$core$IFn$_invoke$arity$1, $G__77169$$ = this.col_ary;
  $G__77170$jscomp$inline_7365_JSCompiler_inline_result$jscomp$1886_opts$$ = $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$G__77170$jscomp$inline_7365_JSCompiler_inline_result$jscomp$1886_opts$$, this.metadata], 0));
  $G__77170$jscomp$inline_7365_JSCompiler_inline_result$jscomp$1886_opts$$ = tech.v3.dataset.impl.dataset.cols__GT_str.cljs$core$IFn$_invoke$arity$2 ? tech.v3.dataset.impl.dataset.cols__GT_str.cljs$core$IFn$_invoke$arity$2($G__77169$$, $G__77170$jscomp$inline_7365_JSCompiler_inline_result$jscomp$1886_opts$$) : tech.v3.dataset.impl.dataset.cols__GT_str.call(null, $G__77169$$, $G__77170$jscomp$inline_7365_JSCompiler_inline_result$jscomp$1886_opts$$);
  return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$1885_array$$, $writer$$, ["#dataset[", $JSCompiler_temp_const$jscomp$0$$, " [", $JSCompiler_temp_const$jscomp$1$$, " ", $JSCompiler_temp_const$jscomp$2$$, "]\n", $JSCompiler_temp_const$jscomp$4$$.call($JSCompiler_temp_const$jscomp$3$$, $G__77170$jscomp$inline_7365_JSCompiler_inline_result$jscomp$1886_opts$$), "]"].join(""));
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IIterable$_iterator$arity$1 = function($_this$$) {
  return tech.v3.datatype.arrays.nth_iter(tech.v3.dataset.impl.dataset.col_ary__GT_map_entries(this.col_ary));
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IMeta$_meta$arity$1 = function($coll$$) {
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(this.metadata, cljs$cst$5495$row_count, this.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1(null), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$1703$column_count, this.tech$v3$dataset$protocols$PColumnCount$_column_count$arity$1(null)], 0));
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$ICloneable$_clone$arity$1 = function($G__77171__this$$) {
  $G__77171__this$$ = $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.clone, this.col_ary);
  var $G__77172$$ = this.colname__GT_col, $G__77173$$ = this.metadata;
  return tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3 ? tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3($G__77171__this$$, $G__77172$$, $G__77173$$) : tech.v3.dataset.impl.dataset.make_dataset.call(null, $G__77171__this$$, $G__77172$$, $G__77173$$);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PSelectColumns$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PSelectColumns$_select_columns$arity$2 = function($n_col_ary_this$$$, $colnames$$) {
  var $this$__$1$$ = this;
  $n_col_ary_this$$$ = $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function($p1__77165_SHARP_$$) {
    return $this$__$1$$.tech$v3$dataset$protocols$PDataset$_column$arity$2(null, $p1__77165_SHARP_$$);
  }, $colnames$$);
  $colnames$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($idx$$, $cname$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$cname$$, $idx$$], null);
  }, $colnames$$));
  return tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3 ? tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3($n_col_ary_this$$$, $colnames$$, this.metadata) : tech.v3.dataset.impl.dataset.make_dataset.call(null, $n_col_ary_this$$$, $colnames$$, this.metadata);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$ICounted$_count$arity$1 = function($_this$$) {
  return $APP.cljs.core.count(this.col_ary);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IHash$_hash$arity$1 = function($this$$$) {
  return ham_fisted.api.hash_unordered($APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentVector.EMPTY, ham_fisted.lazy_noncaching.map.cljs$core$IFn$_invoke$arity$2(function($col$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.meta($col$$), $APP.cljs$cst$272$name), $col$$], null);
  }, this.col_ary)));
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IEquiv$_equiv$arity$2 = function($JSCompiler_temp_const$jscomp$9370_mycols_this$$$, $other$$) {
  $JSCompiler_temp_const$jscomp$9370_mycols_this$$$ = $APP.cljs.core;
  var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$9370_mycols_this$$$.truth_;
  if ($APP.cljs.core.truth_($other$$)) {
    var $JSCompiler_inline_result$jscomp$9371_and__5023__auto____$1$$ = tech.v3.dataset.impl.dataset.dataset_QMARK_.cljs$core$IFn$_invoke$arity$1 ? tech.v3.dataset.impl.dataset.dataset_QMARK_.cljs$core$IFn$_invoke$arity$1($other$$) : tech.v3.dataset.impl.dataset.dataset_QMARK_.call(null, $other$$);
    $JSCompiler_inline_result$jscomp$9371_and__5023__auto____$1$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$9371_and__5023__auto____$1$$) ? $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1(null), tech.v3.dataset.protocols._row_count($other$$)) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.tech$v3$dataset$protocols$PColumnCount$_column_count$arity$1(null), tech.v3.dataset.protocols._column_count($other$$)) : $JSCompiler_inline_result$jscomp$9371_and__5023__auto____$1$$;
  } else {
    $JSCompiler_inline_result$jscomp$9371_and__5023__auto____$1$$ = $other$$;
  }
  return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$9370_mycols_this$$$, $JSCompiler_inline_result$jscomp$9371_and__5023__auto____$1$$) ? ($JSCompiler_temp_const$jscomp$9370_mycols_this$$$ = this.tech$v3$dataset$protocols$PDataset$_columns$arity$1(null), $other$$ = tech.v3.dataset.protocols._columns($other$$), $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.name, $JSCompiler_temp_const$jscomp$9370_mycols_this$$$), 
  $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.name, $other$$)) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($JSCompiler_temp_const$jscomp$9370_mycols_this$$$, $other$$)) : !1;
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PMissing$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PMissing$_missing$arity$1 = function($_this$jscomp$85_retval$$) {
  $_this$jscomp$85_retval$$ = new Set();
  for (var $c__5548__auto___77322_seq__77174_77311$$ = $APP.cljs.core.seq(this.col_ary), $G__77324_chunk__77175_77312$$ = null, $G__77325_count__77176_77313$$ = 0, $G__77323_i__77177_77314$$ = 0;;) {
    if ($G__77323_i__77177_77314$$ < $G__77325_count__77176_77313$$) {
      var $col_77315_seq__77174_77321__$1$$ = $G__77324_chunk__77175_77312$$.cljs$core$IIndexed$_nth$arity$2(null, $G__77323_i__77177_77314$$);
      tech.v3.datatype.iterate_BANG_(function($seq__77174_77311$$, $chunk__77175_77312$$, $count__77176_77313$$, $i__77177_77314$$, $col_77315$$, $retval$$, $_this__$1$$) {
        return function($p1__77163_SHARP_$$) {
          return $retval$$.add($p1__77163_SHARP_$$);
        };
      }($c__5548__auto___77322_seq__77174_77311$$, $G__77324_chunk__77175_77312$$, $G__77325_count__77176_77313$$, $G__77323_i__77177_77314$$, $col_77315_seq__77174_77321__$1$$, $_this$jscomp$85_retval$$, this), tech.v3.dataset.protocols._missing($col_77315_seq__77174_77321__$1$$));
      $G__77323_i__77177_77314$$ += 1;
    } else {
      var $temp__5825__auto___77320$$ = $APP.cljs.core.seq($c__5548__auto___77322_seq__77174_77311$$);
      if ($temp__5825__auto___77320$$) {
        $col_77315_seq__77174_77321__$1$$ = $temp__5825__auto___77320$$;
        if ($APP.cljs.core.chunked_seq_QMARK_($col_77315_seq__77174_77321__$1$$)) {
          $c__5548__auto___77322_seq__77174_77311$$ = $APP.cljs.core.chunk_first($col_77315_seq__77174_77321__$1$$), $G__77323_i__77177_77314$$ = $APP.cljs.core.chunk_rest($col_77315_seq__77174_77321__$1$$), $G__77324_chunk__77175_77312$$ = $c__5548__auto___77322_seq__77174_77311$$, $G__77325_count__77176_77313$$ = $APP.cljs.core.count($c__5548__auto___77322_seq__77174_77311$$), $c__5548__auto___77322_seq__77174_77311$$ = $G__77323_i__77177_77314$$;
        } else {
          var $col_77327$$ = $APP.cljs.core.first($col_77315_seq__77174_77321__$1$$);
          tech.v3.datatype.iterate_BANG_(function($seq__77174_77311$$, $chunk__77175_77312$$, $count__77176_77313$$, $i__77177_77314$$, $col_77327$$, $seq__77174_77321__$1$$, $temp__5825__auto___77320$$, $retval$$, $_this__$1$$) {
            return function($p1__77163_SHARP_$$) {
              return $retval$$.add($p1__77163_SHARP_$$);
            };
          }($c__5548__auto___77322_seq__77174_77311$$, $G__77324_chunk__77175_77312$$, $G__77325_count__77176_77313$$, $G__77323_i__77177_77314$$, $col_77327$$, $col_77315_seq__77174_77321__$1$$, $temp__5825__auto___77320$$, $_this$jscomp$85_retval$$, this), tech.v3.dataset.protocols._missing($col_77327$$));
          $c__5548__auto___77322_seq__77174_77311$$ = $APP.cljs.core.next($col_77315_seq__77174_77321__$1$$);
          $G__77324_chunk__77175_77312$$ = null;
          $G__77325_count__77176_77313$$ = 0;
        }
        $G__77323_i__77177_77314$$ = 0;
      } else {
        break;
      }
    }
  }
  return $_this$jscomp$85_retval$$;
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function($G__77178__coll$$) {
  $G__77178__coll$$ = $APP.cljs.core.PersistentVector.EMPTY;
  var $G__77179$$ = $APP.cljs.core.PersistentArrayMap.EMPTY, $G__77180$$ = this.metadata;
  return tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3 ? tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3($G__77178__coll$$, $G__77179$$, $G__77180$$) : tech.v3.dataset.impl.dataset.make_dataset.call(null, $G__77178__coll$$, $G__77179$$, $G__77180$$);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$INamed$_name$arity$1 = function($_this$$) {
  return $APP.cljs$cst$272$name.cljs$core$IFn$_invoke$arity$1(this.metadata);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IMap$_dissoc$arity$2 = function($coll$jscomp$1136_n_col_ary$jscomp$1_temp__5823__auto__$$, $k$$) {
  $coll$jscomp$1136_n_col_ary$jscomp$1_temp__5823__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2(this.colname__GT_col, $k$$);
  return $APP.cljs.core.truth_($coll$jscomp$1136_n_col_ary$jscomp$1_temp__5823__auto__$$) ? ($coll$jscomp$1136_n_col_ary$jscomp$1_temp__5823__auto__$$ = $APP.cljs.core.vec($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(this.col_ary, 0, $coll$jscomp$1136_n_col_ary$jscomp$1_temp__5823__auto__$$), $APP.cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(this.col_ary, $coll$jscomp$1136_n_col_ary$jscomp$1_temp__5823__auto__$$ + 1))), $k$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, 
  $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($idx$$, $col$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.name($col$$), $idx$$], null);
  }, $coll$jscomp$1136_n_col_ary$jscomp$1_temp__5823__auto__$$)), tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3 ? tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3($coll$jscomp$1136_n_col_ary$jscomp$1_temp__5823__auto__$$, $k$$, this.metadata) : tech.v3.dataset.impl.dataset.make_dataset.call(null, $coll$jscomp$1136_n_col_ary$jscomp$1_temp__5823__auto__$$, $k$$, this.metadata)) : this;
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$ISeq$_first$arity$1 = function($_this$$) {
  return $APP.cljs.core.first(this.col_ary);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$ISeq$_rest$arity$1 = function($_this$$) {
  return $APP.cljs.core.rest(this.col_ary);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function($_coll$$, $k$$) {
  return $APP.cljs.core._contains_key_QMARK_(this.colname__GT_col, $k$$);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IAssociative$_assoc$arity$3 = function($col_idx$jscomp$6_coll$jscomp$1137_row_count_temp__5823__auto__$$, $k$$, $n_col_ary$jscomp$2_v$jscomp$871_v__$1$$) {
  $col_idx$jscomp$6_coll$jscomp$1137_row_count_temp__5823__auto__$$ = this.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1(null);
  $n_col_ary$jscomp$2_v$jscomp$871_v__$1$$ = $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(tech.v3.dataset.impl.dataset.__GT_column.cljs$core$IFn$_invoke$arity$variadic($n_col_ary$jscomp$2_v$jscomp$871_v__$1$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$k$$, 0 === $col_idx$jscomp$6_coll$jscomp$1137_row_count_temp__5823__auto__$$ ? null : $col_idx$jscomp$6_coll$jscomp$1137_row_count_temp__5823__auto__$$], 0)), $APP.cljs.core.assoc, $APP.cljs$cst$272$name, $k$$);
  $col_idx$jscomp$6_coll$jscomp$1137_row_count_temp__5823__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2(this.colname__GT_col, $k$$);
  if ($APP.cljs.core.truth_($col_idx$jscomp$6_coll$jscomp$1137_row_count_temp__5823__auto__$$)) {
    return $n_col_ary$jscomp$2_v$jscomp$871_v__$1$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.col_ary, $col_idx$jscomp$6_coll$jscomp$1137_row_count_temp__5823__auto__$$, $n_col_ary$jscomp$2_v$jscomp$871_v__$1$$), tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3 ? tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3($n_col_ary$jscomp$2_v$jscomp$871_v__$1$$, this.colname__GT_col, this.metadata) : tech.v3.dataset.impl.dataset.make_dataset.call(null, 
    $n_col_ary$jscomp$2_v$jscomp$871_v__$1$$, this.colname__GT_col, this.metadata);
  }
  $col_idx$jscomp$6_coll$jscomp$1137_row_count_temp__5823__auto__$$ = $APP.cljs.core.count(this.col_ary);
  $n_col_ary$jscomp$2_v$jscomp$871_v__$1$$ = $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2(this.col_ary, $n_col_ary$jscomp$2_v$jscomp$871_v__$1$$);
  $k$$ = $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.colname__GT_col, $k$$, $col_idx$jscomp$6_coll$jscomp$1137_row_count_temp__5823__auto__$$);
  return tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3 ? tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3($n_col_ary$jscomp$2_v$jscomp$871_v__$1$$, $k$$, this.metadata) : tech.v3.dataset.impl.dataset.make_dataset.call(null, $n_col_ary$jscomp$2_v$jscomp$871_v__$1$$, $k$$, this.metadata);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$ISeqable$_seq$arity$1 = function($_this$$) {
  return $APP.cljs.core.seq(tech.v3.dataset.impl.dataset.col_ary__GT_map_entries(this.col_ary));
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($_coll$$, $new_meta$$) {
  return tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3 ? tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3(this.col_ary, this.colname__GT_col, $new_meta$$) : tech.v3.dataset.impl.dataset.make_dataset.call(null, this.col_ary, this.colname__GT_col, $new_meta$$);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$ICollection$_conj$arity$2 = function($coll$$, $o$$) {
  if (!$APP.cljs.core.truth_(function() {
    var $or__5025__auto__$$ = tech.v3.dataset.protocols._is_column_QMARK_($o$$);
    return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : tech.v3.dataset.impl.dataset.dataset_QMARK_.cljs$core$IFn$_invoke$arity$1 ? tech.v3.dataset.impl.dataset.dataset_QMARK_.cljs$core$IFn$_invoke$arity$1($o$$) : tech.v3.dataset.impl.dataset.dataset_QMARK_.call(null, $o$$);
  }())) {
    throw Error("Only columns or datasets can be conj'd onto a dataset");
  }
  return $APP.cljs.core.truth_(tech.v3.dataset.protocols._is_column_QMARK_($o$$)) ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this, $APP.cljs.core.name($o$$), $o$$) : $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($coll__$2$$, $col$$) {
    return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($coll__$2$$, $APP.cljs.core.name($col$$), $col$$);
  }, this, tech.v3.dataset.protocols._columns($o$$));
};
tech.v3.dataset.impl.dataset.Dataset.prototype.call = function($unused__11804__auto__$$) {
  switch(arguments.length - 1) {
    case 1:
      return this.cljs$core$IFn$_invoke$arity$1(arguments[1]);
    case 2:
      return this.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
tech.v3.dataset.impl.dataset.Dataset.prototype.apply = function($self__$$, $args77166$$) {
  return this.call.apply(this, [this].concat($APP.cljs.core.aclone($args77166$$)));
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IFn$_invoke$arity$1 = function($k$$) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, $k$$);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.cljs$core$IFn$_invoke$arity$2 = function($k$$, $not_found$$) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, $k$$, $not_found$$);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PSelectRows$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PSelectRows$_select_rows$arity$2 = function($G__77200_this$$$, $G__77201_rowidxes$$) {
  var $rowidxes__$1$$ = tech.v3.dataset.impl.column.process_row_indexes(this.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1(null), $G__77201_rowidxes$$);
  $G__77200_this$$$ = $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function($p1__77164_SHARP_$$) {
    return tech.v3.dataset.protocols._select_rows($p1__77164_SHARP_$$, $rowidxes__$1$$);
  }, this.col_ary);
  $G__77201_rowidxes$$ = this.colname__GT_col;
  var $G__77202$$ = this.metadata;
  return tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3 ? tech.v3.dataset.impl.dataset.make_dataset.cljs$core$IFn$_invoke$arity$3($G__77200_this$$$, $G__77201_rowidxes$$, $G__77202$$) : tech.v3.dataset.impl.dataset.make_dataset.call(null, $G__77200_this$$$, $G__77201_rowidxes$$, $G__77202$$);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PColumnCount$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PColumnCount$_column_count$arity$1 = function($_this$$) {
  return $APP.cljs.core.count(this.col_ary);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PDataset$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PDataset$_column$arity$2 = function($_ds_temp__5823__auto__$$, $colname$$) {
  $_ds_temp__5823__auto__$$ = this.colname__GT_col.cljs$core$IFn$_invoke$arity$1 ? this.colname__GT_col.cljs$core$IFn$_invoke$arity$1($colname$$) : this.colname__GT_col.call(null, $colname$$);
  if ($APP.cljs.core.truth_($_ds_temp__5823__auto__$$)) {
    return this.col_ary.cljs$core$IFn$_invoke$arity$1 ? this.col_ary.cljs$core$IFn$_invoke$arity$1($_ds_temp__5823__auto__$$) : this.col_ary.call(null, $_ds_temp__5823__auto__$$);
  }
  throw Error(['No column named "', $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($colname$$), '"'].join(""));
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PDataset$_columns$arity$1 = function($_ds$$) {
  return this.col_ary;
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PDataset$_columns_as_map$arity$1 = function($_ds$$) {
  return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p1__77160_SHARP_$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.name($p1__77160_SHARP_$$), $p1__77160_SHARP_$$], null);
  }), this.col_ary);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PDataset$_rows$arity$1 = function($ds$$) {
  var $self__$$ = this;
  return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$3(cljs$cst$5458$persistent_map, this.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1(null), function($p1__77161_SHARP_$$) {
    return tech.v3.dataset.columnwise_map.columnwise_map($self__$$.col_ary, $self__$$.colname__GT_col, $p1__77161_SHARP_$$);
  });
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PDataset$_rowvecs$arity$1 = function($ds$$) {
  var $self__$$ = this;
  return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$3(cljs$cst$5459$persistent_vector, this.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1(null), function($row_idx$$) {
    return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count($self__$$.col_ary), function($col_idx$$) {
      $col_idx$$ = $self__$$.col_ary.cljs$core$IFn$_invoke$arity$1 ? $self__$$.col_ary.cljs$core$IFn$_invoke$arity$1($col_idx$$) : $self__$$.col_ary.call(null, $col_idx$$);
      return $col_idx$$.cljs$core$IFn$_invoke$arity$1 ? $col_idx$$.cljs$core$IFn$_invoke$arity$1($row_idx$$) : $col_idx$$.call(null, $row_idx$$);
    });
  });
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PDataset$_row_at$arity$2 = function($ds$$, $idx$jscomp$336_idx__$1$$) {
  $ds$$ = this.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1(null);
  $idx$jscomp$336_idx__$1$$ = $idx$jscomp$336_idx__$1$$ < 0 ? $ds$$ + $idx$jscomp$336_idx__$1$$ : $idx$jscomp$336_idx__$1$$;
  if (!($idx$jscomp$336_idx__$1$$ < $ds$$)) {
    throw Error(["row-at index out of range: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($idx$jscomp$336_idx__$1$$), " \x3e\x3d ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($ds$$)].join(""));
  }
  return tech.v3.dataset.columnwise_map.columnwise_map(this.col_ary, this.colname__GT_col, $idx$jscomp$336_idx__$1$$);
};
tech.v3.dataset.impl.dataset.Dataset.prototype.tech$v3$dataset$protocols$PDataset$_rowvec_at$arity$2 = function($ds$jscomp$31_rc$$, $idx$$) {
  var $self__$$ = this;
  $ds$jscomp$31_rc$$ = this.tech$v3$dataset$protocols$PRowCount$_row_count$arity$1(null);
  var $idx__$1$$ = $idx$$ < 0 ? $ds$jscomp$31_rc$$ + $idx$$ : $idx$$;
  if (!($idx__$1$$ < $ds$jscomp$31_rc$$)) {
    throw Error(["row-at index out of range: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($idx__$1$$), " \x3e\x3d ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($ds$jscomp$31_rc$$)].join(""));
  }
  return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count($self__$$.col_ary), function($fexpr__77219_p1__77162_SHARP_$$) {
    $fexpr__77219_p1__77162_SHARP_$$ = $self__$$.col_ary.cljs$core$IFn$_invoke$arity$1 ? $self__$$.col_ary.cljs$core$IFn$_invoke$arity$1($fexpr__77219_p1__77162_SHARP_$$) : $self__$$.col_ary.call(null, $fexpr__77219_p1__77162_SHARP_$$);
    return $fexpr__77219_p1__77162_SHARP_$$.cljs$core$IFn$_invoke$arity$1 ? $fexpr__77219_p1__77162_SHARP_$$.cljs$core$IFn$_invoke$arity$1($idx__$1$$) : $fexpr__77219_p1__77162_SHARP_$$.call(null, $idx__$1$$);
  });
};
tech.v3.dataset.impl.dataset.Dataset.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5504$col_ary, cljs$cst$5508$colname__GT_col, cljs$cst$5476$metadata], null);
};
tech.v3.dataset.impl.dataset.Dataset.cljs$lang$type = !0;
tech.v3.dataset.impl.dataset.Dataset.cljs$lang$ctorStr = "tech.v3.dataset.impl.dataset/Dataset";
tech.v3.dataset.impl.dataset.Dataset.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.dataset.impl.dataset/Dataset");
};
tech.v3.dataset.impl.dataset.__GT_Dataset = function($col_ary$$, $colname__GT_col$$, $metadata$$) {
  return new tech.v3.dataset.impl.dataset.Dataset($col_ary$$, $colname__GT_col$$, $metadata$$);
};
tech.v3.dataset.impl.dataset.dataset_QMARK_ = function($x$$) {
  return $x$$ instanceof tech.v3.dataset.impl.dataset.Dataset;
};
tech.v3.dataset.impl.dataset.reader__GT_string_lines = function($reader_data_reader_data__$1$$, $line_policy$$, $column_max_width$$) {
  $reader_data_reader_data__$1$$ = tech.v3.datatype.casting.numeric_type_QMARK_(tech.v3.datatype.elemwise_datatype($reader_data_reader_data__$1$$)) ? tech.v3.datatype.format_sequence.format_sequence.cljs$core$IFn$_invoke$arity$1($reader_data_reader_data__$1$$) : $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__77227_SHARP_$$) {
    return $p1__77227_SHARP_$$ != null ? $p1__77227_SHARP_$$.toString() : null;
  }, $reader_data_reader_data__$1$$);
  return $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function($lines__$1_strval$$) {
    if ($lines__$1_strval$$ == null) {
      return "";
    }
    var $lines$$ = $APP.clojure.string.split_lines($lines__$1_strval$$);
    $lines__$1_strval$$ = typeof $column_max_width$$ === "number" ? function() {
      var $width$$ = $APP.cljs.core.long$($column_max_width$$);
      return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($line$$) {
        return $APP.cljs.core.count($line$$) > $width$$ ? $line$$.substring(0, $width$$) : $line$$;
      }, $lines$$);
    }() : $lines$$;
    var $G__77234__$1$$ = $line_policy$$ instanceof $APP.cljs.core.Keyword ? $line_policy$$.fqn : null;
    switch($G__77234__$1$$) {
      case "single":
        return new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.first($lines__$1_strval$$)], null);
      case "markdown":
        return new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.clojure.string.join.cljs$core$IFn$_invoke$arity$2("\x3cbr\x3e", $lines__$1_strval$$)], null);
      case "repl":
        return $lines__$1_strval$$;
      default:
        throw Error(["No matching clause: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($G__77234__$1$$)].join(""));
    }
  }, $reader_data_reader_data__$1$$);
};
tech.v3.dataset.impl.dataset.rpad_str = function($col_width_n_pad$$, $line$$) {
  var $n_data$$ = $APP.cljs.core.count($line$$);
  $col_width_n_pad$$ = $APP.cljs.core.long$($col_width_n_pad$$) - $n_data$$;
  return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.str, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.repeat.cljs$core$IFn$_invoke$arity$2($col_width_n_pad$$, " "), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$line$$], null)));
};
tech.v3.dataset.impl.dataset.cols__GT_str = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$316_argseq__5756__auto__$$ = [], $len__5749__auto___77345$$ = arguments.length, $i__5750__auto___77346$$ = 0;;) {
    if ($i__5750__auto___77346$$ < $len__5749__auto___77345$$) {
      $args__5755__auto__$jscomp$316_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77346$$]), $i__5750__auto___77346$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$316_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$316_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$316_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return tech.v3.dataset.impl.dataset.cols__GT_str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$316_argseq__5756__auto__$$);
};
tech.v3.dataset.impl.dataset.cols__GT_str.cljs$core$IFn$_invoke$arity$variadic = function($col_ary$$, $p__77258$$) {
  var $options$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__77258$$, 0, null);
  if ($APP.cljs.core.seq($col_ary$$)) {
    var $print_line_policy$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($options$$, cljs$cst$5514$print_line_policy, cljs$cst$5515$repl), $print_column_max_width$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($options$$, cljs$cst$5516$print_column_max_width, 32), $print_column_types_QMARK_$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($options$$, cljs$cst$5517$print_column_types_QMARK_, !1), $n_rows$$ = $APP.cljs.core.count($APP.cljs.core.first($col_ary$$)), $index_range$$ = 
    $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($options$$, cljs$cst$5518$print_index_range, $n_rows$$ < 10 ? $n_rows$$ : 10), $print_style$$ = typeof $index_range$$ === "number" ? $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($options$$, cljs$cst$5519$print_style, cljs$cst$5520$first_last) : null, $vec__77262$$ = typeof $index_range$$ === "number" ? function() {
      var $G__77266__$1_JSCompiler_temp_const$$ = $print_style$$ instanceof $APP.cljs.core.Keyword ? $print_style$$.fqn : null;
      switch($G__77266__$1_JSCompiler_temp_const$$) {
        case "first-last":
          if ($n_rows$$ > $APP.cljs.core.long$($index_range$$)) {
            $G__77266__$1_JSCompiler_temp_const$$ = $APP.cljs.core.quot($APP.cljs.core.long$($index_range$$), 2);
            var $JSCompiler_temp_const$$ = $n_rows$$ - $G__77266__$1_JSCompiler_temp_const$$ - 1;
            return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.vec($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($G__77266__$1_JSCompiler_temp_const$$), $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$2($JSCompiler_temp_const$$, $n_rows$$))), !0], null);
          }
          return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($n_rows$$), !1], null);
        case "first":
          return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($index_range$$ < $n_rows$$ ? $index_range$$ : $n_rows$$), !1], null);
        case "last":
          $G__77266__$1_JSCompiler_temp_const$$ = $APP.cljs.core.PersistentVector;
          $JSCompiler_temp_const$$ = $APP.cljs.core.PersistentVector.EMPTY_NODE;
          var $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.range, $JSCompiler_temp_const$jscomp$1$$ = $JSCompiler_temp_const$jscomp$0$$.cljs$core$IFn$_invoke$arity$2, $y__5111__auto__$$ = $n_rows$$ - $APP.cljs.core.long$($index_range$$);
          return new $G__77266__$1_JSCompiler_temp_const$$(null, 2, 5, $JSCompiler_temp_const$$, [$JSCompiler_temp_const$jscomp$1$$.call($JSCompiler_temp_const$jscomp$0$$, 0 > $y__5111__auto__$$ ? 0 : $y__5111__auto__$$, $n_rows$$), !1], null);
        default:
          throw Error(["No matching clause: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($G__77266__$1_JSCompiler_temp_const$$)].join(""));
      }
    }() : new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$index_range$$, !1], null), $index_range__$1$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__77262$$, 0, null), $ellipses_QMARK_$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($vec__77262$$, 1, null);
    $col_ary$$ = $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function($p1__77242_SHARP_$$) {
      return tech.v3.dataset.protocols._select_rows($p1__77242_SHARP_$$, $index_range__$1$$);
    }, $col_ary$$);
    var $cnames$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$272$name, $APP.cljs.core.meta), $col_ary$$), $column_names$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__77243_SHARP_$$) {
      return $APP.cljs.core.truth_($p1__77243_SHARP_$$) ? $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($p1__77243_SHARP_$$) : null;
    }, $cnames$$), $column_types$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__77244_SHARP_$$) {
      return $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.truth_($print_column_types_QMARK_$$) ? cljs$cst$5496$datatype.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($p1__77244_SHARP_$$)) : null);
    }, $col_ary$$), $string_columns$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__77245_SHARP_$$) {
      return tech.v3.dataset.impl.dataset.reader__GT_string_lines($p1__77245_SHARP_$$, $print_line_policy$$, $print_column_max_width$$);
    }, $col_ary$$), $string_columns__$1$$ = $APP.cljs.core.truth_($ellipses_QMARK_$$) ? function() {
      var $insert_pos$$ = $APP.cljs.core.quot(tech.v3.datatype.ecount($index_range__$1$$), 2);
      return $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($str_col$$) {
        return $APP.cljs.core.vec($APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.take.cljs$core$IFn$_invoke$arity$2($insert_pos$$, $str_col$$), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, ["..."], null)], null), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs.core.drop.cljs$core$IFn$_invoke$arity$2($insert_pos$$, $str_col$$)], 
        0)));
      }, $string_columns$$);
    }() : $string_columns$$, $n_rows__$1$$ = $APP.cljs.core.count($APP.cljs.core.first($string_columns__$1$$)), $row_heights$$ = tech.v3.datatype.make_container($APP.cljs$cst$3337$int32, $APP.cljs.core.repeat.cljs$core$IFn$_invoke$arity$2($n_rows__$1$$, 1)), $column_widths$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$4(function($coltype$$, $colname$$, $coldata$$) {
      return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.max, $APP.cljs.core.count($coltype$$), $APP.cljs.core.count($colname$$), $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($row_idx$$, $lines$$) {
        var $JSCompiler_temp_const$$ = tech.v3.datatype, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.set_value_BANG_, $x__5110__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row_heights$$, $row_idx$$) | 0, $y__5111__auto__$$ = $APP.cljs.core.count($lines$$);
        $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $row_heights$$, $row_idx$$ | 0, $x__5110__auto__$$ > $y__5111__auto__$$ ? $x__5110__auto__$$ : $y__5111__auto__$$);
        return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.max, 0, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count, $lines$$));
      }, $coldata$$));
    }, $column_types$$, $column_names$$, $string_columns__$1$$), $spacers$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__77247_SHARP_$$) {
      return $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.str, $APP.cljs.core.repeat.cljs$core$IFn$_invoke$arity$2($p1__77247_SHARP_$$, "-"));
    }, $column_widths$$), $fmt_row$$ = function($leader$$, $divider$$, $trailer$$, $row$$) {
      return [$APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($leader$$), $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.str, $APP.cljs.core.interpose.cljs$core$IFn$_invoke$arity$2($divider$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$3(function($p1__77248_SHARP_$$, $p2__77249_SHARP_$$) {
        return tech.v3.dataset.impl.dataset.rpad_str($p1__77248_SHARP_$$, $p2__77249_SHARP_$$);
      }, $column_widths$$, $row$$)))), $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($trailer$$)].join("");
    }, $builder$$ = tech.v3.datatype.make_list($APP.cljs$cst$2189$object), $append_line_BANG_$$ = function($p1__77250_SHARP_$$, $p2__77251_SHARP_$$) {
      return tech.v3.datatype.add_BANG_($p1__77250_SHARP_$$, $p2__77251_SHARP_$$);
    };
    $append_line_BANG_$$($builder$$, $fmt_row$$("| ", " | ", " |", $column_names$$));
    $APP.cljs.core.truth_($print_column_types_QMARK_$$) && $append_line_BANG_$$($builder$$, $fmt_row$$("| ", " | ", " |", $column_types$$));
    $append_line_BANG_$$($builder$$, $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.str, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function($spacer$$, $dtype$jscomp$33_numeric_QMARK_$$) {
      $dtype$jscomp$33_numeric_QMARK_$$ = tech.v3.datatype.casting.numeric_type_QMARK_($dtype$jscomp$33_numeric_QMARK_$$);
      return $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, ["|-"], null), $spacer$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$dtype$jscomp$33_numeric_QMARK_$$ ? ":" : "-"], 0));
    }, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$spacers$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.elemwise_datatype, $col_ary$$)], 0)), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, ["|"], null))));
    for (var $idx_77356$$ = 0;;) {
      if ($idx_77356$$ < $n_rows__$1$$) {
        for (var $row_height_77357$$ = $APP.cljs.core.long$($APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($row_heights$$, $idx_77356$$)), $n__5616__auto___77358__$1$$ = $row_height_77357$$, $inner_idx_77359$$ = 0;;) {
          if ($inner_idx_77359$$ < $n__5616__auto___77358__$1$$) {
            var $row_data_77360$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$3(function($inner_idx_77359$$, $idx_77356$$, $n__5616__auto___77358__$1$$, $row_height_77357$$, $n__5616__auto___77355$$, $print_line_policy$$, $print_column_max_width$$, $print_column_types_QMARK_$$, $n_rows$$, $index_range$$, $print_style$$, $vec__77262$$, $index_range__$1$$, $ellipses_QMARK_$$, $col_ary__$1$$, $cnames$$, $column_names$$, $column_types$$, $string_columns$$, $string_columns__$1$$, $n_rows__$1$$, $row_heights$$, 
            $column_widths$$, $spacers$$, $fmt_row$$, $builder$$, $append_line_BANG_$$, $vec__77259$$, $options$$) {
              return function($c_width$$, $column$jscomp$19_lines$$) {
                $column$jscomp$19_lines$$ = $column$jscomp$19_lines$$.cljs$core$IFn$_invoke$arity$1 ? $column$jscomp$19_lines$$.cljs$core$IFn$_invoke$arity$1($idx_77356$$) : $column$jscomp$19_lines$$.call(null, $idx_77356$$);
                return $inner_idx_77359$$ < $APP.cljs.core.count($column$jscomp$19_lines$$) ? 1 === $APP.cljs.core.count($column$jscomp$19_lines$$) ? $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($column$jscomp$19_lines$$, $inner_idx_77359$$) : tech.v3.dataset.impl.dataset.rpad_str($c_width$$, $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($column$jscomp$19_lines$$, $inner_idx_77359$$)) : "";
              };
            }($inner_idx_77359$$, $idx_77356$$, $n__5616__auto___77358__$1$$, $row_height_77357$$, $n_rows__$1$$, $print_line_policy$$, $print_column_max_width$$, $print_column_types_QMARK_$$, $n_rows$$, $index_range$$, $print_style$$, $vec__77262$$, $index_range__$1$$, $ellipses_QMARK_$$, $col_ary$$, $cnames$$, $column_names$$, $column_types$$, $string_columns$$, $string_columns__$1$$, $n_rows__$1$$, $row_heights$$, $column_widths$$, $spacers$$, $fmt_row$$, $builder$$, $append_line_BANG_$$, $p__77258$$, 
            $options$$), $column_widths$$, $string_columns__$1$$);
            $append_line_BANG_$$($builder$$, $fmt_row$$("| ", " | ", " |", $row_data_77360$$));
            $inner_idx_77359$$ += 1;
          } else {
            break;
          }
        }
        $idx_77356$$ += 1;
      } else {
        break;
      }
    }
    return $APP.clojure.string.join.cljs$core$IFn$_invoke$arity$2("\n", $builder$$);
  }
  return null;
};
tech.v3.dataset.impl.dataset.cols__GT_str.cljs$lang$maxFixedArity = 1;
tech.v3.dataset.impl.dataset.cols__GT_str.cljs$lang$applyTo = function($seq77252_seq77252__$1$$) {
  var $G__77253$$ = $APP.cljs.core.first($seq77252_seq77252__$1$$);
  $seq77252_seq77252__$1$$ = $APP.cljs.core.next($seq77252_seq77252__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77253$$, $seq77252_seq77252__$1$$);
};
tech.v3.dataset.impl.dataset.make_dataset = function($col_ary$$, $colmap$$, $metadata$$) {
  return new tech.v3.dataset.impl.dataset.Dataset($col_ary$$, $colmap$$, $metadata$$);
};
tech.v3.dataset.impl.dataset.new_dataset = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 0:
      return tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$0();
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$2 = function($metadata$jscomp$20_metadata__$1$$, $colseq$$) {
  $metadata$jscomp$20_metadata__$1$$ = $APP.cljs.core.map_QMARK_($metadata$jscomp$20_metadata__$1$$) ? $metadata$jscomp$20_metadata__$1$$ : new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$272$name, $metadata$jscomp$20_metadata__$1$$], null);
  $metadata$jscomp$20_metadata__$1$$ = $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$3($metadata$jscomp$20_metadata__$1$$, $APP.cljs$cst$272$name, function($p1__77286_SHARP_$$) {
    return $APP.cljs.core.truth_($p1__77286_SHARP_$$) ? $p1__77286_SHARP_$$ : "unnamed";
  });
  var $coldata$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($coldata$$) {
    var $or__5025__auto__$$ = cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data.cljs$core$IFn$_invoke$arity$1($coldata$$);
    return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : $coldata$$;
  }, $colseq$$), $n_rows$$ = function() {
    var $or__5025__auto__$$ = $APP.cljs.core.seq($colseq$$) ? function() {
      var $temp__5825__auto__$$ = $APP.cljs.core.seq($APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.nil_QMARK_, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($coldata__$1$$) {
        return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2639$reader, tech.v3.datatype.argtypes.argtype($coldata__$1$$)) ? $APP.cljs.core.count($coldata__$1$$) : null;
      }, $coldata$$)));
      return $temp__5825__auto__$$ ? $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.min, $temp__5825__auto__$$) : null;
    }() : null;
    return $APP.cljs.core.truth_($or__5025__auto__$$) ? $or__5025__auto__$$ : 0;
  }(), $any_scalars_QMARK_$$ = $APP.cljs.core.some(function($p1__77287_SHARP_$$) {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.argtypes.argtype($p1__77287_SHARP_$$), cljs$cst$5462$scalar);
  }, $coldata$$), $n_rows__$1$$ = function() {
    var $y__5111__auto__$$ = $APP.cljs.core.truth_($any_scalars_QMARK_$$) ? 1 : 0;
    return $n_rows$$ > $y__5111__auto__$$ ? $n_rows$$ : $y__5111__auto__$$;
  }(), $columns$$ = $APP.cljs.core.vec($APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($idx$$, $col$jscomp$96_coldata__$1$$) {
    $col$jscomp$96_coldata__$1$$ = tech.v3.dataset.impl.dataset.__GT_column.cljs$core$IFn$_invoke$arity$variadic($col$jscomp$96_coldata__$1$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null, $n_rows__$1$$], 0));
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5510$_unnamed, $APP.cljs.core.name($col$jscomp$96_coldata__$1$$)) ? $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4($col$jscomp$96_coldata__$1$$, $APP.cljs.core.assoc, $APP.cljs$cst$272$name, $idx$$) : $col$jscomp$96_coldata__$1$$;
  }, $colseq$$)), $colmap$jscomp$2_names$$ = $APP.cljs.core.set($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.name, $columns$$));
  if (!$APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count($colmap$jscomp$2_names$$), $APP.cljs.core.count($columns$$))) {
    throw Error(["Multiple columns share the same name: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.name, $columns$$))].join(""));
  }
  $colmap$jscomp$2_names$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function($idx$$, $col$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.name($col$$), $idx$$], null);
  }, $columns$$));
  return tech.v3.dataset.impl.dataset.make_dataset($columns$$, $colmap$jscomp$2_names$$, $metadata$jscomp$20_metadata__$1$$);
};
tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$1 = function($colseq$$) {
  return tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$272$name, "unnamed"], null), $colseq$$);
};
tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$0 = function() {
  return tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$272$name, "unnamed"], null), null);
};
tech.v3.dataset.impl.dataset.new_dataset.cljs$lang$maxFixedArity = 2;
var module$node_modules$base64_js$index = $APP.shadow.js.require(1, {});
tech.v3.dataset.options__GT_parser_fn = function($options$$) {
  var $parse_map$$ = ham_fisted.api.mut_map.cljs$core$IFn$_invoke$arity$0(), $parsers$$ = ham_fisted.api.mut_list.cljs$core$IFn$_invoke$arity$0(), $key_fn$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($options$$, cljs$cst$5521$key_fn, $APP.cljs.core.identity), $opt_parse_fn$$ = cljs$cst$5522$parser_fn.cljs$core$IFn$_invoke$arity$1($options$$), $afn$$ = function($JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$) {
    if ($opt_parse_fn$$ == null) {
      $JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$ = tech.v3.dataset.io.column_parsers.promotional_object_parser($JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$);
    } else {
      if ($opt_parse_fn$$ instanceof $APP.cljs.core.Keyword) {
        $JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$ = tech.v3.dataset.io.column_parsers.fixed_type_parser($JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$, $opt_parse_fn$$);
      } else {
        var $temp__5823__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($opt_parse_fn$$, $JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$);
        $JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$ = $APP.cljs.core.truth_($temp__5823__auto__$$) ? tech.v3.dataset.io.column_parsers.fixed_type_parser($JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$, $temp__5823__auto__$$) : tech.v3.dataset.io.column_parsers.promotional_object_parser($JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$);
      }
    }
    $parsers$$.add($JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$);
    return $JSCompiler_temp$jscomp$1891_JSCompiler_temp$jscomp$1892_colname$jscomp$12_rv$$;
  };
  return function() {
    var $G__77562$$ = null, $G__77562__1$$ = function($colname$$) {
      return $parse_map$$.computeIfAbsent($key_fn$$.cljs$core$IFn$_invoke$arity$1 ? $key_fn$$.cljs$core$IFn$_invoke$arity$1($colname$$) : $key_fn$$.call(null, $colname$$), $afn$$);
    }, $G__77562__2$$ = function($columns$$, $colmap$$) {
      var $max_rc__$1$$ = $APP.cljs.core.truth_($colmap$$) ? $colmap$$ : $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.max, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.ecount, $parsers$$));
      $columns$$ = ham_fisted.api.mapv.cljs$core$IFn$_invoke$arity$2(function($p1__77304_SHARP_$$) {
        return tech.v3.dataset.io.column_parsers._finalize($p1__77304_SHARP_$$, $max_rc__$1$$);
      }, $parsers$$);
      $colmap$$ = $APP.cljs.core.persistent_BANG_($APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($acc$$, $idx$$, $v$$) {
        $acc$$.put($APP.cljs.core._name($v$$), $idx$$);
        return $acc$$;
      }), ham_fisted.api.mut_map.cljs$core$IFn$_invoke$arity$0(), $columns$$));
      var $ds_name$$ = function() {
        var $or__5025__auto__$jscomp$676_or__5025__auto____$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($options$$, cljs$cst$5523$dataset_name);
        if ($APP.cljs.core.truth_($or__5025__auto__$jscomp$676_or__5025__auto____$1$$)) {
          return $or__5025__auto__$jscomp$676_or__5025__auto____$1$$;
        }
        $or__5025__auto__$jscomp$676_or__5025__auto____$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($options$$, $APP.cljs$cst$272$name);
        return $APP.cljs.core.truth_($or__5025__auto__$jscomp$676_or__5025__auto____$1$$) ? $or__5025__auto__$jscomp$676_or__5025__auto____$1$$ : cljs$cst$5510$_unnamed;
      }();
      return tech.v3.dataset.impl.dataset.make_dataset($columns$$, $colmap$$, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$272$name, $ds_name$$], null));
    };
    $G__77562$$ = function($placeholder$$, $max_rc$$) {
      switch(arguments.length) {
        case 0:
          return $parsers$$;
        case 1:
          return $G__77562__1$$.call(this, $placeholder$$);
        case 2:
          return $G__77562__2$$.call(this, $placeholder$$, $max_rc$$);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    $G__77562$$.cljs$core$IFn$_invoke$arity$0 = function() {
      return $parsers$$;
    };
    $G__77562$$.cljs$core$IFn$_invoke$arity$1 = $G__77562__1$$;
    $G__77562$$.cljs$core$IFn$_invoke$arity$2 = $G__77562__2$$;
    return $G__77562$$;
  }();
};
tech.v3.dataset.t_tech$v3$dataset77308 = function($options$$, $pfn$$, $rc_STAR_$$, $rfn$$, $parsers$$, $row_fn$$, $meta77309$$) {
  this.options = $options$$;
  this.pfn = $pfn$$;
  this.rc_STAR_ = $rc_STAR_$$;
  this.rfn = $rfn$$;
  this.parsers = $parsers$$;
  this.row_fn = $row_fn$$;
  this.meta77309 = $meta77309$$;
  this.cljs$lang$protocol_mask$partition0$ = 950290;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function($_77310$$, $meta77309__$1$$) {
  return new tech.v3.dataset.t_tech$v3$dataset77308(this.options, this.pfn, this.rc_STAR_, this.rfn, this.parsers, this.row_fn, $meta77309__$1$$);
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.cljs$core$IMeta$_meta$arity$1 = function($_77310$$) {
  return this.meta77309;
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.tech$v3$dataset$protocols$PDatasetParser$ = $APP.cljs.core.PROTOCOL_SENTINEL;
tech.v3.dataset.t_tech$v3$dataset77308.prototype.tech$v3$dataset$protocols$PDatasetParser$_add_row$arity$2 = function($this$$$, $row$$) {
  return this.rfn.cljs$core$IFn$_invoke$arity$2 ? this.rfn.cljs$core$IFn$_invoke$arity$2(null, $row$$) : this.rfn.call(null, null, $row$$);
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.tech$v3$dataset$protocols$PDatasetParser$_add_rows$arity$2 = function($this$$$, $rows$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(this.rfn, null, $rows$$);
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.tech$v3$dataset$protocols$PDatasetParser$_parser__GT_rf$arity$1 = function($p$$) {
  return this.rfn;
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.cljs$core$IDeref$_deref$arity$1 = function($G__77333_p$$) {
  $G__77333_p$$ = $APP.cljs.core.deref(this.rc_STAR_);
  return this.pfn.cljs$core$IFn$_invoke$arity$2 ? this.pfn.cljs$core$IFn$_invoke$arity$2(null, $G__77333_p$$) : this.pfn.call(null, null, $G__77333_p$$);
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.cljs$core$ICounted$_count$arity$1 = function($_this$$) {
  return $APP.cljs.core.deref(this.rc_STAR_);
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.cljs$core$IIndexed$_nth$arity$2 = function($ec$jscomp$2_this$$$, $idx$$) {
  $ec$jscomp$2_this$$$ = $APP.cljs.core.deref(this.rc_STAR_);
  if (0 === $ec$jscomp$2_this$$$) {
    return null;
  }
  var $idx__$1$$ = $idx$$ < 0 ? $idx$$ + $ec$jscomp$2_this$$$ : $idx$$;
  return $idx__$1$$ < 0 || $idx__$1$$ >= $ec$jscomp$2_this$$$ ? null : $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($parser$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core._name($parser$$), $APP.cljs.core._nth($parser$$, $idx__$1$$)], null);
  }), this.parsers);
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.cljs$core$IIndexed$_nth$arity$3 = function($ec$jscomp$3_this$$$, $idx$jscomp$342_idx__$1$$, $dv$$) {
  $ec$jscomp$3_this$$$ = $APP.cljs.core.deref(this.rc_STAR_);
  if (0 === $ec$jscomp$3_this$$$) {
    return $dv$$;
  }
  $idx$jscomp$342_idx__$1$$ = $idx$jscomp$342_idx__$1$$ < 0 ? $idx$jscomp$342_idx__$1$$ + $ec$jscomp$3_this$$$ : $idx$jscomp$342_idx__$1$$;
  return $idx$jscomp$342_idx__$1$$ < 0 || $idx$jscomp$342_idx__$1$$ >= $ec$jscomp$3_this$$$ ? $dv$$ : this.row_fn.cljs$core$IFn$_invoke$arity$1 ? this.row_fn.cljs$core$IFn$_invoke$arity$1($idx$jscomp$342_idx__$1$$) : this.row_fn.call(null, $idx$jscomp$342_idx__$1$$);
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.cljs$core$IReduce$_reduce$arity$2 = function($r$$, $rfn__$1$$) {
  if (0 === $APP.cljs.core.deref(this.rc_STAR_)) {
    return $rfn__$1$$.cljs$core$IFn$_invoke$arity$0 ? $rfn__$1$$.cljs$core$IFn$_invoke$arity$0() : $rfn__$1$$.call(null);
  }
  var $first_STAR_$$ = $APP.cljs.core.volatile_BANG_(!0);
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc$$, $v$$) {
    return $APP.cljs.core.truth_($APP.cljs.core.deref($first_STAR_$$)) ? ($APP.cljs.core.vreset_BANG_($first_STAR_$$, !1), $v$$) : $rfn__$1$$.cljs$core$IFn$_invoke$arity$2 ? $rfn__$1$$.cljs$core$IFn$_invoke$arity$2($acc$$, $v$$) : $rfn__$1$$.call(null, $acc$$, $v$$);
  }, null, this);
};
tech.v3.dataset.t_tech$v3$dataset77308.prototype.cljs$core$IReduce$_reduce$arity$3 = function($ec$jscomp$4_r$$, $rfn__$1$$, $G__77335$jscomp$inline_7374_G__77566_acc$jscomp$161_acc__$1$jscomp$13_acc__$2$$) {
  $ec$jscomp$4_r$$ = $APP.cljs.core.deref(this.rc_STAR_);
  for (var $idx$$ = 0;;) {
    if ($idx$$ < $ec$jscomp$4_r$$) {
      var $G__77336$$ = this.row_fn.cljs$core$IFn$_invoke$arity$1 ? this.row_fn.cljs$core$IFn$_invoke$arity$1($idx$$) : this.row_fn.call(null, $idx$$);
      $G__77335$jscomp$inline_7374_G__77566_acc$jscomp$161_acc__$1$jscomp$13_acc__$2$$ = $rfn__$1$$.cljs$core$IFn$_invoke$arity$2 ? $rfn__$1$$.cljs$core$IFn$_invoke$arity$2($G__77335$jscomp$inline_7374_G__77566_acc$jscomp$161_acc__$1$jscomp$13_acc__$2$$, $G__77336$$) : $rfn__$1$$.call(null, $G__77335$jscomp$inline_7374_G__77566_acc$jscomp$161_acc__$1$jscomp$13_acc__$2$$, $G__77336$$);
      if ($APP.cljs.core.reduced_QMARK_($G__77335$jscomp$inline_7374_G__77566_acc$jscomp$161_acc__$1$jscomp$13_acc__$2$$)) {
        return $APP.cljs.core.deref($G__77335$jscomp$inline_7374_G__77566_acc$jscomp$161_acc__$1$jscomp$13_acc__$2$$);
      }
      $idx$$ += 1;
    } else {
      return $G__77335$jscomp$inline_7374_G__77566_acc$jscomp$161_acc__$1$jscomp$13_acc__$2$$;
    }
  }
};
tech.v3.dataset.t_tech$v3$dataset77308.getBasis = function() {
  return new $APP.cljs.core.PersistentVector(null, 7, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options, $APP.cljs$cst$5524$pfn, cljs$cst$5525$rc_STAR_, cljs$cst$5526$rfn, cljs$cst$5527$parsers, cljs$cst$5528$row_fn, cljs$cst$5529$meta77309], null);
};
tech.v3.dataset.t_tech$v3$dataset77308.cljs$lang$type = !0;
tech.v3.dataset.t_tech$v3$dataset77308.cljs$lang$ctorStr = "tech.v3.dataset/t_tech$v3$dataset77308";
tech.v3.dataset.t_tech$v3$dataset77308.cljs$lang$ctorPrWriter = function($this__5310__auto__$$, $writer__5311__auto__$$, $opt__5312__auto__$$) {
  return $APP.cljs.core._write($writer__5311__auto__$$, "tech.v3.dataset/t_tech$v3$dataset77308");
};
tech.v3.dataset.__GT_t_tech$v3$dataset77308 = function($options$$, $pfn$$, $rc_STAR_$$, $rfn$$, $parsers$$, $row_fn$$, $meta77309$$) {
  return new tech.v3.dataset.t_tech$v3$dataset77308($options$$, $pfn$$, $rc_STAR_$$, $rfn$$, $parsers$$, $row_fn$$, $meta77309$$);
};
tech.v3.dataset.dataset_parser = function($options$$) {
  var $pfn$$ = tech.v3.dataset.options__GT_parser_fn($options$$), $rc_STAR_$$ = $APP.cljs.core.volatile_BANG_(0), $rfn$$ = ham_fisted.api.indexed_accum_fn(function($acc$$, $rowidx$$, $v$$) {
    $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc__$1$$, $e$$) {
      tech.v3.dataset.io.column_parsers._add_value_BANG_($pfn$$($APP.cljs.core._key($e$$)), $rowidx$$, $APP.cljs.core._val($e$$));
      return $acc__$1$$;
    }, null, $v$$);
    $APP.cljs.core.vreset_BANG_($rc_STAR_$$, $rowidx$$ + 1);
    return $acc$$;
  }), $parsers$$ = $pfn$$();
  return new tech.v3.dataset.t_tech$v3$dataset77308($options$$, $pfn$$, $rc_STAR_$$, $rfn$$, $parsers$$, function($idx$$) {
    return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($parser$$) {
      return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core._name($parser$$), $APP.cljs.core._nth($parser$$, $idx$$)], null);
    }), $parsers$$);
  }, $APP.cljs.core.PersistentArrayMap.EMPTY);
};
tech.v3.dataset.mapseq_parser_rf = function($options$$) {
  return function() {
    var $G__77567$$ = null, $G__77567__0$$ = function() {
      var $pfn$$ = tech.v3.dataset.options__GT_parser_fn($options$$), $rc_STAR_$$ = $APP.cljs.core.volatile_BANG_(0), $rfn$$ = ham_fisted.api.indexed_accum_fn(function($acc$$, $rowidx$$, $v$$) {
        $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc__$1$$, $e$$) {
          tech.v3.dataset.io.column_parsers._add_value_BANG_($pfn$$($APP.cljs.core._key($e$$)), $rowidx$$, $APP.cljs.core._val($e$$));
          return $acc__$1$$;
        }, null, $v$$);
        $APP.cljs.core.vreset_BANG_($rc_STAR_$$, $rowidx$$ + 1);
        return $acc$$;
      });
      return function() {
        var $G__77568$$ = null, $G__77568__0$$ = function() {
          return $pfn$$(null, $APP.cljs.core.deref($rc_STAR_$$));
        }, $G__77568__2$$ = function($acc$$, $v$$) {
          return $rfn$$.cljs$core$IFn$_invoke$arity$2 ? $rfn$$.cljs$core$IFn$_invoke$arity$2($acc$$, $v$$) : $rfn$$.call(null, $acc$$, $v$$);
        };
        $G__77568$$ = function($acc$$, $v$$) {
          switch(arguments.length) {
            case 0:
              return $G__77568__0$$.call(this);
            case 2:
              return $G__77568__2$$.call(this, $acc$$, $v$$);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        $G__77568$$.cljs$core$IFn$_invoke$arity$0 = $G__77568__0$$;
        $G__77568$$.cljs$core$IFn$_invoke$arity$2 = $G__77568__2$$;
        return $G__77568$$;
      }();
    }, $G__77567__1$$ = function($acc$$) {
      return $acc$$.cljs$core$IFn$_invoke$arity$0 ? $acc$$.cljs$core$IFn$_invoke$arity$0() : $acc$$.call(null);
    }, $G__77567__2$$ = function($acc$$, $v$$) {
      $acc$$.cljs$core$IFn$_invoke$arity$2 ? $acc$$.cljs$core$IFn$_invoke$arity$2(null, $v$$) : $acc$$.call(null, null, $v$$);
      return $acc$$;
    };
    $G__77567$$ = function($acc$$, $v$$) {
      switch(arguments.length) {
        case 0:
          return $G__77567__0$$.call(this);
        case 1:
          return $G__77567__1$$.call(this, $acc$$);
        case 2:
          return $G__77567__2$$.call(this, $acc$$, $v$$);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    $G__77567$$.cljs$core$IFn$_invoke$arity$0 = $G__77567__0$$;
    $G__77567$$.cljs$core$IFn$_invoke$arity$1 = $G__77567__1$$;
    $G__77567$$.cljs$core$IFn$_invoke$arity$2 = $G__77567__2$$;
    return $G__77567$$;
  }();
};
tech.v3.dataset.parse_mapseq = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return tech.v3.dataset.parse_mapseq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return tech.v3.dataset.parse_mapseq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return tech.v3.dataset.parse_mapseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.dataset.parse_mapseq.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return tech.v3.dataset.parse_mapseq.cljs$core$IFn$_invoke$arity$3(null, null, $data$$);
};
tech.v3.dataset.parse_mapseq.cljs$core$IFn$_invoke$arity$2 = function($xform$$, $data$$) {
  return tech.v3.dataset.parse_mapseq.cljs$core$IFn$_invoke$arity$3($xform$$, null, $data$$);
};
tech.v3.dataset.parse_mapseq.cljs$core$IFn$_invoke$arity$3 = function($xform$$, $options$$, $data$$) {
  return $APP.cljs.core.truth_($xform$$) ? $APP.cljs.core.transduce.cljs$core$IFn$_invoke$arity$3($xform$$, tech.v3.dataset.mapseq_parser_rf($options$$), $data$$) : ham_fisted.api.reduce_reducer(tech.v3.dataset.mapseq_parser_rf($options$$), $data$$);
};
tech.v3.dataset.parse_mapseq.cljs$lang$maxFixedArity = 3;
tech.v3.dataset.parse_colmap = function($options$$, $data$$) {
  var $pfn$$ = tech.v3.dataset.options__GT_parser_fn($options$$);
  $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($acc$$, $e$$) {
    tech.v3.datatype.add_all_BANG_($pfn$$($APP.cljs.core._key($e$$)), $APP.cljs.core._val($e$$));
    return $acc$$;
  }, null, $data$$);
  return $pfn$$(null, null);
};
tech.v3.dataset.dataset_QMARK_ = function($ds$$) {
  return tech.v3.dataset.impl.dataset.dataset_QMARK_($ds$$);
};
tech.v3.dataset.__GT_dataset = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return tech.v3.dataset.__GT_dataset.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return tech.v3.dataset.__GT_dataset.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 0:
      return tech.v3.dataset.__GT_dataset.cljs$core$IFn$_invoke$arity$0();
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.dataset.__GT_dataset.cljs$core$IFn$_invoke$arity$2 = function($data$$, $options$$) {
  if ($data$$ == null) {
    return tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$1($options$$);
  }
  if ($APP.cljs.core.map_QMARK_($data$$)) {
    return tech.v3.dataset.parse_colmap($options$$, $data$$);
  }
  if ($APP.cljs.core.sequential_QMARK_($data$$)) {
    return tech.v3.dataset.parse_mapseq.cljs$core$IFn$_invoke$arity$3(null, $options$$, $data$$);
  }
  throw Error("Unrecognized value for -\x3edataset");
};
tech.v3.dataset.__GT_dataset.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return tech.v3.dataset.__GT_dataset.cljs$core$IFn$_invoke$arity$2($data$$, null);
};
tech.v3.dataset.__GT_dataset.cljs$core$IFn$_invoke$arity$0 = function() {
  return tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$0();
};
tech.v3.dataset.__GT_dataset.cljs$lang$maxFixedArity = 2;
tech.v3.dataset.__GT__GT_dataset = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return tech.v3.dataset.__GT__GT_dataset.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return tech.v3.dataset.__GT__GT_dataset.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.dataset.__GT__GT_dataset.cljs$core$IFn$_invoke$arity$2 = function($options$$, $data$$) {
  return tech.v3.dataset.__GT_dataset.cljs$core$IFn$_invoke$arity$2($data$$, $options$$);
};
tech.v3.dataset.__GT__GT_dataset.cljs$core$IFn$_invoke$arity$1 = function($data$$) {
  return tech.v3.dataset.__GT_dataset.cljs$core$IFn$_invoke$arity$1($data$$);
};
tech.v3.dataset.__GT__GT_dataset.cljs$lang$maxFixedArity = 2;
tech.v3.dataset.mapseq_parser = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return tech.v3.dataset.mapseq_parser.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 0:
      return tech.v3.dataset.mapseq_parser.cljs$core$IFn$_invoke$arity$0();
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.dataset.mapseq_parser.cljs$core$IFn$_invoke$arity$1 = function($options$$) {
  var $rf$$ = tech.v3.dataset.mapseq_parser_rf($options$$), $acc$$ = $rf$$();
  return function() {
    var $G__77575$$ = null, $G__77575__0$$ = function() {
      return $rf$$($acc$$);
    }, $G__77575__1$$ = function($data$$) {
      return $rf$$($acc$$, $data$$);
    };
    $G__77575$$ = function($data$$) {
      switch(arguments.length) {
        case 0:
          return $G__77575__0$$.call(this);
        case 1:
          return $G__77575__1$$.call(this, $data$$);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    $G__77575$$.cljs$core$IFn$_invoke$arity$0 = $G__77575__0$$;
    $G__77575$$.cljs$core$IFn$_invoke$arity$1 = $G__77575__1$$;
    return $G__77575$$;
  }();
};
tech.v3.dataset.mapseq_parser.cljs$core$IFn$_invoke$arity$0 = function() {
  return tech.v3.dataset.mapseq_parser.cljs$core$IFn$_invoke$arity$1(null);
};
tech.v3.dataset.mapseq_parser.cljs$lang$maxFixedArity = 1;
tech.v3.dataset.missing = function($ds_or_col$$) {
  return $APP.cljs.core.truth_($ds_or_col$$) ? $APP.cljs.core.set(tech.v3.dataset.protocols._missing($ds_or_col$$)) : null;
};
tech.v3.dataset.row_count = function($ds_or_col$$) {
  return $ds_or_col$$ == null ? 0 : tech.v3.dataset.protocols._row_count($ds_or_col$$);
};
tech.v3.dataset.column_count = function($ds$$) {
  return $ds$$ == null ? 0 : tech.v3.dataset.protocols._column_count($ds$$);
};
tech.v3.dataset.columns = function($ds$$) {
  return $APP.cljs.core.truth_($ds$$) ? tech.v3.dataset.protocols._columns($ds$$) : null;
};
tech.v3.dataset.cols = function($ds$$) {
  return tech.v3.dataset.columns($ds$$);
};
tech.v3.dataset.column_names = function($ds$$) {
  return $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.name, tech.v3.dataset.protocols._columns($ds$$));
};
tech.v3.dataset.columns_as_map = function($ds$$) {
  return $APP.cljs.core.truth_($ds$$) ? tech.v3.dataset.protocols._columns_as_map($ds$$) : null;
};
tech.v3.dataset.column = function($ds$jscomp$38_temp__5823__auto__$$, $k$$) {
  $ds$jscomp$38_temp__5823__auto__$$ = $ds$jscomp$38_temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $ds$jscomp$38_temp__5823__auto__$$.cljs$core$IFn$_invoke$arity$1($k$$) : $ds$jscomp$38_temp__5823__auto__$$.call(null, $k$$);
  if ($APP.cljs.core.truth_($ds$jscomp$38_temp__5823__auto__$$)) {
    return $ds$jscomp$38_temp__5823__auto__$$;
  }
  throw Error(["Unable to find column ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($k$$)].join(""));
};
tech.v3.dataset.rows = function($ds$$) {
  return tech.v3.dataset.protocols._rows($ds$$);
};
tech.v3.dataset.rowvecs = function($ds$$) {
  return tech.v3.dataset.protocols._rowvecs($ds$$);
};
tech.v3.dataset.row_at = function($ds$$, $idx$$) {
  return tech.v3.dataset.protocols._row_at($ds$$, $idx$$);
};
tech.v3.dataset.rowvec_at = function($ds$$, $idx$$) {
  return tech.v3.dataset.protocols._rowvec_at($ds$$, $idx$$);
};
tech.v3.dataset.select_rows = function($ds$$, $rowidxs$$) {
  return tech.v3.dataset.protocols._select_rows($ds$$, $APP.cljs.core.set_QMARK_($rowidxs$$) || $rowidxs$$ instanceof Set ? tech.v3.datatype.set__GT_ordered_indexes($rowidxs$$) : $rowidxs$$);
};
tech.v3.dataset.remove_rows = function($ds$$, $rowidxs$$) {
  $rowidxs$$ = $rowidxs$$ instanceof Set ? $rowidxs$$ : tech.v3.datatype.__GT_js_set.cljs$core$IFn$_invoke$arity$1($rowidxs$$);
  for (var $newidxes$$ = tech.v3.datatype.make_list($APP.cljs$cst$3337$int32), $n__5616__auto___77576$$ = tech.v3.dataset.row_count($ds$$), $idx_77577$$ = 0;;) {
    if ($idx_77577$$ < $n__5616__auto___77576$$) {
      $APP.cljs.core.truth_($rowidxs$$.has($idx_77577$$)) || tech.v3.datatype.add_BANG_($newidxes$$, $idx_77577$$), $idx_77577$$ += 1;
    } else {
      break;
    }
  }
  return tech.v3.dataset.select_rows($ds$$, $newidxes$$);
};
tech.v3.dataset.remove_missing = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return tech.v3.dataset.remove_missing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return tech.v3.dataset.remove_missing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.dataset.remove_missing.cljs$core$IFn$_invoke$arity$1 = function($ds$$) {
  return tech.v3.dataset.remove_rows($ds$$, tech.v3.dataset.missing($ds$$));
};
tech.v3.dataset.remove_missing.cljs$core$IFn$_invoke$arity$2 = function($ds$$, $colname$$) {
  return tech.v3.dataset.remove_rows($ds$$, tech.v3.dataset.missing(tech.v3.dataset.column($ds$$, $colname$$)));
};
tech.v3.dataset.remove_missing.cljs$lang$maxFixedArity = 2;
tech.v3.dataset.select_missing = function($ds$$) {
  return tech.v3.dataset.select_rows($ds$$, tech.v3.dataset.missing($ds$$));
};
tech.v3.dataset.reverse_rows = function($ds$$) {
  return $APP.cljs.core.empty_QMARK_($ds$$) ? $ds$$ : tech.v3.dataset.select_rows($ds$$, tech.v3.datatype.reverse($APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1(tech.v3.dataset.row_count($ds$$))));
};
tech.v3.dataset.select_columns = function($ds$$, $colnames$$) {
  return tech.v3.dataset.protocols._select_columns($ds$$, $colnames$$);
};
tech.v3.dataset.soft_select_columns = function($ds$$, $colnames$$) {
  var $existing$$ = $APP.cljs.core.set(tech.v3.dataset.column_names($ds$$));
  return tech.v3.dataset.protocols._select_columns($ds$$, $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($existing$$, $colnames$$));
};
tech.v3.dataset.remove_columns = function($ds$$, $colnames$$) {
  $colnames$$ = $APP.cljs.core.set($colnames$$);
  var $ds_colnames$$ = $APP.cljs.core.set(tech.v3.dataset.column_names($ds$$));
  $colnames$$ = $APP.clojure.set.difference.cljs$core$IFn$_invoke$arity$2($ds_colnames$$, $colnames$$);
  return tech.v3.dataset.select_columns($ds$$, $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($colnames$$, tech.v3.dataset.column_names($ds$$)));
};
tech.v3.dataset.rename_columns = function($ds$$, $rename_map$$) {
  return tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.meta($ds$$), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($col$$) {
    var $cname$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$3($rename_map$$, $APP.cljs.core.name($col$$), $APP.cljs.core.name($col$$));
    return $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4($col$$, $APP.cljs.core.assoc, $APP.cljs$cst$272$name, $cname$$);
  }, tech.v3.dataset.columns($ds$$)));
};
tech.v3.dataset.select = function($ds$$, $cols$$, $rows$$) {
  return tech.v3.dataset.select_rows(tech.v3.dataset.select_columns($ds$$, $cols$$), $rows$$);
};
tech.v3.dataset.head = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return tech.v3.dataset.head.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return tech.v3.dataset.head.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.dataset.head.cljs$core$IFn$_invoke$arity$2 = function($ds$$, $n$jscomp$475_n__$1$$) {
  var $y__5114__auto__$$ = tech.v3.dataset.row_count($ds$$);
  $n$jscomp$475_n__$1$$ = $n$jscomp$475_n__$1$$ < $y__5114__auto__$$ ? $n$jscomp$475_n__$1$$ : $y__5114__auto__$$;
  return $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(tech.v3.dataset.select_rows($ds$$, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($n$jscomp$475_n__$1$$)), $APP.cljs.core.assoc, cljs$cst$5518$print_index_range, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($n$jscomp$475_n__$1$$));
};
tech.v3.dataset.head.cljs$core$IFn$_invoke$arity$1 = function($ds$$) {
  return tech.v3.dataset.head.cljs$core$IFn$_invoke$arity$2($ds$$, 5);
};
tech.v3.dataset.head.cljs$lang$maxFixedArity = 2;
tech.v3.dataset.tail = function($var_args$$) {
  switch(arguments.length) {
    case 2:
      return tech.v3.dataset.tail.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return tech.v3.dataset.tail.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.dataset.tail.cljs$core$IFn$_invoke$arity$2 = function($ds$$, $n$jscomp$476_n__$1$$) {
  var $y__5114__auto__$$ = tech.v3.dataset.row_count($ds$$);
  $n$jscomp$476_n__$1$$ = $n$jscomp$476_n__$1$$ < $y__5114__auto__$$ ? $n$jscomp$476_n__$1$$ : $y__5114__auto__$$;
  return $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(tech.v3.dataset.select_rows($ds$$, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$2(tech.v3.dataset.row_count($ds$$) - $n$jscomp$476_n__$1$$, tech.v3.dataset.row_count($ds$$))), $APP.cljs.core.assoc, cljs$cst$5518$print_index_range, $APP.cljs.core.range.cljs$core$IFn$_invoke$arity$1($n$jscomp$476_n__$1$$));
};
tech.v3.dataset.tail.cljs$core$IFn$_invoke$arity$1 = function($ds$$) {
  return tech.v3.dataset.tail.cljs$core$IFn$_invoke$arity$2($ds$$, 5);
};
tech.v3.dataset.tail.cljs$lang$maxFixedArity = 2;
tech.v3.dataset.filter_column = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$317_argseq__5756__auto__$$ = [], $len__5749__auto___77585$$ = arguments.length, $i__5750__auto___77586$$ = 0;;) {
    if ($i__5750__auto___77586$$ < $len__5749__auto___77585$$) {
      $args__5755__auto__$jscomp$317_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77586$$]), $i__5750__auto___77586$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$317_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$317_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$317_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return tech.v3.dataset.filter_column.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$317_argseq__5756__auto__$$);
};
tech.v3.dataset.filter_column.cljs$core$IFn$_invoke$arity$variadic = function($ds$$, $coldata$jscomp$3_colname$$, $p__77394$$) {
  var $pred$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__77394$$, 0, null);
  $coldata$jscomp$3_colname$$ = tech.v3.dataset.column($ds$$, $coldata$jscomp$3_colname$$);
  return $APP.cljs.core.truth_($pred$$) ? tech.v3.dataset.select_rows($ds$$, tech.v3.datatype.argops.argfilter.cljs$core$IFn$_invoke$arity$2(function() {
    var $or__5025__auto__$$ = $APP.cljs.core.fn_QMARK_($pred$$);
    return $or__5025__auto__$$ ? $or__5025__auto__$$ : $pred$$ != null ? $pred$$.cljs$lang$protocol_mask$partition0$ & 1 || $APP.cljs.core.PROTOCOL_SENTINEL === $pred$$.cljs$core$IFn$ ? !0 : $pred$$.cljs$lang$protocol_mask$partition0$ ? !1 : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.IFn, $pred$$) : $APP.cljs.core.native_satisfies_QMARK_($APP.cljs.core.IFn, $pred$$);
  }() ? $pred$$ : function($p1__77389_SHARP_$$) {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($pred$$, $p1__77389_SHARP_$$);
  }, $coldata$jscomp$3_colname$$)) : tech.v3.dataset.select_rows($ds$$, tech.v3.datatype.argops.argfilter.cljs$core$IFn$_invoke$arity$1($coldata$jscomp$3_colname$$));
};
tech.v3.dataset.filter_column.cljs$lang$maxFixedArity = 2;
tech.v3.dataset.filter_column.cljs$lang$applyTo = function($G__77392_seq77390$$) {
  var $G__77391$$ = $APP.cljs.core.first($G__77392_seq77390$$), $seq77390__$1_seq77390__$2$$ = $APP.cljs.core.next($G__77392_seq77390$$);
  $G__77392_seq77390$$ = $APP.cljs.core.first($seq77390__$1_seq77390__$2$$);
  $seq77390__$1_seq77390__$2$$ = $APP.cljs.core.next($seq77390__$1_seq77390__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77391$$, $G__77392_seq77390$$, $seq77390__$1_seq77390__$2$$);
};
tech.v3.dataset.filter = function($ds$$, $pred$$) {
  return tech.v3.dataset.select_rows($ds$$, tech.v3.datatype.argops.argfilter.cljs$core$IFn$_invoke$arity$2($pred$$, tech.v3.dataset.rows($ds$$)));
};
tech.v3.dataset.sort_by_column = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$318_argseq__5756__auto__$$ = [], $len__5749__auto___77589$$ = arguments.length, $i__5750__auto___77590$$ = 0;;) {
    if ($i__5750__auto___77590$$ < $len__5749__auto___77589$$) {
      $args__5755__auto__$jscomp$318_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77590$$]), $i__5750__auto___77590$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$318_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$318_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$318_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return tech.v3.dataset.sort_by_column.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$318_argseq__5756__auto__$$);
};
tech.v3.dataset.sort_by_column.cljs$core$IFn$_invoke$arity$variadic = function($ds$$, $coldata$jscomp$4_colname$$, $options$$) {
  var $sort_op$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($options$$, 0, null);
  $options$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($options$$, 1, null);
  $coldata$jscomp$4_colname$$ = tech.v3.dataset.column($ds$$, $coldata$jscomp$4_colname$$);
  return tech.v3.dataset.select_rows($ds$$, tech.v3.datatype.argops.argsort.cljs$core$IFn$_invoke$arity$3($sort_op$$, $options$$, $coldata$jscomp$4_colname$$));
};
tech.v3.dataset.sort_by_column.cljs$lang$maxFixedArity = 2;
tech.v3.dataset.sort_by_column.cljs$lang$applyTo = function($G__77405_seq77403$$) {
  var $G__77404$$ = $APP.cljs.core.first($G__77405_seq77403$$), $seq77403__$1_seq77403__$2$$ = $APP.cljs.core.next($G__77405_seq77403$$);
  $G__77405_seq77403$$ = $APP.cljs.core.first($seq77403__$1_seq77403__$2$$);
  $seq77403__$1_seq77403__$2$$ = $APP.cljs.core.next($seq77403__$1_seq77403__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77404$$, $G__77405_seq77403$$, $seq77403__$1_seq77403__$2$$);
};
tech.v3.dataset.sort_by = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$319_argseq__5756__auto__$$ = [], $len__5749__auto___77592$$ = arguments.length, $i__5750__auto___77593$$ = 0;;) {
    if ($i__5750__auto___77593$$ < $len__5749__auto___77592$$) {
      $args__5755__auto__$jscomp$319_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77593$$]), $i__5750__auto___77593$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$319_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$319_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$319_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return tech.v3.dataset.sort_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$319_argseq__5756__auto__$$);
};
tech.v3.dataset.sort_by.cljs$core$IFn$_invoke$arity$variadic = function($ds$$, $keyfn$$, $options$$) {
  var $comp$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($options$$, 0, null);
  $options$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($options$$, 1, null);
  var $ds_rows$$ = tech.v3.dataset.rows($ds$$);
  return tech.v3.dataset.select_rows($ds$$, tech.v3.datatype.argops.argsort.cljs$core$IFn$_invoke$arity$3($comp$$, $options$$, tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$2(tech.v3.dataset.row_count($ds$$), function($G__77418_p1__77410_SHARP_$$) {
    $G__77418_p1__77410_SHARP_$$ = $ds_rows$$.cljs$core$IFn$_invoke$arity$1 ? $ds_rows$$.cljs$core$IFn$_invoke$arity$1($G__77418_p1__77410_SHARP_$$) : $ds_rows$$.call(null, $G__77418_p1__77410_SHARP_$$);
    return $keyfn$$.cljs$core$IFn$_invoke$arity$1 ? $keyfn$$.cljs$core$IFn$_invoke$arity$1($G__77418_p1__77410_SHARP_$$) : $keyfn$$.call(null, $G__77418_p1__77410_SHARP_$$);
  })));
};
tech.v3.dataset.sort_by.cljs$lang$maxFixedArity = 2;
tech.v3.dataset.sort_by.cljs$lang$applyTo = function($G__77413_seq77411$$) {
  var $G__77412$$ = $APP.cljs.core.first($G__77413_seq77411$$), $seq77411__$1_seq77411__$2$$ = $APP.cljs.core.next($G__77413_seq77411$$);
  $G__77413_seq77411$$ = $APP.cljs.core.first($seq77411__$1_seq77411__$2$$);
  $seq77411__$1_seq77411__$2$$ = $APP.cljs.core.next($seq77411__$1_seq77411__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77412$$, $G__77413_seq77411$$, $seq77411__$1_seq77411__$2$$);
};
tech.v3.dataset.group_by_column = function($ds$$, $coldata$jscomp$5_colname$$) {
  $coldata$jscomp$5_colname$$ = tech.v3.dataset.column($ds$$, $coldata$jscomp$5_colname$$);
  $coldata$jscomp$5_colname$$ = tech.v3.datatype.argops.arggroup($coldata$jscomp$5_colname$$);
  return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p__77420_v$$) {
    var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__77420_v$$, 0, null);
    $p__77420_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__77420_v$$, 1, null);
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, tech.v3.dataset.select_rows($ds$$, $p__77420_v$$)], null);
  }, $coldata$jscomp$5_colname$$));
};
tech.v3.dataset.group_by = function($ds$$, $f$$) {
  var $ds_rows$$ = tech.v3.dataset.rows($ds$$), $group_map$$ = tech.v3.datatype.argops.arggroup(tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$2(tech.v3.dataset.row_count($ds$$), function($G__77425_p1__77424_SHARP_$$) {
    $G__77425_p1__77424_SHARP_$$ = $ds_rows$$.cljs$core$IFn$_invoke$arity$1 ? $ds_rows$$.cljs$core$IFn$_invoke$arity$1($G__77425_p1__77424_SHARP_$$) : $ds_rows$$.call(null, $G__77425_p1__77424_SHARP_$$);
    return $f$$.cljs$core$IFn$_invoke$arity$1 ? $f$$.cljs$core$IFn$_invoke$arity$1($G__77425_p1__77424_SHARP_$$) : $f$$.call(null, $G__77425_p1__77424_SHARP_$$);
  }));
  return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p__77426_v$$) {
    var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__77426_v$$, 0, null);
    $p__77426_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__77426_v$$, 1, null);
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, tech.v3.dataset.select_rows($ds$$, $p__77426_v$$)], null);
  }, $group_map$$));
};
tech.v3.dataset.unique_by_column = function($ds$$, $coldata$jscomp$6_colname$$) {
  $coldata$jscomp$6_colname$$ = tech.v3.dataset.column($ds$$, $coldata$jscomp$6_colname$$);
  var $passidx$$ = tech.v3.datatype.make_list($APP.cljs$cst$3337$int32);
  if ($APP.cljs.core.truth_(tech.v3.datatype.numeric_type_QMARK_(tech.v3.datatype.elemwise_datatype($coldata$jscomp$6_colname$$)))) {
    var $seen_77597$$ = new Set();
    tech.v3.datatype.indexed_iterate_BANG_(function($idx$$, $val$$) {
      if ($APP.cljs.core.truth_($seen_77597$$.has($val$$))) {
        return null;
      }
      tech.v3.datatype.add_BANG_($passidx$$, $idx$$);
      return $seen_77597$$.add($val$$);
    }, $coldata$jscomp$6_colname$$);
  } else {
    for (var $n_elems_77598$$ = $APP.cljs.core.count($coldata$jscomp$6_colname$$), $G__77602_idx_77599$$ = 0, $G__77603_seen_77600$$ = $APP.cljs.core.transient$($APP.cljs.core.PersistentHashSet.EMPTY);;) {
      if ($G__77602_idx_77599$$ < $n_elems_77598$$) {
        var $val_77601$$ = $coldata$jscomp$6_colname$$.cljs$core$IFn$_invoke$arity$1 ? $coldata$jscomp$6_colname$$.cljs$core$IFn$_invoke$arity$1($G__77602_idx_77599$$) : $coldata$jscomp$6_colname$$.call(null, $G__77602_idx_77599$$);
        $APP.cljs.core.truth_($G__77603_seen_77600$$.cljs$core$IFn$_invoke$arity$1 ? $G__77603_seen_77600$$.cljs$core$IFn$_invoke$arity$1($val_77601$$) : $G__77603_seen_77600$$.call(null, $val_77601$$)) || tech.v3.datatype.add_BANG_($passidx$$, $G__77602_idx_77599$$);
        $G__77602_idx_77599$$ += 1;
        $G__77603_seen_77600$$ = $APP.cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2($G__77603_seen_77600$$, $val_77601$$);
      } else {
        break;
      }
    }
  }
  return tech.v3.dataset.select_rows($ds$$, $passidx$$);
};
tech.v3.dataset.unique_by = function($ds$$, $f$$) {
  for (var $passidx$$ = tech.v3.datatype.make_list($APP.cljs$cst$3337$int32), $rows$$ = tech.v3.dataset.rows($ds$$), $n_elems_77604$$ = tech.v3.dataset.row_count($ds$$), $G__77608_idx_77605$$ = 0, $G__77609_seen_77606$$ = $APP.cljs.core.transient$($APP.cljs.core.PersistentHashSet.EMPTY);;) {
    if ($G__77608_idx_77605$$ < $n_elems_77604$$) {
      var $G__77430$$ = $rows$$.cljs$core$IFn$_invoke$arity$1 ? $rows$$.cljs$core$IFn$_invoke$arity$1($G__77608_idx_77605$$) : $rows$$.call(null, $G__77608_idx_77605$$);
      $G__77430$$ = $f$$.cljs$core$IFn$_invoke$arity$1 ? $f$$.cljs$core$IFn$_invoke$arity$1($G__77430$$) : $f$$.call(null, $G__77430$$);
      $APP.cljs.core.truth_($G__77609_seen_77606$$.cljs$core$IFn$_invoke$arity$1 ? $G__77609_seen_77606$$.cljs$core$IFn$_invoke$arity$1($G__77430$$) : $G__77609_seen_77606$$.call(null, $G__77430$$)) || tech.v3.datatype.add_BANG_($passidx$$, $G__77608_idx_77605$$);
      $G__77608_idx_77605$$ += 1;
      $G__77609_seen_77606$$ = $APP.cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2($G__77609_seen_77606$$, $G__77430$$);
    } else {
      break;
    }
  }
  return tech.v3.dataset.select_rows($ds$$, $passidx$$);
};
tech.v3.dataset.non_empty_col = function($col$$) {
  return $col$$ == null || $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.count($col$$), $APP.cljs.core.count(tech.v3.dataset.missing($col$$))) ? null : $col$$;
};
tech.v3.dataset.concat = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return tech.v3.dataset.concat.cljs$core$IFn$_invoke$arity$0();
    default:
      for (var $args_arr__5774__auto__$jscomp$99_argseq__5775__auto__$$ = [], $len__5749__auto___77611$$ = arguments.length, $i__5750__auto___77612$$ = 0;;) {
        if ($i__5750__auto___77612$$ < $len__5749__auto___77611$$) {
          $args_arr__5774__auto__$jscomp$99_argseq__5775__auto__$$.push(arguments[$i__5750__auto___77612$$]), $i__5750__auto___77612$$ += 1;
        } else {
          break;
        }
      }
      $args_arr__5774__auto__$jscomp$99_argseq__5775__auto__$$ = 1 < $args_arr__5774__auto__$jscomp$99_argseq__5775__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args_arr__5774__auto__$jscomp$99_argseq__5775__auto__$$.slice(1), 0, null) : null;
      return tech.v3.dataset.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args_arr__5774__auto__$jscomp$99_argseq__5775__auto__$$);
  }
};
tech.v3.dataset.concat.cljs$core$IFn$_invoke$arity$variadic = function($ds$$, $args$$) {
  if ($APP.cljs.core.not($APP.cljs.core.seq($args$$))) {
    return $ds$$;
  }
  var $temp__5825__auto__$$ = $APP.cljs.core.seq($APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function($p1__77431_SHARP_$$) {
    return 0 === tech.v3.dataset.row_count($p1__77431_SHARP_$$);
  }, $APP.cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$ds$$], null), $args$$)));
  if ($temp__5825__auto__$$) {
    if ($APP.cljs.core.count($temp__5825__auto__$$) === 1) {
      return $APP.cljs.core.first($temp__5825__auto__$$);
    }
    var $colnames$$ = $APP.cljs.core.distinct.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(tech.v3.dataset.column_names, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$temp__5825__auto__$$], 0))), $n_rows$$ = $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$2($APP.cljs.core._PLUS_, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(tech.v3.dataset.row_count, $temp__5825__auto__$$)), $col_dtypes$$ = $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($colname$$) {
      return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function($lhs_dt$$, $rhs_dt$$) {
        return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($lhs_dt$$, $rhs_dt$$) ? $lhs_dt$$ : tech.v3.datatype.casting.widest_datatype.cljs$core$IFn$_invoke$arity$2($lhs_dt$$, $rhs_dt$$);
      }, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.elemwise_datatype, $APP.cljs.core.remove.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.nil_QMARK_, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(function($p1__77432_SHARP_$$) {
        return tech.v3.dataset.non_empty_col($p1__77432_SHARP_$$.cljs$core$IFn$_invoke$arity$1 ? $p1__77432_SHARP_$$.cljs$core$IFn$_invoke$arity$1($colname$$) : $p1__77432_SHARP_$$.call(null, $colname$$));
      }, $temp__5825__auto__$$))));
    }, $colnames$$);
    return tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.meta($ds$$), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$3(function($colname$$, $coldtype$$) {
      var $container$$ = tech.v3.dataset.impl.column.make_container($coldtype$$), $missing$$ = new Set();
      tech.v3.datatype.ensure_capacity_BANG_($container$$, $n_rows$$);
      for (var $c__5548__auto___77632_mv_77641_seq__77442_77614$$ = $APP.cljs.core.seq($temp__5825__auto__$$), $G__77634_chunk__77443_77615_n__5616__auto___77642$$ = null, $G__77635_count__77444_77616_idx_77643$$ = 0, $G__77633_i__77445_77617$$ = 0;;) {
        if ($G__77633_i__77445_77617$$ < $G__77635_count__77444_77616_idx_77643$$) {
          var $ds_77618__$1_n__5616__auto___77623_offset_77638$$ = $G__77634_chunk__77443_77615_n__5616__auto___77642$$.cljs$core$IIndexed$_nth$arity$2(null, $G__77633_i__77445_77617$$), $offset_77619_seq__77442_77631__$1$$ = $APP.cljs.core.count($container$$), $ds_77637__$1_mv_77622_temp__5823__auto___77620$$ = tech.v3.dataset.non_empty_col($ds_77618__$1_n__5616__auto___77623_offset_77638$$.cljs$core$IFn$_invoke$arity$1 ? $ds_77618__$1_n__5616__auto___77623_offset_77638$$.cljs$core$IFn$_invoke$arity$1($colname$$) : 
          $ds_77618__$1_n__5616__auto___77623_offset_77638$$.call(null, $colname$$));
          if ($APP.cljs.core.truth_($ds_77637__$1_mv_77622_temp__5823__auto___77620$$)) {
            var $ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$ = $ds_77637__$1_mv_77622_temp__5823__auto___77620$$;
            tech.v3.datatype.iterate_BANG_(function($seq__77442_77614$$, $chunk__77443_77615$$, $count__77444_77616$$, $i__77445_77617$$, $ds_col_77621$$, $temp__5823__auto___77620$$, $offset_77619$$, $ds_77618__$1$$, $container$$, $missing$$, $colnames$$, $n_rows$$, $col_dtypes$$, $ds_list$$, $temp__5825__auto__$$) {
              return function($p1__77433_SHARP_$$) {
                return $missing$$.add($offset_77619$$ + $p1__77433_SHARP_$$);
              };
            }($c__5548__auto___77632_mv_77641_seq__77442_77614$$, $G__77634_chunk__77443_77615_n__5616__auto___77642$$, $G__77635_count__77444_77616_idx_77643$$, $G__77633_i__77445_77617$$, $ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$, $ds_77637__$1_mv_77622_temp__5823__auto___77620$$, $offset_77619_seq__77442_77631__$1$$, $ds_77618__$1_n__5616__auto___77623_offset_77638$$, $container$$, $missing$$, $colnames$$, $n_rows$$, $col_dtypes$$, $temp__5825__auto__$$, $temp__5825__auto__$$), tech.v3.dataset.protocols._missing($ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$));
            tech.v3.datatype.add_all_BANG_($container$$, $ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$);
          } else {
            for ($ds_77637__$1_mv_77622_temp__5823__auto___77620$$ = tech.v3.dataset.impl.column.datatype__GT_missing_value($coldtype$$), $ds_77618__$1_n__5616__auto___77623_offset_77638$$ = tech.v3.dataset.row_count($ds_77618__$1_n__5616__auto___77623_offset_77638$$), $ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$ = 0;;) {
              if ($ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$ < $ds_77618__$1_n__5616__auto___77623_offset_77638$$) {
                $missing$$.add($offset_77619_seq__77442_77631__$1$$ + $ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$), tech.v3.datatype.add_BANG_($container$$, $ds_77637__$1_mv_77622_temp__5823__auto___77620$$), $ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$ += 1;
              } else {
                break;
              }
            }
          }
          $G__77633_i__77445_77617$$ += 1;
        } else {
          if ($ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$ = $APP.cljs.core.seq($c__5548__auto___77632_mv_77641_seq__77442_77614$$)) {
            $offset_77619_seq__77442_77631__$1$$ = $ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$;
            if ($APP.cljs.core.chunked_seq_QMARK_($offset_77619_seq__77442_77631__$1$$)) {
              $c__5548__auto___77632_mv_77641_seq__77442_77614$$ = $APP.cljs.core.chunk_first($offset_77619_seq__77442_77631__$1$$), $G__77633_i__77445_77617$$ = $APP.cljs.core.chunk_rest($offset_77619_seq__77442_77631__$1$$), $G__77634_chunk__77443_77615_n__5616__auto___77642$$ = $c__5548__auto___77632_mv_77641_seq__77442_77614$$, $G__77635_count__77444_77616_idx_77643$$ = $APP.cljs.core.count($c__5548__auto___77632_mv_77641_seq__77442_77614$$), $c__5548__auto___77632_mv_77641_seq__77442_77614$$ = 
              $G__77633_i__77445_77617$$;
            } else {
              $ds_77637__$1_mv_77622_temp__5823__auto___77620$$ = $APP.cljs.core.first($offset_77619_seq__77442_77631__$1$$);
              $ds_77618__$1_n__5616__auto___77623_offset_77638$$ = $APP.cljs.core.count($container$$);
              var $temp__5823__auto___77639$$ = tech.v3.dataset.non_empty_col($ds_77637__$1_mv_77622_temp__5823__auto___77620$$.cljs$core$IFn$_invoke$arity$1 ? $ds_77637__$1_mv_77622_temp__5823__auto___77620$$.cljs$core$IFn$_invoke$arity$1($colname$$) : $ds_77637__$1_mv_77622_temp__5823__auto___77620$$.call(null, $colname$$));
              if ($APP.cljs.core.truth_($temp__5823__auto___77639$$)) {
                var $ds_col_77640$$ = $temp__5823__auto___77639$$;
                tech.v3.datatype.iterate_BANG_(function($seq__77442_77614$$, $chunk__77443_77615$$, $count__77444_77616$$, $i__77445_77617$$, $ds_col_77640$$, $temp__5823__auto___77639$$, $offset_77638$$, $ds_77637__$1$$, $seq__77442_77631__$1$$, $temp__5825__auto___77630__$1$$, $container$$, $missing$$, $colnames$$, $n_rows$$, $col_dtypes$$, $ds_list$$, $temp__5825__auto__$$) {
                  return function($p1__77433_SHARP_$$) {
                    return $missing$$.add($offset_77638$$ + $p1__77433_SHARP_$$);
                  };
                }($c__5548__auto___77632_mv_77641_seq__77442_77614$$, $G__77634_chunk__77443_77615_n__5616__auto___77642$$, $G__77635_count__77444_77616_idx_77643$$, $G__77633_i__77445_77617$$, $ds_col_77640$$, $temp__5823__auto___77639$$, $ds_77618__$1_n__5616__auto___77623_offset_77638$$, $ds_77637__$1_mv_77622_temp__5823__auto___77620$$, $offset_77619_seq__77442_77631__$1$$, $ds_col_77621_idx_77624_temp__5825__auto___77630__$1$$, $container$$, $missing$$, $colnames$$, $n_rows$$, $col_dtypes$$, 
                $temp__5825__auto__$$, $temp__5825__auto__$$), tech.v3.dataset.protocols._missing($ds_col_77640$$));
                tech.v3.datatype.add_all_BANG_($container$$, $ds_col_77640$$);
              } else {
                for ($c__5548__auto___77632_mv_77641_seq__77442_77614$$ = tech.v3.dataset.impl.column.datatype__GT_missing_value($coldtype$$), $G__77634_chunk__77443_77615_n__5616__auto___77642$$ = tech.v3.dataset.row_count($ds_77637__$1_mv_77622_temp__5823__auto___77620$$), $G__77635_count__77444_77616_idx_77643$$ = 0;;) {
                  if ($G__77635_count__77444_77616_idx_77643$$ < $G__77634_chunk__77443_77615_n__5616__auto___77642$$) {
                    $missing$$.add($ds_77618__$1_n__5616__auto___77623_offset_77638$$ + $G__77635_count__77444_77616_idx_77643$$), tech.v3.datatype.add_BANG_($container$$, $c__5548__auto___77632_mv_77641_seq__77442_77614$$), $G__77635_count__77444_77616_idx_77643$$ += 1;
                  } else {
                    break;
                  }
                }
              }
              $c__5548__auto___77632_mv_77641_seq__77442_77614$$ = $APP.cljs.core.next($offset_77619_seq__77442_77631__$1$$);
              $G__77634_chunk__77443_77615_n__5616__auto___77642$$ = null;
              $G__77635_count__77444_77616_idx_77643$$ = 0;
            }
            $G__77633_i__77445_77617$$ = 0;
          } else {
            break;
          }
        }
      }
      return new $APP.cljs.core.PersistentArrayMap(null, 3, [cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data, $container$$, cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing, $missing$$, cljs$cst$5509$tech_DOT_v3_DOT_dataset_SLASH_name, $colname$$], null);
    }, $colnames$$, $col_dtypes$$));
  }
  return null;
};
tech.v3.dataset.concat.cljs$lang$applyTo = function($seq77435_seq77435__$1$$) {
  var $G__77436$$ = $APP.cljs.core.first($seq77435_seq77435__$1$$);
  $seq77435_seq77435__$1$$ = $APP.cljs.core.next($seq77435_seq77435__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77436$$, $seq77435_seq77435__$1$$);
};
tech.v3.dataset.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return null;
};
tech.v3.dataset.concat.cljs$lang$maxFixedArity = 1;
tech.v3.dataset.merge_by_column = function($lhs$$, $rhs$$, $colname$$) {
  return tech.v3.dataset.concat.cljs$core$IFn$_invoke$arity$variadic($lhs$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tech.v3.dataset.filter_column.cljs$core$IFn$_invoke$arity$variadic($rhs$$, $colname$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tech.v3.datatype.set_predicate_complement(tech.v3.datatype.__GT_set(tech.v3.dataset.column($lhs$$, $colname$$)))], 0))], 0));
};
tech.v3.dataset.simple_lerp = function($col_dtype$$, $lhs$$, $rhs$$, $n_missing$$) {
  if ($lhs$$ == null && $rhs$$ == null) {
    return $APP.cljs.core.repeat.cljs$core$IFn$_invoke$arity$2($n_missing$$, 0);
  }
  if ($lhs$$ == null) {
    return $APP.cljs.core.repeat.cljs$core$IFn$_invoke$arity$2($n_missing$$, $rhs$$);
  }
  if ($rhs$$ == null) {
    return $APP.cljs.core.repeat.cljs$core$IFn$_invoke$arity$2($n_missing$$, $lhs$$);
  }
  var $val_rng$$ = $rhs$$ - $lhs$$;
  return tech.v3.datatype.reify_reader.cljs$core$IFn$_invoke$arity$3($col_dtype$$, $n_missing$$, function($idx$$) {
    return $lhs$$ + ($idx$$ + 1) / ($n_missing$$ + 1) * $val_rng$$;
  });
};
tech.v3.dataset.replace_missing = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$320_argseq__5756__auto__$$ = [], $len__5749__auto___77649$$ = arguments.length, $i__5750__auto___77650$$ = 0;;) {
    if ($i__5750__auto___77650$$ < $len__5749__auto___77649$$) {
      $args__5755__auto__$jscomp$320_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77650$$]), $i__5750__auto___77650$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$320_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$320_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$320_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return tech.v3.dataset.replace_missing.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$320_argseq__5756__auto__$$);
};
tech.v3.dataset.replace_missing.cljs$core$IFn$_invoke$arity$variadic = function($ds$$, $colnames$jscomp$9_colnames__$1$$, $p__77461_replace_cmd$$) {
  $p__77461_replace_cmd$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__77461_replace_cmd$$, 0, null);
  $colnames$jscomp$9_colnames__$1$$ = $APP.cljs.core.sequential_QMARK_($colnames$jscomp$9_colnames__$1$$) ? $colnames$jscomp$9_colnames__$1$$ : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$365$all, $colnames$jscomp$9_colnames__$1$$) ? tech.v3.dataset.column_names($ds$$) : new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$colnames$jscomp$9_colnames__$1$$], null);
  var $replace_cmd__$1$$ = $APP.cljs.core.truth_($p__77461_replace_cmd$$) ? $p__77461_replace_cmd$$ : $APP.cljs$cst$1655$first, $replace_fn$$ = function() {
    switch($replace_cmd__$1$$ instanceof $APP.cljs.core.Keyword ? $replace_cmd__$1$$.fqn : null) {
      case "first":
        return function($JSCompiler_inline_result$jscomp$9374_col_dtype$$, $lhs$jscomp$30_temp__5823__auto__$$, $rhs$$, $n_missing$$) {
          var $JSCompiler_temp_const$$ = $APP.cljs.core.repeat, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$2;
          $lhs$jscomp$30_temp__5823__auto__$$ = $APP.cljs.core.truth_($lhs$jscomp$30_temp__5823__auto__$$) ? $lhs$jscomp$30_temp__5823__auto__$$ : $rhs$$;
          if ($APP.cljs.core.truth_($lhs$jscomp$30_temp__5823__auto__$$)) {
            $JSCompiler_inline_result$jscomp$9374_col_dtype$$ = $lhs$jscomp$30_temp__5823__auto__$$;
          } else {
            if ($APP.cljs.core.truth_(tech.v3.datatype.numeric_type_QMARK_($JSCompiler_inline_result$jscomp$9374_col_dtype$$))) {
              $JSCompiler_inline_result$jscomp$9374_col_dtype$$ = 0;
            } else {
              throw Error("Entire column is missing :first is selected");
            }
          }
          return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $n_missing$$, $JSCompiler_inline_result$jscomp$9374_col_dtype$$);
        };
      case "last":
        return function($JSCompiler_inline_result$jscomp$9377_col_dtype$$, $lhs$jscomp$31_temp__5823__auto__$$, $rhs$$, $n_missing$$) {
          var $JSCompiler_temp_const$$ = $APP.cljs.core.repeat, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$2;
          $lhs$jscomp$31_temp__5823__auto__$$ = $APP.cljs.core.truth_($rhs$$) ? $rhs$$ : $lhs$jscomp$31_temp__5823__auto__$$;
          if ($APP.cljs.core.truth_($lhs$jscomp$31_temp__5823__auto__$$)) {
            $JSCompiler_inline_result$jscomp$9377_col_dtype$$ = $lhs$jscomp$31_temp__5823__auto__$$;
          } else {
            if ($APP.cljs.core.truth_(tech.v3.datatype.numeric_type_QMARK_($JSCompiler_inline_result$jscomp$9377_col_dtype$$))) {
              $JSCompiler_inline_result$jscomp$9377_col_dtype$$ = 0;
            } else {
              throw Error("Entire column is missing :last is selected");
            }
          }
          return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $n_missing$$, $JSCompiler_inline_result$jscomp$9377_col_dtype$$);
        };
      case "lerp":
        return tech.v3.dataset.simple_lerp;
      default:
        return $APP.cljs.core.fn_QMARK_($replace_cmd__$1$$) ? $replace_cmd__$1$$ : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1429$value, $APP.cljs.core.first($replace_cmd__$1$$)) ? function($_dt$$, $_lhs$$, $_rhs$$, $n_missing$$) {
          return $APP.cljs.core.repeat.cljs$core$IFn$_invoke$arity$2($n_missing$$, $APP.cljs.core.second($replace_cmd__$1$$));
        } : null;
    }
  }();
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($ds__$1$$, $colname$$) {
    var $coldata$$ = tech.v3.dataset.column($ds__$1$$, $colname$$), $colmissing$$ = tech.v3.dataset.protocols._missing($coldata$$), $n_elems$$ = $APP.cljs.core.count($coldata$$), $col_dtype$$ = tech.v3.datatype.elemwise_datatype($coldata$$);
    if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, $APP.cljs.core.count($colmissing$$))) {
      return $ds__$1$$;
    }
    var $new_data$$ = tech.v3.dataset.impl.column.make_container($col_dtype$$);
    tech.v3.datatype.ensure_capacity_BANG_($new_data$$, $n_elems$$);
    for (var $idx_77654$$ = 0, $G__77666_n_missing_77655_n_missing_77660__$1$$ = 0, $lhs_77656$$ = null;;) {
      if ($idx_77654$$ < $n_elems$$) {
        var $cur_missing_QMARK__77659$$ = $colmissing$$.has($idx_77654$$);
        $G__77666_n_missing_77655_n_missing_77660__$1$$ = $APP.cljs.core.long$($APP.cljs.core.truth_($cur_missing_QMARK__77659$$) ? $G__77666_n_missing_77655_n_missing_77660__$1$$ + 1 : $G__77666_n_missing_77655_n_missing_77660__$1$$);
        var $G__77665_end_run_QMARK__77661$$ = $APP.cljs.core.not($cur_missing_QMARK__77659$$) && $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(0, $G__77666_n_missing_77655_n_missing_77660__$1$$), $G__77667_lhs_77662__$1$$ = $APP.cljs.core.truth_(function() {
          var $and__5023__auto__$$ = $cur_missing_QMARK__77659$$;
          return $APP.cljs.core.truth_($and__5023__auto__$$) ? $APP.cljs.core.not($lhs_77656$$) && $idx_77654$$ > 0 : $and__5023__auto__$$;
        }()) ? function() {
          var $G__77471$$ = $idx_77654$$ - 1;
          return $coldata$$.cljs$core$IFn$_invoke$arity$1 ? $coldata$$.cljs$core$IFn$_invoke$arity$1($G__77471$$) : $coldata$$.call(null, $G__77471$$);
        }() : $lhs_77656$$, $cur_val_77663$$ = $APP.cljs.core.truth_($cur_missing_QMARK__77659$$) ? null : $coldata$$.cljs$core$IFn$_invoke$arity$1 ? $coldata$$.cljs$core$IFn$_invoke$arity$1($idx_77654$$) : $coldata$$.call(null, $idx_77654$$);
        $G__77665_end_run_QMARK__77661$$ && tech.v3.datatype.add_all_BANG_($new_data$$, $replace_fn$$.cljs$core$IFn$_invoke$arity$4 ? $replace_fn$$.cljs$core$IFn$_invoke$arity$4($col_dtype$$, $G__77667_lhs_77662__$1$$, $cur_val_77663$$, $G__77666_n_missing_77655_n_missing_77660__$1$$) : $replace_fn$$.call(null, $col_dtype$$, $G__77667_lhs_77662__$1$$, $cur_val_77663$$, $G__77666_n_missing_77655_n_missing_77660__$1$$));
        $APP.cljs.core.truth_($cur_missing_QMARK__77659$$) || tech.v3.datatype.add_BANG_($new_data$$, $cur_val_77663$$);
        $G__77665_end_run_QMARK__77661$$ = $idx_77654$$ + 1;
        $G__77666_n_missing_77655_n_missing_77660__$1$$ = $APP.cljs.core.truth_($cur_missing_QMARK__77659$$) ? $G__77666_n_missing_77655_n_missing_77660__$1$$ : 0;
        $G__77667_lhs_77662__$1$$ = $APP.cljs.core.truth_($cur_missing_QMARK__77659$$) ? $G__77667_lhs_77662__$1$$ : null;
        $idx_77654$$ = $G__77665_end_run_QMARK__77661$$;
        $lhs_77656$$ = $G__77667_lhs_77662__$1$$;
      } else {
        0 !== $G__77666_n_missing_77655_n_missing_77660__$1$$ && tech.v3.datatype.add_all_BANG_($new_data$$, $replace_fn$$.cljs$core$IFn$_invoke$arity$4 ? $replace_fn$$.cljs$core$IFn$_invoke$arity$4($col_dtype$$, $lhs_77656$$, null, $G__77666_n_missing_77655_n_missing_77660__$1$$) : $replace_fn$$.call(null, $col_dtype$$, $lhs_77656$$, null, $G__77666_n_missing_77655_n_missing_77660__$1$$));
        break;
      }
    }
    return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($ds__$1$$, $colname$$, new $APP.cljs.core.PersistentArrayMap(null, 4, [cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data, $new_data$$, cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing, new Set(), cljs$cst$5509$tech_DOT_v3_DOT_dataset_SLASH_name, $colname$$, cljs$cst$5513$tech_DOT_v3_DOT_dataset_SLASH_metadata, $APP.cljs.core.meta($coldata$$)], null));
  }, $ds$$, $colnames$jscomp$9_colnames__$1$$);
};
tech.v3.dataset.replace_missing.cljs$lang$maxFixedArity = 2;
tech.v3.dataset.replace_missing.cljs$lang$applyTo = function($G__77460_seq77458$$) {
  var $G__77459$$ = $APP.cljs.core.first($G__77460_seq77458$$), $seq77458__$1_seq77458__$2$$ = $APP.cljs.core.next($G__77460_seq77458$$);
  $G__77460_seq77458$$ = $APP.cljs.core.first($seq77458__$1_seq77458__$2$$);
  $seq77458__$1_seq77458__$2$$ = $APP.cljs.core.next($seq77458__$1_seq77458__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77459$$, $G__77460_seq77458$$, $seq77458__$1_seq77458__$2$$);
};
tech.v3.dataset.filter_dataset = function($dataset$$, $filter_fn_or_ds$$) {
  if (tech.v3.dataset.dataset_QMARK_($filter_fn_or_ds$$)) {
    return $filter_fn_or_ds$$;
  }
  if ($APP.cljs.core.sequential_QMARK_($filter_fn_or_ds$$)) {
    return tech.v3.dataset.select_columns($dataset$$, $filter_fn_or_ds$$);
  }
  if ($filter_fn_or_ds$$ == null || $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$365$all, $filter_fn_or_ds$$)) {
    return $dataset$$;
  }
  if (typeof $filter_fn_or_ds$$ === "string" || $filter_fn_or_ds$$ instanceof $APP.cljs.core.Keyword) {
    return tech.v3.dataset.select_columns($dataset$$, $filter_fn_or_ds$$);
  }
  if ($APP.cljs.core.fn_QMARK_($filter_fn_or_ds$$)) {
    return $filter_fn_or_ds$$.cljs$core$IFn$_invoke$arity$1 ? $filter_fn_or_ds$$.cljs$core$IFn$_invoke$arity$1($dataset$$) : $filter_fn_or_ds$$.call(null, $dataset$$);
  }
  throw Error(["Unrecoginzed filter mechanism: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($filter_fn_or_ds$$)].join(""));
};
tech.v3.dataset.update = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$321_argseq__5756__auto__$$ = [], $len__5749__auto___77670$$ = arguments.length, $i__5750__auto___77671$$ = 0;;) {
    if ($i__5750__auto___77671$$ < $len__5749__auto___77670$$) {
      $args__5755__auto__$jscomp$321_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77671$$]), $i__5750__auto___77671$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$321_argseq__5756__auto__$$ = 3 < $args__5755__auto__$jscomp$321_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$321_argseq__5756__auto__$$.slice(3), 0, null) : null;
  return tech.v3.dataset.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], $args__5755__auto__$jscomp$321_argseq__5756__auto__$$);
};
tech.v3.dataset.update.cljs$core$IFn$_invoke$arity$variadic = function($lhs_ds$$, $filter_fn_or_ds$$, $update_fn$$, $args$$) {
  $filter_fn_or_ds$$ = tech.v3.dataset.filter_dataset($lhs_ds$$, $filter_fn_or_ds$$);
  return $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$lhs_ds$$, $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$3($update_fn$$, $filter_fn_or_ds$$, $args$$)], 0));
};
tech.v3.dataset.update.cljs$lang$maxFixedArity = 3;
tech.v3.dataset.update.cljs$lang$applyTo = function($G__77474_seq77472$$) {
  var $G__77473$$ = $APP.cljs.core.first($G__77474_seq77472$$), $G__77475_seq77472__$1$$ = $APP.cljs.core.next($G__77474_seq77472$$);
  $G__77474_seq77472$$ = $APP.cljs.core.first($G__77475_seq77472__$1$$);
  var $seq77472__$2_seq77472__$3$$ = $APP.cljs.core.next($G__77475_seq77472__$1$$);
  $G__77475_seq77472__$1$$ = $APP.cljs.core.first($seq77472__$2_seq77472__$3$$);
  $seq77472__$2_seq77472__$3$$ = $APP.cljs.core.next($seq77472__$2_seq77472__$3$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77473$$, $G__77474_seq77472$$, $G__77475_seq77472__$1$$, $seq77472__$2_seq77472__$3$$);
};
tech.v3.dataset.column_map = function($var_args$$) {
  switch(arguments.length) {
    case 5:
      return tech.v3.dataset.column_map.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 4:
      return tech.v3.dataset.column_map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 3:
      return tech.v3.dataset.column_map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
tech.v3.dataset.column_map.cljs$core$IFn$_invoke$arity$5 = function($dataset$$, $result_colname$$, $map_fn$$, $res_dtype_or_opts$$, $filter_fn_or_ds$$) {
  var $opt_map$$ = $res_dtype_or_opts$$ instanceof $APP.cljs.core.Keyword ? new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$5496$datatype, $res_dtype_or_opts$$], null) : $APP.cljs.core.truth_($res_dtype_or_opts$$) ? $res_dtype_or_opts$$ : $APP.cljs.core.PersistentArrayMap.EMPTY, $res_dtype$$ = $opt_map$$.cljs$core$IFn$_invoke$arity$2 ? $opt_map$$.cljs$core$IFn$_invoke$arity$2(cljs$cst$5496$datatype, $APP.cljs$cst$2189$object) : $opt_map$$.call(null, cljs$cst$5496$datatype, $APP.cljs$cst$2189$object);
  return tech.v3.dataset.update($dataset$$, $filter_fn_or_ds$$, function($update_ds$$) {
    var $cols$jscomp$9_missing$$ = tech.v3.dataset.columns($update_ds$$), $coldata$$ = $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$4(tech.v3.datatype.emap, $map_fn$$, $res_dtype$$, tech.v3.dataset.columns($update_ds$$));
    var $temp__5825__auto__$$ = $opt_map$$.cljs$core$IFn$_invoke$arity$1 ? $opt_map$$.cljs$core$IFn$_invoke$arity$1(cljs$cst$5530$missing_fn) : $opt_map$$.call(null, cljs$cst$5530$missing_fn);
    $cols$jscomp$9_missing$$ = $APP.cljs.core.truth_($temp__5825__auto__$$) ? $temp__5825__auto__$$.cljs$core$IFn$_invoke$arity$1 ? $temp__5825__auto__$$.cljs$core$IFn$_invoke$arity$1($cols$jscomp$9_missing$$) : $temp__5825__auto__$$.call(null, $cols$jscomp$9_missing$$) : null;
    return $APP.cljs.core.truth_($cols$jscomp$9_missing$$) ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($update_ds$$, $result_colname$$, new $APP.cljs.core.PersistentArrayMap(null, 3, [cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data, $coldata$$, cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing, $cols$jscomp$9_missing$$, cljs$cst$5509$tech_DOT_v3_DOT_dataset_SLASH_name, $result_colname$$], null)) : $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($update_ds$$, $result_colname$$, $coldata$$);
  });
};
tech.v3.dataset.column_map.cljs$core$IFn$_invoke$arity$4 = function($dataset$$, $result_colname$$, $map_fn$$, $filter_fn_or_ds$$) {
  return tech.v3.dataset.column_map.cljs$core$IFn$_invoke$arity$5($dataset$$, $result_colname$$, $map_fn$$, null, $filter_fn_or_ds$$);
};
tech.v3.dataset.column_map.cljs$core$IFn$_invoke$arity$3 = function($dataset$$, $result_colname$$, $map_fn$$) {
  return tech.v3.dataset.column_map.cljs$core$IFn$_invoke$arity$5($dataset$$, $result_colname$$, $map_fn$$, null, tech.v3.dataset.column_names($dataset$$));
};
tech.v3.dataset.column_map.cljs$lang$maxFixedArity = 5;
tech.v3.dataset.union_missing_sets = function($col_seq$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.set_or, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(tech.v3.dataset.protocols._missing, $col_seq$$));
};
tech.v3.dataset.intersect_missing_sets = function($col_seq$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(tech.v3.datatype.set_and, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(tech.v3.dataset.protocols._missing, $col_seq$$));
};
tech.v3.dataset.row_map = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$322_argseq__5756__auto__$$ = [], $len__5749__auto___77677$$ = arguments.length, $i__5750__auto___77678$$ = 0;;) {
    if ($i__5750__auto___77678$$ < $len__5749__auto___77677$$) {
      $args__5755__auto__$jscomp$322_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77678$$]), $i__5750__auto___77678$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$322_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$322_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$322_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return tech.v3.dataset.row_map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$322_argseq__5756__auto__$$);
};
tech.v3.dataset.row_map.cljs$core$IFn$_invoke$arity$variadic = function($ds$$, $map_fn$$, $options$$) {
  $options$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($options$$, 0, null);
  return $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$ds$$, $APP.cljs.core.transduce.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1($map_fn$$), tech.v3.dataset.mapseq_parser_rf($options$$), tech.v3.dataset.rows($ds$$))], 0));
};
tech.v3.dataset.row_map.cljs$lang$maxFixedArity = 2;
tech.v3.dataset.row_map.cljs$lang$applyTo = function($G__77480_seq77478$$) {
  var $G__77479$$ = $APP.cljs.core.first($G__77480_seq77478$$), $seq77478__$1_seq77478__$2$$ = $APP.cljs.core.next($G__77480_seq77478$$);
  $G__77480_seq77478$$ = $APP.cljs.core.first($seq77478__$1_seq77478__$2$$);
  $seq77478__$1_seq77478__$2$$ = $APP.cljs.core.next($seq77478__$1_seq77478__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77479$$, $G__77480_seq77478$$, $seq77478__$1_seq77478__$2$$);
};
tech.v3.dataset.numeric_data__GT_b64 = function($data$jscomp$324_data__$1$jscomp$12_data__$2$$) {
  $data$jscomp$324_data__$1$jscomp$12_data__$2$$ = $APP.cljs.core.clone($data$jscomp$324_data__$1$jscomp$12_data__$2$$);
  $data$jscomp$324_data__$1$jscomp$12_data__$2$$ = tech.v3.datatype.ensure_typed_array($data$jscomp$324_data__$1$jscomp$12_data__$2$$);
  return module$node_modules$base64_js$index.fromByteArray(new Uint8Array($data$jscomp$324_data__$1$jscomp$12_data__$2$$.buffer));
};
tech.v3.dataset.string_col__GT_data = function($col$$) {
  var $strmap$$ = new Map(), $strtable$$ = [], $indexes$$ = tech.v3.datatype.make_container($APP.cljs$cst$3337$int32, $APP.cljs.core.count($col$$)), $idx_aget$$ = tech.v3.datatype.as_agetable($indexes$$);
  $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ham_fisted.api.indexed_accum_fn(function($acc$jscomp$171_cur_idx$jscomp$inline_7393_temp__5823__auto__$$, $idx$$, $JSCompiler_temp$jscomp$1893_strval$$) {
    $APP.cljs.core.truth_($JSCompiler_temp$jscomp$1893_strval$$) ? ($acc$jscomp$171_cur_idx$jscomp$inline_7393_temp__5823__auto__$$ = $strmap$$.get($JSCompiler_temp$jscomp$1893_strval$$), $APP.cljs.core.truth_($acc$jscomp$171_cur_idx$jscomp$inline_7393_temp__5823__auto__$$) ? $JSCompiler_temp$jscomp$1893_strval$$ = $acc$jscomp$171_cur_idx$jscomp$inline_7393_temp__5823__auto__$$ : ($acc$jscomp$171_cur_idx$jscomp$inline_7393_temp__5823__auto__$$ = $APP.cljs.core.count($strtable$$), $strtable$$.push($JSCompiler_temp$jscomp$1893_strval$$), 
    $strmap$$.set($JSCompiler_temp$jscomp$1893_strval$$, $acc$jscomp$171_cur_idx$jscomp$inline_7393_temp__5823__auto__$$), $JSCompiler_temp$jscomp$1893_strval$$ = $acc$jscomp$171_cur_idx$jscomp$inline_7393_temp__5823__auto__$$)) : $JSCompiler_temp$jscomp$1893_strval$$ = null;
    $idx_aget$$[$idx$$] = $JSCompiler_temp$jscomp$1893_strval$$;
    return null;
  }), null, $col$$);
  return new $APP.cljs.core.PersistentArrayMap(null, 2, [cljs$cst$5531$strtable, $strtable$$, cljs$cst$5532$indexes, tech.v3.dataset.numeric_data__GT_b64($indexes$$)], null);
};
tech.v3.dataset.text_col__GT_data = function($buffer$jscomp$34_col$$) {
  var $n_elems$$ = $APP.cljs.core.count($buffer$jscomp$34_col$$), $offsets$$ = tech.v3.datatype.make_container($APP.cljs$cst$3331$int8, $n_elems$$);
  tech.v3.datatype.as_agetable($offsets$$);
  a: {
    for (var $idx$$ = 0, $G__77681$jscomp$inline_9922_JSCompiler_temp_const$jscomp$inline_9917_buffer$jscomp$inline_9916_newb$$ = "";;) {
      if ($idx$$ < $n_elems$$) {
        var $JSCompiler_temp_const$$ = $G__77681$jscomp$inline_9922_JSCompiler_temp_const$jscomp$inline_9917_buffer$jscomp$inline_9916_newb$$.concat;
        var $JSCompiler_inline_result$jscomp$inline_9919_or__5025__auto__$$ = $buffer$jscomp$34_col$$.cljs$core$IFn$_invoke$arity$1 ? $buffer$jscomp$34_col$$.cljs$core$IFn$_invoke$arity$1($idx$$) : $buffer$jscomp$34_col$$.call(null, $idx$$);
        $JSCompiler_inline_result$jscomp$inline_9919_or__5025__auto__$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$inline_9919_or__5025__auto__$$) ? $JSCompiler_inline_result$jscomp$inline_9919_or__5025__auto__$$ : "";
        $G__77681$jscomp$inline_9922_JSCompiler_temp_const$jscomp$inline_9917_buffer$jscomp$inline_9916_newb$$ = $JSCompiler_temp_const$$.call($G__77681$jscomp$inline_9922_JSCompiler_temp_const$jscomp$inline_9917_buffer$jscomp$inline_9916_newb$$, $JSCompiler_inline_result$jscomp$inline_9919_or__5025__auto__$$);
        $offsets$$[$idx$$] = $G__77681$jscomp$inline_9922_JSCompiler_temp_const$jscomp$inline_9917_buffer$jscomp$inline_9916_newb$$.length();
        $idx$$ += 1;
      } else {
        $buffer$jscomp$34_col$$ = $G__77681$jscomp$inline_9922_JSCompiler_temp_const$jscomp$inline_9917_buffer$jscomp$inline_9916_newb$$;
        break a;
      }
    }
    $buffer$jscomp$34_col$$ = void 0;
  }
  return new $APP.cljs.core.PersistentArrayMap(null, 3, [cljs$cst$5533$offset_datatype, $APP.cljs$cst$3337$int32, cljs$cst$5534$offsets, tech.v3.dataset.numeric_data__GT_b64($offsets$$), $APP.cljs$cst$194$buffer, $buffer$jscomp$34_col$$], null);
};
tech.v3.dataset.obj_col__GT_numeric_b64 = function($col$$, $dtype$$, $convert_fn$$) {
  return tech.v3.dataset.numeric_data__GT_b64($APP.cljs.core.clone(tech.v3.datatype.emap.cljs$core$IFn$_invoke$arity$variadic(function($p1__77485_SHARP_$$) {
    return $APP.cljs.core.truth_($p1__77485_SHARP_$$) ? $convert_fn$$.cljs$core$IFn$_invoke$arity$1 ? $convert_fn$$.cljs$core$IFn$_invoke$arity$1($p1__77485_SHARP_$$) : $convert_fn$$.call(null, $p1__77485_SHARP_$$) : 0;
  }, $dtype$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$col$$], 0))));
};
tech.v3.dataset.column__GT_data = function($col$$) {
  var $col_dt$$ = tech.v3.datatype.elemwise_datatype($col$$);
  return new $APP.cljs.core.PersistentArrayMap(null, 3, [cljs$cst$5535$metadata, $APP.cljs.core.meta($col$$), $APP.cljs$cst$2380$missing, $APP.cljs.core.vec(tech.v3.datatype.set__GT_ordered_indexes(tech.v3.dataset.protocols._missing($col$$))), $APP.cljs$cst$142$data, $APP.cljs.core.truth_(tech.v3.datatype.numeric_type_QMARK_($col_dt$$)) ? tech.v3.dataset.numeric_data__GT_b64(tech.v3.dataset.protocols._column_buffer($col$$)) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5456$boolean, 
  $col_dt$$) ? tech.v3.dataset.numeric_data__GT_b64(tech.v3.datatype.make_container($APP.cljs$cst$3330$uint8, tech.v3.dataset.protocols._column_buffer($col$$))) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$198$string, $col_dt$$) ? tech.v3.dataset.string_col__GT_data($col$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1999$text, $col_dt$$) ? tech.v3.dataset.text_col__GT_data($col$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5491$local_date, 
  $col_dt$$) ? tech.v3.dataset.obj_col__GT_numeric_b64($col$$, $APP.cljs$cst$3337$int32, tech.v3.datatype.datetime.local_date__GT_epoch_days) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$5492$instant, $col_dt$$) ? tech.v3.dataset.obj_col__GT_numeric_b64($col$$, cljs$cst$5460$int64, tech.v3.datatype.datetime.instant__GT_epoch_milliseconds) : tech.v3.datatype.as_js_array(tech.v3.datatype.make_container($APP.cljs$cst$2189$object, tech.v3.dataset.protocols._column_buffer($col$$)))], 
  null);
};
tech.v3.dataset.dataset__GT_data = function($ds$$) {
  return new $APP.cljs.core.PersistentArrayMap(null, 4, [cljs$cst$5535$metadata, $APP.cljs.core.meta($ds$$), cljs$cst$5536$flavor, cljs$cst$5537$transit, $APP.cljs$cst$4914$version, 1, cljs$cst$5538$columns, $APP.cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(tech.v3.dataset.column__GT_data, tech.v3.dataset.columns($ds$$))], null);
};
tech.v3.dataset.b64__GT_numeric_data = function($b64data_bdata$$, $G__77491__$1_dtype$$) {
  $b64data_bdata$$ = module$node_modules$base64_js$index.toByteArray($b64data_bdata$$).buffer;
  $G__77491__$1_dtype$$ = $G__77491__$1_dtype$$ instanceof $APP.cljs.core.Keyword ? $G__77491__$1_dtype$$.fqn : null;
  switch($G__77491__$1_dtype$$) {
    case "int8":
      return new Int8Array($b64data_bdata$$);
    case "uint8":
      return $b64data_bdata$$;
    case "int16":
      return new Int16Array($b64data_bdata$$);
    case "uint16":
      return new Uint16Array($b64data_bdata$$);
    case "int32":
      return new Int32Array($b64data_bdata$$);
    case "uint32":
      return new Uint32Array($b64data_bdata$$);
    case "int64":
      return new BigInt64Array($b64data_bdata$$);
    case "uint64":
      return new BigUint64Array($b64data_bdata$$);
    case "float32":
      return new Float32Array($b64data_bdata$$);
    case "float64":
      return new Float64Array($b64data_bdata$$);
    default:
      throw Error(["No matching clause: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($G__77491__$1_dtype$$)].join(""));
  }
};
tech.v3.dataset.str_data__GT_coldata = function($p__77493_strtable$$) {
  var $indexes$jscomp$7_indexes__$1$$ = $APP.cljs.core.__destructure_map($p__77493_strtable$$);
  $p__77493_strtable$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($indexes$jscomp$7_indexes__$1$$, cljs$cst$5531$strtable);
  $indexes$jscomp$7_indexes__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($indexes$jscomp$7_indexes__$1$$, cljs$cst$5532$indexes);
  $indexes$jscomp$7_indexes__$1$$ = tech.v3.dataset.b64__GT_numeric_data($indexes$jscomp$7_indexes__$1$$, $APP.cljs$cst$3337$int32);
  for (var $coldata$$ = tech.v3.datatype.make_container($APP.cljs$cst$198$string, $APP.cljs.core.count($indexes$jscomp$7_indexes__$1$$)), $agetable$$ = tech.v3.datatype.as_agetable($coldata$$), $n__5616__auto___77688$$ = $APP.cljs.core.count($indexes$jscomp$7_indexes__$1$$), $idx_77689$$ = 0;;) {
    if ($idx_77689$$ < $n__5616__auto___77688$$) {
      $agetable$$[$idx_77689$$] = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($p__77493_strtable$$, $indexes$jscomp$7_indexes__$1$$[$idx_77689$$]), $idx_77689$$ += 1;
    } else {
      break;
    }
  }
  return $coldata$$;
};
tech.v3.dataset.text_data__GT_coldata = function($buffer$$) {
  var $map__77500__$1_n_elems$$ = $APP.cljs.core.__destructure_map($buffer$$);
  $buffer$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__77500__$1_n_elems$$, $APP.cljs$cst$194$buffer);
  var $offsets$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__77500__$1_n_elems$$, cljs$cst$5534$offsets);
  $map__77500__$1_n_elems$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__77500__$1_n_elems$$, cljs$cst$5539$offset_dtype);
  $offsets$$ = tech.v3.dataset.b64__GT_numeric_data($offsets$$, $map__77500__$1_n_elems$$);
  $map__77500__$1_n_elems$$ = $APP.cljs.core.count($offsets$$);
  for (var $coldata$$ = tech.v3.datatype.make_container($APP.cljs$cst$198$string, $map__77500__$1_n_elems$$), $agetable$$ = tech.v3.datatype.as_agetable($coldata$$), $idx_77694$$ = 0;;) {
    if ($idx_77694$$ < $map__77500__$1_n_elems$$) {
      var $prev_off_77695$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($idx_77694$$, 0) ? 0 : $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($offsets$$, $idx_77694$$ - 1);
      $agetable$$[$idx_77694$$] = $buffer$$.substring($prev_off_77695$$, $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($offsets$$, $idx_77694$$));
      $idx_77694$$ += 1;
    } else {
      break;
    }
  }
  return $coldata$$;
};
tech.v3.dataset.data__GT_column = function($metadata$$) {
  var $dtype$$ = $APP.cljs.core.__destructure_map($metadata$$);
  $metadata$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($dtype$$, cljs$cst$5535$metadata);
  var $missing$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($dtype$$, $APP.cljs$cst$2380$missing), $data$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($dtype$$, $APP.cljs$cst$142$data);
  $dtype$$ = cljs$cst$5496$datatype.cljs$core$IFn$_invoke$arity$1($metadata$$);
  return new $APP.cljs.core.PersistentArrayMap(null, 5, [cljs$cst$5513$tech_DOT_v3_DOT_dataset_SLASH_metadata, $metadata$$, cljs$cst$5499$tech_DOT_v3_DOT_dataset_SLASH_missing, tech.v3.datatype.__GT_js_set.cljs$core$IFn$_invoke$arity$1($missing$$), cljs$cst$5512$tech_DOT_v3_DOT_dataset_SLASH_force_datatype_QMARK_, !0, cljs$cst$5511$tech_DOT_v3_DOT_dataset_SLASH_data, $APP.cljs.core.truth_(tech.v3.datatype.numeric_type_QMARK_($dtype$$)) ? tech.v3.dataset.b64__GT_numeric_data($data$$, $dtype$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5456$boolean, 
  $dtype$$) ? tech.v3.datatype.arrays.make_boolean_array(module$node_modules$base64_js$index.toByteArray($data$$)) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$198$string, $dtype$$) ? tech.v3.dataset.str_data__GT_coldata($data$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1999$text, $dtype$$) ? tech.v3.dataset.text_data__GT_coldata($data$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$5491$local_date, $dtype$$) ? tech.v3.datatype.emap.cljs$core$IFn$_invoke$arity$variadic(tech.v3.datatype.datetime.epoch_days__GT_local_date, 
  cljs$cst$5491$local_date, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tech.v3.dataset.b64__GT_numeric_data($data$$, $APP.cljs$cst$3337$int32)], 0)) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$5492$instant, $dtype$$) ? tech.v3.datatype.emap.cljs$core$IFn$_invoke$arity$variadic(function($p1__77507_SHARP_$$) {
    return tech.v3.datatype.datetime.epoch_milliseconds__GT_instant(new Number($p1__77507_SHARP_$$));
  }, $APP.cljs$cst$5492$instant, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tech.v3.dataset.b64__GT_numeric_data($data$$, cljs$cst$5460$int64)], 0)) : $APP.cljs.core.truth_(function() {
    var $and__5023__auto__$$ = tech.v3.datatype.counted_QMARK_($data$$);
    return $APP.cljs.core.truth_($and__5023__auto__$$) ? tech.v3.datatype.indexed_QMARK_($data$$) : $and__5023__auto__$$;
  }()) ? tech.v3.datatype.arrays.make_typed_buffer.cljs$core$IFn$_invoke$arity$variadic($data$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$dtype$$], 0)) : tech.v3.datatype.make_container($dtype$$, $data$$), cljs$cst$5509$tech_DOT_v3_DOT_dataset_SLASH_name, $APP.cljs$cst$272$name.cljs$core$IFn$_invoke$arity$1($metadata$$)], null);
};
tech.v3.dataset.data__GT_dataset = function($ds_data$$) {
  if (!$APP.cljs.core.contains_QMARK_($ds_data$$, cljs$cst$5535$metadata) || !$APP.cljs.core.contains_QMARK_($ds_data$$, cljs$cst$5538$columns)) {
    throw Error("This does not seem like dataset data, missing required keys");
  }
  return tech.v3.dataset.impl.dataset.new_dataset.cljs$core$IFn$_invoke$arity$2(cljs$cst$5535$metadata.cljs$core$IFn$_invoke$arity$1($ds_data$$), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$2(tech.v3.dataset.data__GT_column, cljs$cst$5538$columns.cljs$core$IFn$_invoke$arity$1($ds_data$$)));
};
tech.v3.dataset.transit_write_handler_map = function() {
  return $APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([tech.v3.dataset.impl.dataset.Dataset, $APP.cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.constantly("tech.v3.dataset"), tech.v3.dataset.dataset__GT_data)]);
};
tech.v3.dataset.dataset__GT_transit_str = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$323_argseq__5756__auto__$$ = [], $len__5749__auto___77697$$ = arguments.length, $i__5750__auto___77698$$ = 0;;) {
    if ($i__5750__auto___77698$$ < $len__5749__auto___77697$$) {
      $args__5755__auto__$jscomp$323_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77698$$]), $i__5750__auto___77698$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$323_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$323_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$323_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return tech.v3.dataset.dataset__GT_transit_str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$323_argseq__5756__auto__$$);
};
tech.v3.dataset.dataset__GT_transit_str.cljs$core$IFn$_invoke$arity$variadic = function($ds$$, $handlers$$) {
  var $JSCompiler_inline_result$jscomp$1899_format$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($handlers$$, 0, null);
  $handlers$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($handlers$$, 1, null);
  var $JSCompiler_temp_const$$ = $APP.cognitect.transit.writer, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$2;
  $JSCompiler_inline_result$jscomp$1899_format$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$1899_format$$) ? $JSCompiler_inline_result$jscomp$1899_format$$ : $APP.cljs$cst$2635$json;
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$1899_format$$, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1518$handlers, $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tech.v3.dataset.transit_write_handler_map(), $handlers$$], 0))], null)).write($ds$$);
};
tech.v3.dataset.dataset__GT_transit_str.cljs$lang$maxFixedArity = 1;
tech.v3.dataset.dataset__GT_transit_str.cljs$lang$applyTo = function($seq77519_seq77519__$1$$) {
  var $G__77520$$ = $APP.cljs.core.first($seq77519_seq77519__$1$$);
  $seq77519_seq77519__$1$$ = $APP.cljs.core.next($seq77519_seq77519__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77520$$, $seq77519_seq77519__$1$$);
};
tech.v3.dataset.transit_read_handler_map = function() {
  return new $APP.cljs.core.PersistentArrayMap(null, 1, ["tech.v3.dataset", tech.v3.dataset.data__GT_dataset], null);
};
tech.v3.dataset.transit_str__GT_dataset = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$324_argseq__5756__auto__$$ = [], $len__5749__auto___77703$$ = arguments.length, $i__5750__auto___77704$$ = 0;;) {
    if ($i__5750__auto___77704$$ < $len__5749__auto___77703$$) {
      $args__5755__auto__$jscomp$324_argseq__5756__auto__$$.push(arguments[$i__5750__auto___77704$$]), $i__5750__auto___77704$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$324_argseq__5756__auto__$$ = 1 < $args__5755__auto__$jscomp$324_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$324_argseq__5756__auto__$$.slice(1), 0, null) : null;
  return tech.v3.dataset.transit_str__GT_dataset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], $args__5755__auto__$jscomp$324_argseq__5756__auto__$$);
};
tech.v3.dataset.transit_str__GT_dataset.cljs$core$IFn$_invoke$arity$variadic = function($json_data$$, $handlers$$) {
  var $JSCompiler_inline_result$jscomp$1902_format$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($handlers$$, 0, null);
  $handlers$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($handlers$$, 1, null);
  var $JSCompiler_temp_const$$ = $APP.cognitect.transit.reader, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$2;
  $JSCompiler_inline_result$jscomp$1902_format$$ = $APP.cljs.core.truth_($JSCompiler_inline_result$jscomp$1902_format$$) ? $JSCompiler_inline_result$jscomp$1902_format$$ : $APP.cljs$cst$2635$json;
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $JSCompiler_inline_result$jscomp$1902_format$$, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1518$handlers, $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tech.v3.dataset.transit_read_handler_map(), $handlers$$], 0))], null)).read($json_data$$);
};
tech.v3.dataset.transit_str__GT_dataset.cljs$lang$maxFixedArity = 1;
tech.v3.dataset.transit_str__GT_dataset.cljs$lang$applyTo = function($seq77535_seq77535__$1$$) {
  var $G__77536$$ = $APP.cljs.core.first($seq77535_seq77535__$1$$);
  $seq77535_seq77535__$1$$ = $APP.cljs.core.next($seq77535_seq77535__$1$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__77536$$, $seq77535_seq77535__$1$$);
};
$APP.scittle.tmdjs = {};
$APP.scittle.tmdjs.init = function() {
  return $APP.scittle.core.register_plugin_BANG_(cljs$cst$5540$scittle_DOT_tmdjs_SLASH_tmdjs, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$398$namespaces, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$5541$tech_DOT_v3_DOT_dataset, $APP.sci.core._copy_ns($APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs.core.with_meta($APP.cljs$cst$2378$columns, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Return the columns, in order, of the dataset."], null)), $APP.cljs.core.with_meta($APP.cljs$cst$856$sort_by, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5542$ds, $APP.cljs$cst$1517$keyfn, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$94$comp, $APP.cljs$cst$1270$options], null)], null))), $APP.cljs$cst$256$doc, "Sort dataset by keyfn.  Keyfn is passed each row as a map.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 
  2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list(cljs$cst$5542$ds, $APP.cljs$cst$1517$keyfn, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$94$comp, $APP.cljs$cst$1270$options], null))], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, 
  $APP.cljs$cst$1517$keyfn, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$94$comp, $APP.cljs$cst$1270$options], null)], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5543$mapseq_parser, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null), $APP.cljs.core.PersistentVector.EMPTY)), $APP.cljs$cst$256$doc, "Return a clojure function that when called with one arg that arg must be the next map\n  to add to the dataset.  When called with no args returns the current dataset.  This can be\n  used to efficiently transform a stream of maps into a dataset while getting intermediate\n  datasets during the parse operation.\n\nOptions are the same for [[-\x3edataset]].\n\n```clojure\ncljs.user\x3e (def pfn (ds/mapseq-parser nil))\n#'cljs.user/pfn\ncljs.user\x3e (pfn {:a 1 :b 2})\nnil\ncljs.user\x3e (pfn {:a 1 :b 2})\nnil\ncljs.user\x3e (pfn {:a 2 :c 3})\nnil\ncljs.user\x3e (pfn)\n#dataset[unnamed [3 3]\n| :a |  :b |  :c |\n|---:|----:|----:|\n|  1 |   2 | NaN |\n|  1 |   2 | NaN |\n|  2 | NaN |   3 |]\ncljs.user\x3e (pfn {:a 3 :d 4})\nnil\ncljs.user\x3e (pfn {:a 5 :c 6})\nnil\ncljs.user\x3e (pfn)\n#dataset[unnamed [5 4]\n| :a |  :b |  :c |  :d |\n|---:|----:|----:|----:|\n|  1 |   2 | NaN | NaN |\n|  1 |   2 | NaN | NaN |\n|  2 | NaN |   3 | NaN |\n|  3 | NaN | NaN |   4 |\n|  5 | NaN |   6 | NaN |]\n```", 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 1, $APP.cljs$cst$1379$max_fixed_arity, 1, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null), $APP.cljs.core.PersistentVector.EMPTY], null), $APP.cljs$cst$273$arglists, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null), $APP.cljs.core.PersistentVector.EMPTY), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5544$column__GT_data, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$318$col], null))), $APP.cljs$cst$256$doc, "Transform a column in raw data safe for passing to transit or edn."], null)), $APP.cljs.core.with_meta(cljs$cst$5545$column_names, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), 
  $APP.cljs$cst$256$doc, "Return the column names as a sequence."], null)), $APP.cljs.core.with_meta(cljs$cst$5546$filter_column, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$1244$pred], null)], null))), $APP.cljs$cst$256$doc, "Filter the dataset by column colname.  If pred isn't passed in the column's values\n  are treated as truthy.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list(cljs$cst$5542$ds, 
  cljs$cst$5500$colname, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1244$pred], null))], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1244$pred], null)], null)), 
  $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5547$filter_dataset, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5549$filter_fn_or_ds], null))), $APP.cljs$cst$256$doc, "Filter the columns of the dataset returning a new dataset.  This pathway is\n  designed to work with the tech.v3.dataset.column-filters namespace.\n\n  * If filter-fn-or-ds is a dataset, it is returned.\n  * If filter-fn-or-ds is sequential, then select-columns is called.\n  * If filter-fn-or-ds is :all, all columns are returned\n  * If filter-fn-or-ds is an instance of IFn, the dataset is passed into it."], 
  null)), $APP.cljs.core.with_meta(cljs$cst$5550$column_count, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Integer column count of the dataset."], null)), $APP.cljs.core.with_meta(cljs$cst$5551$__GT__GT_dataset, new $APP.cljs.core.PersistentArrayMap(null, 3, 
  [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options, $APP.cljs$cst$380$data], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data], null))), $APP.cljs$cst$256$doc, "data-last analogue of [[-\x3edataset]] for use in `-\x3e\x3e` macros.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 
  6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options, $APP.cljs$cst$380$data], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data], 
  null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options, $APP.cljs$cst$380$data], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], null)], null)), $APP.cljs.core.with_meta($APP.cljs$cst$1329$select, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$5552$cols, $APP.cljs$cst$5553$rows], null))), $APP.cljs$cst$256$doc, "Select a subrect of the dataset."], null)), $APP.cljs.core.with_meta(cljs$cst$5554$columns_as_map, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$5555$data__GT_dataset, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5556$ds_data], null))), $APP.cljs$cst$256$doc, "Given data produced via dataset-\x3edata create a new dataset."], 
  null)), $APP.cljs.core.with_meta(cljs$cst$5557$mapseq_parser_rf, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null))), $APP.cljs$cst$256$doc, "Return a transduce-compatible sequence-of-maps parser.  For example of use\n  see definition of [[row-map]]."], null)), $APP.cljs.core.with_meta($APP.cljs$cst$62$tail, 
  new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$2483$n], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Return the last n rows of the dataset.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 
  6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$2483$n], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)], 
  null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$2483$n], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5558$dataset__GT_data, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Convert a dataset into a pure data datastructure save for transit or direct json\n  serialization.  Uses base64 encoding of numeric data."], null)), $APP.cljs.core.with_meta(cljs$cst$5559$transit_read_handler_map, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY)), $APP.cljs$cst$256$doc, "Return a map mapping the dataset tag to a transit read handler."], null)), $APP.cljs.core.with_meta(cljs$cst$5560$__GT_dataset, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$380$data, $APP.cljs$cst$1270$options], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data], null), $APP.cljs.core.PersistentVector.EMPTY)), $APP.cljs$cst$256$doc, 'Convert either a sequence of maps or a map of columns into a dataset.\n  Options are similar to the jvm version of tech.v3.dataset in terms of\n  parser-fn.  This function can take either a sequence of maps or a map of\n  columns.\n\n  Examples:\n```clojure\ncljs.user\x3e (-\x3e\x3e (ds/-\x3edataset {:a (range 100)\n                               :b (take 100 (cycle ["hey" "you" "goonies"]))})\n                (ds/cols)\n                (map (comp :datatype meta)))\n(:float64 :string)\n\ncljs.user\x3e (-\x3e\x3e (ds/-\x3edataset {:a (range 100)\n                               :b (take 100 (cycle ["hey" "you" "goonies"]))}\n                              {:parser-fn {:a :int8}})\n                (ds/cols)\n                (map (comp :datatype meta)))\n(:int8 :string)\n```', 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data, $APP.cljs$cst$1270$options], null), new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data], null), $APP.cljs.core.PersistentVector.EMPTY], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data, $APP.cljs$cst$1270$options], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data], null), $APP.cljs.core.PersistentVector.EMPTY), $APP.cljs$cst$1381$arglists_meta, 
  $APP.cljs.core.list(null, null, null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5561$reverse_rows, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Reverse the order of the rows of a dataset or a column"], null)), $APP.cljs.core.with_meta($APP.cljs$cst$965$concat, 
  new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null), $APP.cljs.core.PersistentVector.EMPTY)), $APP.cljs$cst$256$doc, "This is a copying concatenation so the result will be realized.  Missing columns\n  will be filled in with missing values.", 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 1, $APP.cljs$cst$1379$max_fixed_arity, 1, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5542$ds, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null), $APP.cljs.core.PersistentVector.EMPTY), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5562$merge_by_column, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5563$lhs, 
  $APP.cljs$cst$3132$rhs, cljs$cst$5500$colname], null))), $APP.cljs$cst$256$doc, "Merge rows assuming left, right have the same columns.  Left is taken first then\n  any right not appear with left are appended.  This is far less general but much\n  faster than a join operation; it is useful for merging timeseries data."], null)), $APP.cljs.core.with_meta($APP.cljs$cst$973$group_by, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$52$f], null))), $APP.cljs$cst$256$doc, "Group the dataset by the values returned from passing f over each row, represented as a\n  map, of the dataset."], null)), $APP.cljs.core.with_meta(cljs$cst$5564$select_rows, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5565$rowidxs], null))), $APP.cljs$cst$256$doc, "Select these row indexes out of the dataset."], null)), $APP.cljs.core.with_meta(cljs$cst$5566$replace_missing, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5567$colnames, 
  $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5568$replace_cmd], null)], null))), $APP.cljs$cst$256$doc, "Replace missing values in dataset.\n  * colnames one or more columns to run replace cmd\n  * replace-cmd - one of `:first` `:last` `:lerp` `[:value val]` ifn\n\n  If replace-cmd is an ifn it will be given the column-datatype first and last arguments\n  in the missing span and the number of missing elements.  Either the first or last may be\n  nil if the missing span is at the beginning or end.  In the case where all values are\n  missing both arguments may be nil.", 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list(cljs$cst$5542$ds, cljs$cst$5567$colnames, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5568$replace_cmd], null))], 
  null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5567$colnames, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5568$replace_cmd], null)], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5569$remove_columns, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5567$colnames], null))), $APP.cljs$cst$256$doc, "Remove these columns from the dataset."], null)), $APP.cljs.core.with_meta(cljs$cst$5570$remove_rows, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5565$rowidxs], null))), $APP.cljs$cst$256$doc, "Remove these row indexes out of the dataset."], null)), $APP.cljs.core.with_meta($APP.cljs$cst$5571$head, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$2483$n], 
  null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Return the first n rows of the dataset.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$2483$n], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$2483$n], null), new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], null)], null)), $APP.cljs.core.with_meta($APP.cljs$cst$5552$cols, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Alias of `columns`"], 
  null)), $APP.cljs.core.with_meta(cljs$cst$5572$row_count, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5573$ds_or_col], null))), $APP.cljs$cst$256$doc, "Integer row count of the dataset."], null)), $APP.cljs.core.with_meta(cljs$cst$5574$soft_select_columns, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5567$colnames], null))), $APP.cljs$cst$256$doc, "Select these columns in this order.  Columns not found are quietly ignored.  To get errors\n  for missing columns see [[select-columns]]."], null)), $APP.cljs.core.with_meta(cljs$cst$5575$remove_missing, new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname], null))), $APP.cljs$cst$256$doc, "Remove missing rows from a dataset or column", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 
  6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname], null)], 
  null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5576$transit_write_handler_map, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY)), $APP.cljs$cst$256$doc, "Return a map mapping the dataset type to a transit writer handler."], null)), $APP.cljs.core.with_meta(cljs$cst$5497$missing, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5573$ds_or_col], null))), $APP.cljs$cst$256$doc, "Return the missing set as a clojure set.  The underlying protocol returns\n  missing sets as js sets as those have superior performance when using numbers."], null)), $APP.cljs.core.with_meta(cljs$cst$5577$data__GT_column, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5476$metadata, cljs$cst$5497$missing, $APP.cljs$cst$380$data], null)], null)], null))), $APP.cljs$cst$256$doc, "Transform data produced via column-\x3edata into a column"], null)), $APP.cljs.core.with_meta(cljs$cst$5578$select_missing, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Select the missing rows from a dataset or a column"], null)), $APP.cljs.core.with_meta(cljs$cst$5579$intersect_missing_sets, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5580$col_seq], null))), $APP.cljs$cst$256$doc, "Intersect the missing sets of the columns"], null)), $APP.cljs.core.with_meta(cljs$cst$5581$rowvecs, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Get a sequence of persistent vectors from a dataset"], 
  null)), $APP.cljs.core.with_meta(cljs$cst$5582$row_map, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5484$map_fn, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null)], null))), 
  $APP.cljs$cst$256$doc, 'Map a function across the rows of the dataset producing a new dataset\n  that is merged back into the original potentially replacing existing columns.\n  Options are passed into the [[-\x3edataset]] function so you can control the resulting\n  column types by the usual dataset parsing options described there.\n\n  Examples:\n\n```clojure\ncljs.user\x3e (def stocks (ds/transit-file-\x3edataset "test/data/stocks.transit-json"))\n#\'cljs.user/stocks\ncljs.user\x3e (ds/head stocks)\n#dataset[https://github.com/techascent/tech.ml.dataset/raw/master/test/data/stocks.csv [5 3]\n| :symbol |      :date | :price |\n|---------|------------|-------:|\n|    MSFT | 2000-01-01 |  39.81 |\n|    MSFT | 2000-02-01 |  36.35 |\n|    MSFT | 2000-03-01 |  43.22 |\n|    MSFT | 2000-04-01 |  28.37 |\n|    MSFT | 2000-05-01 |  25.45 |]\ncljs.user\x3e (ds/head (ds/row-map stocks (fn [row]\n                                    {:symbol (keyword (row :symbol))\n                                     :price2 (* (row :price)(row :price))})))\n#dataset[https://github.com/techascent/tech.ml.dataset/raw/master/test/data/stocks.csv [5 4]\n| :symbol |      :date | :price |       :price2 |\n|---------|------------|-------:|--------------:|\n|   :MSFT | 2000-01-01 |  39.81 | 1584.83610000 |\n|   :MSFT | 2000-02-01 |  36.35 | 1321.32250000 |\n|   :MSFT | 2000-03-01 |  43.22 | 1867.96840000 |\n|   :MSFT | 2000-04-01 |  28.37 |  804.85690000 |\n|   :MSFT | 2000-05-01 |  25.45 |  647.70250000 |]\n```', 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list(cljs$cst$5542$ds, cljs$cst$5484$map_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null))], 
  null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5484$map_fn, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null)], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta($APP.cljs$cst$5553$rows, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Get a sequence of maps from a dataset"], null)), $APP.cljs.core.with_meta(cljs$cst$5583$group_by_column, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname], null))), $APP.cljs$cst$256$doc, "Group the dataset by column colname"], null)), $APP.cljs.core.with_meta(cljs$cst$5584$transit_str__GT_dataset, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5585$json_data, $APP.cljs$cst$148$_AMPERSAND_, 
  new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1388$format, cljs$cst$5586$handlers], null)], null))), $APP.cljs$cst$256$doc, "Parse a transit string adding in the dataset read handler", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 1, $APP.cljs$cst$1379$max_fixed_arity, 1, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list(cljs$cst$5585$json_data, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1388$format, cljs$cst$5586$handlers], null))], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5585$json_data, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 2, 
  5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1388$format, cljs$cst$5586$handlers], null)], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5587$column_map, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, 
  cljs$cst$5588$result_colname, cljs$cst$5484$map_fn, cljs$cst$5589$res_dtype_or_opts, cljs$cst$5549$filter_fn_or_ds], null), new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5588$result_colname, cljs$cst$5484$map_fn, cljs$cst$5549$filter_fn_or_ds], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5588$result_colname, cljs$cst$5484$map_fn], 
  null))), $APP.cljs$cst$256$doc, 'Produce a new (or updated) column as the result of mapping a fn over columns.\n\n  * `dataset` - dataset.\n  * `result-colname` - Name of new (or existing) column.\n  * `map-fn` - function to map over columns.  Same rules as `tech.v3.datatype/emap`.\n  * `res-dtype-or-opts` - If not given result is scanned to infer missing and datatype.\n  If using an option map, options are described below.\n  * `filter-fn-or-ds` - A dataset, a sequence of columns, or a `tech.v3.datasets/column-filters`\n     column filter function.  Defaults to all the columns of the existing dataset.\n\n  Returns a new dataset with a new or updated column.\n\n  Options:\n\n  * `:datatype` - Set the dataype of the result column.  If not given result is scanned\n  to infer result datatype and missing set.\n  * `:missing-fn` - if given, columns are first passed to missing-fn as a sequence and\n  this dictates the missing set.  Else the missing set is by scanning the results\n  during the inference process. See `tech.v3.dataset.column/union-missing-sets` and\n  `tech.v3.dataset.column/intersect-missing-sets` for example functions to pass in\n  here.\n\n  Examples:\n\n\n```clojure\n\n  ;;From the tests --\n\n  (let [testds (ds/-\x3edataset [{:a 1.0 :b 2.0} {:a 3.0 :b 5.0} {:a 4.0 :b nil}])]\n    ;;result scanned for both datatype and missing set\n    (is (\x3d (vec [3.0 6.0 nil])\n           (:b2 (ds/column-map testds :b2 #(when % (inc %)) [:b]))))\n    ;;result scanned for missing set only.  Result used in-place.\n    (is (\x3d (vec [3.0 6.0 nil])\n           (:b2 (ds/column-map testds :b2 #(when % (inc %))\n                               {:datatype :float64} [:b]))))\n    ;;Nothing scanned at all.\n    (is (\x3d (vec [3.0 6.0 nil])\n           (:b2 (ds/column-map testds :b2 #(inc %)\n                               {:datatype :float64\n                                :missing-fn ds-col/union-missing-sets} [:b]))))\n    ;;Missing set scanning causes NPE at inc.\n    (is (thrown? Throwable\n                 (ds/column-map testds :b2 #(inc %)\n                                {:datatype :float64}\n                                [:b]))))\n\n  ;;Ad-hoc repl --\n\nuser\x3e (require \'[tech.v3.dataset :as ds]))\nnil\nuser\x3e (def ds (ds/-\x3edataset "test/data/stocks.csv"))\n#\'user/ds\nuser\x3e (ds/head ds)\ntest/data/stocks.csv [5 3]:\n\n| symbol |       date | price |\n|--------|------------|-------|\n|   MSFT | 2000-01-01 | 39.81 |\n|   MSFT | 2000-02-01 | 36.35 |\n|   MSFT | 2000-03-01 | 43.22 |\n|   MSFT | 2000-04-01 | 28.37 |\n|   MSFT | 2000-05-01 | 25.45 |\nuser\x3e (-\x3e (ds/column-map ds "price^2" #(* % %) ["price"])\n          (ds/head))\ntest/data/stocks.csv [5 4]:\n\n| symbol |       date | price |   price^2 |\n|--------|------------|-------|-----------|\n|   MSFT | 2000-01-01 | 39.81 | 1584.8361 |\n|   MSFT | 2000-02-01 | 36.35 | 1321.3225 |\n|   MSFT | 2000-03-01 | 43.22 | 1867.9684 |\n|   MSFT | 2000-04-01 | 28.37 |  804.8569 |\n|   MSFT | 2000-05-01 | 25.45 |  647.7025 |\n\n\n\nuser\x3e (def ds1 (ds/-\x3edataset [{:a 1} {:b 2.0} {:a 2 :b 3.0}]))\n#\'user/ds1\nuser\x3e ds1\n_unnamed [3 2]:\n\n|  :b | :a |\n|----:|---:|\n|     |  1 |\n| 2.0 |    |\n| 3.0 |  2 |\nuser\x3e (ds/column-map ds1 :c (fn [a b]\n                              (when (and a b)\n                                (+ (double a) (double b))))\n                     [:a :b])\n_unnamed [3 3]:\n\n|  :b | :a |  :c |\n|----:|---:|----:|\n|     |  1 |     |\n| 2.0 |    |     |\n| 3.0 |  2 | 5.0 |\nuser\x3e (ds/missing (*1 :c))\n{0,1}\n```', 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 5, $APP.cljs$cst$1379$max_fixed_arity, 5, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5588$result_colname, cljs$cst$5484$map_fn, cljs$cst$5589$res_dtype_or_opts, 
  cljs$cst$5549$filter_fn_or_ds], null), new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5588$result_colname, cljs$cst$5484$map_fn, cljs$cst$5549$filter_fn_or_ds], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5588$result_colname, cljs$cst$5484$map_fn], null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5588$result_colname, cljs$cst$5484$map_fn, cljs$cst$5589$res_dtype_or_opts, cljs$cst$5549$filter_fn_or_ds], null), new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5588$result_colname, cljs$cst$5484$map_fn, cljs$cst$5549$filter_fn_or_ds], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, 
  cljs$cst$5588$result_colname, cljs$cst$5484$map_fn], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null, null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5590$rename_columns, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5591$rename_map], null))), $APP.cljs$cst$256$doc, 
  "Given a map of old-name-\x3enew-name, rename some subset of columns\n  without changing their column order."], null)), $APP.cljs.core.with_meta(cljs$cst$5592$unique_by, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$52$f], null))), $APP.cljs$cst$256$doc, "Unique-by taking first"], 
  null)), $APP.cljs.core.with_meta($APP.cljs$cst$189$column, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$1485$k], null))), $APP.cljs$cst$256$doc, "Return the column at positing k.  Failing to find the column is an error."], null)), $APP.cljs.core.with_meta(cljs$cst$5593$sort_by_column, 
  new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5594$sort_op, $APP.cljs$cst$1270$options], null)], null))), $APP.cljs$cst$256$doc, "Sort the dataset by column colname.  For sort options and the interaction between\n  sort-fn and the options see [[tech.v3.datatype.argops/argsort]].\n\n  * `sort-op` - a boolean binary predicate comparison operation such as \x3c or \x3e.\n\n  Options:\n\n  * `:nan-strategy` - defaults to `:last` - for numeric columns where to place missing values.\n     Options are `:first`, `:last`, `:exception`.\n  * `:comparator` - pass in a custom comparator - a function returning -1,0, or 1.  If no\n     sort-op is passed in this defaults to `compare`.", 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list(cljs$cst$5542$ds, cljs$cst$5500$colname, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5594$sort_op, $APP.cljs$cst$1270$options], 
  null))], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5594$sort_op, $APP.cljs$cst$1270$options], null)], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5595$rowvec_at, 
  new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$1256$idx], null))), $APP.cljs$cst$256$doc, "Get row as a vec of values at index idx.  Negative indexes index from the end."], null)), $APP.cljs.core.with_meta($APP.cljs$cst$1192$update, new $APP.cljs.core.PersistentArrayMap(null, 3, 
  [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5596$lhs_ds, cljs$cst$5549$filter_fn_or_ds, $APP.cljs$cst$2465$update_fn, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null))), $APP.cljs$cst$256$doc, 'Update this dataset.  Filters this dataset into a new dataset,\n  applies update-fn, then merges the result into original dataset.\n\n  This pathways is designed to work with the tech.v3.dataset.column-filters namespace.\n\n\n  * `filter-fn-or-ds` is a generalized parameter.  May be a function,\n     a dataset or a sequence of column names.\n  *  update-fn must take the dataset as the first argument and must return\n     a dataset.\n\n```clojure\n(ds/bind-\x3e (ds/-\x3edataset dataset) ds\n           (ds/remove-column "Id")\n           (ds/update cf/string ds/replace-missing-value "NA")\n           (ds/update-elemwise cf/string #(get {"" "NA"} % %))\n           (ds/update cf/numeric ds/replace-missing-value 0)\n           (ds/update cf/boolean ds/replace-missing-value false)\n           (ds/update-columnwise (cf/union (cf/numeric ds) (cf/boolean ds))\n                                 #(dtype/elemwise-cast % :float64)))\n```', 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 3, $APP.cljs$cst$1379$max_fixed_arity, 3, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list(cljs$cst$5596$lhs_ds, cljs$cst$5549$filter_fn_or_ds, $APP.cljs$cst$2465$update_fn, $APP.cljs$cst$1246$args)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5596$lhs_ds, cljs$cst$5549$filter_fn_or_ds, $APP.cljs$cst$2465$update_fn, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta($APP.cljs$cst$1193$filter, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$1244$pred], null))), $APP.cljs$cst$256$doc, "Filter the dataset.  Pred gets passed each row as a map."], null)), $APP.cljs.core.with_meta(cljs$cst$5597$union_missing_sets, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5580$col_seq], 
  null))), $APP.cljs$cst$256$doc, "Union the missing sets of the columns"], null)), $APP.cljs.core.with_meta(cljs$cst$5598$row_at, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$1256$idx], null))), $APP.cljs$cst$256$doc, "Get row as a map at index idx.  Negative indexes index from the end."], 
  null)), $APP.cljs.core.with_meta(cljs$cst$5599$__GT_t_tech$v3$dataset77308, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$4051$anonymous, !0, $APP.cljs$cst$3758$protocols, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 7, [$APP.cljs$cst$3760$cljs_DOT_core_SLASH_IIndexed, "null", $APP.cljs$cst$3776$cljs_DOT_core_SLASH_ICounted, "null", $APP.cljs$cst$3785$cljs_DOT_core_SLASH_IMeta, "null", $APP.cljs$cst$4052$cljs_DOT_core_SLASH_IDeref, "null", 
  cljs$cst$5600$tech_DOT_v3_DOT_dataset_DOT_protocols_SLASH_PDatasetParser, "null", $APP.cljs$cst$3800$cljs_DOT_core_SLASH_IWithMeta, "null", $APP.cljs$cst$3804$cljs_DOT_core_SLASH_IReduce, "null"], null), null), $APP.cljs$cst$3805$skip_protocol_flag, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$3760$cljs_DOT_core_SLASH_IIndexed, "null", $APP.cljs$cst$3776$cljs_DOT_core_SLASH_ICounted, "null", $APP.cljs$cst$3785$cljs_DOT_core_SLASH_IMeta, 
  "null", $APP.cljs$cst$4052$cljs_DOT_core_SLASH_IDeref, "null", $APP.cljs$cst$3800$cljs_DOT_core_SLASH_IWithMeta, "null", $APP.cljs$cst$3804$cljs_DOT_core_SLASH_IReduce, "null"], null), null), $APP.cljs$cst$2139$factory, $APP.cljs$cst$2145$positional, $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 7, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options, $APP.cljs$cst$5524$pfn, cljs$cst$5525$rc_STAR_, 
  cljs$cst$5526$rfn, cljs$cst$5527$parsers, cljs$cst$5528$row_fn, cljs$cst$5529$meta77309], null))), $APP.cljs$cst$256$doc, "Positional factory function for tech.v3.dataset/t_tech$v3$dataset77308."], null)), $APP.cljs.core.with_meta(cljs$cst$5601$select_columns, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, 
  cljs$cst$5567$colnames], null))), $APP.cljs$cst$256$doc, "Select these column in this order.  This can be used both to select specific columns\n  and to set the order of columns.  Columns not found are errors"], null)), $APP.cljs.core.with_meta(cljs$cst$5602$unique_by_column, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5542$ds, cljs$cst$5500$colname], null))), $APP.cljs$cst$256$doc, "Unique-by taking first"], null)), $APP.cljs.core.with_meta(cljs$cst$5603$dataset_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))), $APP.cljs$cst$256$doc, "Return true of this is a dataset."], null)), $APP.cljs.core.with_meta(cljs$cst$5604$dataset__GT_transit_str, 
  new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1388$format, cljs$cst$5586$handlers], null)], null))), $APP.cljs$cst$256$doc, "Write a transit string adding in the dataset write handler", 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 1, $APP.cljs$cst$1379$max_fixed_arity, 1, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list(cljs$cst$5542$ds, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1388$format, cljs$cst$5586$handlers], null))], 
  null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1388$format, cljs$cst$5586$handlers], null)], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$5605$dataset_parser, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null))), $APP.cljs$cst$256$doc, "Create a dataset parser that implements PDatasetParser, ICounted an IIndexed (nth).\n  (nth) in this case returns a row.  deref'ing the parser yields the dataset.\n  The parser also implemetns reduce which will yield the current rows."], null))], 
  [new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5606$tech_DOT_v3_DOT_dataset_SLASH_columns, $APP.cljs$cst$108$val, tech.v3.dataset.columns, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Return the columns, in order, of the dataset."], null)], null), 
  new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5607$tech_DOT_v3_DOT_dataset_SLASH_sort_by, $APP.cljs$cst$108$val, tech.v3.dataset.sort_by, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$1517$keyfn, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$94$comp, $APP.cljs$cst$1270$options], null)], null)), $APP.cljs$cst$256$doc, "Sort dataset by keyfn.  Keyfn is passed each row as a map."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5608$tech_DOT_v3_DOT_dataset_SLASH_mapseq_parser, $APP.cljs$cst$108$val, tech.v3.dataset.mapseq_parser, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null), $APP.cljs.core.PersistentVector.EMPTY), $APP.cljs$cst$256$doc, "Return a clojure function that when called with one arg that arg must be the next map\n  to add to the dataset.  When called with no args returns the current dataset.  This can be\n  used to efficiently transform a stream of maps into a dataset while getting intermediate\n  datasets during the parse operation.\n\nOptions are the same for [[-\x3edataset]].\n\n```clojure\ncljs.user\x3e (def pfn (ds/mapseq-parser nil))\n#'cljs.user/pfn\ncljs.user\x3e (pfn {:a 1 :b 2})\nnil\ncljs.user\x3e (pfn {:a 1 :b 2})\nnil\ncljs.user\x3e (pfn {:a 2 :c 3})\nnil\ncljs.user\x3e (pfn)\n#dataset[unnamed [3 3]\n| :a |  :b |  :c |\n|---:|----:|----:|\n|  1 |   2 | NaN |\n|  1 |   2 | NaN |\n|  2 | NaN |   3 |]\ncljs.user\x3e (pfn {:a 3 :d 4})\nnil\ncljs.user\x3e (pfn {:a 5 :c 6})\nnil\ncljs.user\x3e (pfn)\n#dataset[unnamed [5 4]\n| :a |  :b |  :c |  :d |\n|---:|----:|----:|----:|\n|  1 |   2 | NaN | NaN |\n|  1 |   2 | NaN | NaN |\n|  2 | NaN |   3 | NaN |\n|  3 | NaN | NaN |   4 |\n|  5 | NaN |   6 | NaN |]\n```"], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5609$tech_DOT_v3_DOT_dataset_SLASH_column__GT_data, $APP.cljs$cst$108$val, tech.v3.dataset.column__GT_data, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$318$col], null)), $APP.cljs$cst$256$doc, "Transform a column in raw data safe for passing to transit or edn."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5610$tech_DOT_v3_DOT_dataset_SLASH_column_names, $APP.cljs$cst$108$val, tech.v3.dataset.column_names, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Return the column names as a sequence."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5611$tech_DOT_v3_DOT_dataset_SLASH_filter_column, $APP.cljs$cst$108$val, tech.v3.dataset.filter_column, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1244$pred], null)], null)), $APP.cljs$cst$256$doc, "Filter the dataset by column colname.  If pred isn't passed in the column's values\n  are treated as truthy."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5612$tech_DOT_v3_DOT_dataset_SLASH_filter_dataset, $APP.cljs$cst$108$val, tech.v3.dataset.filter_dataset, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, 
  [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5549$filter_fn_or_ds], null)), $APP.cljs$cst$256$doc, "Filter the columns of the dataset returning a new dataset.  This pathway is\n  designed to work with the tech.v3.dataset.column-filters namespace.\n\n  * If filter-fn-or-ds is a dataset, it is returned.\n  * If filter-fn-or-ds is sequential, then select-columns is called.\n  * If filter-fn-or-ds is :all, all columns are returned\n  * If filter-fn-or-ds is an instance of IFn, the dataset is passed into it."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5613$tech_DOT_v3_DOT_dataset_SLASH_column_count, $APP.cljs$cst$108$val, tech.v3.dataset.column_count, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Integer column count of the dataset."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5614$tech_DOT_v3_DOT_dataset_SLASH___GT__GT_dataset, $APP.cljs$cst$108$val, tech.v3.dataset.__GT__GT_dataset, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options, $APP.cljs$cst$380$data], null), new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data], null)), $APP.cljs$cst$256$doc, "data-last analogue of [[-\x3edataset]] for use in `-\x3e\x3e` macros."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5615$tech_DOT_v3_DOT_dataset_SLASH_select, $APP.cljs$cst$108$val, tech.v3.dataset.select, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$5552$cols, $APP.cljs$cst$5553$rows], null)), $APP.cljs$cst$256$doc, "Select a subrect of the dataset."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5616$tech_DOT_v3_DOT_dataset_SLASH_columns_as_map, $APP.cljs$cst$108$val, tech.v3.dataset.columns_as_map, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5617$tech_DOT_v3_DOT_dataset_SLASH_data__GT_dataset, $APP.cljs$cst$108$val, tech.v3.dataset.data__GT_dataset, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5556$ds_data], 
  null)), $APP.cljs$cst$256$doc, "Given data produced via dataset-\x3edata create a new dataset."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5618$tech_DOT_v3_DOT_dataset_SLASH_mapseq_parser_rf, $APP.cljs$cst$108$val, tech.v3.dataset.mapseq_parser_rf, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$1270$options], null)), $APP.cljs$cst$256$doc, "Return a transduce-compatible sequence-of-maps parser.  For example of use\n  see definition of [[row-map]]."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5619$tech_DOT_v3_DOT_dataset_SLASH_tail, $APP.cljs$cst$108$val, tech.v3.dataset.tail, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$2483$n], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Return the last n rows of the dataset."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5620$tech_DOT_v3_DOT_dataset_SLASH_dataset__GT_data, $APP.cljs$cst$108$val, tech.v3.dataset.dataset__GT_data, $APP.cljs$cst$2$meta, 
  new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Convert a dataset into a pure data datastructure save for transit or direct json\n  serialization.  Uses base64 encoding of numeric data."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5621$tech_DOT_v3_DOT_dataset_SLASH_transit_read_handler_map, 
  $APP.cljs$cst$108$val, tech.v3.dataset.transit_read_handler_map, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY), $APP.cljs$cst$256$doc, "Return a map mapping the dataset tag to a transit read handler."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5622$tech_DOT_v3_DOT_dataset_SLASH___GT_dataset, $APP.cljs$cst$108$val, tech.v3.dataset.__GT_dataset, 
  $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data, $APP.cljs$cst$1270$options], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$380$data], null), $APP.cljs.core.PersistentVector.EMPTY), $APP.cljs$cst$256$doc, 'Convert either a sequence of maps or a map of columns into a dataset.\n  Options are similar to the jvm version of tech.v3.dataset in terms of\n  parser-fn.  This function can take either a sequence of maps or a map of\n  columns.\n\n  Examples:\n```clojure\ncljs.user\x3e (-\x3e\x3e (ds/-\x3edataset {:a (range 100)\n                               :b (take 100 (cycle ["hey" "you" "goonies"]))})\n                (ds/cols)\n                (map (comp :datatype meta)))\n(:float64 :string)\n\ncljs.user\x3e (-\x3e\x3e (ds/-\x3edataset {:a (range 100)\n                               :b (take 100 (cycle ["hey" "you" "goonies"]))}\n                              {:parser-fn {:a :int8}})\n                (ds/cols)\n                (map (comp :datatype meta)))\n(:int8 :string)\n```'], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5623$tech_DOT_v3_DOT_dataset_SLASH_reverse_rows, $APP.cljs$cst$108$val, tech.v3.dataset.reverse_rows, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Reverse the order of the rows of a dataset or a column"], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5624$tech_DOT_v3_DOT_dataset_SLASH_concat, $APP.cljs$cst$108$val, tech.v3.dataset.concat, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null), $APP.cljs.core.PersistentVector.EMPTY), 
  $APP.cljs$cst$256$doc, "This is a copying concatenation so the result will be realized.  Missing columns\n  will be filled in with missing values."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5625$tech_DOT_v3_DOT_dataset_SLASH_merge_by_column, $APP.cljs$cst$108$val, tech.v3.dataset.merge_by_column, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5563$lhs, $APP.cljs$cst$3132$rhs, cljs$cst$5500$colname], null)), $APP.cljs$cst$256$doc, "Merge rows assuming left, right have the same columns.  Left is taken first then\n  any right not appear with left are appended.  This is far less general but much\n  faster than a join operation; it is useful for merging timeseries data."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5626$tech_DOT_v3_DOT_dataset_SLASH_group_by, 
  $APP.cljs$cst$108$val, tech.v3.dataset.group_by, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$52$f], null)), $APP.cljs$cst$256$doc, "Group the dataset by the values returned from passing f over each row, represented as a\n  map, of the dataset."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$272$name, cljs$cst$5627$tech_DOT_v3_DOT_dataset_SLASH_select_rows, $APP.cljs$cst$108$val, tech.v3.dataset.select_rows, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5565$rowidxs], null)), $APP.cljs$cst$256$doc, "Select these row indexes out of the dataset."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$272$name, cljs$cst$5628$tech_DOT_v3_DOT_dataset_SLASH_replace_missing, $APP.cljs$cst$108$val, tech.v3.dataset.replace_missing, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5567$colnames, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5568$replace_cmd], null)], null)), $APP.cljs$cst$256$doc, "Replace missing values in dataset.\n  * colnames one or more columns to run replace cmd\n  * replace-cmd - one of `:first` `:last` `:lerp` `[:value val]` ifn\n\n  If replace-cmd is an ifn it will be given the column-datatype first and last arguments\n  in the missing span and the number of missing elements.  Either the first or last may be\n  nil if the missing span is at the beginning or end.  In the case where all values are\n  missing both arguments may be nil."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5629$tech_DOT_v3_DOT_dataset_SLASH_remove_columns, $APP.cljs$cst$108$val, tech.v3.dataset.remove_columns, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5567$colnames], null)), $APP.cljs$cst$256$doc, "Remove these columns from the dataset."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5630$tech_DOT_v3_DOT_dataset_SLASH_remove_rows, $APP.cljs$cst$108$val, tech.v3.dataset.remove_rows, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5565$rowidxs], null)), $APP.cljs$cst$256$doc, "Remove these row indexes out of the dataset."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5631$tech_DOT_v3_DOT_dataset_SLASH_head, $APP.cljs$cst$108$val, tech.v3.dataset.head, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$2483$n], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Return the first n rows of the dataset."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5632$tech_DOT_v3_DOT_dataset_SLASH_cols, $APP.cljs$cst$108$val, tech.v3.dataset.cols, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], 
  null)), $APP.cljs$cst$256$doc, "Alias of `columns`"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5633$tech_DOT_v3_DOT_dataset_SLASH_row_count, $APP.cljs$cst$108$val, tech.v3.dataset.row_count, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5573$ds_or_col], null)), $APP.cljs$cst$256$doc, 
  "Integer row count of the dataset."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5634$tech_DOT_v3_DOT_dataset_SLASH_soft_select_columns, $APP.cljs$cst$108$val, tech.v3.dataset.soft_select_columns, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5567$colnames], 
  null)), $APP.cljs$cst$256$doc, "Select these columns in this order.  Columns not found are quietly ignored.  To get errors\n  for missing columns see [[select-columns]]."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5635$tech_DOT_v3_DOT_dataset_SLASH_remove_missing, $APP.cljs$cst$108$val, tech.v3.dataset.remove_missing, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname], null)), $APP.cljs$cst$256$doc, "Remove missing rows from a dataset or column"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5636$tech_DOT_v3_DOT_dataset_SLASH_transit_write_handler_map, $APP.cljs$cst$108$val, tech.v3.dataset.transit_write_handler_map, 
  $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY), $APP.cljs$cst$256$doc, "Return a map mapping the dataset type to a transit writer handler."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5637$tech_DOT_v3_DOT_dataset_SLASH_missing, $APP.cljs$cst$108$val, tech.v3.dataset.missing, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5573$ds_or_col], null)), $APP.cljs$cst$256$doc, "Return the missing set as a clojure set.  The underlying protocol returns\n  missing sets as js sets as those have superior performance when using numbers."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5638$tech_DOT_v3_DOT_dataset_SLASH_data__GT_column, 
  $APP.cljs$cst$108$val, tech.v3.dataset.data__GT_column, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5476$metadata, cljs$cst$5497$missing, $APP.cljs$cst$380$data], 
  null)], null)], null)), $APP.cljs$cst$256$doc, "Transform data produced via column-\x3edata into a column"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5639$tech_DOT_v3_DOT_dataset_SLASH_select_missing, $APP.cljs$cst$108$val, tech.v3.dataset.select_missing, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Select the missing rows from a dataset or a column"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5640$tech_DOT_v3_DOT_dataset_SLASH_intersect_missing_sets, $APP.cljs$cst$108$val, tech.v3.dataset.intersect_missing_sets, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5580$col_seq], null)), $APP.cljs$cst$256$doc, "Intersect the missing sets of the columns"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5641$tech_DOT_v3_DOT_dataset_SLASH_rowvecs, $APP.cljs$cst$108$val, tech.v3.dataset.rowvecs, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Get a sequence of persistent vectors from a dataset"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5642$tech_DOT_v3_DOT_dataset_SLASH_row_map, $APP.cljs$cst$108$val, tech.v3.dataset.row_map, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$5542$ds, cljs$cst$5484$map_fn, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null)], null)), $APP.cljs$cst$256$doc, 'Map a function across the rows of the dataset producing a new dataset\n  that is merged back into the original potentially replacing existing columns.\n  Options are passed into the [[-\x3edataset]] function so you can control the resulting\n  column types by the usual dataset parsing options described there.\n\n  Examples:\n\n```clojure\ncljs.user\x3e (def stocks (ds/transit-file-\x3edataset "test/data/stocks.transit-json"))\n#\'cljs.user/stocks\ncljs.user\x3e (ds/head stocks)\n#dataset[https://github.com/techascent/tech.ml.dataset/raw/master/test/data/stocks.csv [5 3]\n| :symbol |      :date | :price |\n|---------|------------|-------:|\n|    MSFT | 2000-01-01 |  39.81 |\n|    MSFT | 2000-02-01 |  36.35 |\n|    MSFT | 2000-03-01 |  43.22 |\n|    MSFT | 2000-04-01 |  28.37 |\n|    MSFT | 2000-05-01 |  25.45 |]\ncljs.user\x3e (ds/head (ds/row-map stocks (fn [row]\n                                    {:symbol (keyword (row :symbol))\n                                     :price2 (* (row :price)(row :price))})))\n#dataset[https://github.com/techascent/tech.ml.dataset/raw/master/test/data/stocks.csv [5 4]\n| :symbol |      :date | :price |       :price2 |\n|---------|------------|-------:|--------------:|\n|   :MSFT | 2000-01-01 |  39.81 | 1584.83610000 |\n|   :MSFT | 2000-02-01 |  36.35 | 1321.32250000 |\n|   :MSFT | 2000-03-01 |  43.22 | 1867.96840000 |\n|   :MSFT | 2000-04-01 |  28.37 |  804.85690000 |\n|   :MSFT | 2000-05-01 |  25.45 |  647.70250000 |]\n```'], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5643$tech_DOT_v3_DOT_dataset_SLASH_rows, $APP.cljs$cst$108$val, tech.v3.dataset.rows, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Get a sequence of maps from a dataset"], null)], null), 
  new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5644$tech_DOT_v3_DOT_dataset_SLASH_group_by_column, $APP.cljs$cst$108$val, tech.v3.dataset.group_by_column, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname], null)), $APP.cljs$cst$256$doc, "Group the dataset by column colname"], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5645$tech_DOT_v3_DOT_dataset_SLASH_transit_str__GT_dataset, $APP.cljs$cst$108$val, tech.v3.dataset.transit_str__GT_dataset, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5585$json_data, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1388$format, cljs$cst$5586$handlers], null)], null)), $APP.cljs$cst$256$doc, "Parse a transit string adding in the dataset read handler"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5646$tech_DOT_v3_DOT_dataset_SLASH_column_map, $APP.cljs$cst$108$val, tech.v3.dataset.column_map, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5588$result_colname, cljs$cst$5484$map_fn, cljs$cst$5589$res_dtype_or_opts, cljs$cst$5549$filter_fn_or_ds], null), new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, cljs$cst$5588$result_colname, cljs$cst$5484$map_fn, cljs$cst$5549$filter_fn_or_ds], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5548$dataset, 
  cljs$cst$5588$result_colname, cljs$cst$5484$map_fn], null)), $APP.cljs$cst$256$doc, 'Produce a new (or updated) column as the result of mapping a fn over columns.\n\n  * `dataset` - dataset.\n  * `result-colname` - Name of new (or existing) column.\n  * `map-fn` - function to map over columns.  Same rules as `tech.v3.datatype/emap`.\n  * `res-dtype-or-opts` - If not given result is scanned to infer missing and datatype.\n  If using an option map, options are described below.\n  * `filter-fn-or-ds` - A dataset, a sequence of columns, or a `tech.v3.datasets/column-filters`\n     column filter function.  Defaults to all the columns of the existing dataset.\n\n  Returns a new dataset with a new or updated column.\n\n  Options:\n\n  * `:datatype` - Set the dataype of the result column.  If not given result is scanned\n  to infer result datatype and missing set.\n  * `:missing-fn` - if given, columns are first passed to missing-fn as a sequence and\n  this dictates the missing set.  Else the missing set is by scanning the results\n  during the inference process. See `tech.v3.dataset.column/union-missing-sets` and\n  `tech.v3.dataset.column/intersect-missing-sets` for example functions to pass in\n  here.\n\n  Examples:\n\n\n```clojure\n\n  ;;From the tests --\n\n  (let [testds (ds/-\x3edataset [{:a 1.0 :b 2.0} {:a 3.0 :b 5.0} {:a 4.0 :b nil}])]\n    ;;result scanned for both datatype and missing set\n    (is (\x3d (vec [3.0 6.0 nil])\n           (:b2 (ds/column-map testds :b2 #(when % (inc %)) [:b]))))\n    ;;result scanned for missing set only.  Result used in-place.\n    (is (\x3d (vec [3.0 6.0 nil])\n           (:b2 (ds/column-map testds :b2 #(when % (inc %))\n                               {:datatype :float64} [:b]))))\n    ;;Nothing scanned at all.\n    (is (\x3d (vec [3.0 6.0 nil])\n           (:b2 (ds/column-map testds :b2 #(inc %)\n                               {:datatype :float64\n                                :missing-fn ds-col/union-missing-sets} [:b]))))\n    ;;Missing set scanning causes NPE at inc.\n    (is (thrown? Throwable\n                 (ds/column-map testds :b2 #(inc %)\n                                {:datatype :float64}\n                                [:b]))))\n\n  ;;Ad-hoc repl --\n\nuser\x3e (require \'[tech.v3.dataset :as ds]))\nnil\nuser\x3e (def ds (ds/-\x3edataset "test/data/stocks.csv"))\n#\'user/ds\nuser\x3e (ds/head ds)\ntest/data/stocks.csv [5 3]:\n\n| symbol |       date | price |\n|--------|------------|-------|\n|   MSFT | 2000-01-01 | 39.81 |\n|   MSFT | 2000-02-01 | 36.35 |\n|   MSFT | 2000-03-01 | 43.22 |\n|   MSFT | 2000-04-01 | 28.37 |\n|   MSFT | 2000-05-01 | 25.45 |\nuser\x3e (-\x3e (ds/column-map ds "price^2" #(* % %) ["price"])\n          (ds/head))\ntest/data/stocks.csv [5 4]:\n\n| symbol |       date | price |   price^2 |\n|--------|------------|-------|-----------|\n|   MSFT | 2000-01-01 | 39.81 | 1584.8361 |\n|   MSFT | 2000-02-01 | 36.35 | 1321.3225 |\n|   MSFT | 2000-03-01 | 43.22 | 1867.9684 |\n|   MSFT | 2000-04-01 | 28.37 |  804.8569 |\n|   MSFT | 2000-05-01 | 25.45 |  647.7025 |\n\n\n\nuser\x3e (def ds1 (ds/-\x3edataset [{:a 1} {:b 2.0} {:a 2 :b 3.0}]))\n#\'user/ds1\nuser\x3e ds1\n_unnamed [3 2]:\n\n|  :b | :a |\n|----:|---:|\n|     |  1 |\n| 2.0 |    |\n| 3.0 |  2 |\nuser\x3e (ds/column-map ds1 :c (fn [a b]\n                              (when (and a b)\n                                (+ (double a) (double b))))\n                     [:a :b])\n_unnamed [3 3]:\n\n|  :b | :a |  :c |\n|----:|---:|----:|\n|     |  1 |     |\n| 2.0 |    |     |\n| 3.0 |  2 | 5.0 |\nuser\x3e (ds/missing (*1 :c))\n{0,1}\n```'], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5647$tech_DOT_v3_DOT_dataset_SLASH_rename_columns, $APP.cljs$cst$108$val, tech.v3.dataset.rename_columns, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5591$rename_map], null)), $APP.cljs$cst$256$doc, "Given a map of old-name-\x3enew-name, rename some subset of columns\n  without changing their column order."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5648$tech_DOT_v3_DOT_dataset_SLASH_unique_by, $APP.cljs$cst$108$val, tech.v3.dataset.unique_by, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$52$f], null)), $APP.cljs$cst$256$doc, "Unique-by taking first"], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5649$tech_DOT_v3_DOT_dataset_SLASH_column, $APP.cljs$cst$108$val, tech.v3.dataset.column, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$1485$k], null)), $APP.cljs$cst$256$doc, "Return the column at positing k.  Failing to find the column is an error."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5650$tech_DOT_v3_DOT_dataset_SLASH_sort_by_column, $APP.cljs$cst$108$val, tech.v3.dataset.sort_by_column, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5594$sort_op, $APP.cljs$cst$1270$options], null)], null)), $APP.cljs$cst$256$doc, "Sort the dataset by column colname.  For sort options and the interaction between\n  sort-fn and the options see [[tech.v3.datatype.argops/argsort]].\n\n  * `sort-op` - a boolean binary predicate comparison operation such as \x3c or \x3e.\n\n  Options:\n\n  * `:nan-strategy` - defaults to `:last` - for numeric columns where to place missing values.\n     Options are `:first`, `:last`, `:exception`.\n  * `:comparator` - pass in a custom comparator - a function returning -1,0, or 1.  If no\n     sort-op is passed in this defaults to `compare`."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5651$tech_DOT_v3_DOT_dataset_SLASH_rowvec_at, $APP.cljs$cst$108$val, tech.v3.dataset.rowvec_at, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$1256$idx], null)), $APP.cljs$cst$256$doc, "Get row as a vec of values at index idx.  Negative indexes index from the end."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5652$tech_DOT_v3_DOT_dataset_SLASH_update, $APP.cljs$cst$108$val, tech.v3.dataset.update, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5596$lhs_ds, cljs$cst$5549$filter_fn_or_ds, $APP.cljs$cst$2465$update_fn, $APP.cljs$cst$148$_AMPERSAND_, 
  $APP.cljs$cst$1246$args], null)), $APP.cljs$cst$256$doc, 'Update this dataset.  Filters this dataset into a new dataset,\n  applies update-fn, then merges the result into original dataset.\n\n  This pathways is designed to work with the tech.v3.dataset.column-filters namespace.\n\n\n  * `filter-fn-or-ds` is a generalized parameter.  May be a function,\n     a dataset or a sequence of column names.\n  *  update-fn must take the dataset as the first argument and must return\n     a dataset.\n\n```clojure\n(ds/bind-\x3e (ds/-\x3edataset dataset) ds\n           (ds/remove-column "Id")\n           (ds/update cf/string ds/replace-missing-value "NA")\n           (ds/update-elemwise cf/string #(get {"" "NA"} % %))\n           (ds/update cf/numeric ds/replace-missing-value 0)\n           (ds/update cf/boolean ds/replace-missing-value false)\n           (ds/update-columnwise (cf/union (cf/numeric ds) (cf/boolean ds))\n                                 #(dtype/elemwise-cast % :float64)))\n```'], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5653$tech_DOT_v3_DOT_dataset_SLASH_filter, $APP.cljs$cst$108$val, tech.v3.dataset.filter, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$1244$pred], null)), $APP.cljs$cst$256$doc, "Filter the dataset.  Pred gets passed each row as a map."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5654$tech_DOT_v3_DOT_dataset_SLASH_union_missing_sets, $APP.cljs$cst$108$val, tech.v3.dataset.union_missing_sets, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5580$col_seq], null)), $APP.cljs$cst$256$doc, "Union the missing sets of the columns"], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5655$tech_DOT_v3_DOT_dataset_SLASH_row_at, $APP.cljs$cst$108$val, tech.v3.dataset.row_at, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$1256$idx], null)), $APP.cljs$cst$256$doc, "Get row as a map at index idx.  Negative indexes index from the end."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5656$tech_DOT_v3_DOT_dataset_SLASH___GT_t_tech$v3$dataset77308, $APP.cljs$cst$108$val, tech.v3.dataset.__GT_t_tech$v3$dataset77308, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 7, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options, $APP.cljs$cst$5524$pfn, cljs$cst$5525$rc_STAR_, 
  cljs$cst$5526$rfn, cljs$cst$5527$parsers, cljs$cst$5528$row_fn, cljs$cst$5529$meta77309], null)), $APP.cljs$cst$256$doc, "Positional factory function for tech.v3.dataset/t_tech$v3$dataset77308."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5657$tech_DOT_v3_DOT_dataset_SLASH_select_columns, $APP.cljs$cst$108$val, tech.v3.dataset.select_columns, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5567$colnames], null)), $APP.cljs$cst$256$doc, "Select these column in this order.  This can be used both to select specific columns\n  and to set the order of columns.  Columns not found are errors"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5658$tech_DOT_v3_DOT_dataset_SLASH_unique_by_column, $APP.cljs$cst$108$val, tech.v3.dataset.unique_by_column, $APP.cljs$cst$2$meta, 
  new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, cljs$cst$5500$colname], null)), $APP.cljs$cst$256$doc, "Unique-by taking first"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5659$tech_DOT_v3_DOT_dataset_SLASH_dataset_QMARK_, $APP.cljs$cst$108$val, tech.v3.dataset.dataset_QMARK_, $APP.cljs$cst$2$meta, 
  new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds], null)), $APP.cljs$cst$256$doc, "Return true of this is a dataset."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5660$tech_DOT_v3_DOT_dataset_SLASH_dataset__GT_transit_str, $APP.cljs$cst$108$val, tech.v3.dataset.dataset__GT_transit_str, $APP.cljs$cst$2$meta, 
  new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$5542$ds, $APP.cljs$cst$148$_AMPERSAND_, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1388$format, cljs$cst$5586$handlers], null)], null)), $APP.cljs$cst$256$doc, "Write a transit string adding in the dataset write handler"], null)], null), 
  new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$5661$tech_DOT_v3_DOT_dataset_SLASH_dataset_parser, $APP.cljs$cst$108$val, tech.v3.dataset.dataset_parser, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1270$options], null)), $APP.cljs$cst$256$doc, "Create a dataset parser that implements PDatasetParser, ICounted an IIndexed (nth).\n  (nth) in this case returns a row.  deref'ing the parser yields the dataset.\n  The parser also implemetns reduce which will yield the current rows."], 
  null)], null)]), $APP.sci.core.create_ns.cljs$core$IFn$_invoke$arity$2(cljs$cst$5541$tech_DOT_v3_DOT_dataset, null))], null)], null));
};
$APP.scittle.tmdjs.init();

}).call(this);