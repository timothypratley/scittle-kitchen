(function(){
'use strict';
var cljs$cst$8885$query__GT_ast = new $APP.cljs.core.Symbol(null, "query-\x3east", "query-\x3east", 1930047957, null), cljs$cst$8814$edn_query_language_DOT_core_SLASH_recursion_depth = new $APP.cljs.core.Keyword("edn-query-language.core", "recursion-depth", "edn-query-language.core/recursion-depth", -1726216891), cljs$cst$8932$edn_query_language_DOT_core_SLASH_ident__GT_ast = new $APP.cljs.core.Symbol("edn-query-language.core", "ident-\x3east", "edn-query-language.core/ident-\x3east", -1254779516, 
null), cljs$cst$8873$edn_query_language_DOT_core_SLASH_union_children_QMARK_ = new $APP.cljs.core.Symbol("edn-query-language.core", "union-children?", "edn-query-language.core/union-children?", 730690780, null), cljs$cst$8886$expr__GT_ast = new $APP.cljs.core.Symbol(null, "expr-\x3east", "expr-\x3east", 464686145, null), cljs$cst$8944$edn_query_language_DOT_core_SLASH_parameterize = new $APP.cljs.core.Symbol("edn-query-language.core", "parameterize", "edn-query-language.core/parameterize", 1123993074, 
null), cljs$cst$8815$cljs_DOT_core_SLASH_nat_int_QMARK_ = new $APP.cljs.core.Symbol("cljs.core", "nat-int?", "cljs.core/nat-int?", -164364171, null), cljs$cst$8929$edn_query_language_DOT_core_SLASH_mask_query = new $APP.cljs.core.Symbol("edn-query-language.core", "mask-query", "edn-query-language.core/mask-query", -436427741, null), cljs$cst$8868$edn_query_language_DOT_core_SLASH_ident_QMARK_ = new $APP.cljs.core.Symbol("edn-query-language.core", "ident?", "edn-query-language.core/ident?", -1410852474, 
null), cljs$cst$8892$union__GT_ast = new $APP.cljs.core.Symbol(null, "union-\x3east", "union-\x3east", 1345641022, null), cljs$cst$8811$edn_query_language_DOT_core_SLASH_join_query = new $APP.cljs.core.Keyword("edn-query-language.core", "join-query", "edn-query-language.core/join-query", 587629761), cljs$cst$8939$edn_query_language_DOT_core_SLASH_focus_subquery_union_STAR_ = new $APP.cljs.core.Symbol("edn-query-language.core", "focus-subquery-union*", "edn-query-language.core/focus-subquery-union*", 
-1764766636, null), cljs$cst$8897$merge_asts = new $APP.cljs.core.Symbol(null, "merge-asts", "merge-asts", 189264427, null), cljs$cst$8883$mask_ast = new $APP.cljs.core.Symbol(null, "mask-ast", "mask-ast", 1617278993, null), cljs$cst$8896$call__GT_ast = new $APP.cljs.core.Symbol(null, "call-\x3east", "call-\x3east", -567984670, null), cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node = new $APP.cljs.core.Keyword("edn-query-language.ast", "node", "edn-query-language.ast/node", -1614840957), cljs$cst$8852$cljs_DOT_core_SLASH_set = 
new $APP.cljs.core.Symbol("cljs.core", "set", "cljs.core/set", 724680876, null), cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key = new $APP.cljs.core.Keyword("edn-query-language.ast", "key", "edn-query-language.ast/key", 973476796), cljs$cst$8866$edn_query_language_DOT_core_SLASH_ast__GT_query = new $APP.cljs.core.Symbol("edn-query-language.core", "ast-\x3equery", "edn-query-language.core/ast-\x3equery", 1361699420, null), cljs$cst$8922$parameterize = new $APP.cljs.core.Symbol(null, "parameterize", 
"parameterize", 1505264396, null), cljs$cst$8864$edn_query_language_DOT_core_SLASH_query__GT_ast = new $APP.cljs.core.Symbol("edn-query-language.core", "query-\x3east", "edn-query-language.core/query-\x3east", 1749339811, null), cljs$cst$8863$edn_query_language_DOT_core_SLASH_var = new $APP.cljs.core.Keyword("edn-query-language.core", "var", "edn-query-language.core/var", -1571169875), cljs$cst$8806$prop = new $APP.cljs.core.Keyword(null, "prop", "prop", -515168332), cljs$cst$8909$wrap_expr = new $APP.cljs.core.Symbol(null, 
"wrap-expr", "wrap-expr", 1062512433, null), cljs$cst$8919$ast_meta = new $APP.cljs.core.Symbol(null, "ast-meta", "ast-meta", -1988942756, null), cljs$cst$8888$mask_query = new $APP.cljs.core.Symbol(null, "mask-query", "mask-query", 445048145, null), cljs$cst$8941$edn_query_language_DOT_core_SLASH_query__GT_shallow_ast = new $APP.cljs.core.Symbol("edn-query-language.core", "query-\x3eshallow-ast", "edn-query-language.core/query-\x3eshallow-ast", -64026663, null), cljs$cst$8928$edn_query_language_DOT_core_SLASH_INCLUDE_SPECS = 
new $APP.cljs.core.Symbol("edn-query-language.core", "INCLUDE_SPECS", "edn-query-language.core/INCLUDE_SPECS", 1360590100, null), cljs$cst$8861$error_SLASH_invalid_join = new $APP.cljs.core.Keyword("error", "invalid-join", "error/invalid-join", 1594073006), cljs$cst$8901$union_entry__GT_ast = new $APP.cljs.core.Symbol(null, "union-entry-\x3east", "union-entry-\x3east", 376733400, null), cljs$cst$8894$ident__GT_ast = new $APP.cljs.core.Symbol(null, "ident-\x3east", "ident-\x3east", -1401727850, null), 
cljs$cst$8818$recursion = new $APP.cljs.core.Keyword(null, "recursion", "recursion", -749738765), cljs$cst$8850$union_key = new $APP.cljs.core.Keyword(null, "union-key", "union-key", 1529707234), cljs$cst$8829$mutation = new $APP.cljs.core.Keyword(null, "mutation", "mutation", -285823378), cljs$cst$8920$unparse_QMARK_ = new $APP.cljs.core.Symbol(null, "unparse?", "unparse?", 641270279, null), cljs$cst$8801$edn_query_language_DOT_core_SLASH_special_property = new $APP.cljs.core.Keyword("edn-query-language.core", 
"special-property", "edn-query-language.core/special-property", -1016508506), cljs$cst$8926$edn_query_language_DOT_core_SLASH__STAR_shallow_conversion_STAR_ = new $APP.cljs.core.Symbol("edn-query-language.core", "*shallow-conversion*", "edn-query-language.core/*shallow-conversion*", -733547309, null), cljs$cst$8889$mask = new $APP.cljs.core.Symbol(null, "mask", "mask", 1054783080, null), cljs$cst$8810$cljs_DOT_spec_DOT_alpha_SLASH_map_of = new $APP.cljs.core.Symbol("cljs.spec.alpha", "map-of", "cljs.spec.alpha/map-of", 
153715093, null), cljs$cst$8862$error_SLASH_invalid_expression = new $APP.cljs.core.Keyword("error", "invalid-expression", "error/invalid-expression", -881565136), cljs$cst$8871$edn_query_language_DOT_core_SLASH_transduce_children = new $APP.cljs.core.Symbol("edn-query-language.core", "transduce-children", "edn-query-language.core/transduce-children", 966659322, null), cljs$cst$8890$ast__GT_query = new $APP.cljs.core.Symbol(null, "ast-\x3equery", "ast-\x3equery", -1167645878, null), cljs$cst$8821$join = 
new $APP.cljs.core.Keyword(null, "join", "join", -758861890), cljs$cst$8820$edn_query_language_DOT_core_SLASH_param_expr_key = new $APP.cljs.core.Keyword("edn-query-language.core", "param-expr-key", "edn-query-language.core/param-expr-key", 1108092539), cljs$cst$8884$_STAR_shallow_conversion_STAR_ = new $APP.cljs.core.Symbol(null, "*shallow-conversion*", "*shallow-conversion*", 758986689, null), cljs$cst$8874$edn_query_language_DOT_core_SLASH_update_property_param = new $APP.cljs.core.Symbol("edn-query-language.core", 
"update-property-param", "edn-query-language.core/update-property-param", 213758125, null), cljs$cst$8910$root_QMARK_ = new $APP.cljs.core.Symbol(null, "root?", "root?", -405107991, null), cljs$cst$8872$cljs_DOT_core_SLASH_fn_QMARK_ = new $APP.cljs.core.Symbol("cljs.core", "fn?", "cljs.core/fn?", 71876239, null), cljs$cst$8845$p1__110642_SHARP_ = new $APP.cljs.core.Symbol(null, "p1__110642#", "p1__110642#", 1456916389, null), cljs$cst$8824$edn_query_language_DOT_core_SLASH_mutation_key = new $APP.cljs.core.Keyword("edn-query-language.core", 
"mutation-key", "edn-query-language.core/mutation-key", 422562651), cljs$cst$8857$node_type = new $APP.cljs.core.Symbol(null, "node-type", "node-type", 1770023989, null), cljs$cst$8819$edn_query_language_DOT_core_SLASH_params = new $APP.cljs.core.Keyword("edn-query-language.core", "params", "edn-query-language.core/params", 429907673), cljs$cst$8807$param_exp = new $APP.cljs.core.Keyword(null, "param-exp", "param-exp", -594699720), cljs$cst$8841$p1__110641_SHARP_ = new $APP.cljs.core.Symbol(null, 
"p1__110641#", "p1__110641#", -67392703, null), cljs$cst$8849$p1__110646_SHARP_ = new $APP.cljs.core.Symbol(null, "p1__110646#", "p1__110646#", 599339327, null), cljs$cst$8828$edn_query_language_DOT_core_SLASH_mutation = new $APP.cljs.core.Keyword("edn-query-language.core", "mutation", "edn-query-language.core/mutation", 137261372), cljs$cst$8851$p1__110647_SHARP_ = new $APP.cljs.core.Symbol(null, "p1__110647#", "p1__110647#", 1251394332, null), cljs$cst$8847$p1__110644_SHARP_ = new $APP.cljs.core.Symbol(null, 
"p1__110644#", "p1__110644#", -227759678, null), cljs$cst$8924$edn_query_language_DOT_core_SLASH_mask_query_STAR_ = new $APP.cljs.core.Symbol("edn-query-language.core", "mask-query*", "edn-query-language.core/mask-query*", -1072147289, null), cljs$cst$8882$source_ast = new $APP.cljs.core.Symbol(null, "source-ast", "source-ast", 279789712, null), cljs$cst$8808$edn_query_language_DOT_core_SLASH_join_key_param_expr = new $APP.cljs.core.Keyword("edn-query-language.core", "join-key-param-expr", "edn-query-language.core/join-key-param-expr", 
496601666), cljs$cst$8904$query__GT_ast1 = new $APP.cljs.core.Symbol(null, "query-\x3east1", "query-\x3east1", -880342102, null), cljs$cst$8911$transduce_children = new $APP.cljs.core.Symbol(null, "transduce-children", "transduce-children", 1313883112, null), cljs$cst$8846$dispatch_key = new $APP.cljs.core.Keyword(null, "dispatch-key", "dispatch-key", 733619510), cljs$cst$8826$mutate_key = new $APP.cljs.core.Keyword(null, "mutate-key", "mutate-key", -468386111), cljs$cst$8855$edn_query_language_DOT_core_SLASH_node_type = 
new $APP.cljs.core.Symbol("edn-query-language.core", "node-type", "edn-query-language.core/node-type", 1078374183, null), cljs$cst$8860$query_root = new $APP.cljs.core.Keyword(null, "query-root", "query-root", 359781888), cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident = new $APP.cljs.core.Keyword("edn-query-language.core", "ident", "edn-query-language.core/ident", 419196228), cljs$cst$8923$normalize_query_variables = new $APP.cljs.core.Symbol(null, "normalize-query-variables", "normalize-query-variables", 
123589522, null), cljs$cst$8927$edn_query_language_DOT_core_SLASH_expr__GT_ast = new $APP.cljs.core.Symbol("edn-query-language.core", "expr-\x3east", "edn-query-language.core/expr-\x3east", 1820118335, null), cljs$cst$8907$focus_subquery_union_STAR_ = new $APP.cljs.core.Symbol(null, "focus-subquery-union*", "focus-subquery-union*", -1207956122, null), cljs$cst$8935$edn_query_language_DOT_core_SLASH_keyword__GT_ast = new $APP.cljs.core.Symbol("edn-query-language.core", "keyword-\x3east", "edn-query-language.core/keyword-\x3east", 
1736840738, null), cljs$cst$8900$keyword__GT_ast = new $APP.cljs.core.Symbol(null, "keyword-\x3east", "keyword-\x3east", 2101401428, null), cljs$cst$8925$edn_query_language_DOT_core_SLASH_query_id = new $APP.cljs.core.Symbol("edn-query-language.core", "query-id", "edn-query-language.core/query-id", -1553187613, null), cljs$cst$8879$edn_query_language_DOT_core_SLASH_merge_queries = new $APP.cljs.core.Symbol("edn-query-language.core", "merge-queries", "edn-query-language.core/merge-queries", -229392415, 
null), cljs$cst$8854$cljs_DOT_core_SLASH_methods = new $APP.cljs.core.Symbol("cljs.core", "methods", "cljs.core/methods", -1793562622, null), cljs$cst$8881$mask_query_STAR_ = new $APP.cljs.core.Symbol(null, "mask-query*", "mask-query*", -1093429871, null), cljs$cst$8823$edn_query_language_DOT_core_SLASH_join_key_param_key = new $APP.cljs.core.Keyword("edn-query-language.core", "join-key-param-key", "edn-query-language.core/join-key-param-key", 339850713), cljs$cst$8945$edn_query_language_DOT_core_SLASH_normalize_query_variables = 
new $APP.cljs.core.Symbol("edn-query-language.core", "normalize-query-variables", "edn-query-language.core/normalize-query-variables", 2013768868, null), cljs$cst$8867$ast = new $APP.cljs.core.Keyword(null, "ast", "ast", -860334068), cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query = new $APP.cljs.core.Keyword("edn-query-language.ast", "query", "edn-query-language.ast/query", 780932719), cljs$cst$8831$edn_query_language_DOT_core_SLASH_query_expr = new $APP.cljs.core.Keyword("edn-query-language.core", 
"query-expr", "edn-query-language.core/query-expr", -1903182083), cljs$cst$8898$qa = new $APP.cljs.core.Symbol(null, "qa", "qa", -330414981, null), cljs$cst$8899$qb = new $APP.cljs.core.Symbol(null, "qb", "qb", -73634705, null), cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr = new $APP.cljs.core.Keyword("edn-query-language.core", "param-expr", "edn-query-language.core/param-expr", -1530253901), cljs$cst$8842$root = new $APP.cljs.core.Keyword(null, "root", "root", -448657453), cljs$cst$8832$cljs_DOT_spec_DOT_alpha_SLASH_coll_of = 
new $APP.cljs.core.Symbol("cljs.spec.alpha", "coll-of", "cljs.spec.alpha/coll-of", 1019430407, null), cljs$cst$8813$edn_query_language_DOT_core_SLASH_query = new $APP.cljs.core.Keyword("edn-query-language.core", "query", "edn-query-language.core/query", -1940317492), cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type = new $APP.cljs.core.Keyword("edn-query-language.ast", "type", "edn-query-language.ast/type", -1057701829), cljs$cst$8908$sub_ast = new $APP.cljs.core.Symbol(null, "sub-ast", "sub-ast", 
-1941588156, null), cljs$cst$8805$edn_query_language_DOT_core_SLASH_join_key = new $APP.cljs.core.Keyword("edn-query-language.core", "join-key", "edn-query-language.core/join-key", -2056428321), cljs$cst$8816$edn_query_language_DOT_core_SLASH_recursion = new $APP.cljs.core.Keyword("edn-query-language.core", "recursion", "edn-query-language.core/recursion", 2090214849), cljs$cst$8817$unbounded = new $APP.cljs.core.Keyword(null, "unbounded", "unbounded", -2054589494), cljs$cst$8880$scittle_DOT_eql_SLASH_eql = 
new $APP.cljs.core.Keyword("scittle.eql", "eql", "scittle.eql/eql", 550942323), cljs$cst$8859$remote = new $APP.cljs.core.Keyword(null, "remote", "remote", -1593576576), cljs$cst$8916$focus_subquery = new $APP.cljs.core.Symbol(null, "focus-subquery", "focus-subquery", -222384470, null), cljs$cst$8895$symbol__GT_ast = new $APP.cljs.core.Symbol(null, "symbol-\x3east", "symbol-\x3east", 1951270940, null), cljs$cst$8915$query__GT_shallow_ast = new $APP.cljs.core.Symbol(null, "query-\x3eshallow-ast", 
"query-\x3eshallow-ast", -2090403637, null), cljs$cst$8858$component = new $APP.cljs.core.Keyword(null, "component", "component", 1555936782), cljs$cst$8934$edn_query_language_DOT_core_SLASH_call__GT_ast = new $APP.cljs.core.Symbol("edn-query-language.core", "call-\x3east", "edn-query-language.core/call-\x3east", -1484817168, null), cljs$cst$8943$edn_query_language_DOT_core_SLASH_update_recursive_depth = new $APP.cljs.core.Symbol("edn-query-language.core", "update-recursive-depth", "edn-query-language.core/update-recursive-depth", 
-2067146925, null), cljs$cst$8827$edn_query_language_DOT_core_SLASH_mutation_join = new $APP.cljs.core.Keyword("edn-query-language.core", "mutation-join", "edn-query-language.core/mutation-join", 2054928671), cljs$cst$8906$focus_subquery_STAR_ = new $APP.cljs.core.Symbol(null, "focus-subquery*", "focus-subquery*", -2116384024, null), cljs$cst$8856$edn_query_language_DOT_core = new $APP.cljs.core.Symbol(null, "edn-query-language.core", "edn-query-language.core", 1253777601, null), cljs$cst$8933$edn_query_language_DOT_core_SLASH_symbol__GT_ast = 
new $APP.cljs.core.Symbol("edn-query-language.core", "symbol-\x3east", "edn-query-language.core/symbol-\x3east", 528796430, null), cljs$cst$8905$query_expr = new $APP.cljs.core.Symbol(null, "query-expr", "query-expr", -350123470, null), cljs$cst$8912$update_property_param = new $APP.cljs.core.Symbol(null, "update-property-param", "update-property-param", 628847551, null), cljs$cst$8887$INCLUDE_SPECS = new $APP.cljs.core.Symbol(null, "INCLUDE_SPECS", "INCLUDE_SPECS", 1179792422, null), cljs$cst$8876$completion = 
new $APP.cljs.core.Keyword(null, "completion", "completion", -731716930), cljs$cst$8848$union_entry = new $APP.cljs.core.Keyword(null, "union-entry", "union-entry", 223335750), cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key = new $APP.cljs.core.Keyword("edn-query-language.ast", "dispatch-key", "edn-query-language.ast/dispatch-key", -1369369141), cljs$cst$8917$sub_query = new $APP.cljs.core.Symbol(null, "sub-query", "sub-query", -290048780, null), cljs$cst$8830$mutation_join = new $APP.cljs.core.Keyword(null, 
"mutation-join", "mutation-join", 1363539465), cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children = new $APP.cljs.core.Keyword("edn-query-language.ast", "children", "edn-query-language.ast/children", 1247091825), cljs$cst$8938$edn_query_language_DOT_core_SLASH_focus_subquery_STAR_ = new $APP.cljs.core.Symbol("edn-query-language.core", "focus-subquery*", "edn-query-language.core/focus-subquery*", -1425847302, null), cljs$cst$8914$merge_queries = new $APP.cljs.core.Symbol(null, "merge-queries", 
"merge-queries", 463102231, null), cljs$cst$8825$edn_query_language_DOT_core_SLASH_mutation_expr = new $APP.cljs.core.Keyword("edn-query-language.core", "mutation-expr", "edn-query-language.core/mutation-expr", -2127055036), cljs$cst$8931$edn_query_language_DOT_core_SLASH_join__GT_ast = new $APP.cljs.core.Symbol("edn-query-language.core", "join-\x3east", "edn-query-language.core/join-\x3east", -1874549692, null), cljs$cst$8937$edn_query_language_DOT_core_SLASH_update_child = new $APP.cljs.core.Symbol("edn-query-language.core", 
"update-child", "edn-query-language.core/update-child", 1801193295, null), cljs$cst$8893$join__GT_ast = new $APP.cljs.core.Symbol(null, "join-\x3east", "join-\x3east", -1484593870, null), cljs$cst$8930$edn_query_language_DOT_core_SLASH_union__GT_ast = new $APP.cljs.core.Symbol("edn-query-language.core", "union-\x3east", "edn-query-language.core/union-\x3east", -1142252768, null), cljs$cst$8878$qb = new $APP.cljs.core.Keyword(null, "qb", "qb", -1714166232), cljs$cst$8877$qa = new $APP.cljs.core.Keyword(null, 
"qa", "qa", -1970946508), cljs$cst$8936$edn_query_language_DOT_core_SLASH_union_entry__GT_ast = new $APP.cljs.core.Symbol("edn-query-language.core", "union-entry-\x3east", "edn-query-language.core/union-entry-\x3east", 2142384554, null), cljs$cst$8921$update_recursive_depth = new $APP.cljs.core.Symbol(null, "update-recursive-depth", "update-recursive-depth", -1651534779, null), cljs$cst$8870$sub_query = new $APP.cljs.core.Keyword(null, "sub-query", "sub-query", -1930580307), cljs$cst$8812$edn_query_language_DOT_core_SLASH_union = 
new $APP.cljs.core.Keyword("edn-query-language.core", "union", "edn-query-language.core/union", -1766530903), cljs$cst$8903$ast = new $APP.cljs.core.Symbol(null, "ast", "ast", 780197459, null), cljs$cst$8891$query_ast = new $APP.cljs.core.Symbol(null, "query-ast", "query-ast", 2074073495, null), cljs$cst$8940$edn_query_language_DOT_core_SLASH_wrap_expr = new $APP.cljs.core.Symbol("edn-query-language.core", "wrap-expr", "edn-query-language.core/wrap-expr", 1411310639, null), cljs$cst$8942$edn_query_language_DOT_core_SLASH_ast__GT_expr = 
new $APP.cljs.core.Symbol("edn-query-language.core", "ast-\x3eexpr", "edn-query-language.core/ast-\x3eexpr", -489215536, null), cljs$cst$8802$edn_query_language_DOT_core_SLASH_ident_value = new $APP.cljs.core.Keyword("edn-query-language.core", "ident-value", "edn-query-language.core/ident-value", -715964249), cljs$cst$8902$update_child = new $APP.cljs.core.Symbol(null, "update-child", "update-child", 92422265, null), cljs$cst$8875$edn_query_language_DOT_core_SLASH_merge_asts = new $APP.cljs.core.Symbol("edn-query-language.core", 
"merge-asts", "edn-query-language.core/merge-asts", 807253317, null), cljs$cst$8839$edn_query_language_DOT_ast_SLASH_root = new $APP.cljs.core.Keyword("edn-query-language.ast", "root", "edn-query-language.ast/root", 1592076898), cljs$cst$8865$edn_query_language_DOT_core_SLASH_query__GT_ast1 = new $APP.cljs.core.Symbol("edn-query-language.core", "query-\x3east1", "edn-query-language.core/query-\x3east1", -1127394108, null), cljs$cst$8843$cljs_DOT_core_SLASH_every_QMARK_ = new $APP.cljs.core.Symbol("cljs.core", 
"every?", "cljs.core/every?", 1416822717, null), cljs$cst$8809$edn_query_language_DOT_core_SLASH_join = new $APP.cljs.core.Keyword("edn-query-language.core", "join", "edn-query-language.core/join", 2091674288), cljs$cst$8913$union_children_QMARK_ = new $APP.cljs.core.Symbol(null, "union-children?", "union-children?", 1081521634, null), cljs$cst$8844$cljs_DOT_core_SLASH_comp = new $APP.cljs.core.Symbol("cljs.core", "comp", "cljs.core/comp", -2137591872, null), cljs$cst$8836$edn_query_language_DOT_ast_SLASH_union_key = 
new $APP.cljs.core.Keyword("edn-query-language.ast", "union-key", "edn-query-language.ast/union-key", -682972655), cljs$cst$8869$edn_query_language_DOT_core_SLASH_focus_subquery = new $APP.cljs.core.Symbol("edn-query-language.core", "focus-subquery", "edn-query-language.core/focus-subquery", 167014332, null), cljs$cst$8800$edn_query_language_DOT_core_SLASH_property = new $APP.cljs.core.Keyword("edn-query-language.core", "property", "edn-query-language.core/property", -1479624874), cljs$cst$8853$cljs_DOT_core_SLASH_keys = 
new $APP.cljs.core.Symbol("cljs.core", "keys", "cljs.core/keys", -927561820, null), cljs$cst$8918$ast__GT_expr = new $APP.cljs.core.Symbol(null, "ast-\x3eexpr", "ast-\x3eexpr", -108172606, null);
var edn_query_language = {core:{}};
edn_query_language.core._STAR_shallow_conversion_STAR_ = !1;
edn_query_language.core.INCLUDE_SPECS = !0;
edn_query_language.core.INCLUDE_SPECS && ($APP.cljs.spec.alpha.def_impl(cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, $APP.cljs$cst$6108$cljs_DOT_core_SLASH_keyword_QMARK_, $APP.cljs.core.keyword_QMARK_), $APP.cljs.spec.alpha.def_impl(cljs$cst$8801$edn_query_language_DOT_core_SLASH_special_property, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs$cst$650$_STAR_), "null"], null), null), new $APP.cljs.core.PersistentHashSet(null, 
new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$650$_STAR_, null], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8802$edn_query_language_DOT_core_SLASH_ident_value, $APP.cljs$cst$8803$cljs_DOT_core_SLASH_any_QMARK_, $APP.cljs.core.any_QMARK_), $APP.cljs.spec.alpha.def_impl(cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident, $APP.cljs.core.list($APP.cljs$cst$1874$cljs_DOT_spec_DOT_alpha_SLASH_tuple, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8802$edn_query_language_DOT_core_SLASH_ident_value), 
$APP.cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8802$edn_query_language_DOT_core_SLASH_ident_value], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8802$edn_query_language_DOT_core_SLASH_ident_value], null))), 
$APP.cljs.spec.alpha.def_impl(cljs$cst$8805$edn_query_language_DOT_core_SLASH_join_key, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, cljs$cst$8806$prop, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, $APP.cljs$cst$4852$ident, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident, cljs$cst$8807$param_exp, cljs$cst$8808$edn_query_language_DOT_core_SLASH_join_key_param_expr), $APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$8806$prop, $APP.cljs$cst$4852$ident, cljs$cst$8807$param_exp], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident, cljs$cst$8808$edn_query_language_DOT_core_SLASH_join_key_param_expr], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, 
cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident, cljs$cst$8808$edn_query_language_DOT_core_SLASH_join_key_param_expr], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8809$edn_query_language_DOT_core_SLASH_join, $APP.cljs.core.list(cljs$cst$8810$cljs_DOT_spec_DOT_alpha_SLASH_map_of, cljs$cst$8805$edn_query_language_DOT_core_SLASH_join_key, cljs$cst$8811$edn_query_language_DOT_core_SLASH_join_query, $APP.cljs$cst$1650$count, 1, $APP.cljs$cst$1917$conform_keys, !0), $APP.cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1874$cljs_DOT_spec_DOT_alpha_SLASH_tuple, 
cljs$cst$8805$edn_query_language_DOT_core_SLASH_join_key, cljs$cst$8811$edn_query_language_DOT_core_SLASH_join_query), $APP.cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8805$edn_query_language_DOT_core_SLASH_join_key, cljs$cst$8811$edn_query_language_DOT_core_SLASH_join_query], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8805$edn_query_language_DOT_core_SLASH_join_key, 
cljs$cst$8811$edn_query_language_DOT_core_SLASH_join_query], null)), $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1924$into, $APP.cljs$cst$1914$cljs_DOT_spec_DOT_alpha_SLASH_kind_form, $APP.cljs$cst$1917$conform_keys, $APP.cljs$cst$1916$cljs_DOT_spec_DOT_alpha_SLASH_cpred, $APP.cljs$cst$1922$kind, $APP.cljs$cst$1650$count, $APP.cljs$cst$1920$cljs_DOT_spec_DOT_alpha_SLASH_kfn, $APP.cljs$cst$1923$cljs_DOT_spec_DOT_alpha_SLASH_conform_all, $APP.cljs$cst$1918$cljs_DOT_spec_DOT_alpha_SLASH_describe], 
[$APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, !0, function($G__110650$$) {
  return $APP.cljs.core.map_QMARK_($G__110650$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $APP.cljs.core.bounded_count(1, $G__110650$$));
}, $APP.cljs.core.map_QMARK_, 1, function($i__13429__auto__$$, $v__13430__auto__$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($v__13430__auto__$$, 0);
}, !0, $APP.cljs.core.list(cljs$cst$8810$cljs_DOT_spec_DOT_alpha_SLASH_map_of, cljs$cst$8805$edn_query_language_DOT_core_SLASH_join_key, cljs$cst$8811$edn_query_language_DOT_core_SLASH_join_query, $APP.cljs$cst$1650$count, 1, $APP.cljs$cst$1917$conform_keys, !0)]), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8812$edn_query_language_DOT_core_SLASH_union, $APP.cljs.core.list(cljs$cst$8810$cljs_DOT_spec_DOT_alpha_SLASH_map_of, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, 
$APP.cljs$cst$1921$min_count, 1, $APP.cljs$cst$1917$conform_keys, !0), $APP.cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1874$cljs_DOT_spec_DOT_alpha_SLASH_tuple, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, 
cljs$cst$8813$edn_query_language_DOT_core_SLASH_query], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query], null)), $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1924$into, $APP.cljs$cst$1914$cljs_DOT_spec_DOT_alpha_SLASH_kind_form, $APP.cljs$cst$1917$conform_keys, $APP.cljs$cst$1916$cljs_DOT_spec_DOT_alpha_SLASH_cpred, $APP.cljs$cst$1921$min_count, 
$APP.cljs$cst$1922$kind, $APP.cljs$cst$1920$cljs_DOT_spec_DOT_alpha_SLASH_kfn, $APP.cljs$cst$1923$cljs_DOT_spec_DOT_alpha_SLASH_conform_all, $APP.cljs$cst$1918$cljs_DOT_spec_DOT_alpha_SLASH_describe], [$APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, !0, function($G__110654$$) {
  return $APP.cljs.core.map_QMARK_($G__110654$$) && ($APP.cljs.core.truth_(1) ? 1 : 0) <= $APP.cljs.core.bounded_count(1, $G__110654$$) && $APP.cljs.core.bounded_count(1, $G__110654$$) <= ($APP.cljs.core.truth_(null) ? null : 9007199254740991);
}, 1, $APP.cljs.core.map_QMARK_, function($i__13429__auto__$$, $v__13430__auto__$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($v__13430__auto__$$, 0);
}, !0, $APP.cljs.core.list(cljs$cst$8810$cljs_DOT_spec_DOT_alpha_SLASH_map_of, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, $APP.cljs$cst$1921$min_count, 1, $APP.cljs$cst$1917$conform_keys, !0)]), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8814$edn_query_language_DOT_core_SLASH_recursion_depth, cljs$cst$8815$cljs_DOT_core_SLASH_nat_int_QMARK_, $APP.cljs.core.nat_int_QMARK_), $APP.cljs.spec.alpha.def_impl(cljs$cst$8816$edn_query_language_DOT_core_SLASH_recursion, 
$APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, $APP.cljs$cst$5385$depth, cljs$cst$8814$edn_query_language_DOT_core_SLASH_recursion_depth, cljs$cst$8817$unbounded, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs$cst$1481$_DOT__DOT__DOT_), "null"], null), null)), $APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.cljs$cst$5385$depth, cljs$cst$8817$unbounded], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8814$edn_query_language_DOT_core_SLASH_recursion_depth, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs$cst$1481$_DOT__DOT__DOT_), "null"], null), null)], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$8814$edn_query_language_DOT_core_SLASH_recursion_depth, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$1481$_DOT__DOT__DOT_, null], null), null)], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8811$edn_query_language_DOT_core_SLASH_join_query, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, $APP.cljs$cst$2339$query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, $APP.cljs$cst$4262$union, cljs$cst$8812$edn_query_language_DOT_core_SLASH_union, 
cljs$cst$8818$recursion, cljs$cst$8816$edn_query_language_DOT_core_SLASH_recursion), $APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2339$query, $APP.cljs$cst$4262$union, cljs$cst$8818$recursion], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8812$edn_query_language_DOT_core_SLASH_union, cljs$cst$8816$edn_query_language_DOT_core_SLASH_recursion], 
null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8812$edn_query_language_DOT_core_SLASH_union, cljs$cst$8816$edn_query_language_DOT_core_SLASH_recursion], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8819$edn_query_language_DOT_core_SLASH_params, $APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, $APP.cljs.core.map_QMARK_), $APP.cljs.spec.alpha.def_impl(cljs$cst$8820$edn_query_language_DOT_core_SLASH_param_expr_key, 
$APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, cljs$cst$8806$prop, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8821$join, cljs$cst$8809$edn_query_language_DOT_core_SLASH_join, $APP.cljs$cst$4852$ident, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident), $APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8806$prop, cljs$cst$8821$join, $APP.cljs$cst$4852$ident], 
null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8809$edn_query_language_DOT_core_SLASH_join, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8809$edn_query_language_DOT_core_SLASH_join, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident], 
null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr, $APP.cljs.core.list($APP.cljs$cst$1881$cljs_DOT_spec_DOT_alpha_SLASH_and, $APP.cljs$cst$6131$cljs_DOT_core_SLASH_seq_QMARK_, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$327$expr, cljs$cst$8820$edn_query_language_DOT_core_SLASH_param_expr_key, $APP.cljs$cst$410$params, $APP.cljs.core.list($APP.cljs$cst$1945$cljs_DOT_spec_DOT_alpha_SLASH__QMARK_, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params))), 
$APP.cljs.spec.alpha.and_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$6131$cljs_DOT_core_SLASH_seq_QMARK_, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$327$expr, cljs$cst$8820$edn_query_language_DOT_core_SLASH_param_expr_key, $APP.cljs$cst$410$params, $APP.cljs.core.list($APP.cljs$cst$1945$cljs_DOT_spec_DOT_alpha_SLASH__QMARK_, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params))], 
null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.seq_QMARK_, $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$327$expr, $APP.cljs$cst$410$params], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8820$edn_query_language_DOT_core_SLASH_param_expr_key, $APP.cljs.spec.alpha.maybe_impl(cljs$cst$8819$edn_query_language_DOT_core_SLASH_params, 
cljs$cst$8819$edn_query_language_DOT_core_SLASH_params)], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8820$edn_query_language_DOT_core_SLASH_param_expr_key, $APP.cljs.core.list($APP.cljs$cst$1945$cljs_DOT_spec_DOT_alpha_SLASH__QMARK_, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params)], null))], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8823$edn_query_language_DOT_core_SLASH_join_key_param_key, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, 
cljs$cst$8806$prop, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, $APP.cljs$cst$4852$ident, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident), $APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8806$prop, $APP.cljs$cst$4852$ident], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident], 
null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8808$edn_query_language_DOT_core_SLASH_join_key_param_expr, $APP.cljs.core.list($APP.cljs$cst$1881$cljs_DOT_spec_DOT_alpha_SLASH_and, $APP.cljs$cst$6131$cljs_DOT_core_SLASH_seq_QMARK_, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, 
$APP.cljs$cst$327$expr, cljs$cst$8823$edn_query_language_DOT_core_SLASH_join_key_param_key, $APP.cljs$cst$410$params, $APP.cljs.core.list($APP.cljs$cst$1945$cljs_DOT_spec_DOT_alpha_SLASH__QMARK_, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params))), $APP.cljs.spec.alpha.and_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$6131$cljs_DOT_core_SLASH_seq_QMARK_, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, 
$APP.cljs$cst$327$expr, cljs$cst$8823$edn_query_language_DOT_core_SLASH_join_key_param_key, $APP.cljs$cst$410$params, $APP.cljs.core.list($APP.cljs$cst$1945$cljs_DOT_spec_DOT_alpha_SLASH__QMARK_, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params))], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.seq_QMARK_, $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.cljs$cst$327$expr, $APP.cljs$cst$410$params], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8823$edn_query_language_DOT_core_SLASH_join_key_param_key, $APP.cljs.spec.alpha.maybe_impl(cljs$cst$8819$edn_query_language_DOT_core_SLASH_params, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params)], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8823$edn_query_language_DOT_core_SLASH_join_key_param_key, 
$APP.cljs.core.list($APP.cljs$cst$1945$cljs_DOT_spec_DOT_alpha_SLASH__QMARK_, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params)], null))], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8824$edn_query_language_DOT_core_SLASH_mutation_key, $APP.cljs$cst$6130$cljs_DOT_core_SLASH_symbol_QMARK_, $APP.cljs.core.symbol_QMARK_), $APP.cljs.spec.alpha.def_impl(cljs$cst$8825$edn_query_language_DOT_core_SLASH_mutation_expr, $APP.cljs.core.list($APP.cljs$cst$1881$cljs_DOT_spec_DOT_alpha_SLASH_and, 
$APP.cljs$cst$6131$cljs_DOT_core_SLASH_seq_QMARK_, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8826$mutate_key, cljs$cst$8824$edn_query_language_DOT_core_SLASH_mutation_key, $APP.cljs$cst$410$params, $APP.cljs.core.list($APP.cljs$cst$1945$cljs_DOT_spec_DOT_alpha_SLASH__QMARK_, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params))), $APP.cljs.spec.alpha.and_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.cljs$cst$6131$cljs_DOT_core_SLASH_seq_QMARK_, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8826$mutate_key, cljs$cst$8824$edn_query_language_DOT_core_SLASH_mutation_key, $APP.cljs$cst$410$params, $APP.cljs.core.list($APP.cljs$cst$1945$cljs_DOT_spec_DOT_alpha_SLASH__QMARK_, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params))], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.seq_QMARK_, 
$APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8826$mutate_key, $APP.cljs$cst$410$params], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8824$edn_query_language_DOT_core_SLASH_mutation_key, $APP.cljs.spec.alpha.maybe_impl(cljs$cst$8819$edn_query_language_DOT_core_SLASH_params, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params)], null), new $APP.cljs.core.PersistentVector(null, 
2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8824$edn_query_language_DOT_core_SLASH_mutation_key, $APP.cljs.core.list($APP.cljs$cst$1945$cljs_DOT_spec_DOT_alpha_SLASH__QMARK_, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params)], null))], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8827$edn_query_language_DOT_core_SLASH_mutation_join, $APP.cljs.core.list(cljs$cst$8810$cljs_DOT_spec_DOT_alpha_SLASH_map_of, cljs$cst$8825$edn_query_language_DOT_core_SLASH_mutation_expr, 
cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, $APP.cljs$cst$1650$count, 1, $APP.cljs$cst$1917$conform_keys, !0), $APP.cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1874$cljs_DOT_spec_DOT_alpha_SLASH_tuple, cljs$cst$8825$edn_query_language_DOT_core_SLASH_mutation_expr, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$8825$edn_query_language_DOT_core_SLASH_mutation_expr, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8825$edn_query_language_DOT_core_SLASH_mutation_expr, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query], null)), $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1924$into, $APP.cljs$cst$1914$cljs_DOT_spec_DOT_alpha_SLASH_kind_form, $APP.cljs$cst$1917$conform_keys, 
$APP.cljs$cst$1916$cljs_DOT_spec_DOT_alpha_SLASH_cpred, $APP.cljs$cst$1922$kind, $APP.cljs$cst$1650$count, $APP.cljs$cst$1920$cljs_DOT_spec_DOT_alpha_SLASH_kfn, $APP.cljs$cst$1923$cljs_DOT_spec_DOT_alpha_SLASH_conform_all, $APP.cljs$cst$1918$cljs_DOT_spec_DOT_alpha_SLASH_describe], [$APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, !0, function($G__110670$$) {
  return $APP.cljs.core.map_QMARK_($G__110670$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, $APP.cljs.core.bounded_count(1, $G__110670$$));
}, $APP.cljs.core.map_QMARK_, 1, function($i__13429__auto__$$, $v__13430__auto__$$) {
  return $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$2($v__13430__auto__$$, 0);
}, !0, $APP.cljs.core.list(cljs$cst$8810$cljs_DOT_spec_DOT_alpha_SLASH_map_of, cljs$cst$8825$edn_query_language_DOT_core_SLASH_mutation_expr, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, $APP.cljs$cst$1650$count, 1, $APP.cljs$cst$1917$conform_keys, !0)]), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8828$edn_query_language_DOT_core_SLASH_mutation, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, cljs$cst$8829$mutation, cljs$cst$8825$edn_query_language_DOT_core_SLASH_mutation_expr, 
cljs$cst$8830$mutation_join, cljs$cst$8827$edn_query_language_DOT_core_SLASH_mutation_join), $APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8829$mutation, cljs$cst$8830$mutation_join], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8825$edn_query_language_DOT_core_SLASH_mutation_expr, cljs$cst$8827$edn_query_language_DOT_core_SLASH_mutation_join], 
null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8825$edn_query_language_DOT_core_SLASH_mutation_expr, cljs$cst$8827$edn_query_language_DOT_core_SLASH_mutation_join], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8831$edn_query_language_DOT_core_SLASH_query_expr, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, cljs$cst$8806$prop, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8821$join, 
cljs$cst$8809$edn_query_language_DOT_core_SLASH_join, $APP.cljs$cst$4852$ident, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident, cljs$cst$8829$mutation, cljs$cst$8828$edn_query_language_DOT_core_SLASH_mutation, cljs$cst$8807$param_exp, cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr, $APP.cljs$cst$413$special, cljs$cst$8801$edn_query_language_DOT_core_SLASH_special_property), $APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$8806$prop, cljs$cst$8821$join, $APP.cljs$cst$4852$ident, cljs$cst$8829$mutation, cljs$cst$8807$param_exp, $APP.cljs$cst$413$special], null), new $APP.cljs.core.PersistentVector(null, 6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8809$edn_query_language_DOT_core_SLASH_join, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident, cljs$cst$8828$edn_query_language_DOT_core_SLASH_mutation, cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr, 
cljs$cst$8801$edn_query_language_DOT_core_SLASH_special_property], null), new $APP.cljs.core.PersistentVector(null, 6, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8809$edn_query_language_DOT_core_SLASH_join, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident, cljs$cst$8828$edn_query_language_DOT_core_SLASH_mutation, cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr, cljs$cst$8801$edn_query_language_DOT_core_SLASH_special_property], 
null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, $APP.cljs.core.list(cljs$cst$8832$cljs_DOT_spec_DOT_alpha_SLASH_coll_of, cljs$cst$8831$edn_query_language_DOT_core_SLASH_query_expr, $APP.cljs$cst$1922$kind, $APP.cljs$cst$1873$cljs_DOT_core_SLASH_vector_QMARK_), $APP.cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs$cst$8831$edn_query_language_DOT_core_SLASH_query_expr, cljs$cst$8831$edn_query_language_DOT_core_SLASH_query_expr, new $APP.cljs.core.PersistentArrayMap(null, 
5, [$APP.cljs$cst$1923$cljs_DOT_spec_DOT_alpha_SLASH_conform_all, !0, $APP.cljs$cst$1922$kind, $APP.cljs.core.vector_QMARK_, $APP.cljs$cst$1914$cljs_DOT_spec_DOT_alpha_SLASH_kind_form, $APP.cljs$cst$1873$cljs_DOT_core_SLASH_vector_QMARK_, $APP.cljs$cst$1918$cljs_DOT_spec_DOT_alpha_SLASH_describe, $APP.cljs.core.list(cljs$cst$8832$cljs_DOT_spec_DOT_alpha_SLASH_coll_of, cljs$cst$8831$edn_query_language_DOT_core_SLASH_query_expr, $APP.cljs$cst$1922$kind, $APP.cljs$cst$1873$cljs_DOT_core_SLASH_vector_QMARK_), 
$APP.cljs$cst$1916$cljs_DOT_spec_DOT_alpha_SLASH_cpred, function($G__110673$$) {
  return $APP.cljs.core.vector_QMARK_($G__110673$$);
}], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query, cljs$cst$8811$edn_query_language_DOT_core_SLASH_join_query, cljs$cst$8811$edn_query_language_DOT_core_SLASH_join_query), $APP.cljs.spec.alpha.def_impl(cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, cljs$cst$8806$prop, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, $APP.cljs$cst$4852$ident, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident, 
$APP.cljs$cst$242$sym, $APP.cljs$cst$6130$cljs_DOT_core_SLASH_symbol_QMARK_), $APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8806$prop, $APP.cljs$cst$4852$ident, $APP.cljs$cst$242$sym], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident, $APP.cljs$cst$6130$cljs_DOT_core_SLASH_symbol_QMARK_], 
null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8804$edn_query_language_DOT_core_SLASH_ident, $APP.cljs.core.symbol_QMARK_], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, cljs$cst$8806$prop, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, 
$APP.cljs$cst$242$sym, $APP.cljs$cst$6130$cljs_DOT_core_SLASH_symbol_QMARK_), $APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8806$prop, $APP.cljs$cst$242$sym], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, $APP.cljs$cst$6130$cljs_DOT_core_SLASH_symbol_QMARK_], null), new $APP.cljs.core.PersistentVector(null, 
2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, $APP.cljs.core.symbol_QMARK_], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8836$edn_query_language_DOT_ast_SLASH_union_key, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property), $APP.cljs.spec.alpha.def_impl(cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children, $APP.cljs.core.list(cljs$cst$8832$cljs_DOT_spec_DOT_alpha_SLASH_coll_of, 
cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$1923$cljs_DOT_spec_DOT_alpha_SLASH_conform_all, !0, $APP.cljs$cst$1914$cljs_DOT_spec_DOT_alpha_SLASH_kind_form, null, $APP.cljs$cst$1918$cljs_DOT_spec_DOT_alpha_SLASH_describe, $APP.cljs.core.list(cljs$cst$8832$cljs_DOT_spec_DOT_alpha_SLASH_coll_of, 
cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs$cst$1916$cljs_DOT_spec_DOT_alpha_SLASH_cpred, function($G__110674$$) {
  return $APP.cljs.core.coll_QMARK_($G__110674$$);
}], null), null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8839$edn_query_language_DOT_ast_SLASH_root, $APP.cljs.core.list($APP.cljs$cst$1881$cljs_DOT_spec_DOT_alpha_SLASH_and, $APP.cljs.core.list($APP.cljs$cst$1832$cljs_DOT_spec_DOT_alpha_SLASH_keys, $APP.cljs$cst$1835$req_un, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null)), $APP.cljs.core.list($APP.cljs$cst$162$fn_STAR_, 
new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8841$p1__110641_SHARP_], null), $APP.cljs.core.list($APP.cljs$cst$832$cljs_DOT_core_SLASH__EQ_, cljs$cst$8842$root, $APP.cljs.core.list($APP.cljs$cst$139$type, cljs$cst$8841$p1__110641_SHARP_))), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1237$x], null), $APP.cljs.core.list(cljs$cst$8843$cljs_DOT_core_SLASH_every_QMARK_, 
$APP.cljs.core.list(cljs$cst$8844$cljs_DOT_core_SLASH_comp, $APP.cljs.core.list($APP.cljs$cst$162$fn_STAR_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8845$p1__110642_SHARP_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 4, [null, "null", $APP.cljs$cst$6385$call, "null", cljs$cst$8806$prop, "null", cljs$cst$8821$join, 
"null"], null), null), cljs$cst$8845$p1__110642_SHARP_)), $APP.cljs$cst$139$type), $APP.cljs.core.list($APP.cljs$cst$3116$children, $APP.cljs$cst$1237$x)))), $APP.cljs.spec.alpha.and_spec_impl(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$1832$cljs_DOT_spec_DOT_alpha_SLASH_keys, $APP.cljs$cst$1835$req_un, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, 
cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$832$cljs_DOT_core_SLASH__EQ_, cljs$cst$8842$root, $APP.cljs.core.list($APP.cljs$cst$139$type, $APP.cljs$cst$561$_PERCENT_))), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1237$x], null), $APP.cljs.core.list(cljs$cst$8843$cljs_DOT_core_SLASH_every_QMARK_, $APP.cljs.core.list(cljs$cst$8844$cljs_DOT_core_SLASH_comp, $APP.cljs.core.list($APP.cljs$cst$162$fn_STAR_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8845$p1__110642_SHARP_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, new $APP.cljs.core.PersistentHashSet(null, 
new $APP.cljs.core.PersistentArrayMap(null, 4, [null, "null", $APP.cljs$cst$6385$call, "null", cljs$cst$8806$prop, "null", cljs$cst$8821$join, "null"], null), null), cljs$cst$8845$p1__110642_SHARP_)), $APP.cljs$cst$139$type), $APP.cljs.core.list($APP.cljs$cst$3116$children, $APP.cljs$cst$1237$x)))], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.spec.alpha.map_spec_impl($APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1835$req_un, 
$APP.cljs$cst$1836$opt_un, $APP.cljs$cst$1831$gfn, $APP.cljs$cst$1856$pred_exprs, $APP.cljs$cst$1857$keys_pred, $APP.cljs$cst$1858$opt_keys, $APP.cljs$cst$1859$req_specs, $APP.cljs$cst$1833$req, $APP.cljs$cst$1860$req_keys, $APP.cljs$cst$1861$opt_specs, $APP.cljs$cst$1862$pred_forms, $APP.cljs$cst$1834$opt], [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], 
null), null, null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [function($G__110683$$) {
  return $APP.cljs.core.map_QMARK_($G__110683$$);
}, function($G__110683$$) {
  return $APP.cljs.core.contains_QMARK_($G__110683$$, $APP.cljs$cst$139$type);
}, function($G__110683$$) {
  return $APP.cljs.core.contains_QMARK_($G__110683$$, $APP.cljs$cst$3116$children);
}], null), function($G__110683$$) {
  return $APP.cljs.core.map_QMARK_($G__110683$$) && $APP.cljs.core.contains_QMARK_($G__110683$$, $APP.cljs$cst$139$type) && $APP.cljs.core.contains_QMARK_($G__110683$$, $APP.cljs$cst$3116$children);
}, $APP.cljs.core.PersistentVector.EMPTY, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null), null, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$139$type, $APP.cljs$cst$3116$children], null), $APP.cljs.core.PersistentVector.EMPTY, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, $APP.cljs$cst$561$_PERCENT_)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, 
$APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$139$type)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$3116$children))], null), null])), function($p1__110641_SHARP_$$) {
  return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$8842$root, $APP.cljs$cst$139$type.cljs$core$IFn$_invoke$arity$1($p1__110641_SHARP_$$));
}, function($x$$) {
  return $APP.cljs.core.every_QMARK_($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2(function($p1__110642_SHARP_$$) {
    return $APP.cljs.core.contains_QMARK_(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 4, [null, null, $APP.cljs$cst$6385$call, null, cljs$cst$8806$prop, null, cljs$cst$8821$join, null], null), null), $p1__110642_SHARP_$$);
  }, $APP.cljs$cst$139$type), $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($x$$));
}], null), null)), edn_query_language.core.node_type = function() {
  var $method_table__5622__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $prefer_table__5623__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $method_cache__5624__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), $cached_hierarchy__5625__auto__$$ = $APP.cljs.core.atom.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.PersistentArrayMap.EMPTY), 
  $JSCompiler_temp_const$jscomp$3442_hierarchy__5626__auto__$$ = $APP.cljs.core.get, $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$3442_hierarchy__5626__auto__$$.cljs$core$IFn$_invoke$arity$3, $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.PersistentArrayMap.EMPTY;
  var $JSCompiler_inline_result$jscomp$3443_fexpr__110684$$ = $APP.cljs.core.get_global_hierarchy;
  $JSCompiler_inline_result$jscomp$3443_fexpr__110684$$ = $JSCompiler_inline_result$jscomp$3443_fexpr__110684$$.cljs$core$IFn$_invoke$arity$0 ? $JSCompiler_inline_result$jscomp$3443_fexpr__110684$$.cljs$core$IFn$_invoke$arity$0() : $JSCompiler_inline_result$jscomp$3443_fexpr__110684$$.call(null);
  $JSCompiler_temp_const$jscomp$3442_hierarchy__5626__auto__$$ = $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$3442_hierarchy__5626__auto__$$, $JSCompiler_temp_const$jscomp$0$$, $APP.cljs$cst$204$hierarchy, $JSCompiler_inline_result$jscomp$3443_fexpr__110684$$);
  return new $APP.cljs.core.MultiFn($APP.cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("edn-query-language.core", "node-type"), $APP.cljs$cst$139$type, $APP.cljs$cst$205$default, $JSCompiler_temp_const$jscomp$3442_hierarchy__5626__auto__$$, $method_table__5622__auto__$$, $prefer_table__5623__auto__$$, $method_cache__5624__auto__$$, $cached_hierarchy__5625__auto__$$);
}(), edn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null, null, function($_$$) {
  return $APP.cljs.spec.alpha.map_spec_impl($APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1835$req_un, $APP.cljs$cst$1836$opt_un, $APP.cljs$cst$1831$gfn, $APP.cljs$cst$1856$pred_exprs, $APP.cljs$cst$1857$keys_pred, $APP.cljs$cst$1858$opt_keys, $APP.cljs$cst$1859$req_specs, $APP.cljs$cst$1833$req, $APP.cljs$cst$1860$req_keys, $APP.cljs$cst$1861$opt_specs, $APP.cljs$cst$1862$pred_forms, $APP.cljs$cst$1834$opt], [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key], null), null, null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [function($G__110685$$) {
    return $APP.cljs.core.map_QMARK_($G__110685$$);
  }, function($G__110685$$) {
    return $APP.cljs.core.contains_QMARK_($G__110685$$, $APP.cljs$cst$2004$key);
  }, function($G__110685$$) {
    return $APP.cljs.core.contains_QMARK_($G__110685$$, cljs$cst$8846$dispatch_key);
  }], null), function($G__110685$$) {
    return $APP.cljs.core.map_QMARK_($G__110685$$) && $APP.cljs.core.contains_QMARK_($G__110685$$, $APP.cljs$cst$2004$key) && $APP.cljs.core.contains_QMARK_($G__110685$$, cljs$cst$8846$dispatch_key);
  }, $APP.cljs.core.PersistentVector.EMPTY, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key], null), null, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2004$key, cljs$cst$8846$dispatch_key], null), $APP.cljs.core.PersistentVector.EMPTY, new $APP.cljs.core.PersistentVector(null, 3, 
  5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, $APP.cljs$cst$561$_PERCENT_)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], 
  null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$2004$key)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, cljs$cst$8846$dispatch_key))], null), null]));
}), edn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$8806$prop, function($_$$) {
  return $APP.cljs.spec.alpha.map_spec_impl($APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1835$req_un, $APP.cljs$cst$1836$opt_un, $APP.cljs$cst$1831$gfn, $APP.cljs$cst$1856$pred_exprs, $APP.cljs$cst$1857$keys_pred, $APP.cljs$cst$1858$opt_keys, $APP.cljs$cst$1859$req_specs, $APP.cljs$cst$1833$req, $APP.cljs$cst$1860$req_keys, $APP.cljs$cst$1861$opt_specs, $APP.cljs$cst$1862$pred_forms, $APP.cljs$cst$1834$opt], [new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key], null), null, null, new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [function($G__110686$$) {
    return $APP.cljs.core.map_QMARK_($G__110686$$);
  }, function($G__110686$$) {
    return $APP.cljs.core.contains_QMARK_($G__110686$$, $APP.cljs$cst$139$type);
  }, function($G__110686$$) {
    return $APP.cljs.core.contains_QMARK_($G__110686$$, $APP.cljs$cst$2004$key);
  }, function($G__110686$$) {
    return $APP.cljs.core.contains_QMARK_($G__110686$$, cljs$cst$8846$dispatch_key);
  }], null), function($G__110686$$) {
    return $APP.cljs.core.map_QMARK_($G__110686$$) && $APP.cljs.core.contains_QMARK_($G__110686$$, $APP.cljs$cst$139$type) && $APP.cljs.core.contains_QMARK_($G__110686$$, $APP.cljs$cst$2004$key) && $APP.cljs.core.contains_QMARK_($G__110686$$, cljs$cst$8846$dispatch_key);
  }, $APP.cljs.core.PersistentVector.EMPTY, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key], null), null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$139$type, $APP.cljs$cst$2004$key, cljs$cst$8846$dispatch_key], null), $APP.cljs.core.PersistentVector.EMPTY, 
  new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, $APP.cljs$cst$561$_PERCENT_)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$139$type)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$2004$key)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, 
  new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, cljs$cst$8846$dispatch_key))], null), null]));
}), edn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$8821$join, function($_$$) {
  return $APP.cljs.spec.alpha.and_spec_impl(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$1832$cljs_DOT_spec_DOT_alpha_SLASH_keys, $APP.cljs$cst$1835$req_un, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key], null), 
  $APP.cljs$cst$1836$opt_un, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children, cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query], null)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$157$if, $APP.cljs.core.list($APP.cljs$cst$769$cljs_DOT_core_SLASH___GT_, 
  $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$2339$query, $APP.cljs$cst$729$cljs_DOT_core_SLASH_first, $APP.cljs.core.list($APP.cljs$cst$832$cljs_DOT_core_SLASH__EQ_, cljs$cst$8818$recursion)), $APP.cljs$cst$561$_PERCENT_, $APP.cljs.core.list($APP.cljs$cst$157$if, $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$3116$children), $APP.cljs$cst$561$_PERCENT_, !1))), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1237$x], null), $APP.cljs.core.list(cljs$cst$8843$cljs_DOT_core_SLASH_every_QMARK_, $APP.cljs.core.list(cljs$cst$8844$cljs_DOT_core_SLASH_comp, $APP.cljs.core.list($APP.cljs$cst$162$fn_STAR_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8847$p1__110644_SHARP_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, new $APP.cljs.core.PersistentHashSet(null, 
  new $APP.cljs.core.PersistentArrayMap(null, 5, [null, "null", $APP.cljs$cst$6385$call, "null", cljs$cst$8806$prop, "null", $APP.cljs$cst$4262$union, "null", cljs$cst$8821$join, "null"], null), null), cljs$cst$8847$p1__110644_SHARP_)), $APP.cljs$cst$139$type), $APP.cljs.core.list($APP.cljs$cst$3116$children, $APP.cljs$cst$1237$x)))], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.spec.alpha.map_spec_impl($APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1835$req_un, 
  $APP.cljs$cst$1836$opt_un, $APP.cljs$cst$1831$gfn, $APP.cljs$cst$1856$pred_exprs, $APP.cljs$cst$1857$keys_pred, $APP.cljs$cst$1858$opt_keys, $APP.cljs$cst$1859$req_specs, $APP.cljs$cst$1833$req, $APP.cljs$cst$1860$req_keys, $APP.cljs$cst$1861$opt_specs, $APP.cljs$cst$1862$pred_forms, $APP.cljs$cst$1834$opt], [new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, 
  cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children, cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query], null), null, new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [function($G__110687$$) {
    return $APP.cljs.core.map_QMARK_($G__110687$$);
  }, function($G__110687$$) {
    return $APP.cljs.core.contains_QMARK_($G__110687$$, $APP.cljs$cst$139$type);
  }, function($G__110687$$) {
    return $APP.cljs.core.contains_QMARK_($G__110687$$, $APP.cljs$cst$2004$key);
  }, function($G__110687$$) {
    return $APP.cljs.core.contains_QMARK_($G__110687$$, cljs$cst$8846$dispatch_key);
  }], null), function($G__110687$$) {
    return $APP.cljs.core.map_QMARK_($G__110687$$) && $APP.cljs.core.contains_QMARK_($G__110687$$, $APP.cljs$cst$139$type) && $APP.cljs.core.contains_QMARK_($G__110687$$, $APP.cljs$cst$2004$key) && $APP.cljs.core.contains_QMARK_($G__110687$$, cljs$cst$8846$dispatch_key);
  }, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3116$children, $APP.cljs$cst$2339$query], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key], null), null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$139$type, $APP.cljs$cst$2004$key, cljs$cst$8846$dispatch_key], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children, cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query], null), new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, 
  $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, $APP.cljs$cst$561$_PERCENT_)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$139$type)), 
  $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$2004$key)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], 
  null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, cljs$cst$8846$dispatch_key))], null), null])), function($p1__110643_SHARP_$$) {
    return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.first($APP.cljs$cst$2339$query.cljs$core$IFn$_invoke$arity$1($p1__110643_SHARP_$$)), cljs$cst$8818$recursion) ? $p1__110643_SHARP_$$ : $APP.cljs.core.contains_QMARK_($p1__110643_SHARP_$$, $APP.cljs$cst$3116$children) ? $p1__110643_SHARP_$$ : !1;
  }, function($x$$) {
    return $APP.cljs.core.every_QMARK_($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2(function($p1__110644_SHARP_$$) {
      return $APP.cljs.core.contains_QMARK_(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 5, [null, null, $APP.cljs$cst$6385$call, null, cljs$cst$8806$prop, null, $APP.cljs$cst$4262$union, null, cljs$cst$8821$join, null], null), null), $p1__110644_SHARP_$$);
    }, $APP.cljs$cst$139$type), $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($x$$));
  }], null), null);
}), edn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null, $APP.cljs$cst$4262$union, function($_$$) {
  return $APP.cljs.spec.alpha.and_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$1832$cljs_DOT_spec_DOT_alpha_SLASH_keys, $APP.cljs$cst$1835$req_un, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null), $APP.cljs$cst$1836$opt_un, new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query], null)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list(cljs$cst$8843$cljs_DOT_core_SLASH_every_QMARK_, $APP.cljs.core.list(cljs$cst$8844$cljs_DOT_core_SLASH_comp, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 
  1, [cljs$cst$8848$union_entry, "null"], null), null), $APP.cljs$cst$139$type), $APP.cljs.core.list($APP.cljs$cst$3116$children, $APP.cljs$cst$561$_PERCENT_)))], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.spec.alpha.map_spec_impl($APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1835$req_un, $APP.cljs$cst$1836$opt_un, $APP.cljs$cst$1831$gfn, $APP.cljs$cst$1856$pred_exprs, $APP.cljs$cst$1857$keys_pred, $APP.cljs$cst$1858$opt_keys, 
  $APP.cljs$cst$1859$req_specs, $APP.cljs$cst$1833$req, $APP.cljs$cst$1860$req_keys, $APP.cljs$cst$1861$opt_specs, $APP.cljs$cst$1862$pred_forms, $APP.cljs$cst$1834$opt], [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query], 
  null), null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [function($G__110692$$) {
    return $APP.cljs.core.map_QMARK_($G__110692$$);
  }, function($G__110692$$) {
    return $APP.cljs.core.contains_QMARK_($G__110692$$, $APP.cljs$cst$139$type);
  }, function($G__110692$$) {
    return $APP.cljs.core.contains_QMARK_($G__110692$$, $APP.cljs$cst$3116$children);
  }], null), function($G__110692$$) {
    return $APP.cljs.core.map_QMARK_($G__110692$$) && $APP.cljs.core.contains_QMARK_($G__110692$$, $APP.cljs$cst$139$type) && $APP.cljs.core.contains_QMARK_($G__110692$$, $APP.cljs$cst$3116$children);
  }, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2339$query], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null), null, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$139$type, $APP.cljs$cst$3116$children], null), 
  new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, 
  $APP.cljs$cst$561$_PERCENT_)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$139$type)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$3116$children))], null), null])), function($p1__110645_SHARP_$$) {
    return $APP.cljs.core.every_QMARK_($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$8848$union_entry, null], null), null), $APP.cljs$cst$139$type), $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($p1__110645_SHARP_$$));
  }], null), null);
}), edn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$8848$union_entry, function($_$$) {
  return $APP.cljs.spec.alpha.and_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$1832$cljs_DOT_spec_DOT_alpha_SLASH_keys, $APP.cljs$cst$1835$req_un, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8836$edn_query_language_DOT_ast_SLASH_union_key, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], 
  null), $APP.cljs$cst$1836$opt_un, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query], null)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1237$x], null), $APP.cljs.core.list(cljs$cst$8843$cljs_DOT_core_SLASH_every_QMARK_, $APP.cljs.core.list(cljs$cst$8844$cljs_DOT_core_SLASH_comp, 
  $APP.cljs.core.list($APP.cljs$cst$162$fn_STAR_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8849$p1__110646_SHARP_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 4, [null, "null", $APP.cljs$cst$6385$call, "null", cljs$cst$8806$prop, "null", cljs$cst$8821$join, "null"], null), null), cljs$cst$8849$p1__110646_SHARP_)), 
  $APP.cljs$cst$139$type), $APP.cljs.core.list($APP.cljs$cst$3116$children, $APP.cljs$cst$1237$x)))], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.spec.alpha.map_spec_impl($APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1835$req_un, $APP.cljs$cst$1836$opt_un, $APP.cljs$cst$1831$gfn, $APP.cljs$cst$1856$pred_exprs, $APP.cljs$cst$1857$keys_pred, $APP.cljs$cst$1858$opt_keys, $APP.cljs$cst$1859$req_specs, $APP.cljs$cst$1833$req, 
  $APP.cljs$cst$1860$req_keys, $APP.cljs$cst$1861$opt_specs, $APP.cljs$cst$1862$pred_forms, $APP.cljs$cst$1834$opt], [new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8836$edn_query_language_DOT_ast_SLASH_union_key, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query], 
  null), null, new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [function($G__110712$$) {
    return $APP.cljs.core.map_QMARK_($G__110712$$);
  }, function($G__110712$$) {
    return $APP.cljs.core.contains_QMARK_($G__110712$$, $APP.cljs$cst$139$type);
  }, function($G__110712$$) {
    return $APP.cljs.core.contains_QMARK_($G__110712$$, cljs$cst$8850$union_key);
  }, function($G__110712$$) {
    return $APP.cljs.core.contains_QMARK_($G__110712$$, $APP.cljs$cst$3116$children);
  }], null), function($G__110712$$) {
    return $APP.cljs.core.map_QMARK_($G__110712$$) && $APP.cljs.core.contains_QMARK_($G__110712$$, $APP.cljs$cst$139$type) && $APP.cljs.core.contains_QMARK_($G__110712$$, cljs$cst$8850$union_key) && $APP.cljs.core.contains_QMARK_($G__110712$$, $APP.cljs$cst$3116$children);
  }, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2339$query], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8836$edn_query_language_DOT_ast_SLASH_union_key, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null), null, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$139$type, 
  cljs$cst$8850$union_key, $APP.cljs$cst$3116$children], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query], null), new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), 
  $APP.cljs.core.list($APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, $APP.cljs$cst$561$_PERCENT_)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$139$type)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, cljs$cst$8850$union_key)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, 
  $APP.cljs$cst$3116$children))], null), null])), function($x$$) {
    return $APP.cljs.core.every_QMARK_($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2(function($p1__110646_SHARP_$$) {
      return $APP.cljs.core.contains_QMARK_(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 4, [null, null, $APP.cljs$cst$6385$call, null, cljs$cst$8806$prop, null, cljs$cst$8821$join, null], null), null), $p1__110646_SHARP_$$);
    }, $APP.cljs$cst$139$type), $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($x$$));
  }], null), null);
}), edn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null, $APP.cljs$cst$6385$call, function($_$$) {
  return $APP.cljs.spec.alpha.and_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$1832$cljs_DOT_spec_DOT_alpha_SLASH_keys, $APP.cljs$cst$1835$req_un, new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params], 
  null), $APP.cljs$cst$1836$opt_un, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1237$x], null), $APP.cljs.core.list(cljs$cst$8843$cljs_DOT_core_SLASH_every_QMARK_, 
  $APP.cljs.core.list(cljs$cst$8844$cljs_DOT_core_SLASH_comp, $APP.cljs.core.list($APP.cljs$cst$162$fn_STAR_, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8851$p1__110647_SHARP_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 4, [null, "null", $APP.cljs$cst$6385$call, "null", cljs$cst$8806$prop, "null", cljs$cst$8821$join, 
  "null"], null), null), cljs$cst$8851$p1__110647_SHARP_)), $APP.cljs$cst$139$type), $APP.cljs.core.list($APP.cljs$cst$3116$children, $APP.cljs$cst$1237$x)))], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.spec.alpha.map_spec_impl($APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$1835$req_un, $APP.cljs$cst$1836$opt_un, $APP.cljs$cst$1831$gfn, $APP.cljs$cst$1856$pred_exprs, $APP.cljs$cst$1857$keys_pred, $APP.cljs$cst$1858$opt_keys, 
  $APP.cljs$cst$1859$req_specs, $APP.cljs$cst$1833$req, $APP.cljs$cst$1860$req_keys, $APP.cljs$cst$1861$opt_specs, $APP.cljs$cst$1862$pred_forms, $APP.cljs$cst$1834$opt], [new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params], null), new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null), null, new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [function($G__110713$$) {
    return $APP.cljs.core.map_QMARK_($G__110713$$);
  }, function($G__110713$$) {
    return $APP.cljs.core.contains_QMARK_($G__110713$$, $APP.cljs$cst$139$type);
  }, function($G__110713$$) {
    return $APP.cljs.core.contains_QMARK_($G__110713$$, $APP.cljs$cst$2004$key);
  }, function($G__110713$$) {
    return $APP.cljs.core.contains_QMARK_($G__110713$$, cljs$cst$8846$dispatch_key);
  }, function($G__110713$$) {
    return $APP.cljs.core.contains_QMARK_($G__110713$$, $APP.cljs$cst$410$params);
  }], null), function($G__110713$$) {
    return $APP.cljs.core.map_QMARK_($G__110713$$) && $APP.cljs.core.contains_QMARK_($G__110713$$, $APP.cljs$cst$139$type) && $APP.cljs.core.contains_QMARK_($G__110713$$, $APP.cljs$cst$2004$key) && $APP.cljs.core.contains_QMARK_($G__110713$$, cljs$cst$8846$dispatch_key) && $APP.cljs.core.contains_QMARK_($G__110713$$, $APP.cljs$cst$410$params);
  }, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2339$query, $APP.cljs$cst$3116$children], null), new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, cljs$cst$8834$edn_query_language_DOT_ast_SLASH_key, cljs$cst$8835$edn_query_language_DOT_ast_SLASH_dispatch_key, cljs$cst$8819$edn_query_language_DOT_core_SLASH_params], null), null, new $APP.cljs.core.PersistentVector(null, 
  4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$139$type, $APP.cljs$cst$2004$key, cljs$cst$8846$dispatch_key, $APP.cljs$cst$410$params], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8833$edn_query_language_DOT_ast_SLASH_query, cljs$cst$8837$edn_query_language_DOT_ast_SLASH_children], null), new $APP.cljs.core.PersistentVector(null, 5, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, 
  new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$1830$cljs_DOT_core_SLASH_map_QMARK_, $APP.cljs$cst$561$_PERCENT_)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, 
  $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$139$type)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$2004$key)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, cljs$cst$8846$dispatch_key)), $APP.cljs.core.list($APP.cljs$cst$432$cljs_DOT_core_SLASH_fn, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$561$_PERCENT_], null), $APP.cljs.core.list($APP.cljs$cst$6372$cljs_DOT_core_SLASH_contains_QMARK_, $APP.cljs$cst$561$_PERCENT_, $APP.cljs$cst$410$params))], 
  null), null])), function($x$$) {
    return $APP.cljs.core.every_QMARK_($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2(function($p1__110647_SHARP_$$) {
      return $APP.cljs.core.contains_QMARK_(new $APP.cljs.core.PersistentHashSet(null, new $APP.cljs.core.PersistentArrayMap(null, 4, [null, null, $APP.cljs$cst$6385$call, null, cljs$cst$8806$prop, null, cljs$cst$8821$join, null], null), null), $p1__110647_SHARP_$$);
    }, $APP.cljs$cst$139$type), $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($x$$));
  }], null), null);
}), edn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$8842$root, function($_$$) {
  return $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs$cst$8839$edn_query_language_DOT_ast_SLASH_root, cljs$cst$8839$edn_query_language_DOT_ast_SLASH_root, null, null);
}), $APP.cljs.spec.alpha.def_impl(cljs$cst$8840$edn_query_language_DOT_ast_SLASH_type, $APP.cljs.core.list(cljs$cst$8852$cljs_DOT_core_SLASH_set, $APP.cljs.core.list(cljs$cst$8853$cljs_DOT_core_SLASH_keys, $APP.cljs.core.list(cljs$cst$8854$cljs_DOT_core_SLASH_methods, cljs$cst$8855$edn_query_language_DOT_core_SLASH_node_type))), $APP.cljs.core.set($APP.cljs.core.keys($APP.cljs.core.methods$(edn_query_language.core.node_type)))), $APP.cljs.spec.alpha.def_impl(cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, 
$APP.cljs.core.list($APP.cljs$cst$1867$cljs_DOT_spec_DOT_alpha_SLASH_multi_spec, cljs$cst$8855$edn_query_language_DOT_core_SLASH_node_type, $APP.cljs$cst$139$type), $APP.cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3(cljs$cst$8855$edn_query_language_DOT_core_SLASH_node_type, new $APP.cljs.core.Var(function() {
  return edn_query_language.core.node_type;
}, cljs$cst$8855$edn_query_language_DOT_core_SLASH_node_type, $APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs$cst$176$ns, $APP.cljs$cst$272$name, $APP.cljs$cst$208$file, $APP.cljs$cst$218$end_column, $APP.cljs$cst$216$column, $APP.cljs$cst$209$line, $APP.cljs$cst$217$end_line, $APP.cljs$cst$273$arglists, $APP.cljs$cst$256$doc, $APP.cljs$cst$171$test], [cljs$cst$8856$edn_query_language_DOT_core, cljs$cst$8857$node_type, "edn_query_language/core.cljc", 22, 3, 85, 85, $APP.cljs.core.List.EMPTY, 
null, $APP.cljs.core.truth_(edn_query_language.core.node_type) ? edn_query_language.core.node_type.cljs$lang$test : null])), $APP.cljs$cst$139$type)));
edn_query_language.core.mark_meta = function($source$$, $target$$) {
  return $APP.cljs.core.truth_($APP.cljs.core.meta($source$$)) ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($target$$, $APP.cljs$cst$2$meta, $APP.cljs.core.meta($source$$)) : $target$$;
};
edn_query_language.core.symbol__GT_ast = function($k$$) {
  return new $APP.cljs.core.PersistentArrayMap(null, 2, [cljs$cst$8846$dispatch_key, $k$$, $APP.cljs$cst$2004$key, $k$$], null);
};
edn_query_language.core.keyword__GT_ast = function($k$$) {
  return new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$139$type, cljs$cst$8806$prop, cljs$cst$8846$dispatch_key, $k$$, $APP.cljs$cst$2004$key, $k$$], null);
};
edn_query_language.core.union_entry__GT_ast = function($p__110715_v$$) {
  var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__110715_v$$, 0, null);
  $p__110715_v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__110715_v$$, 1, null);
  var $component$$ = cljs$cst$8858$component.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($p__110715_v$$));
  return $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new $APP.cljs.core.PersistentArrayMap(null, 4, [$APP.cljs$cst$139$type, cljs$cst$8848$union_entry, cljs$cst$8850$union_key, $k$$, $APP.cljs$cst$2339$query, $p__110715_v$$, $APP.cljs$cst$3116$children, $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.expr__GT_ast), $p__110715_v$$)], 
  null), $component$$ == null ? null : new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$8858$component, $component$$], null)], 0));
};
edn_query_language.core.union__GT_ast = function($m$$) {
  return new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$139$type, $APP.cljs$cst$4262$union, $APP.cljs$cst$2339$query, $m$$, $APP.cljs$cst$3116$children, $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.union_entry__GT_ast), $m$$)], null);
};
edn_query_language.core.call__GT_ast = function($G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$) {
  var $JSCompiler_temp_const$jscomp$10287_ast$jscomp$34_f$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$, 0, null), $JSCompiler_temp_const$jscomp$10285_args$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$, 1, null);
  if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$167$quote, $JSCompiler_temp_const$jscomp$10287_ast$jscomp$34_f$$)) {
    $JSCompiler_temp_const$jscomp$10287_ast$jscomp$34_f$$ = $APP.cljs.core.assoc;
    var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$10287_ast$jscomp$34_f$$.cljs$core$IFn$_invoke$arity$3;
    $JSCompiler_temp_const$jscomp$10285_args$$ = edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1 ? edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1($JSCompiler_temp_const$jscomp$10285_args$$) : edn_query_language.core.expr__GT_ast.call(null, $JSCompiler_temp_const$jscomp$10285_args$$);
    $G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$ = $APP.cljs$cst$6089$target.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$));
    $G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$ = $APP.cljs.core.truth_($G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$) ? $G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$ : cljs$cst$8859$remote;
    return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$10287_ast$jscomp$34_f$$, $JSCompiler_temp_const$jscomp$10285_args$$, $APP.cljs$cst$6089$target, $G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$);
  }
  $JSCompiler_temp_const$jscomp$10287_ast$jscomp$34_f$$ = $APP.cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1 ? edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1($JSCompiler_temp_const$jscomp$10287_ast$jscomp$34_f$$) : edn_query_language.core.expr__GT_ast.call(null, $JSCompiler_temp_const$jscomp$10287_ast$jscomp$34_f$$), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$410$params], null), $APP.cljs.core.merge, $APP.cljs.core.truth_($JSCompiler_temp_const$jscomp$10285_args$$) ? $JSCompiler_temp_const$jscomp$10285_args$$ : $APP.cljs.core.PersistentArrayMap.EMPTY);
  $G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$ = edn_query_language.core.mark_meta($G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$, $JSCompiler_temp_const$jscomp$10287_ast$jscomp$34_f$$);
  return cljs$cst$8846$dispatch_key.cljs$core$IFn$_invoke$arity$1($JSCompiler_temp_const$jscomp$10287_ast$jscomp$34_f$$) instanceof $APP.cljs.core.Symbol ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$, $APP.cljs$cst$139$type, $APP.cljs$cst$6385$call) : $G__110723_JSCompiler_inline_result$jscomp$10288_or__5025__auto__$$;
};
edn_query_language.core.query__GT_ast = function($query$$) {
  var $component$$ = cljs$cst$8858$component.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($query$$));
  return $APP.cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic($APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([edn_query_language.core.mark_meta($query$$, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$139$type, cljs$cst$8842$root, $APP.cljs$cst$3116$children, $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.expr__GT_ast), $query$$)], null)), $component$$ == null ? 
  null : new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$8858$component, $component$$], null)], 0));
};
edn_query_language.core.query__GT_ast1 = function($query_expr$$) {
  return $APP.cljs.core.first($APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.query__GT_ast($query_expr$$)));
};
edn_query_language.core.join__GT_ast = function($JSCompiler_temp$jscomp$3451_JSCompiler_temp$jscomp$3452_JSCompiler_temp$jscomp$3453_join$$) {
  var $JSCompiler_temp_const$$ = cljs$cst$8860$query_root.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($JSCompiler_temp$jscomp$3451_JSCompiler_temp$jscomp$3452_JSCompiler_temp$jscomp$3453_join$$)), $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.first($JSCompiler_temp$jscomp$3451_JSCompiler_temp$jscomp$3452_JSCompiler_temp$jscomp$3453_join$$), $ast$jscomp$35_k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$0$$, 0, null), $v$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($JSCompiler_temp_const$jscomp$0$$, 
  1, null);
  $ast$jscomp$35_k$$ = edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1 ? edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1($ast$jscomp$35_k$$) : edn_query_language.core.expr__GT_ast.call(null, $ast$jscomp$35_k$$);
  var $JSCompiler_temp_const$jscomp$3446_type$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$6385$call, $APP.cljs$cst$139$type.cljs$core$IFn$_invoke$arity$1($ast$jscomp$35_k$$)) ? $APP.cljs$cst$6385$call : cljs$cst$8821$join, $JSCompiler_temp_const$jscomp$3445_component$$ = cljs$cst$8858$component.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.meta($v$$));
  $JSCompiler_temp_const$jscomp$0$$ = $APP.cljs.core.merge;
  var $JSCompiler_temp_const$jscomp$1$$ = $JSCompiler_temp_const$jscomp$0$$.cljs$core$IFn$_invoke$arity$variadic, $JSCompiler_temp_const$jscomp$2$$ = $APP.cljs.core.prim_seq, $JSCompiler_temp_const$jscomp$3$$ = $JSCompiler_temp_const$jscomp$2$$.cljs$core$IFn$_invoke$arity$2;
  $JSCompiler_temp_const$jscomp$3446_type$$ = edn_query_language.core.mark_meta($JSCompiler_temp$jscomp$3451_JSCompiler_temp$jscomp$3452_JSCompiler_temp$jscomp$3453_join$$, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$139$type, $JSCompiler_temp_const$jscomp$3446_type$$, $APP.cljs$cst$2339$query, $v$$], null));
  $JSCompiler_temp_const$jscomp$3445_component$$ = $JSCompiler_temp_const$jscomp$3445_component$$ == null ? null : new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$8858$component, $JSCompiler_temp_const$jscomp$3445_component$$], null);
  $JSCompiler_temp_const$$ = $APP.cljs.core.truth_($JSCompiler_temp_const$$) ? new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$8860$query_root, !0], null) : null;
  var $JSCompiler_temp_const$jscomp$4$$ = $APP.cljs.core, $JSCompiler_temp_const$jscomp$5$$ = $JSCompiler_temp_const$jscomp$4$$.truth_;
  var $JSCompiler_inline_result$jscomp$9507_or__5025__auto__$jscomp$inline_10146_or__5025__auto____$1$$ = typeof $v$$ === "number";
  $JSCompiler_inline_result$jscomp$9507_or__5025__auto__$jscomp$inline_10146_or__5025__auto____$1$$ || ($JSCompiler_inline_result$jscomp$9507_or__5025__auto__$jscomp$inline_10146_or__5025__auto____$1$$ = ($JSCompiler_inline_result$jscomp$9507_or__5025__auto__$jscomp$inline_10146_or__5025__auto____$1$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1481$_DOT__DOT__DOT_, $v$$)) ? $JSCompiler_inline_result$jscomp$9507_or__5025__auto__$jscomp$inline_10146_or__5025__auto____$1$$ : edn_query_language.core._STAR_shallow_conversion_STAR_);
  if ($JSCompiler_temp_const$jscomp$5$$.call($JSCompiler_temp_const$jscomp$4$$, $JSCompiler_inline_result$jscomp$9507_or__5025__auto__$jscomp$inline_10146_or__5025__auto____$1$$)) {
    $JSCompiler_temp$jscomp$3451_JSCompiler_temp$jscomp$3452_JSCompiler_temp$jscomp$3453_join$$ = null;
  } else {
    if ($APP.cljs.core.vector_QMARK_($v$$)) {
      $JSCompiler_temp$jscomp$3451_JSCompiler_temp$jscomp$3452_JSCompiler_temp$jscomp$3453_join$$ = new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$3116$children, $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.expr__GT_ast), $v$$)], null);
    } else {
      if ($APP.cljs.core.map_QMARK_($v$$)) {
        $JSCompiler_temp$jscomp$3451_JSCompiler_temp$jscomp$3452_JSCompiler_temp$jscomp$3453_join$$ = new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$3116$children, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [edn_query_language.core.union__GT_ast($v$$)], null)], null);
      } else {
        throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Invalid join, ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($JSCompiler_temp$jscomp$3451_JSCompiler_temp$jscomp$3452_JSCompiler_temp$jscomp$3453_join$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$139$type, cljs$cst$8861$error_SLASH_invalid_join], null));
      }
    }
  }
  return $JSCompiler_temp_const$jscomp$1$$.call($JSCompiler_temp_const$jscomp$0$$, $JSCompiler_temp_const$jscomp$3$$.call($JSCompiler_temp_const$jscomp$2$$, [$ast$jscomp$35_k$$, $JSCompiler_temp_const$jscomp$3446_type$$, $JSCompiler_temp_const$jscomp$3445_component$$, $JSCompiler_temp_const$$, $JSCompiler_temp$jscomp$3451_JSCompiler_temp$jscomp$3452_JSCompiler_temp$jscomp$3453_join$$], 0));
};
edn_query_language.core.ident__GT_ast = function($p__110727$$) {
  var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__110727$$, 0, null);
  $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__110727$$, 1, null);
  return new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$139$type, cljs$cst$8806$prop, cljs$cst$8846$dispatch_key, $k$$, $APP.cljs$cst$2004$key, $p__110727$$], null);
};
edn_query_language.core.expr__GT_ast = function($x$$) {
  if ($x$$ instanceof $APP.cljs.core.Symbol) {
    return edn_query_language.core.symbol__GT_ast($x$$);
  }
  if ($x$$ instanceof $APP.cljs.core.Keyword) {
    return edn_query_language.core.keyword__GT_ast($x$$);
  }
  if ($APP.cljs.core.map_QMARK_($x$$)) {
    return edn_query_language.core.join__GT_ast($x$$);
  }
  if ($APP.cljs.core.vector_QMARK_($x$$)) {
    return edn_query_language.core.ident__GT_ast($x$$);
  }
  if ($APP.cljs.core.seq_QMARK_($x$$)) {
    return edn_query_language.core.call__GT_ast($x$$);
  }
  throw $APP.cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(["Invalid expression ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1($x$$)].join(""), new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$139$type, cljs$cst$8862$error_SLASH_invalid_expression], null));
};
edn_query_language.core.wrap_expr = function($JSCompiler_temp_const$jscomp$3455_root_QMARK_$$, $JSCompiler_inline_result$jscomp$3456_expr$$) {
  if ($APP.cljs.core.truth_($JSCompiler_temp_const$jscomp$3455_root_QMARK_$$)) {
    $JSCompiler_temp_const$jscomp$3455_root_QMARK_$$ = $APP.cljs.core;
    var $JSCompiler_temp_const$$ = $JSCompiler_temp_const$jscomp$3455_root_QMARK_$$.with_meta;
    $JSCompiler_inline_result$jscomp$3456_expr$$ = $JSCompiler_inline_result$jscomp$3456_expr$$ instanceof $APP.cljs.core.Keyword ? new $APP.cljs.core.List(null, $JSCompiler_inline_result$jscomp$3456_expr$$, null, 1, null) : $JSCompiler_inline_result$jscomp$3456_expr$$;
    return $JSCompiler_temp_const$$.call($JSCompiler_temp_const$jscomp$3455_root_QMARK_$$, $JSCompiler_inline_result$jscomp$3456_expr$$, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$8860$query_root, !0], null));
  }
  return $JSCompiler_inline_result$jscomp$3456_expr$$;
};
edn_query_language.core.parameterize = function($expr$$, $params$$) {
  return $APP.cljs.core.empty_QMARK_($params$$) ? new $APP.cljs.core.List(null, $expr$$, null, 1, null) : new $APP.cljs.core.List(null, $expr$$, new $APP.cljs.core.List(null, $params$$, null, 1, null), 2, null);
};
edn_query_language.core.ast__GT_expr = function($var_args$$) {
  switch(arguments.length) {
    case 1:
      return edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$1 = function($ast$$) {
  return edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2($ast$$, !1);
};
edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2 = function($G__110739_map__110740__$1_p__110737$$, $unparse_QMARK_$$) {
  var $map__110738__$1$$ = $APP.cljs.core.__destructure_map($G__110739_map__110740__$1_p__110737$$), $ast_meta$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110738__$1$$, $APP.cljs$cst$2$meta), $type$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110738__$1$$, $APP.cljs$cst$139$type), $component$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110738__$1$$, cljs$cst$8858$component);
  if ($APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$8842$root, $type$$)) {
    return $G__110739_map__110740__$1_p__110737$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.with_meta($APP.cljs.core.PersistentVector.EMPTY, $ast_meta$$), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p1__110732_SHARP_$$) {
      return edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2($p1__110732_SHARP_$$, $unparse_QMARK_$$);
    }), $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($map__110738__$1$$)), $component$$ != null ? $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4($G__110739_map__110740__$1_p__110737$$, $APP.cljs.core.assoc, cljs$cst$8858$component, $component$$) : $G__110739_map__110740__$1_p__110737$$;
  }
  $G__110739_map__110740__$1_p__110737$$ = $APP.cljs.core.__destructure_map($map__110738__$1$$);
  var $key$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__110739_map__110740__$1_p__110737$$, $APP.cljs$cst$2004$key), $query$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__110739_map__110740__$1_p__110737$$, $APP.cljs$cst$2339$query), $query_root$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__110739_map__110740__$1_p__110737$$, cljs$cst$8860$query_root), $params$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($G__110739_map__110740__$1_p__110737$$, $APP.cljs$cst$410$params);
  return edn_query_language.core.wrap_expr($query_root$$, $APP.cljs.core.truth_($APP.cljs.core.truth_($params$$) ? $APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$6385$call, $type$$) : $params$$) ? function() {
    var $expr$$ = edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2($map__110738__$1$$, $APP.cljs$cst$410$params), $unparse_QMARK_$$);
    return edn_query_language.core.parameterize($expr$$, $params$$);
  }() : function() {
    var $key__$1$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$6385$call, $type$$) ? edn_query_language.core.parameterize($key$$, $params$$) : $key$$;
    if ($APP.cljs.core.truth_(function() {
      var $and__5023__auto__$jscomp$576_or__5025__auto__$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$8821$join, $type$$);
      return $and__5023__auto__$jscomp$576_or__5025__auto__$$ ? $and__5023__auto__$jscomp$576_or__5025__auto__$$ : ($and__5023__auto__$jscomp$576_or__5025__auto__$$ = $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$6385$call, $type$$)) ? $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($map__110738__$1$$) : $and__5023__auto__$jscomp$576_or__5025__auto__$$;
    }())) {
      if ($APP.cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$1481$_DOT__DOT__DOT_, $query$$) && typeof $query$$ !== "number" && ($unparse_QMARK_$$ === !0 || $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$6385$call, $type$$))) {
        var $map__110741__$1$$ = $APP.cljs.core.__destructure_map($map__110738__$1$$), $children$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110741__$1$$, $APP.cljs$cst$3116$children), $query_meta$$ = $APP.cljs.core.meta($query$$);
        return 1 === $APP.cljs.core.count($children$$) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$4262$union, $APP.cljs$cst$139$type.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.first($children$$))) ? $APP.cljs.core.with_meta($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$key__$1$$, $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3(function() {
          var $G__110742$$ = $APP.cljs.core.with_meta($APP.cljs.core.PersistentArrayMap.EMPTY, $ast_meta$$);
          return $APP.cljs.core.truth_($component$$) ? $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4($G__110742$$, $APP.cljs.core.assoc, cljs$cst$8858$component, $component$$) : $G__110742$$;
        }(), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($map__110744__$1_p__110743$$) {
          $map__110744__$1_p__110743$$ = $APP.cljs.core.__destructure_map($map__110744__$1_p__110743$$);
          var $union_key$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110744__$1_p__110743$$, cljs$cst$8850$union_key), $children__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110744__$1_p__110743$$, $APP.cljs$cst$3116$children), $component__$1$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110744__$1_p__110743$$, cljs$cst$8858$component);
          return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$union_key$$, function() {
            var $G__110745$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p1__110733_SHARP_$$) {
              return edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2($p1__110733_SHARP_$$, $unparse_QMARK_$$);
            }), $children__$1$$);
            return $component__$1$$ != null ? $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4($G__110745$$, $APP.cljs.core.assoc, cljs$cst$8858$component, $component__$1$$) : $G__110745$$;
          }()], null);
        }), $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($APP.cljs.core.first($children$$)))]), $ast_meta$$) : $APP.cljs.core.with_meta($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$key__$1$$, function() {
          var $G__110746$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.with_meta($APP.cljs.core.PersistentVector.EMPTY, $query_meta$$), $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p1__110734_SHARP_$$) {
            return edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2($p1__110734_SHARP_$$, $unparse_QMARK_$$);
          }), $children$$);
          return $component$$ != null ? $APP.cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4($G__110746$$, $APP.cljs.core.assoc, cljs$cst$8858$component, $component$$) : $G__110746$$;
        }()]), $ast_meta$$);
      }
      return $APP.cljs.core.with_meta($APP.cljs.core.PersistentArrayMap.createAsIfByAssoc([$key__$1$$, $query$$]), $ast_meta$$);
    }
    return $key__$1$$;
  }());
};
edn_query_language.core.ast__GT_expr.cljs$lang$maxFixedArity = 2;
edn_query_language.core.ast__GT_query = function($_LT__GT__query_ast$$) {
  $_LT__GT__query_ast$$ = edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2($_LT__GT__query_ast$$, !0);
  return $APP.cljs.core.vector_QMARK_($_LT__GT__query_ast$$) ? $_LT__GT__query_ast$$ : new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$_LT__GT__query_ast$$], null);
};
edn_query_language.core.ident_QMARK_ = function($x$$) {
  return $APP.cljs.core.vector_QMARK_($x$$) && $APP.cljs.core.first($x$$) instanceof $APP.cljs.core.Keyword && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, $APP.cljs.core.count($x$$));
};
edn_query_language.core.focus_subquery_union_STAR_ = function($query_ast$$, $sub_ast$$) {
  var $s_index$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p1__110747_SHARP_$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8850$union_key.cljs$core$IFn$_invoke$arity$1($p1__110747_SHARP_$$), $p1__110747_SHARP_$$], null);
  }), $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($sub_ast$$));
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($query_ast$$, $APP.cljs$cst$3116$children, $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($children$$, $map__110749__$1_p__110748$$) {
    $map__110749__$1_p__110748$$ = $APP.cljs.core.__destructure_map($map__110749__$1_p__110748$$);
    var $temp__5823__auto__$jscomp$451_union_key$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110749__$1_p__110748$$, cljs$cst$8850$union_key);
    $temp__5823__auto__$jscomp$451_union_key$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($s_index$$, $temp__5823__auto__$jscomp$451_union_key$$);
    return $APP.cljs.core.truth_($temp__5823__auto__$jscomp$451_union_key$$) ? $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($children$$, edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2($map__110749__$1_p__110748$$, $temp__5823__auto__$jscomp$451_union_key$$) : edn_query_language.core.focus_subquery_STAR_.call(null, $map__110749__$1_p__110748$$, $temp__5823__auto__$jscomp$451_union_key$$)) : 
    $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($children$$, $map__110749__$1_p__110748$$);
  }, $APP.cljs.core.PersistentVector.EMPTY, $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($query_ast$$)));
};
edn_query_language.core.focus_subquery_STAR_ = function($query_ast$$, $sub_ast$$) {
  var $q_index$$ = $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p1__110750_SHARP_$$) {
    return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2004$key.cljs$core$IFn$_invoke$arity$1($p1__110750_SHARP_$$), $p1__110750_SHARP_$$], null);
  }), $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($query_ast$$));
  return $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($query_ast$$, $APP.cljs$cst$3116$children, $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($children$$, $map__110752__$1_p__110751$$) {
    $map__110752__$1_p__110751$$ = $APP.cljs.core.__destructure_map($map__110752__$1_p__110751$$);
    var $key$jscomp$336_temp__5823__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110752__$1_p__110751$$, $APP.cljs$cst$2004$key), $type$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110752__$1_p__110751$$, $APP.cljs$cst$139$type);
    $key$jscomp$336_temp__5823__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($q_index$$, $key$jscomp$336_temp__5823__auto__$$);
    return $APP.cljs.core.truth_($key$jscomp$336_temp__5823__auto__$$) ? $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(cljs$cst$8821$join, $type$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$139$type.cljs$core$IFn$_invoke$arity$1($key$jscomp$336_temp__5823__auto__$$)], 0)) ? $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($children$$, edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2($key$jscomp$336_temp__5823__auto__$$, 
    $map__110752__$1_p__110751$$) : edn_query_language.core.focus_subquery_STAR_.call(null, $key$jscomp$336_temp__5823__auto__$$, $map__110752__$1_p__110751$$)) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic($APP.cljs$cst$4262$union, $type$$, $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$APP.cljs$cst$139$type.cljs$core$IFn$_invoke$arity$1($key$jscomp$336_temp__5823__auto__$$)], 0)) ? $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($children$$, edn_query_language.core.focus_subquery_union_STAR_($key$jscomp$336_temp__5823__auto__$$, 
    $map__110752__$1_p__110751$$)) : $APP.cljs.core.conj.cljs$core$IFn$_invoke$arity$2($children$$, $key$jscomp$336_temp__5823__auto__$$) : $children$$;
  }, $APP.cljs.core.PersistentVector.EMPTY, $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($sub_ast$$)));
};
edn_query_language.core.focus_subquery = function($query$jscomp$39_query_ast$$, $sub_ast$$) {
  $query$jscomp$39_query_ast$$ = edn_query_language.core.query__GT_ast($query$jscomp$39_query_ast$$);
  $sub_ast$$ = edn_query_language.core.query__GT_ast($sub_ast$$);
  return edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(edn_query_language.core.focus_subquery_STAR_($query$jscomp$39_query_ast$$, $sub_ast$$), !0);
};
edn_query_language.core.transduce_children = function($xform$$, $map__110755__$1_p__110754$$) {
  $map__110755__$1_p__110754$$ = $APP.cljs.core.__destructure_map($map__110755__$1_p__110754$$);
  var $children$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110755__$1_p__110754$$, $APP.cljs$cst$3116$children);
  return $APP.cljs.core.seq($children$$) ? $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$3($map__110755__$1_p__110754$$, $APP.cljs$cst$3116$children, function($children__$1$$) {
    return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($xform$$, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p1__110753_SHARP_$$) {
      return edn_query_language.core.transduce_children.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.transduce_children.cljs$core$IFn$_invoke$arity$2($xform$$, $p1__110753_SHARP_$$) : edn_query_language.core.transduce_children.call(null, $xform$$, $p1__110753_SHARP_$$);
    })), $children__$1$$);
  }) : $map__110755__$1_p__110754$$;
};
edn_query_language.core.union_children_QMARK_ = function($G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$) {
  var $JSCompiler_temp_const$$ = $APP.cljs.core._EQ_, $JSCompiler_temp_const$jscomp$0$$ = $JSCompiler_temp_const$$.cljs$core$IFn$_invoke$arity$2;
  $G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$ = $G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$ == null ? null : $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$);
  $G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$ = $G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$ == null ? null : $APP.cljs.core.first($G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$);
  $G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$ = $G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$ == null ? null : $APP.cljs$cst$139$type.cljs$core$IFn$_invoke$arity$1($G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$);
  return $JSCompiler_temp_const$jscomp$0$$.call($JSCompiler_temp_const$$, $APP.cljs$cst$4262$union, $G__110757__$1$jscomp$inline_8976_G__110757__$2$jscomp$inline_8977_JSCompiler_inline_result$jscomp$3459_ast$$);
};
edn_query_language.core.update_property_param = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$507_argseq__5756__auto__$$ = [], $len__5749__auto___110796$$ = arguments.length, $i__5750__auto___110797$$ = 0;;) {
    if ($i__5750__auto___110797$$ < $len__5749__auto___110796$$) {
      $args__5755__auto__$jscomp$507_argseq__5756__auto__$$.push(arguments[$i__5750__auto___110797$$]), $i__5750__auto___110797$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$507_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$507_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$507_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return edn_query_language.core.update_property_param.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$507_argseq__5756__auto__$$);
};
edn_query_language.core.update_property_param.cljs$core$IFn$_invoke$arity$variadic = function($p$jscomp$471_x$$, $f$$, $args$$) {
  if ($APP.cljs.core.seq_QMARK_($p$jscomp$471_x$$)) {
    var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p$jscomp$471_x$$, 0, null);
    $p$jscomp$471_x$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p$jscomp$471_x$$, 1, null);
    return new $APP.cljs.core.List(null, $k$$, new $APP.cljs.core.List(null, $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$3($f$$, $p$jscomp$471_x$$, $args$$), null, 1, null), 2, null);
  }
  return new $APP.cljs.core.List(null, $p$jscomp$471_x$$, new $APP.cljs.core.List(null, $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$3($f$$, $APP.cljs.core.PersistentArrayMap.EMPTY, $args$$), null, 1, null), 2, null);
};
edn_query_language.core.update_property_param.cljs$lang$maxFixedArity = 2;
edn_query_language.core.update_property_param.cljs$lang$applyTo = function($G__110760_seq110758$$) {
  var $G__110759$$ = $APP.cljs.core.first($G__110760_seq110758$$), $seq110758__$1_seq110758__$2$$ = $APP.cljs.core.next($G__110760_seq110758$$);
  $G__110760_seq110758$$ = $APP.cljs.core.first($seq110758__$1_seq110758__$2$$);
  $seq110758__$1_seq110758__$2$$ = $APP.cljs.core.next($seq110758__$1_seq110758__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__110759$$, $G__110760_seq110758$$, $seq110758__$1_seq110758__$2$$);
};
edn_query_language.core.merge_asts = function($var_args$$) {
  switch(arguments.length) {
    case 0:
      return edn_query_language.core.merge_asts.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return edn_query_language.core.merge_asts.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return edn_query_language.core.merge_asts.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", $APP.cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
edn_query_language.core.merge_asts.cljs$core$IFn$_invoke$arity$0 = function() {
  return new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$139$type, cljs$cst$8842$root, $APP.cljs$cst$3116$children, $APP.cljs.core.PersistentVector.EMPTY], null);
};
edn_query_language.core.merge_asts.cljs$core$IFn$_invoke$arity$1 = function($q$$) {
  return $q$$;
};
edn_query_language.core.merge_asts.cljs$core$IFn$_invoke$arity$2 = function($qa$$, $qb$$) {
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($ast$$, $map__110769__$1_p__110768$$) {
    $map__110769__$1_p__110768$$ = $APP.cljs.core.__destructure_map($map__110769__$1_p__110768$$);
    var $key$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110769__$1_p__110768$$, $APP.cljs$cst$2004$key), $type$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110769__$1_p__110768$$, $APP.cljs$cst$139$type), $params$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110769__$1_p__110768$$, $APP.cljs$cst$410$params), $item$jscomp$187_temp__5823__auto__$$ = $APP.cljs.core.first($APP.cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(function($p1__110765_SHARP_$$, 
    $p2__110764_SHARP_$$) {
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$2004$key.cljs$core$IFn$_invoke$arity$1($p2__110764_SHARP_$$), $key$$) ? new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$p1__110765_SHARP_$$, $p2__110764_SHARP_$$], null) : null;
    }, $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($ast$$)));
    if ($APP.cljs.core.truth_($item$jscomp$187_temp__5823__auto__$$)) {
      var $idx$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($item$jscomp$187_temp__5823__auto__$$, 0, null);
      $item$jscomp$187_temp__5823__auto__$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($item$jscomp$187_temp__5823__auto__$$, 1, null);
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(cljs$cst$8821$join, $APP.cljs$cst$139$type.cljs$core$IFn$_invoke$arity$1($item$jscomp$187_temp__5823__auto__$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$type$$], 0)) || $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(cljs$cst$8806$prop, $APP.cljs$cst$139$type.cljs$core$IFn$_invoke$arity$1($item$jscomp$187_temp__5823__auto__$$), $APP.cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([$type$$], 0)) ? $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$410$params.cljs$core$IFn$_invoke$arity$1($item$jscomp$187_temp__5823__auto__$$), 
      $params$$) ? $APP.cljs.core.update_in.cljs$core$IFn$_invoke$arity$4($ast$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3116$children, $idx$$], null), edn_query_language.core.merge_asts, $map__110769__$1_p__110768$$) : $APP.cljs.core.reduced(null) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$8806$prop, $APP.cljs$cst$139$type.cljs$core$IFn$_invoke$arity$1($item$jscomp$187_temp__5823__auto__$$)) && $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$8821$join, 
      $type$$) ? $APP.cljs.core.assoc_in($ast$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3116$children, $idx$$], null), $map__110769__$1_p__110768$$) : $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($APP.cljs$cst$6385$call, $type$$) ? $APP.cljs.core.reduced(null) : $ast$$;
    }
    return $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$4($ast$$, $APP.cljs$cst$3116$children, $APP.cljs.core.conj, $map__110769__$1_p__110768$$);
  }, $qa$$, $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($qb$$));
};
edn_query_language.core.merge_asts.cljs$lang$maxFixedArity = 2;
edn_query_language.core.merge_queries = function($G__110773_qa$$, $qb$$) {
  $G__110773_qa$$ = edn_query_language.core.merge_asts.cljs$core$IFn$_invoke$arity$2(edn_query_language.core.query__GT_ast($G__110773_qa$$), edn_query_language.core.query__GT_ast($qb$$));
  return $G__110773_qa$$ == null ? null : edn_query_language.core.ast__GT_query($G__110773_qa$$);
};
edn_query_language.core.mask_query_STAR_ = function($map__110775__$1_p__110774$$, $mask_ast$$) {
  $map__110775__$1_p__110774$$ = $APP.cljs.core.__destructure_map($map__110775__$1_p__110774$$);
  var $children$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110775__$1_p__110774$$, $APP.cljs$cst$3116$children);
  return $APP.cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function($ast$$, $map__110777__$1_p__110776$$) {
    $map__110777__$1_p__110776$$ = $APP.cljs.core.__destructure_map($map__110777__$1_p__110776$$);
    var $mask_children$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110777__$1_p__110776$$, $APP.cljs$cst$3116$children), $key$jscomp$338_temp__5823__auto__$$ = $APP.cljs.core.get.cljs$core$IFn$_invoke$arity$2($map__110777__$1_p__110776$$, $APP.cljs$cst$2004$key);
    $key$jscomp$338_temp__5823__auto__$$ = $APP.cljs.core.first($APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$key$jscomp$338_temp__5823__auto__$$]), $APP.cljs$cst$2004$key), $children$$));
    return $APP.cljs.core.truth_($key$jscomp$338_temp__5823__auto__$$) ? $APP.cljs.core.seq($APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($key$jscomp$338_temp__5823__auto__$$)) && $APP.cljs.core.seq($mask_children$$) ? $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$4($ast$$, $APP.cljs$cst$3116$children, $APP.cljs.core.conj, edn_query_language.core.mask_query_STAR_.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.mask_query_STAR_.cljs$core$IFn$_invoke$arity$2($key$jscomp$338_temp__5823__auto__$$, 
    $map__110777__$1_p__110776$$) : edn_query_language.core.mask_query_STAR_.call(null, $key$jscomp$338_temp__5823__auto__$$, $map__110777__$1_p__110776$$)) : $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$4($ast$$, $APP.cljs$cst$3116$children, $APP.cljs.core.conj, $key$jscomp$338_temp__5823__auto__$$) : $ast$$;
  }, $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($map__110775__$1_p__110774$$, $APP.cljs$cst$3116$children, $APP.cljs.core.PersistentVector.EMPTY), $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($mask_ast$$));
};
edn_query_language.core.update_child = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$508_argseq__5756__auto__$$ = [], $len__5749__auto___110800$$ = arguments.length, $i__5750__auto___110801$$ = 0;;) {
    if ($i__5750__auto___110801$$ < $len__5749__auto___110800$$) {
      $args__5755__auto__$jscomp$508_argseq__5756__auto__$$.push(arguments[$i__5750__auto___110801$$]), $i__5750__auto___110801$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$508_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$508_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$508_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return edn_query_language.core.update_child.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$508_argseq__5756__auto__$$);
};
edn_query_language.core.update_child.cljs$core$IFn$_invoke$arity$variadic = function($ast$$, $G__110781__$2$jscomp$inline_8981_key$jscomp$339_temp__5823__auto__$$, $args$$) {
  var $G__110781$jscomp$inline_8979_G__110781__$1$$ = $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($ast$$);
  $G__110781$jscomp$inline_8979_G__110781__$1$$ = $G__110781$jscomp$inline_8979_G__110781__$1$$ == null ? null : $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.vector, $G__110781$jscomp$inline_8979_G__110781__$1$$);
  $G__110781__$2$jscomp$inline_8981_key$jscomp$339_temp__5823__auto__$$ = $G__110781$jscomp$inline_8979_G__110781__$1$$ == null ? null : $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentHashSet.createAsIfByAssoc([$G__110781__$2$jscomp$inline_8981_key$jscomp$339_temp__5823__auto__$$]), $APP.cljs$cst$2004$key, $APP.cljs.core.second), $G__110781$jscomp$inline_8979_G__110781__$1$$);
  $G__110781__$2$jscomp$inline_8981_key$jscomp$339_temp__5823__auto__$$ = $G__110781__$2$jscomp$inline_8981_key$jscomp$339_temp__5823__auto__$$ == null ? null : $APP.cljs.core.ffirst($G__110781__$2$jscomp$inline_8981_key$jscomp$339_temp__5823__auto__$$);
  return $APP.cljs.core.truth_($G__110781__$2$jscomp$inline_8981_key$jscomp$339_temp__5823__auto__$$) ? $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.update_in, $ast$$, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3116$children, $G__110781__$2$jscomp$inline_8981_key$jscomp$339_temp__5823__auto__$$], null), $args$$) : $ast$$;
};
edn_query_language.core.update_child.cljs$lang$maxFixedArity = 2;
edn_query_language.core.update_child.cljs$lang$applyTo = function($G__110780_seq110778$$) {
  var $G__110779$$ = $APP.cljs.core.first($G__110780_seq110778$$), $seq110778__$1_seq110778__$2$$ = $APP.cljs.core.next($G__110780_seq110778$$);
  $G__110780_seq110778$$ = $APP.cljs.core.first($seq110778__$1_seq110778__$2$$);
  $seq110778__$1_seq110778__$2$$ = $APP.cljs.core.next($seq110778__$1_seq110778__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__110779$$, $G__110780_seq110778$$, $seq110778__$1_seq110778__$2$$);
};
edn_query_language.core.update_recursive_depth = function($var_args$$) {
  for (var $args__5755__auto__$jscomp$509_argseq__5756__auto__$$ = [], $len__5749__auto___110803$$ = arguments.length, $i__5750__auto___110804$$ = 0;;) {
    if ($i__5750__auto___110804$$ < $len__5749__auto___110803$$) {
      $args__5755__auto__$jscomp$509_argseq__5756__auto__$$.push(arguments[$i__5750__auto___110804$$]), $i__5750__auto___110804$$ += 1;
    } else {
      break;
    }
  }
  $args__5755__auto__$jscomp$509_argseq__5756__auto__$$ = 2 < $args__5755__auto__$jscomp$509_argseq__5756__auto__$$.length ? new $APP.cljs.core.IndexedSeq($args__5755__auto__$jscomp$509_argseq__5756__auto__$$.slice(2), 0, null) : null;
  return edn_query_language.core.update_recursive_depth.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], $args__5755__auto__$jscomp$509_argseq__5756__auto__$$);
};
edn_query_language.core.update_recursive_depth.cljs$core$IFn$_invoke$arity$variadic = function($ast$$, $key$$, $args$$) {
  var $temp__5823__auto__$$ = function() {
    var $G__110786_G__110786__$1_G__110786__$2$$ = $APP.cljs$cst$3116$children.cljs$core$IFn$_invoke$arity$1($ast$$);
    $G__110786_G__110786__$1_G__110786__$2$$ = $G__110786_G__110786__$1_G__110786__$2$$ == null ? null : $APP.cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.vector, $G__110786_G__110786__$1_G__110786__$2$$);
    $G__110786_G__110786__$1_G__110786__$2$$ = $G__110786_G__110786__$1_G__110786__$2$$ == null ? null : $APP.cljs.core.filter.cljs$core$IFn$_invoke$arity$2($APP.cljs.core.comp.cljs$core$IFn$_invoke$arity$2(function($p1__110782_SHARP_$$) {
      return $APP.cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2($key$$, $APP.cljs$cst$2004$key.cljs$core$IFn$_invoke$arity$1($p1__110782_SHARP_$$)) && $APP.cljs.core.pos_int_QMARK_($APP.cljs$cst$2339$query.cljs$core$IFn$_invoke$arity$1($p1__110782_SHARP_$$));
    }, $APP.cljs.core.second), $G__110786_G__110786__$1_G__110786__$2$$);
    return $G__110786_G__110786__$1_G__110786__$2$$ == null ? null : $APP.cljs.core.ffirst($G__110786_G__110786__$1_G__110786__$2$$);
  }();
  return $APP.cljs.core.truth_($temp__5823__auto__$$) ? $APP.cljs.core.apply.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.update_in, $ast$$, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3116$children, $temp__5823__auto__$$, $APP.cljs$cst$2339$query], null), $args$$) : $ast$$;
};
edn_query_language.core.update_recursive_depth.cljs$lang$maxFixedArity = 2;
edn_query_language.core.update_recursive_depth.cljs$lang$applyTo = function($G__110785_seq110783$$) {
  var $G__110784$$ = $APP.cljs.core.first($G__110785_seq110783$$), $seq110783__$1_seq110783__$2$$ = $APP.cljs.core.next($G__110785_seq110783$$);
  $G__110785_seq110783$$ = $APP.cljs.core.first($seq110783__$1_seq110783__$2$$);
  $seq110783__$1_seq110783__$2$$ = $APP.cljs.core.next($seq110783__$1_seq110783__$2$$);
  return this.cljs$core$IFn$_invoke$arity$variadic($G__110784$$, $G__110785_seq110783$$, $seq110783__$1_seq110783__$2$$);
};
edn_query_language.core.mask_query = function($source$jscomp$49_source_ast$$, $mask$jscomp$14_mask_ast$$) {
  $source$jscomp$49_source_ast$$ = edn_query_language.core.query__GT_ast($source$jscomp$49_source_ast$$);
  $mask$jscomp$14_mask_ast$$ = edn_query_language.core.query__GT_ast($mask$jscomp$14_mask_ast$$);
  return edn_query_language.core.ast__GT_query(edn_query_language.core.mask_query_STAR_($source$jscomp$49_source_ast$$, $mask$jscomp$14_mask_ast$$));
};
edn_query_language.core.normalize_query_variables = function($query$$) {
  return edn_query_language.core.ast__GT_query(edn_query_language.core.transduce_children($APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($x$$) {
    var $G__110788__$1$$ = edn_query_language.core.ident_QMARK_($APP.cljs$cst$2004$key.cljs$core$IFn$_invoke$arity$1($x$$)) ? $APP.cljs.core.assoc.cljs$core$IFn$_invoke$arity$3($x$$, $APP.cljs$cst$2004$key, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.first($APP.cljs$cst$2004$key.cljs$core$IFn$_invoke$arity$1($x$$)), cljs$cst$8863$edn_query_language_DOT_core_SLASH_var], null)) : $x$$;
    return $APP.cljs.core.truth_($APP.cljs$cst$410$params.cljs$core$IFn$_invoke$arity$1($x$$)) ? $APP.cljs.core.update.cljs$core$IFn$_invoke$arity$3($G__110788__$1$$, $APP.cljs$cst$410$params, function($p1__110787_SHARP_$$) {
      return $APP.cljs.core.into.cljs$core$IFn$_invoke$arity$3($APP.cljs.core.PersistentArrayMap.EMPTY, $APP.cljs.core.map.cljs$core$IFn$_invoke$arity$1(function($p__110789$$) {
        var $k$$ = $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__110789$$, 0, null);
        $APP.cljs.core.nth.cljs$core$IFn$_invoke$arity$3($p__110789$$, 1, null);
        return new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$k$$, cljs$cst$8863$edn_query_language_DOT_core_SLASH_var], null);
      }), $p1__110787_SHARP_$$);
    }) : $G__110788__$1$$;
  }), edn_query_language.core.query__GT_ast($query$$)));
};
edn_query_language.core.query_id = function($query$$) {
  return $APP.cljs.core.hash(edn_query_language.core.normalize_query_variables($query$$));
};
edn_query_language.core.query__GT_shallow_ast = function($query$$) {
  var $_STAR_shallow_conversion_STAR__orig_val__110793$$ = edn_query_language.core._STAR_shallow_conversion_STAR_;
  edn_query_language.core._STAR_shallow_conversion_STAR_ = !0;
  try {
    return edn_query_language.core.query__GT_ast($query$$);
  } finally {
    edn_query_language.core._STAR_shallow_conversion_STAR_ = $_STAR_shallow_conversion_STAR__orig_val__110793$$;
  }
};
edn_query_language.core.INCLUDE_SPECS && ($APP.cljs.spec.alpha.def_impl(cljs$cst$8864$edn_query_language_DOT_core_SLASH_query__GT_ast, $APP.cljs.core.list($APP.cljs$cst$1953$cljs_DOT_spec_DOT_alpha_SLASH_fspec, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$2339$query, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query)), $APP.cljs$cst$1926$ret, cljs$cst$8839$edn_query_language_DOT_ast_SLASH_root), 
$APP.cljs.spec.alpha.fspec_impl($APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$2339$query, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query)), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2339$query], null), new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.spec.alpha.nilable_impl(cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, null)], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query)], null)), null, null), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, 
$APP.cljs$cst$2339$query, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query)), $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs$cst$8839$edn_query_language_DOT_ast_SLASH_root, cljs$cst$8839$edn_query_language_DOT_ast_SLASH_root, null, null), cljs$cst$8839$edn_query_language_DOT_ast_SLASH_root, null, null, null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8865$edn_query_language_DOT_core_SLASH_query__GT_ast1, 
$APP.cljs.core.list($APP.cljs$cst$1953$cljs_DOT_spec_DOT_alpha_SLASH_fspec, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$2339$query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs$cst$1926$ret, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node)), $APP.cljs.spec.alpha.fspec_impl($APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, 
$APP.cljs$cst$2339$query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2339$query], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8813$edn_query_language_DOT_core_SLASH_query], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8813$edn_query_language_DOT_core_SLASH_query], 
null)), null, null), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$2339$query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.spec.alpha.nilable_impl(cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, 
null), null, null), $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), null, null, null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8866$edn_query_language_DOT_core_SLASH_ast__GT_query, $APP.cljs.core.list($APP.cljs$cst$1953$cljs_DOT_spec_DOT_alpha_SLASH_fspec, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8867$ast, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), 
$APP.cljs$cst$1926$ret, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs.spec.alpha.fspec_impl($APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8867$ast, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8867$ast], null), new $APP.cljs.core.PersistentVector(null, 
1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node], null)), null, null), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8867$ast, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, 
cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, null, null), cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, null, null, null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8868$edn_query_language_DOT_core_SLASH_ident_QMARK_, $APP.cljs.core.list($APP.cljs$cst$1953$cljs_DOT_spec_DOT_alpha_SLASH_fspec, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$3234$x, $APP.cljs$cst$8803$cljs_DOT_core_SLASH_any_QMARK_), $APP.cljs$cst$1926$ret, 
$APP.cljs$cst$6106$cljs_DOT_core_SLASH_boolean_QMARK_), $APP.cljs.spec.alpha.fspec_impl($APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$3234$x, $APP.cljs$cst$8803$cljs_DOT_core_SLASH_any_QMARK_), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3234$x], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.cljs.core.any_QMARK_], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$8803$cljs_DOT_core_SLASH_any_QMARK_], null)), null, null), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$3234$x, $APP.cljs$cst$8803$cljs_DOT_core_SLASH_any_QMARK_), $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs$cst$6106$cljs_DOT_core_SLASH_boolean_QMARK_, $APP.cljs.core.boolean_QMARK_, null, 
null), $APP.cljs$cst$6106$cljs_DOT_core_SLASH_boolean_QMARK_, null, null, null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8869$edn_query_language_DOT_core_SLASH_focus_subquery, $APP.cljs.core.list($APP.cljs$cst$1953$cljs_DOT_spec_DOT_alpha_SLASH_fspec, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$2339$query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8870$sub_query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), 
$APP.cljs$cst$1926$ret, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs.spec.alpha.fspec_impl($APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$2339$query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8870$sub_query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.cljs$cst$2339$query, cljs$cst$8870$sub_query], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query], null)), null, null), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, 
$APP.cljs$cst$2339$query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8870$sub_query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, null, null), cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, null, null, null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8871$edn_query_language_DOT_core_SLASH_transduce_children, 
$APP.cljs.core.list($APP.cljs$cst$1953$cljs_DOT_spec_DOT_alpha_SLASH_fspec, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$4539$xform, cljs$cst$8872$cljs_DOT_core_SLASH_fn_QMARK_, $APP.cljs$cst$3067$node, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs$cst$1926$ret, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.spec.alpha.fspec_impl($APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, 
$APP.cljs$cst$4539$xform, cljs$cst$8872$cljs_DOT_core_SLASH_fn_QMARK_, $APP.cljs$cst$3067$node, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$4539$xform, $APP.cljs$cst$3067$node], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.fn_QMARK_, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node], 
null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8872$cljs_DOT_core_SLASH_fn_QMARK_, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node], null)), null, null), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$4539$xform, cljs$cst$8872$cljs_DOT_core_SLASH_fn_QMARK_, $APP.cljs$cst$3067$node, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, 
cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, null, null), cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, null, null, null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8873$edn_query_language_DOT_core_SLASH_union_children_QMARK_, $APP.cljs.core.list($APP.cljs$cst$1953$cljs_DOT_spec_DOT_alpha_SLASH_fspec, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8867$ast, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs$cst$1926$ret, 
$APP.cljs$cst$6106$cljs_DOT_core_SLASH_boolean_QMARK_), $APP.cljs.spec.alpha.fspec_impl($APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8867$ast, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8867$ast], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node], null)), null, null), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8867$ast, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs$cst$6106$cljs_DOT_core_SLASH_boolean_QMARK_, $APP.cljs.core.boolean_QMARK_, 
null, null), $APP.cljs$cst$6106$cljs_DOT_core_SLASH_boolean_QMARK_, null, null, null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8874$edn_query_language_DOT_core_SLASH_update_property_param, $APP.cljs.core.list($APP.cljs$cst$1953$cljs_DOT_spec_DOT_alpha_SLASH_fspec, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$3234$x, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, $APP.cljs$cst$6041$property, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, 
$APP.cljs$cst$327$expr, cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr), $APP.cljs$cst$373$f, cljs$cst$8872$cljs_DOT_core_SLASH_fn_QMARK_, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1936$cljs_DOT_spec_DOT_alpha_SLASH__STAR_, $APP.cljs$cst$8803$cljs_DOT_core_SLASH_any_QMARK_)), $APP.cljs$cst$1926$ret, cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr), $APP.cljs.spec.alpha.fspec_impl($APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, 
$APP.cljs$cst$3234$x, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, $APP.cljs$cst$6041$property, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, $APP.cljs$cst$327$expr, cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr), $APP.cljs$cst$373$f, cljs$cst$8872$cljs_DOT_core_SLASH_fn_QMARK_, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1936$cljs_DOT_spec_DOT_alpha_SLASH__STAR_, $APP.cljs$cst$8803$cljs_DOT_core_SLASH_any_QMARK_)), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 
3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3234$x, $APP.cljs$cst$373$f, $APP.cljs$cst$255$args], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$6041$property, $APP.cljs$cst$327$expr], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, 
cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr], null), null), $APP.cljs.core.fn_QMARK_, $APP.cljs.spec.alpha.rep_impl($APP.cljs$cst$8803$cljs_DOT_core_SLASH_any_QMARK_, $APP.cljs.core.any_QMARK_)], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, $APP.cljs$cst$6041$property, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, $APP.cljs$cst$327$expr, cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr), cljs$cst$8872$cljs_DOT_core_SLASH_fn_QMARK_, $APP.cljs.core.list($APP.cljs$cst$1936$cljs_DOT_spec_DOT_alpha_SLASH__STAR_, $APP.cljs$cst$8803$cljs_DOT_core_SLASH_any_QMARK_)], null)), null, null), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, 
$APP.cljs$cst$3234$x, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, $APP.cljs$cst$6041$property, cljs$cst$8800$edn_query_language_DOT_core_SLASH_property, $APP.cljs$cst$327$expr, cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr), $APP.cljs$cst$373$f, cljs$cst$8872$cljs_DOT_core_SLASH_fn_QMARK_, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1936$cljs_DOT_spec_DOT_alpha_SLASH__STAR_, $APP.cljs$cst$8803$cljs_DOT_core_SLASH_any_QMARK_)), $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr, 
cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr, null, null), cljs$cst$8822$edn_query_language_DOT_core_SLASH_param_expr, null, null, null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8875$edn_query_language_DOT_core_SLASH_merge_asts, $APP.cljs.core.list($APP.cljs$cst$1953$cljs_DOT_spec_DOT_alpha_SLASH_fspec, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, $APP.cljs$cst$5963$init, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat), 
cljs$cst$8876$completion, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$7026$q, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs$cst$4205$step, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8877$qa, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, cljs$cst$8878$qb, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node)), $APP.cljs$cst$1926$ret, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, 
cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node)), $APP.cljs.spec.alpha.fspec_impl($APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, $APP.cljs$cst$5963$init, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat), cljs$cst$8876$completion, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$7026$q, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs$cst$4205$step, 
$APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8877$qa, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, cljs$cst$8878$qb, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node)), $APP.cljs.spec.alpha.or_spec_impl(new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$5963$init, cljs$cst$8876$completion, $APP.cljs$cst$4205$step], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$7026$q, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8877$qa, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, cljs$cst$8878$qb, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node)], null), new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
[$APP.cljs.spec.alpha.cat_impl($APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.PersistentVector.EMPTY, $APP.cljs.core.PersistentVector.EMPTY), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$7026$q], null), new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node], null), new $APP.cljs.core.PersistentVector(null, 1, 
5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node], null)), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8877$qa, cljs$cst$8878$qb], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node], null), new $APP.cljs.core.PersistentVector(null, 
2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node], null))], null), null), null, null), $APP.cljs.core.list($APP.cljs$cst$1877$cljs_DOT_spec_DOT_alpha_SLASH_or, $APP.cljs$cst$5963$init, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat), cljs$cst$8876$completion, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, $APP.cljs$cst$7026$q, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), 
$APP.cljs$cst$4205$step, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8877$qa, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, cljs$cst$8878$qb, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node)), $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), $APP.cljs.spec.alpha.nilable_impl(cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, 
cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node, null), null, null), $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8838$edn_query_language_DOT_ast_SLASH_node), null, null, null)), $APP.cljs.spec.alpha.def_impl(cljs$cst$8879$edn_query_language_DOT_core_SLASH_merge_queries, $APP.cljs.core.list($APP.cljs$cst$1953$cljs_DOT_spec_DOT_alpha_SLASH_fspec, $APP.cljs$cst$255$args, $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8877$qa, 
$APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), cljs$cst$8878$qb, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query)), $APP.cljs$cst$1926$ret, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query)), $APP.cljs.spec.alpha.fspec_impl($APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, 
cljs$cst$8877$qa, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), cljs$cst$8878$qb, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query)), $APP.cljs.spec.alpha.cat_impl(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8877$qa, cljs$cst$8878$qb], null), new $APP.cljs.core.PersistentVector(null, 
2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.spec.alpha.nilable_impl(cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, null), $APP.cljs.spec.alpha.nilable_impl(cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, null)], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, 
cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query)], null)), null, null), $APP.cljs.core.list($APP.cljs$cst$1944$cljs_DOT_spec_DOT_alpha_SLASH_cat, cljs$cst$8877$qa, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), cljs$cst$8878$qb, $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, 
cljs$cst$8813$edn_query_language_DOT_core_SLASH_query)), $APP.cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4($APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), $APP.cljs.spec.alpha.nilable_impl(cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query, null), null, null), $APP.cljs.core.list($APP.cljs$cst$1971$cljs_DOT_spec_DOT_alpha_SLASH_nilable, cljs$cst$8813$edn_query_language_DOT_core_SLASH_query), 
null, null, null)));
$APP.scittle.eql = {};
$APP.scittle.eql.init = function() {
  return $APP.scittle.core.register_plugin_BANG_(cljs$cst$8880$scittle_DOT_eql_SLASH_eql, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$398$namespaces, new $APP.cljs.core.PersistentArrayMap(null, 1, [cljs$cst$8856$edn_query_language_DOT_core, $APP.sci.core._copy_ns($APP.cljs.core.PersistentHashMap.fromArrays([$APP.cljs.core.with_meta(cljs$cst$8881$mask_query_STAR_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3091$children], null), $APP.cljs$cst$265$as, cljs$cst$8882$source_ast], null), cljs$cst$8883$mask_ast], null)))], null)), $APP.cljs.core.with_meta($APP.cljs$cst$5853$query_id, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query], null))), $APP.cljs$cst$256$doc, "Generates a consistent hash from the query. The query first goes to a process to remove any\n  variables from idents and params, then we get the Clojure hash of it. You can use this to save\n  information about a query that can be used to correlate with the query later."], 
  null)), $APP.cljs.core.with_meta(cljs$cst$8884$_STAR_shallow_conversion_STAR_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$383$dynamic, !0], null)), $APP.cljs.core.with_meta(cljs$cst$8885$query__GT_ast, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query], null))), $APP.cljs$cst$256$doc, 
  "Convert a query to its AST representation."], null)), $APP.cljs.core.with_meta(cljs$cst$8886$expr__GT_ast, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$774$declared, !0], null)), $APP.cljs.core.with_meta(cljs$cst$8887$INCLUDE_SPECS, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$2789$jsdoc, $APP.cljs.core.list("@define {boolean}"), $APP.cljs$cst$78$tag, $APP.cljs$cst$79$boolean], null)), $APP.cljs.core.with_meta(cljs$cst$8888$mask_query, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$358$source, cljs$cst$8889$mask], null))), $APP.cljs$cst$256$doc, "Given a source EQL query, use a mask EQL query to filter which elements to pick from\n  the source. Params will be maintaned from the source, params in mask are ignored."], null)), $APP.cljs.core.with_meta(cljs$cst$8890$ast__GT_query, 
  new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8891$query_ast], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$8892$union__GT_ast, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1370$m], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$8893$join__GT_ast, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1319$join], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$8894$ident__GT_ast, new $APP.cljs.core.PersistentArrayMap(null, 
  1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1485$k, $APP.cljs$cst$1850$id, $APP.cljs$cst$265$as, $APP.cljs$cst$4881$ref], null)], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$8895$symbol__GT_ast, new $APP.cljs.core.PersistentArrayMap(null, 
  1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1485$k], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$8896$call__GT_ast, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$52$f, $APP.cljs$cst$1246$args, $APP.cljs$cst$265$as, $APP.cljs$cst$6775$call], null)], null)))], null)), $APP.cljs.core.with_meta($APP.cljs$cst$966$ident_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$1237$x], null))), $APP.cljs$cst$256$doc, "Check if x is a EQL ident."], null)), $APP.cljs.core.with_meta(cljs$cst$8897$merge_asts, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2523$q], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$8898$qa, cljs$cst$8899$qb], null))), $APP.cljs$cst$256$doc, "Merges two ast's.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 3, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.PersistentVector.EMPTY, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$2523$q], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8898$qa, cljs$cst$8899$qb], null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2523$q], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8898$qa, cljs$cst$8899$qb], 
  null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null, null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$8900$keyword__GT_ast, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1485$k], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$8901$union_entry__GT_ast, new $APP.cljs.core.PersistentArrayMap(null, 
  1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1485$k, $APP.cljs$cst$57$v], null)], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$8902$update_child, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8903$ast, $APP.cljs$cst$76$key, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null))), $APP.cljs$cst$256$doc, "Given an AST, find the child with a given key and run update against it.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 
  2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list(cljs$cst$8903$ast, $APP.cljs$cst$76$key, $APP.cljs$cst$1246$args)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8903$ast, $APP.cljs$cst$76$key, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null)), $APP.cljs$cst$1381$arglists_meta, 
  $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$8904$query__GT_ast1, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8905$query_expr], null))), $APP.cljs$cst$256$doc, "Call query-\x3east and return the first children."], null)), $APP.cljs.core.with_meta(cljs$cst$8906$focus_subquery_STAR_, 
  new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$774$declared, !0], null)), $APP.cljs.core.with_meta(cljs$cst$8907$focus_subquery_union_STAR_, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8891$query_ast, cljs$cst$8908$sub_ast], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$8909$wrap_expr, 
  new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8910$root_QMARK_, $APP.cljs$cst$1245$expr], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$8911$transduce_children, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$113$xform, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3091$children], null), $APP.cljs$cst$265$as, $APP.cljs$cst$64$node], null)], null))), $APP.cljs$cst$256$doc, "Recursivelly transduce children on the AST, you can use this to apply filter/transformations\n  on a whole AST. Each iteration of the transducer will get a single AST node to process.\n\n  ```\n  (-\x3e\x3e [:a {:b [:c :d]} :e]\n       (p/query-\x3east)\n       (p/transduce-children (remove (comp #{:a :c} :key)))\n       (p/ast-\x3equery))\n  ; \x3d\x3e [{:b [:d]} :e]\n  ```"], 
  null)), $APP.cljs.core.with_meta(cljs$cst$8912$update_property_param, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1237$x, $APP.cljs$cst$52$f, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null))), $APP.cljs$cst$256$doc, 'Add property param, eg:\n\n  ```\n  (p/update-property-param :keyword assoc :foo "bar") \x3d\x3e (:keyword {:foo "bar"})\n  (p/update-property-param \'(:keyword {:param "prev"}) assoc :foo "bar") \x3d\x3e (:keyword {:foo "bar" :param "prev"})\n  ```\n  ', 
  $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !0, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list($APP.cljs$cst$1237$x, $APP.cljs$cst$52$f, $APP.cljs$cst$1246$args)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1237$x, $APP.cljs$cst$52$f, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$8913$union_children_QMARK_, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$8903$ast], null))), $APP.cljs$cst$256$doc, "Given an AST point, check if the children is a union query type."], null)), $APP.cljs.core.with_meta(cljs$cst$8914$merge_queries, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8898$qa, cljs$cst$8899$qb], null))), $APP.cljs$cst$256$doc, "Merges two queries"], 
  null)), $APP.cljs.core.with_meta(cljs$cst$8915$query__GT_shallow_ast, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query], null))), $APP.cljs$cst$256$doc, "Like query-\x3east, but does not follow joins.  Useful for efficiently getting just the top-level entries in\n   a large query."], null)), 
  $APP.cljs.core.with_meta(cljs$cst$8916$focus_subquery, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query, cljs$cst$8917$sub_query], null))), $APP.cljs$cst$256$doc, "Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    \x3d\x3e [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    \x3d\x3e [{:foo [:bar]} :woz]"], 
  null)), $APP.cljs.core.with_meta(cljs$cst$8918$ast__GT_expr, new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8903$ast], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$420$type, $APP.cljs$cst$6710$component], null), cljs$cst$8919$ast_meta, $APP.cljs$cst$2$meta, $APP.cljs$cst$265$as, cljs$cst$8903$ast], null), cljs$cst$8920$unparse_QMARK_], null))), $APP.cljs$cst$256$doc, "Given a query expression AST convert it back into a query expression.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, !1, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 
  2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8903$ast], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$420$type, $APP.cljs$cst$6710$component], null), cljs$cst$8919$ast_meta, $APP.cljs$cst$2$meta, $APP.cljs$cst$265$as, cljs$cst$8903$ast], null), cljs$cst$8920$unparse_QMARK_], null)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8903$ast], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$420$type, $APP.cljs$cst$6710$component], null), cljs$cst$8919$ast_meta, $APP.cljs$cst$2$meta, $APP.cljs$cst$265$as, cljs$cst$8903$ast], null), cljs$cst$8920$unparse_QMARK_], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null, null)], null)], null)), cljs$cst$8857$node_type, $APP.cljs.core.with_meta(cljs$cst$8921$update_recursive_depth, new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8903$ast, $APP.cljs$cst$76$key, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null))), $APP.cljs$cst$256$doc, "Given an AST, find the child with a given key and run update against it.", $APP.cljs$cst$1377$top_fn, new $APP.cljs.core.PersistentArrayMap(null, 6, [$APP.cljs$cst$1378$variadic_QMARK_, 
  !0, $APP.cljs$cst$553$fixed_arity, 2, $APP.cljs$cst$1379$max_fixed_arity, 2, $APP.cljs$cst$1380$method_params, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs.core.list(cljs$cst$8903$ast, $APP.cljs$cst$76$key, $APP.cljs$cst$1246$args)], null), $APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8903$ast, $APP.cljs$cst$76$key, $APP.cljs$cst$148$_AMPERSAND_, 
  $APP.cljs$cst$1246$args], null)), $APP.cljs$cst$1381$arglists_meta, $APP.cljs.core.list(null)], null)], null)), $APP.cljs.core.with_meta(cljs$cst$8922$parameterize, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1245$expr, $APP.cljs$cst$596$params], null)))], null)), $APP.cljs.core.with_meta(cljs$cst$8923$normalize_query_variables, 
  new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs$cst$167$quote, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query], null))), $APP.cljs$cst$256$doc, "Converts ident values and param values to ::p/var."], null))], [new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8924$edn_query_language_DOT_core_SLASH_mask_query_STAR_, $APP.cljs$cst$108$val, 
  edn_query_language.core.mask_query_STAR_, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3091$children], null), $APP.cljs$cst$265$as, cljs$cst$8882$source_ast], 
  null), cljs$cst$8883$mask_ast], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8925$edn_query_language_DOT_core_SLASH_query_id, $APP.cljs$cst$108$val, edn_query_language.core.query_id, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query], null)), $APP.cljs$cst$256$doc, 
  "Generates a consistent hash from the query. The query first goes to a process to remove any\n  variables from idents and params, then we get the Clojure hash of it. You can use this to save\n  information about a query that can be used to correlate with the query later."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8926$edn_query_language_DOT_core_SLASH__STAR_shallow_conversion_STAR_, $APP.cljs$cst$108$val, edn_query_language.core._STAR_shallow_conversion_STAR_, 
  $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$383$dynamic, !0], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8864$edn_query_language_DOT_core_SLASH_query__GT_ast, $APP.cljs$cst$108$val, edn_query_language.core.query__GT_ast, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$2411$query], null)), $APP.cljs$cst$256$doc, "Convert a query to its AST representation."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8927$edn_query_language_DOT_core_SLASH_expr__GT_ast, $APP.cljs$cst$108$val, edn_query_language.core.expr__GT_ast, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$1237$x], null)), $APP.cljs$cst$256$doc, "Given a query expression convert it into an AST."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8928$edn_query_language_DOT_core_SLASH_INCLUDE_SPECS, $APP.cljs$cst$108$val, edn_query_language.core.INCLUDE_SPECS, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8929$edn_query_language_DOT_core_SLASH_mask_query, 
  $APP.cljs$cst$108$val, edn_query_language.core.mask_query, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$358$source, cljs$cst$8889$mask], null)), $APP.cljs$cst$256$doc, "Given a source EQL query, use a mask EQL query to filter which elements to pick from\n  the source. Params will be maintaned from the source, params in mask are ignored."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8866$edn_query_language_DOT_core_SLASH_ast__GT_query, $APP.cljs$cst$108$val, edn_query_language.core.ast__GT_query, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8891$query_ast], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$272$name, cljs$cst$8930$edn_query_language_DOT_core_SLASH_union__GT_ast, $APP.cljs$cst$108$val, edn_query_language.core.union__GT_ast, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1370$m], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8931$edn_query_language_DOT_core_SLASH_join__GT_ast, 
  $APP.cljs$cst$108$val, edn_query_language.core.join__GT_ast, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1319$join], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8932$edn_query_language_DOT_core_SLASH_ident__GT_ast, $APP.cljs$cst$108$val, edn_query_language.core.ident__GT_ast, 
  $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1485$k, $APP.cljs$cst$1850$id, $APP.cljs$cst$265$as, $APP.cljs$cst$4881$ref], null)], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, 
  cljs$cst$8933$edn_query_language_DOT_core_SLASH_symbol__GT_ast, $APP.cljs$cst$108$val, edn_query_language.core.symbol__GT_ast, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1485$k], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8934$edn_query_language_DOT_core_SLASH_call__GT_ast, 
  $APP.cljs$cst$108$val, edn_query_language.core.call__GT_ast, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$52$f, $APP.cljs$cst$1246$args, $APP.cljs$cst$265$as, $APP.cljs$cst$6775$call], null)], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$272$name, cljs$cst$8868$edn_query_language_DOT_core_SLASH_ident_QMARK_, $APP.cljs$cst$108$val, edn_query_language.core.ident_QMARK_, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1237$x], null)), $APP.cljs$cst$256$doc, "Check if x is a EQL ident."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 
  3, [$APP.cljs$cst$272$name, cljs$cst$8875$edn_query_language_DOT_core_SLASH_merge_asts, $APP.cljs$cst$108$val, edn_query_language.core.merge_asts, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list($APP.cljs.core.PersistentVector.EMPTY, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2523$q], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$8898$qa, cljs$cst$8899$qb], null)), $APP.cljs$cst$256$doc, "Merges two ast's."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8935$edn_query_language_DOT_core_SLASH_keyword__GT_ast, $APP.cljs$cst$108$val, edn_query_language.core.keyword__GT_ast, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [$APP.cljs$cst$1485$k], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8936$edn_query_language_DOT_core_SLASH_union_entry__GT_ast, $APP.cljs$cst$108$val, edn_query_language.core.union_entry__GT_ast, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1485$k, $APP.cljs$cst$57$v], null)], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8937$edn_query_language_DOT_core_SLASH_update_child, $APP.cljs$cst$108$val, edn_query_language.core.update_child, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$8903$ast, $APP.cljs$cst$76$key, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null)), $APP.cljs$cst$256$doc, "Given an AST, find the child with a given key and run update against it."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8865$edn_query_language_DOT_core_SLASH_query__GT_ast1, $APP.cljs$cst$108$val, edn_query_language.core.query__GT_ast1, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, 
  $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8905$query_expr], null)), $APP.cljs$cst$256$doc, "Call query-\x3east and return the first children."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8938$edn_query_language_DOT_core_SLASH_focus_subquery_STAR_, $APP.cljs$cst$108$val, edn_query_language.core.focus_subquery_STAR_, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 
  2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8891$query_ast, cljs$cst$8908$sub_ast], null)), $APP.cljs$cst$256$doc, "Internal implementation of focus-subquery, you can use this function directly if\n  you want to send AST in and get AST out (instead of query in / query out)."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8939$edn_query_language_DOT_core_SLASH_focus_subquery_union_STAR_, 
  $APP.cljs$cst$108$val, edn_query_language.core.focus_subquery_union_STAR_, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8891$query_ast, cljs$cst$8908$sub_ast], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8940$edn_query_language_DOT_core_SLASH_wrap_expr, $APP.cljs$cst$108$val, 
  edn_query_language.core.wrap_expr, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8910$root_QMARK_, $APP.cljs$cst$1245$expr], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8871$edn_query_language_DOT_core_SLASH_transduce_children, $APP.cljs$cst$108$val, edn_query_language.core.transduce_children, 
  $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$113$xform, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$3091$children], null), $APP.cljs$cst$265$as, $APP.cljs$cst$64$node], null)], null)), 
  $APP.cljs$cst$256$doc, "Recursivelly transduce children on the AST, you can use this to apply filter/transformations\n  on a whole AST. Each iteration of the transducer will get a single AST node to process.\n\n  ```\n  (-\x3e\x3e [:a {:b [:c :d]} :e]\n       (p/query-\x3east)\n       (p/transduce-children (remove (comp #{:a :c} :key)))\n       (p/ast-\x3equery))\n  ; \x3d\x3e [{:b [:d]} :e]\n  ```"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8874$edn_query_language_DOT_core_SLASH_update_property_param, 
  $APP.cljs$cst$108$val, edn_query_language.core.update_property_param, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1237$x, $APP.cljs$cst$52$f, $APP.cljs$cst$148$_AMPERSAND_, $APP.cljs$cst$1246$args], null)), $APP.cljs$cst$256$doc, 'Add property param, eg:\n\n  ```\n  (p/update-property-param :keyword assoc :foo "bar") \x3d\x3e (:keyword {:foo "bar"})\n  (p/update-property-param \'(:keyword {:param "prev"}) assoc :foo "bar") \x3d\x3e (:keyword {:foo "bar" :param "prev"})\n  ```\n  '], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8873$edn_query_language_DOT_core_SLASH_union_children_QMARK_, $APP.cljs$cst$108$val, edn_query_language.core.union_children_QMARK_, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8903$ast], null)), $APP.cljs$cst$256$doc, "Given an AST point, check if the children is a union query type."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8879$edn_query_language_DOT_core_SLASH_merge_queries, $APP.cljs$cst$108$val, edn_query_language.core.merge_queries, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8898$qa, cljs$cst$8899$qb], null)), $APP.cljs$cst$256$doc, "Merges two queries"], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8941$edn_query_language_DOT_core_SLASH_query__GT_shallow_ast, $APP.cljs$cst$108$val, edn_query_language.core.query__GT_shallow_ast, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query], null)), $APP.cljs$cst$256$doc, "Like query-\x3east, but does not follow joins.  Useful for efficiently getting just the top-level entries in\n   a large query."], 
  null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8869$edn_query_language_DOT_core_SLASH_focus_subquery, $APP.cljs$cst$108$val, edn_query_language.core.focus_subquery, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query, cljs$cst$8917$sub_query], null)), $APP.cljs$cst$256$doc, 
  "Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    \x3d\x3e [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    \x3d\x3e [{:foo [:bar]} :woz]"], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8942$edn_query_language_DOT_core_SLASH_ast__GT_expr, $APP.cljs$cst$108$val, edn_query_language.core.ast__GT_expr, $APP.cljs$cst$2$meta, 
  new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8903$ast], null), new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$1383$keys, new $APP.cljs.core.PersistentVector(null, 2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$420$type, 
  $APP.cljs$cst$6710$component], null), cljs$cst$8919$ast_meta, $APP.cljs$cst$2$meta, $APP.cljs$cst$265$as, cljs$cst$8903$ast], null), cljs$cst$8920$unparse_QMARK_], null)), $APP.cljs$cst$256$doc, "Given a query expression AST convert it back into a query expression."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8855$edn_query_language_DOT_core_SLASH_node_type, $APP.cljs$cst$108$val, edn_query_language.core.node_type, $APP.cljs$cst$2$meta, $APP.cljs.core.PersistentArrayMap.EMPTY], 
  null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8943$edn_query_language_DOT_core_SLASH_update_recursive_depth, $APP.cljs$cst$108$val, edn_query_language.core.update_recursive_depth, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 4, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$8903$ast, $APP.cljs$cst$76$key, $APP.cljs$cst$148$_AMPERSAND_, 
  $APP.cljs$cst$1246$args], null)), $APP.cljs$cst$256$doc, "Given an AST, find the child with a given key and run update against it."], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8944$edn_query_language_DOT_core_SLASH_parameterize, $APP.cljs$cst$108$val, edn_query_language.core.parameterize, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 1, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  2, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$1245$expr, $APP.cljs$cst$596$params], null))], null)], null), new $APP.cljs.core.PersistentArrayMap(null, 3, [$APP.cljs$cst$272$name, cljs$cst$8945$edn_query_language_DOT_core_SLASH_normalize_query_variables, $APP.cljs$cst$108$val, edn_query_language.core.normalize_query_variables, $APP.cljs$cst$2$meta, new $APP.cljs.core.PersistentArrayMap(null, 2, [$APP.cljs$cst$273$arglists, $APP.cljs.core.list(new $APP.cljs.core.PersistentVector(null, 
  1, 5, $APP.cljs.core.PersistentVector.EMPTY_NODE, [$APP.cljs$cst$2411$query], null)), $APP.cljs$cst$256$doc, "Converts ident values and param values to ::p/var."], null)], null)]), $APP.sci.core.create_ns.cljs$core$IFn$_invoke$arity$2(cljs$cst$8856$edn_query_language_DOT_core, null))], null)], null));
};
$APP.scittle.eql.init();

}).call(this);